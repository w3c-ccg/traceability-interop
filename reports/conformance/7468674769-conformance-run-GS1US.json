{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cb3e3e84-ba55-4683-9fd0-71a1fc162730",
        "name": "Clear Cache",
        "item": [
          {
            "id": "358e13dd-56bc-406d-a9e1-214689ea4cc7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58080cc5-230a-4455-9d4e-124a6d5a2982",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e20b4c36-87f6-4cd2-8a86-377f9da354a3"
                }
              }
            ]
          },
          {
            "id": "dc02a934-4efe-4dc0-b3d2-aaf68c7967e5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "599c8791-f6a8-4879-a8cf-c3c4c95ca445",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "99eeb0cb-516d-4d6b-8566-247c9eaa890d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1a977b82-45a8-4c88-81ba-85c9a7f8d2be",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d7f92f31-934f-4e29-b65e-ad77e9377260",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb464d3d-b333-4b30-a040-3d6ba4502755",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d25cb10f-f793-48f3-aeda-c9275988ee5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3a05ece-c0ed-4927-ab69-1abd005ef623"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00e3924c-373a-407d-85b7-948a8d1d04ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb32c6dc-5858-4b79-90da-3a222e025d50"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "691f6493-cbbc-434a-b4d0-7dc85f9f8437",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da3e6e65-f096-41dd-afdc-15c38f928aaf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c68d130-d775-4490-916b-c70592e831ef",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "236aadf5-76f7-48b4-813c-0e5a07a8658d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e70f87e-629c-4ae7-86bc-34e0bcc2b793",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6a8e12d-b6e0-497f-8a07-52988c465490"
            }
          }
        ]
      },
      {
        "id": "c411880e-0701-4b66-a84a-333c8c9df305",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a64115f8-4e06-4fa4-8f2b-7c67891ab4ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4e40156-b2d6-439b-a522-4990f3461657",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7de4bb3f-def9-43da-8683-1e8c1300a126",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba2e2bf-9ebb-417a-acf9-97f55530d6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46226777-5107-44ca-8742-0d9a0fc358f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730cdc0f-b667-4ea5-80f6-2516ff3ef46f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b2603c-f978-42ff-87b7-9311e0c8ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20a4b43f-0984-4b02-8e73-50d3b8142fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e73e92b-5ae5-4c97-b125-adc6ae9b66bf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f444874-a78a-4ead-8ab5-a6ecba301d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e1f579a-d54e-47ae-abbc-a402eb025417"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8dce6e83-bc6b-4929-9a8d-89c9ac809e28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f1f0a0f-37cc-4492-a871-1ee8a10b03eb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a364f286-8056-4569-8145-57e34dd624e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13a6ba0c-51f6-4268-91cc-4aac22ff97ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275b7ecb-ecd5-4ce9-b45a-05b45d68b2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12333f53-ba30-409d-af37-e54ed47e9ae5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3db1d803-6638-4f2f-b93c-a0a6a812bb0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31329065-1df3-4c1f-8d29-5ad78d0107b5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ab21ee0-94f1-4e7a-ab7c-de95e1bbc9ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "16815bb9-4486-472c-a2bd-930be0037b75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "689deb72-8bdd-41ef-8489-a19312195cb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "dca2b77d-038d-49c1-a5ab-5db400aa5a08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dd26d7d-fc56-452b-84c3-7501aea2c263",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c99f0b51-28a7-4e29-8f16-8a95153565ba"
            }
          }
        ]
      },
      {
        "id": "b52d3e27-a764-46c3-96f4-ba869f41b97c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "16c74b4c-d301-4f12-aabb-8d8635cf9a8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8aa07116-c09d-4302-8af8-28bc472e9e6e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b4786a4f-d90c-447b-bb06-3f9024c32b42",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf881ce2-75b7-4166-b38a-eb1899452e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fe8b64-ec31-4362-9b36-40d5c4d129cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f00988-f791-4a30-9e5b-a35dee895f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1314406-ad20-4ac7-b7df-ca2f28b69778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07dea6c-d581-4a82-b6f9-c388a37e2fd5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036b0044-022c-40e0-b907-6a07e2cf7dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e3d712-a112-4a38-bfa9-529915c3d2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7897aa-a8b1-4a5f-8248-fa1b84d51eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b5096bf-87ae-4856-9b9b-e945cdc57f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a25a37-292f-476a-b188-a9310cb15511",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe2f548-b36b-4b40-a775-1d712ba3c34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379248f8-2db2-42f7-99b3-829f1d2ff83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5af7aef-48b2-42f5-8570-4f8f5333a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc02f341-1342-491e-a047-76c9e8f3216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5e1f70-56c4-49a2-98fe-f9cf76c662ba",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bb5604-3f99-4102-8d03-d5f5f198a4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73071126-d484-47ef-8318-75ec5b9675a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0995d36-8fbe-4c31-9a0f-e86f5b50b4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c685942-3d94-4cf2-90c4-81d28a5cb447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a357efc-d0b0-4478-b758-33c8c14a32b7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569761a9-a39c-4f0b-bcc1-1b99d8c0bcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9528b4fd-ce64-4da1-8a13-169614a806ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10623d8-69c8-430c-8015-2c1961d6ed09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f35b247-898c-46ba-951f-09f810529512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171b88fe-8859-4a08-9a88-632cd4721a7f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0e50c7-2593-4eab-8f5e-a153bd9dfdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b670ea-c7d9-4dcc-8f74-e121757615ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2647249b-e000-400d-bd31-7db809fe0891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20c49310-994e-4169-9d8c-5b78b86a29e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b266b18a-75a7-4802-914c-73e687c004c2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d8582c-84ff-4bd8-ab56-089229dd3c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3376eff3-9755-4446-9e2a-e385040535ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7959f3-fee2-4630-9b6e-fe56f091900d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b3d75aa-14c8-4681-9acc-48c3e61fc954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031e9e62-0a7e-48a4-8ea9-74f8605ef8c7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b1a9cc-77f5-443a-8b2d-6096ea576d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873ea841-3b2d-4c16-bdca-40ba706ae5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a72383-0281-4bf4-9dc2-22aae6f29b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8183fb-a4ad-49b7-a271-3a5eee1cbb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee2604d-545c-4f6e-ada3-3a1e56505a80",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a3b5ef-058e-48c0-b7b1-488992a8495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7a4fa4-1f47-48be-83b1-1963ec5aa9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd7529a-fc10-48a5-8d9e-b6654e27ee43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3004dce-d0af-40bd-85f3-f32ea2d18470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398c9504-7f53-4844-8b6f-a243579e1856",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25404517-45ae-46e1-8029-a5e7afabca86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57306a85-fb07-4807-ade4-09dc2f0ed292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0e9bcc-5cd6-40f9-8e1d-ac41fcd996e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "161cccc7-fa5d-4032-ba81-992faac1a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76236e56-3962-4866-af46-f6b317ee264c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1275e30a-c0ba-4260-905f-13a61545a4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6aa5b05-0c9e-4c61-baf0-51ef3e8efa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa2a4fd-759b-495d-b69c-755edf1fa2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a3eb0c-a02a-4d8e-b7f2-a1b18afc8a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20b6cb7-58a3-4f74-ab34-d4e640b01c8e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f0b823-a046-4bf6-a015-d5aa34829b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23644cd-32ad-4769-b6c4-73703c6ef853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2366484e-733c-4aa3-adfd-74a42864161c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10eaf64e-ae21-4e98-a0be-35d1f670f71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c12fe03-d7b7-49a0-a6eb-a3698f40b07d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82238a8d-3b91-4808-b15d-423aaa7bb064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e324ce0-a564-476f-a1ac-b02c79f1b8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b848bc64-378b-4b7a-8302-0102b45a1489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b540216b-7ae8-464f-b898-d6e8e45c57d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bab6044-35ab-4e37-9162-00cc4ea64490",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8611160-e3bb-4046-83f8-2f6764da2329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51e8963-3c77-4b52-a49b-cd3560ee3f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7d1973-93aa-433e-bf72-bbcf203fe639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88b5816b-b395-44b0-8596-ca2e12823deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b28e1fe-1ef4-421a-b697-8f09ec2fe77b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afb878e-bd11-4f95-96d8-640dbacb6c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7058c6c-4dec-457d-a08d-733e6ca5e558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3502373-0740-4097-81b6-9c400c3d70a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97a87c6a-b258-4b1d-98f0-0038a57d8c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efb96cf-dc2e-4cbc-9590-05cca92a21f4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71f0a19-80a8-4ef2-85cc-b9e824c9d7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e212ea86-6bea-4199-906c-18d82aba31d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc25a5e8-3f1a-4a06-8354-1bf2da4f5bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a95c2792-4887-4058-a4b5-094a7df12331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0be3e06-2b7f-49fa-bf6d-6e0b04ba3d44",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f71ed10-8aa3-4ed8-ac90-ecbf99ad5349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5487505-f1cc-4112-b0b6-689a38de9ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1e6631-6822-4f08-a2f5-d316b5f0477c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8932947-9b2f-4f77-aa5a-9ea908984c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80c71fe-5318-44bb-a042-873c101782d9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304d2f69-5c17-4688-b3ca-a0df179ffdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680b28c4-bc1a-4f00-a883-b6711551fd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5c2ec8-f3a3-4bb3-a7e8-8e2bbc6259a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04d2bac2-5cd2-4909-a364-f326537c9e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b307b8-60e1-42e8-bb7a-b9c948f53018",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd6369b-162a-435a-9f33-e3e49e993080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972e9aef-e50a-4866-ab6a-a425e2f59889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d88e081-8a8a-453d-9009-2dacab0d6288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a22c18d1-443a-451c-922d-6a758f8f9f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f60ed0-aa05-4199-b5eb-4bd3c16a5df2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99995c36-9d41-4fe6-be48-df09df62ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b01703-1d2a-48a9-837c-ca19aae5d8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8a37c7-f811-40f5-8451-466d1c0eed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5182260-73e9-4386-9949-08de07d2b546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105a572e-3b9c-409e-8676-217712f9feb9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678126f3-ab33-4a0b-8917-cb44694b80d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c97fd5a-3563-45c6-9652-24fd20a585a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a053ac9e-9f43-42fd-82a8-c68953f6a489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "531cddfb-c2da-444e-b0e6-f3610a924655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a24d45-dad7-4e4a-856c-a777c2891e9f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1d0c07-cb53-4fef-b866-6d3f7ac3dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3abea1d-f096-479a-9c3a-40a707dcec90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd891875-f15d-4021-946a-9edd6ba0b700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b721a66-0dce-4332-a49b-ac470e37482d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947a2124-b389-44e7-92c8-7630b9b1fe85",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd403069-2ff1-4251-a712-deca239d5ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260d32df-ccb3-487b-9234-28102dc5d84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd9461c-8ca4-49ae-8866-043e452e3194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3880102a-bf2f-4f1e-a9d5-fc13b2fa8d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56252051-5476-4213-9c30-023a97e08bb4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d806e898-fef5-418e-804f-9eea36e83baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b7fe69-a51b-4cec-a52d-52ae8bce9658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31528a07-91ba-42d0-9439-f27a67b55492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "342ea18f-c238-4b21-befe-bc96f17bc506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3493684-87a0-4d5e-992f-1255fc39e085",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7da865e-157f-4a34-81b1-b968869db595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b60375-6966-4e6e-9729-3ccb37c83e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bed535-8ba8-40b1-9fbf-ee0848fdfa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de419404-221b-4894-a1cd-6f8d1113198b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb172e7-e470-436a-a401-6bbb1093c1d9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316e0767-c5a0-4759-84d5-9fecca961f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bae13f1-7ba8-417b-a519-a045ed161aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f51e26-171d-4812-be82-da54733c0f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9016aede-c6be-4df5-ad67-f2326919a61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f12c7e-73bc-44f9-a0ad-a0adf9330fe8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85b698b-c433-4ff0-a6c1-ab79015dbaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c6d800-1ddf-40e0-94f1-5d442d7887c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1524aa59-c11e-406f-8ab1-f10477486974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f07f3b-1032-4204-bdc5-5095aef28af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f395f13-9bec-4e5a-90ef-1beb9fc10f34",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5c40b1-a5d2-442a-9d4e-a2940341fdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14794149-b282-4c75-ad0f-99f22ed1d066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78118bf8-94b4-4909-951e-10dc11b6abd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf009404-acbb-4094-8ae7-d4514fd8a7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36608a2-fb31-4fbe-8344-45e4bdf20e66",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12dde40-a5b5-4973-ab25-1bd446e1f298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f77eb7-14c1-4a13-9c31-95f501f7958f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d09dc68-8c2e-4fa3-89a8-9a5c6bfeec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf348084-c6db-425d-b861-a1f9b7bdff68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30793b7-924d-45f2-9b3e-68db655fb80b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b24c1d-f9b7-44d8-8304-68ff3abb1e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed7f9f7-c588-4b56-87c2-4111b0b51fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a085ab-5b20-439f-9a6e-24d2bff7fd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5ed1bb-9212-4af7-82ed-8f24b9c7fef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df316ba5-ab9b-4302-8398-5f77de4c1598",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126ba3fa-945d-494e-bfd5-0f757ff15880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e34138d-dfc9-4089-900e-238f9a92e524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43435bd-6479-47de-9a21-deff2c6b541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c11c78e-93f3-41bb-a189-8d890ac42472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c688368-da75-4b3d-aa06-8176d3ee88d4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2bafe0-e630-4d8c-8e20-5215deb86e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a8ef94-6b6f-47df-9581-73e9111ca305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045b1642-dd4f-4daf-8ab9-9d7e2bcbdc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5aaec1-182a-495e-8b60-262b038ff0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f48eef-0025-43c6-a450-dacdb51246ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17abf873-db27-4cb7-94fe-3d5474731805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4519604-124d-4c89-9d7d-ab7d7024d1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ff93c4-a31d-4a9e-a54a-709c28bbe2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e31afe6-81b5-4481-b441-679093484d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e16039-e3dc-411e-b18f-f52d327ac455",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0da8c4-5322-45be-a0ab-8d83918c091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdebf090-be6e-4dff-87a0-0542b5c1ae51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e888a4-bde0-4f55-8616-5a96694f1f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29943aca-fa63-41c9-9413-1b7043b6db7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7febf4de-1fa3-4169-9e3d-a66e728b253f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f20b5b-c12c-493b-aa95-d6eb7c8abfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c343bb5-1be3-4624-91a0-02de36516861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc10ba69-4523-40ad-81a9-423dd5099eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5bf221-730d-4e72-95e7-6202757b878d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4a3c59-946b-46ed-a6d4-c08934862442",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cab017f-20c6-467b-a040-76831ace9557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c944a36-8358-4dc6-b193-4a057c1d0e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6baedf-aedf-40f3-b306-6d1c0baa69c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb323aa2-c50d-4514-ad59-4e65b701b2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53aedc3-cd0a-4e9b-9779-32da5880cb65",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f57bb5-b9e7-4a6d-9059-73757f146eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad5cf0a-69d1-4d2b-865c-e9c4f7f26a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acb7d16-1094-48c8-9f1e-0c6f74835448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88f7b020-67e0-4863-95a9-236a7265edfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1825b2-6226-42c6-a0ee-0e949bd8f486",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802258a5-e3e2-43e9-9bd6-d98770f99cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feba7afa-8fae-4b60-9cb4-c5712551cd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84562f0-8f21-43c5-9034-9ab0efe9f3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c89ceb-a762-449e-b307-d2f493328fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde75fcd-587f-49c5-91d2-06cb8bc91c3d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7cdb7b-0839-4f50-b9d3-704c52bc447c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7817fe1c-d510-4b7f-b66d-c4cb0c8b0b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f1516f-3b93-4661-bab8-ea76667b037d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "683101f9-1ebd-447b-8075-f939b5e0716b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd4b677-167b-47d9-bce6-6582f0880db5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b1bf15-2082-4199-b61d-805000d58aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fbd0b2-75eb-47ca-9fc9-c2bf0b8fc48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b3b47d-21fb-48c9-b156-44bc59bc9944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e820bd-00df-4e6b-bdc0-3f0d661f7a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85691e89-1f8d-4ff8-9bde-b4b8cbb5d1b3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7628212c-cf64-4033-a8e7-46c595451fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e67f4b-0d9b-40c7-9e19-039f6d8f8e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46b01d6-fbe7-40b8-af8e-ba4719b26af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61de1ef8-5b50-472d-869d-928c1a1c8a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe19f97-cbed-475e-9a62-fbc5c21c819b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c29297-784f-4f7c-a46e-66fb2131eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d07d130-ef29-4ee3-87f6-019b96d6f05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5dc586-ee65-4afa-ad70-329ccace8a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4237a1fc-4755-4a88-99c4-d6331631216c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4abe3f7-8ad1-4393-a046-fe6ef1b78fc7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f031103d-d74c-491c-bf6f-8061a1edda40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34214c2-0765-40f8-acc0-ea354b31729a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a3bb47-b201-40ca-95b0-69e965412028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "559c56c1-8e7f-4497-b477-38fa0f03ed4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75419c1d-b022-4dae-8857-a280dab9614f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24b9d14-ac19-4aea-a31d-fd23558a2546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f5c4cb-7cfb-4c42-a8b4-c10ee7829f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d7090b-2339-4862-93d0-651b1349b189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "46203fe4-ecb8-4391-8e0f-2f722606dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2467dac8-eaa9-4c71-a2c6-87c4f4d0c586",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4c1694-028e-4b3c-99e4-615a9d6bc039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c9569e-17d7-4ceb-b2c5-1ec170590e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28259f45-3731-4f4a-bc8c-7c90cac0fdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e06b83-3dbb-4891-9cf1-61823bfaf8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1657a6-c92e-46dd-92fe-37fe659b4fec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9154afc0-5c04-4f05-9019-1bd857de8bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e67cfcc-de1d-4890-b1ab-c5452c3315fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63f70c5-9444-482a-b2a1-0675c6a991e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0f1f82-f233-427c-b076-0b957b5d9c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4116a49-1a9f-4dd8-8f2b-6df3f5b36830",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6f9b12-037a-4d6d-b423-332a2c8ea09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eee54de-53a6-4279-8cf8-862cc219744a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340fdcb2-0c49-442f-bb2f-fdf052a1ddcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfcd1de-70e8-47d7-8ee9-f8246fd551b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6341100-8e4f-4b12-b8b8-91f3e40f7922",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ae022d-d230-4e44-bb85-b175e5c3ab4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb41cc2-d6d9-4a2d-b303-8e6d017a5851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8658b12-0a34-418a-b1b6-ba28a1727a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8775a115-1058-4d2e-91ae-ca988725a623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d27e6b-6924-4a32-bad3-8a593b1f8143",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de306144-2e5f-4e25-b2ef-9b582fc9f20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563170f9-04c3-4353-93c0-f2262acbe07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1a3ebd-3459-4d51-92a6-c74a5674f3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d827b066-1fa3-43ae-bdf7-8c6f16ac1a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7288821-f4c8-469f-a2d4-cd7eaca889ff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f306597-b7ad-40a6-8c38-0ee62b3a1e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8920f48-8e57-4a89-beaf-86656118f1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8973ce-b821-47f1-b535-616f6caccbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9412b6a-a36e-4416-a3a3-9bd0fcfc5253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2ad719-965a-401d-bc57-db78bb974908",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6ddf58-763a-424e-9b0f-c77245c2d224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d9bcc9-d588-4036-85ff-79132613a035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ee1673-f116-46f3-9305-b589581701bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab098731-61a2-4dc9-9bff-4b8e1a2ba797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70becf24-746d-44c2-b021-36e8b22470d1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb9f7ab-1405-41b9-b5e0-e04abeb60fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c88c0e-fe6f-4c62-96e2-b8169538143c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b497efff-480e-46df-b7ef-2f9e8a0622b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1f8ad6-bdfa-472b-934b-2f4d42e2634e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc39255-19b0-4500-8a6a-5bb19a547f4c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540d5ea6-2883-4ae6-94af-19a3fd40c546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73456e4a-0868-4835-822f-1bdd3f752e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5f162c-3ced-483b-a62a-708b8f389080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11ac0015-20ce-4e79-9cc3-21045ce0d1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705e754e-cd9f-42ba-9fc2-671dbd5343be",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542782e0-5dc1-443c-96c6-c288c70244dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f44765f-a428-4a6e-b877-e25140d9ea35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09521c8-a75d-441e-930c-c619e663b9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99fc92cc-63c3-45ad-9085-5e5308e36912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73c340d-dd86-400f-a121-3be58808990b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eec2896-a872-47fd-b115-1751880d16d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d98e36-06ef-41c9-a952-b6abe615bcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c058a3-e6dd-4cd0-9af2-7d332af40172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39d8030b-33d8-4e03-815e-c1eb3269e4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86152784-9cd6-4c81-8f1f-311507e152a5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1062d078-8be3-4df2-90de-7fc344c0932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fe3453-4269-47ec-9b6c-45517546dca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7c11ff-8cc6-46a1-a1b3-24cc9154d605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "04121e5b-c910-4086-bc76-41528d6dc4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1a1a30-41be-4d65-bf74-8d3b59e72b8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c47bd0-4bf9-4a78-aaa0-ae4dadd99b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44eb6a13-4f62-4472-833d-cd06d7f7be74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a29cd66-eec1-455f-9197-70ec9a86b3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35e984d2-c1cb-46ae-b445-fae35e8e2799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd08fb49-7f35-49f3-b5cd-0ff329069437",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74680a2c-4d5a-4a24-9eb7-da8a7edef26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845b459b-a606-40ee-80f9-b3f72f99fe5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8746c090-7578-484b-ac86-6bf0a8b3d8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96f67a24-f38c-4396-93be-f055b4aef5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e154ba07-7b80-4660-83c7-e20ddefe7417",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8714ccfa-302b-4092-9253-4b9147f3ffa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e84d865-4476-4f51-9bff-d3161b00373e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab78df5-b876-4cdb-bcc8-26f16cc07d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b618724-aee1-4792-9a4d-b514ae6bc3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3764487-d4d9-4182-b826-3d3aaef717c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f423b4-ba01-4158-b536-e53bd44ef3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4107d62-ef14-4bda-b218-594654df8c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d058332-6c1c-42fb-b9e9-5d16dbbe83bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df9a06d1-7918-4b2a-826f-f7a11c0329d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55681c1-b331-447c-a654-d7098c7541f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aac719-0a81-48bf-97f7-80439bb8285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc1799b-c2af-4968-b7c1-7c4973fcd111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a563bd-c1d6-41ff-bc05-fd548f742c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2a85be-4dbf-485b-b5d8-a01cba299833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903290b3-1538-40e3-89b6-269955008b96",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc94105e-8900-4658-a829-a848879f8cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f074ea9a-ec6d-446e-98ed-ffb1d5ab94a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90651df5-7249-4bc8-bf3f-12018061144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "881997f1-b080-4e00-9ba9-762a235528e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1b58d1-067a-475b-a602-ef0c9c256bf6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dae2add-7151-47c9-98cc-a5281496c271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae23c2a4-6216-464d-bd14-433627c60e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05480ea1-53ff-4fb7-8eb3-a68fc57c9fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "52f7cb9c-e791-4c75-9366-40cc60fa1a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54591e6c-846c-4791-8bf3-6f8e708dd93e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60f72e0-95ee-4abb-bac5-8fc8ced885f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f254444-4a46-446b-9803-decf967ca651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b365ec97-5e3c-4f7a-a0df-f5d34fbfc474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab27aaa-b9cd-4b0a-8353-a8c2aa578ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c519a390-b6a5-421c-ba10-690c0f634577",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986ebd0f-8a84-4589-8143-36cd604e0a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881ebd10-f031-471a-bd5b-b618a397c137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2c7606-b8e3-4725-a837-4abfc5f9de81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f465c7c-a25b-4507-a7dc-7c06e4d56211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d903f3c3-883f-49b7-bce4-1caec1dc2506",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8c1371-b005-4fdf-8cd0-a53c6bac014a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733a6541-2263-4330-b8ec-978d5b10cb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e260a3df-9539-466f-acac-5a3ef209e082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "448881bf-3000-4191-b4b2-1bc1ab5dccd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da46e7e9-ba52-472a-97e8-bac769a08912",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f6cc99-8157-4970-b1b9-144daec2bcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e951974c-4b01-4006-aa4b-20bbd498191c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e26665c-5094-4414-8482-fbff26f9964a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa10ac0-c1c1-4f6b-850b-4524f3f2c843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1439bb-790e-4ad7-a554-b4c71fc5f74c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d104b85-51ea-4d8b-ad01-2f2de413abbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd1366e-63ca-4bb5-bdc5-12c5cd9474e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dec672-0a0f-4475-b00c-a6eb26a6ad52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "178b65bd-86f1-464d-8dc4-67a6ef854f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88eb7114-8462-41f6-a6ac-4492e7ea81b8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d46f18-e9d4-4f99-b4c7-a7cb76395c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3690dba-3efb-45b3-90ee-02ba74eabbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07656596-ffef-45f6-8185-245bf3f6fcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aff8728-39e9-451e-8956-1c9ab53af02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae58612-ff3d-418b-8509-3f6934018ec1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92528f0-2ddd-4c6e-b262-c2b0d9bd370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e8d9c7-f9b8-44de-980a-74c02243cd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b8abfd-2cb1-410a-a827-10e6ce1d1623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f88549ce-6ee2-4218-86c0-be5acafe5a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93712cf1-dbc2-44a8-a201-29518decc599",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a640b27-11f5-4615-96cd-a2bab9fd4c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc129ff-be0d-426a-9c9a-1cfa834d61e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bba548-4d6c-440e-b1d0-2cb14c9b54bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9ac705-0d5f-455f-9e20-38314c5b3e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061d032b-cb68-4420-9382-421f456d4517",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d16f6ce-7e62-4998-8dc5-b581b013c937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b0cc17-6484-4ac9-a2ac-42824f934b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6281a5b-2fb6-44c9-be91-b56e73e70eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86bc05e8-6bfd-4a6a-bab3-2bd2f1df8bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad6be8e-06c2-45c1-abd4-9cf9e11ed8a7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c522c31a-8b60-4f04-ab88-3cc65d025745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6538b979-151d-43d1-b490-9ffd756a3e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e3d134-0656-4c9b-8526-57e9bf7ff451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0c1bb2-7cb1-4798-a1a3-9064acc9a97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83087f26-07e4-4281-b646-38a086cd7843",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed9f8c-e19f-4305-8a95-e6a4fb249e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e7c21e-84f2-493e-8f73-a42be41c9e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c03694b-4621-40db-8eeb-cbf143a360f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf28140-d6c9-4018-9411-b63917112ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f2b592-a101-4f89-9c46-a5d252a7291d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d7da33-9ee2-4be6-809c-5cdb93fbfc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c496a5f6-a0a4-48b1-b126-932fe1fcfb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773dd296-92fb-4b92-b2f0-c90048850d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef12ef6-1ef9-4d1e-9671-fac8d2d2d69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1198d527-460f-410b-8577-60ff4bf22209",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50d7d7c-cb25-48bd-83c7-e0cb9c4754b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c60286-02b9-47ea-8165-d5bffc7b675b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55289d07-add3-4879-9bf6-4878625f1c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e92d79b-a0e4-45c7-882f-0db83083b8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29907fe2-1c80-4c60-b6fc-647df978afd4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6d6fa4-5a02-45ed-96f0-4e10de53d912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c842fb-461c-4c2d-a044-01e8e6a27b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb159cd3-98f8-40b1-93dd-7e9c6307dadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4202cd-bf98-4cf7-8e44-d31271af553a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33e54ac-ae33-45c5-a45a-8ba79273d5b4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6f24e4-e4e3-46ab-944d-ad33c6cd4681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82b7498-37d4-4029-b3b9-375faa55de57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9700c175-5c93-4c06-955e-3f5352035377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f746c33-dee3-444a-86a1-e0c78f97b275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787806a2-81ff-4fb8-8e4d-488c99aa5b5e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50f0157-9651-431f-b00b-e80beea715fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697a0c7d-ab0a-4bbc-b482-b4d62d25f5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea2fa82-30ec-42bd-8269-214c23b99dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edf44457-00c0-41cc-bf61-2503222c9a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7499f366-054f-4960-a02b-c58c6e9854d2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902c879f-f329-4714-944e-4b2e500507bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945c5974-40ff-48d5-b7ba-8c213af3c758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae8f991-8070-4316-b4b0-69d1e7788904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f559f77-0421-4575-b5b7-daad9211a370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfdb4cf-04d4-43d7-a546-1aede7ddfe0d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1e66d3-fdcb-45e4-b305-00a0b3b2042c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f895f777-8541-4ffe-afa5-be5396c3a239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc7f3ae-9368-41dc-a3a1-b03e68b6a12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a227f6d9-8251-413c-b551-12f74ec5550c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408d735b-bd8e-490e-80ec-e7b9871ee6a8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284a933e-b972-4f18-a12e-c8340529de9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cd72d6-3e55-4a67-bf3e-d052737b5400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0a8d9e-3866-4360-b7ec-09bd6e96bd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d93e2cc-99f1-4fca-9cf7-6cd3ff545a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294888af-a701-4e67-890a-b20a92e56b12",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe21f550-156d-4a03-a2ef-ec360ba60adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661d5d8c-6c40-4ce9-8231-febb350d8c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5df259-d478-430a-a258-0cee7aba9ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "beded643-8dd0-4ac2-806e-dfbecc785c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d262a6-84d8-41d5-b357-31c422bcd6e7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4136f70e-124a-401c-801d-771db1060ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52efae1-c0f9-485b-8c66-463b7d31065c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea53647-8c2d-4b46-9c58-fa0858ac0180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87706e97-ae52-44ae-b0a8-303de550b462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008f7eaf-4dfe-40b2-aa10-2a48ba8a03e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a1e94c-2d4a-4c57-bfe2-48a695c8408b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35898637-64b2-4ba0-b5b7-df818800d4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148d088c-4231-481a-a7ff-6328f062a376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eee661c5-92ed-4050-9ba3-ec2843a9373a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40944259-4e80-487b-8319-c7449e0651da",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e667163-2dd3-41bb-a18c-02d74259540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fc8d10-a061-46e9-93ae-10a37eceb1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443314de-ba9b-4ca9-aa4f-ec0a808ae553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "842df4aa-5b44-4685-a9d4-c79c552cc780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce42db37-a9d1-45c3-ba1b-a394225e9808",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64742694-bff7-457f-b70e-ff6b0c8ef714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cc81a3-3367-48db-b76a-a28f32ae2996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f7fa6b-0157-43e4-a850-c40ebbbacb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ccfde4-ec8a-498f-b216-584bbf9fb490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351a2286-9605-48d5-97e8-87f64c7d1224",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7c723d-7093-47ad-8cea-7faef8ad9662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b73aa4-1e78-4e17-969a-60f7e08363d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e65344e-82f7-4429-970c-689349c5115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "518bf39e-6a58-4f24-b654-5ff45aafc652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f66058-3ffd-431d-8e12-90e836d7a879",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5633ea8e-d0e8-4797-8ad5-43e3a79b26b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ca081b-8805-4ff3-aecd-37a96da52360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b44d7c-97a6-443f-b31e-6370bf5faf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72ccb430-ac4f-4422-b8f8-a60962a240c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f5d742-0848-4bd5-90dc-e8a7668c1b24",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108b200a-f90b-4082-bb71-593e6e052b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f806304-c860-4f31-9a9c-a9efc40d00f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af44a84-b5cf-4b36-98ba-e37edd43fff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87bc775c-53a4-44d6-bca9-881db28ea0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad036187-bc9a-4d5d-b830-dd02b0f9661a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed91ab56-d750-4f94-95f8-eee273b850a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18e58d9-9135-4f13-9449-5742c9241b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bc6108-0435-467b-ac48-b0b2edf38d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5afea37e-8bf4-447f-a258-31a24abd8117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2e515a-9402-47aa-bead-80cc46805193",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45e7eff-1071-4c85-8715-0511e72124cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cb2851de-09e6-48dc-96b0-12304d10492b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cdb674-315f-4ca7-a4ca-dafdd2c38c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a00bd745-8e57-4b09-b17b-394d6bb896b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b633919-2230-40f0-9e11-4665f1b7d80a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b39d69e7-22cb-47e7-af3f-0aaa204a2c7d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452de638-ad9e-496a-ab46-942accd2526b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2baa33c-4dc4-41b1-808c-df470b33ff70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee0852d-8ad2-42be-af47-7ae3b7568962",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e31a43c2-0ff6-46c1-b00d-07d0a2f2c3d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1fee03a-038a-4524-968f-d1bc744c0160",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6cf0fa0-00b7-4238-b62f-99e05d9797bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d039875d-e725-4c9c-bddf-6a25711df94c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcee7a03-240f-45d1-85d6-367fd1d22839"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87625b41-ddf8-459a-8b8e-669432639c20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82f14b7f-0663-4759-bfdc-1b0bf81d54aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48b635aa-bdf7-4bc2-b9eb-ab6c5ec1a167",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd422d57-c967-4b5d-ae07-9e320f2a5a26"
                }
              }
            ]
          },
          {
            "id": "6946af58-2c7d-4617-a23f-c623fb295e6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90ea3c39-1ae4-4d05-a7cf-b85697db8ef3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "afcc8c76-3021-4cdd-8fbf-1a4e0c39f241",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb9ffba-a6b8-40be-9078-4b575e217a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4dd02289-df09-4f11-af24-908c02d4726a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d393282-5bce-4872-aba2-2c0dd3567aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82eb9ba-c10f-4fd5-9c12-79da384aedad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22918f11-a7cd-4431-a65f-4ce9265504bf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52340205-2a11-4682-a73f-f7adefd42fc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a6ad1ae-e20b-40b0-85c9-fb6714175d52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c5e8a6b-9ebb-4297-8b7f-10c35b6a300c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2264628a-6693-4b60-b8e3-5a1234e42aa3"
                    }
                  }
                ]
              },
              {
                "id": "1e8fca71-e204-449d-8139-d6c3fbea2c19",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ea47c39-6b19-47e8-9052-c015dd6a92d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8648b7ec-e39f-4822-8669-2de6275d85b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41bc1003-9566-497d-a818-a90344ea04e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ae15f25-05fe-4370-a399-9951f72a8c58"
                    }
                  }
                ]
              },
              {
                "id": "445b9de9-fd1b-4966-adbd-19811cc8c04d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0176d895-8ff5-42de-828f-eb0b24d32442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0545b0bc-2fc3-4d2e-a5ac-8b7a3e8b9655"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2abf88d8-92f4-46c9-a24e-19507db2aad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3418f738-6bfa-4311-b37b-e90ce8c168a0"
                    }
                  }
                ]
              },
              {
                "id": "e5c5219c-defe-4340-9986-7977bd3d2f03",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70e2dd80-4feb-4562-a20c-e8fef117ba85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "170d7821-10f0-4140-857a-c4364e6520eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "328e7824-cd01-41d0-8530-a208174eb0c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a17f00be-e628-4d22-ae8f-c815b0166757"
                    }
                  }
                ]
              },
              {
                "id": "0168bc5f-7013-4ea0-84c4-00e1ff95cfc3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0a3601f-70f6-4790-b156-6566f7ffe326",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc54aa2c-d8b1-4b8c-962f-5792bec69fc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a73f142-9752-49e8-a175-392643c2d4b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "63645bf1-0e40-437d-a7a5-b486537573c9"
                    }
                  }
                ]
              },
              {
                "id": "e019e429-245e-4532-8ac2-27b88ed2fdf1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6186398a-a399-4f61-8ee9-551dd7e34ae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "595a1ff7-38c5-45dd-8e58-485b20d9774f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f22dc2b1-853d-4feb-9984-abff143766ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ceb405e9-8112-4c76-a404-03d9a2c24072"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9f514e6-4903-424b-bf58-1fafdb3100ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40dfc6b2-f2d1-42ec-82b5-49c23518c5ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31d14f1d-79d9-4d69-9c4d-961d8e206c62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c70a8a00-c1da-4be0-971a-a2b3666a159c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c83f300b-bf4d-41fb-980d-57eb2e7f3690",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b8bd6eb1-47a9-4c71-9eea-309af7b012e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a088d784-3b88-4cd5-8061-c88655be1d55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16db47a3-7251-486b-acb7-9609082eed3d"
            }
          }
        ]
      },
      {
        "id": "f7af33b9-45a7-49e3-b06e-965ddf9cb8c9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "705d128f-0905-45b2-98fa-badea6b8d96f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb992509-723e-4832-8f1c-16da7be5d8bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94f971da-6dcd-4558-bfd1-40163f579056",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dd652e-50ae-47a2-88a7-c1cb098246eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26839dcd-90db-4365-a419-1527fded2802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18af6c9f-727a-4e87-84e5-01cb0d86720b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c37776b-69e8-41c6-bec6-2cf8584ca610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f85b13-e8c2-424b-b45f-3c756655b0a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de55dbd1-204d-4fd7-8e66-004b7dc27bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed79b35-a520-4432-8427-6d1050dda08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e67bbb-7f43-4ae1-8508-9555f5ae7703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7840c93-de0a-42df-83a9-97fe59fb6916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1d2890-cebf-4643-9d12-8d591f66a589",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a7f298-28dd-4567-a7a7-e3a6e5d22519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6ce47d-8649-495a-ab77-e1fe0f2a57a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b9c1db-c8d7-4808-bb2c-a6fb4d117072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e98f66-1347-4467-a372-48bfc85b14d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9255ac-4b1c-4aeb-9f2d-0f533fb87475",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645de48c-4904-42c0-a5df-b2498dd2478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb23b29-60cf-4423-bd32-b9002c7fef6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d89c5e6-8b18-4422-93d9-6899f00f28ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb1c9c6-b83c-4260-b752-56f0997119f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e882f56-ecea-40b7-8890-ccddf7ff727f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6a1ddf-3f24-46ad-9960-d40e52f5d484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b226d4f-d395-4524-9afc-695cbd44da30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b6f0fa-02fb-44cd-bcdd-187628271f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bf25d6-170a-4087-a5ef-5a64ca686817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176b96d2-7b21-47c6-b032-1363a41ac669",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9c09ff-e815-4041-b5c0-39c8924ccf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447ff1c8-f998-492b-b1e8-43575a22592d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd2128e-f170-40dc-b50a-b518805cc09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "435df72f-60e0-4ad0-8ef6-0ece4a4cbbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744206b7-96b0-4652-90e3-58679788938d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8d3096-0c0f-418e-9e12-c0528e8bdbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db7fb9a-53f3-4d8d-8b50-723b9751145e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c20f3b3-bd7b-4354-9852-5616adc94204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c6ffd9-2bcd-4a8d-afa5-4a803d620dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5edf64f-fd27-4ab4-be57-29731f4e5f86",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f2da3a-f22b-416d-bc02-93379c5d4d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a7684a-2a6a-473c-b75c-b366e051f9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fbe77e-c4e2-4b5a-82b4-951bb6f2635b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "481f66e1-533e-4538-91ad-9f86b97f5140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81071d4-bf2b-4304-b294-01af428f2895",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac70cbba-5b42-44a9-9602-8e9c4b0630b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f61d603-e99e-4d2f-a1a2-f679f3ccf524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de0174b-5e94-483e-9e1b-9171e3bfe102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8366dea1-73ba-408d-a6be-04c3ebc970da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110e67ae-9726-4c09-bee1-ea00b229d381",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725d9628-6945-41de-b140-6f29cc39df1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab0bbe7-124f-43fe-b012-add038e05e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cb22b7-89e2-4547-a311-a6573dd92318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bca9499-422d-4424-85e4-57f9ba282c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6484c9-ea57-472a-8625-41454ca8d77c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584f6faa-f6b0-44e9-922c-b09e20d2510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9059b09-f3b8-4846-a27f-a07462fcd83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b841e6-2a1f-43b6-ae07-9f254ce39226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "538f195c-f29f-4c06-b530-3db8c01611bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3787c192-9373-442b-9629-64dab3337ee9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbf1457-a0b2-40b7-a472-f4a6f6069017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ee5a51-f7fa-481a-95d8-2707263b1692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bc244c-e24c-4dae-a912-7fd9f3f9dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a3e11b-bd2e-4239-94d5-fa548be9475e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d266cc3a-a925-4a91-bbb3-033bc9029c44",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ed4fac-d652-4b0e-8241-1ae2497515ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca72baf-a6ad-41f6-a58a-0873fbc20c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2565579-f33f-4cf3-87b4-62d469a3f5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a47b9b-2aec-45ee-a512-6b516c1181ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f19d490-1f75-49ee-bd7d-882b56ca9f4a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e12a11-8f06-4888-9dd6-c92d4164495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417e59f0-97ac-4c21-a2ba-c1e7eaf894f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf09318-9cb1-4331-a8ac-2467705426bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "46cd9fcd-9401-4556-b6f1-2370746fa762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76598f8-8ab2-4bab-a137-3858e4aa56b2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cf7996-4709-4830-99ea-bb7dcc056de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5953c944-8f57-476f-bff2-226b9314d1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04022095-53a5-4595-aee6-4b6339f6e0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fe09e8-48a7-4d92-a486-ba5e811a5601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dd81fe-c4a7-4fdc-a113-102d279b4128",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cfbef9-8708-4b55-8b16-fb28f11f822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d396678-185e-405f-9268-49d5f1ed8b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26b7a77-53e8-43b9-b66b-1d3508d427b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "306ac9a6-b6d8-4bf6-aa01-9ac7e59667e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee839e23-86a8-4640-8da1-af2410d12395",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c72ec4-751e-470b-a043-c21726d56b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2e92e4-af7e-431a-a696-d921dede11b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887e8b6e-c840-4519-a8f3-60ff3ed1f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17966739-8aa7-4353-b641-e4ac0d3223db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca247f1-debd-4af0-84be-edfb345c7d8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe76702a-2f08-40fd-a4e9-2ffcfa5a44bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8040d2-d550-47ad-8c19-13cfa107edba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367862b0-2b9b-42a7-b536-402a48f6e118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d37d797-4a40-46e8-b9f2-2191652ddd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3af5a29-b8f7-4302-bb5c-5350810e6e88",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c7fa5-ad72-474d-affb-73295a095cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bd4717-78c9-4a20-80e0-378cefb3529e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d01c7bf-829a-4141-b974-17d37ccbe2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ffc8a2-2ab1-413e-828c-45828357fb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626cc4b3-1e97-49ba-8d70-ff2ad9d093be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5291d45e-5758-480d-83b3-31364ac3485e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbce6c5-2d29-470a-9c0a-e9205506dda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b96ad6-21fd-490c-b1d2-5873af53c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75da8547-eebc-4961-8fab-47a3fc33aa76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75aacee-de49-4ba2-9ccc-ff93a6745338",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6792c3-0650-4582-8030-51bc51be1220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a59858-58c9-49eb-9c4e-b69edf504e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1951f2-4690-4927-b692-4f90986ca3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e469649-54b8-40c8-b973-8744872f4e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4daf6d-7eb7-4904-b14d-2d807a24609d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a170a179-1ca6-49d8-a371-b61308378974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff818c3-7000-4448-8502-c20dbad448dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350190ac-ca3b-47d2-9613-faab7dcbf422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "650352ac-26cb-47f8-a1d0-25493f518293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66992c7-1e4a-42b5-969a-53ea545b1fc8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bdfdc0-51f6-4a2c-914b-aecf2b9d45b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fb242b-8ec2-4ff3-b8ac-f36d9da38e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e412a6c-6a4b-4c65-937a-5f58592b6479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b276e6f-b1be-4f5f-8998-939b76d8ec64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba17a8a-a961-46ba-93e4-3a5d52891a17",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f0f887-5202-4f79-b189-162c8a98e260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b891f8f7-3282-4459-8c2b-8331dafa0d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c897072b-9dca-45ff-8f67-ad476523bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6453e4c-2f22-4ecc-9dbb-6f6ec4221b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51977fb-f517-482d-81d2-92619636da1c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9051f1be-1fb2-48a8-8966-4732e8f44aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a6556e-a717-4ab9-82ad-f10810203d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f3ab0f-2f22-40bd-ab10-9c18e421f6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "658f90c5-46b2-4b3e-a2e8-d3ccaf726de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e96e942-65e2-4e8e-a92d-016ebdec8f9a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b0f33e-29dd-45d1-8096-07e80974460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60ade62-284b-44fa-a8d1-030feeac9629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be48100e-6410-47c7-94f9-97f40fc43e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30fba3be-ae4f-4e26-a0eb-91065477d7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f64d926-e999-4fe1-bb5c-af0badd305a6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ba649a-e0ac-48d7-9581-c36d98c715cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526084d3-56b5-4efc-ab9b-d68ddfecee50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035d9fb6-79dd-4194-8c4d-1f4289a4abd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09066c13-9fb9-4748-94c5-115f6f186fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88c511d-52f7-4927-a642-6c04bf07ea23",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c2034b-f8cb-4bae-9a59-75d32b9b4944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8236e360-9ffc-41f8-8c75-94867946b5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582000bf-3ec0-4043-a961-c145f365a4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4848c30-3db7-48f4-8e20-8e79f9aa736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff46d19-776e-4fb3-89f3-8496f078a65c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69d1b3d-a229-4d0f-8852-e0b400f27ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8d4a2b-0dc6-4cbb-8f2f-af450c354e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb0cf66-45f8-466e-851a-9c2b8b61d90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8072b787-8830-4d0e-aa25-4eea5aa4cdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239c800f-f6e9-4a62-8e24-78b43b697745",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fb6c4a-1609-44e7-b733-588ed071b27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2128ab-3ee0-4460-b659-fc6f6f2b70fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5aa7ee-ae65-4a69-b4b2-c9555612a7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca12c14-9389-419c-870c-ba5e9e0313db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b498b7-c8ba-45b0-9d2d-27dba40558cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a2c02a-cfd8-4f73-920a-641c0008d74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845e3f2a-0209-4eb6-8c40-756ccc752ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d332fb-6ef3-48fb-af2e-cab0d8ba363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42336cd2-9e96-4455-b5ec-b63bf04009de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3967a6-1bde-47c6-be7d-aafe0e35df2b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fd8c68-4120-4be1-91f3-6e574f70f471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50399b39-fcbb-4d6f-9c6f-74b144d57b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc15bbc-d059-43e6-8e1e-5cc26fd93a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c050ca-9a5b-4a70-b93c-0785fe69641d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ababc639-4bf8-4455-90b5-e1b9389b3101",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a7a68c4-b39a-48b8-a845-6c7f87a407d8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce753f32-2aef-4f08-b14d-6f5c2d0a8200",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "690d979d-6284-44c3-898d-6b1e9807bb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf23e87-9672-4031-bf44-b47412740174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8294e890-f043-46d5-b613-0da3b61b03e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f4ae3ae-2e08-404d-a0b2-2ec825470699",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51344972-0e58-40ad-a07b-3705f02e79b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fd879e5-bdb3-4ef8-a73a-04ff6cac9f2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e266c1da-11b9-4a1d-bc7c-f41130221922"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd5b9368-fd9a-4ecf-af0a-fd08408e8e5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f603e393-d3a3-47e7-a591-09252caf56cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c845eb03-863f-4321-a2b5-cce98a2f99c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6cd5a1e-a9db-4086-af8b-b13e1ccec427"
            }
          }
        ]
      },
      {
        "id": "b4f91838-c706-4da9-86a4-06123a51111e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a7b4969e-7d25-46d5-b378-4fef170b1e6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fec49aa0-6ecc-4fa3-8a4c-7d309dd93d97",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef47105c-a076-4a9c-b8f8-226cab8aa050",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb24da70-445e-490e-9bba-6adad06e87a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc38fa44-748f-4f8e-8850-f13287085fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dbd94a-dced-419b-9ddf-3405bb792bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "189d1b63-f1c9-4c9f-88b5-717e3678f43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd6e85e-2e9d-4b04-96b2-5a38d2f50915",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406c698c-9468-4ea8-9ad6-8010bcfa017e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c267b81a-d717-4401-afa8-a64895ba5328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d915659f-08d7-4a94-a0d2-4d79f1538167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5ede78-1d4f-4392-9294-35b6a3bb6577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc076354-1091-4d2b-9e02-99b5a1e68da5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efffb28-4d5c-4ec0-b144-daa5d6ddce79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57361ae2-7bfd-44aa-a074-2c878c90d750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7de786e-3acf-4d1a-92c5-fed2ce53df52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16abba2c-44f3-4e79-9cce-82ec2152a09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060f61f7-498d-430d-b805-539f2ea4ca1e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bdf42b-a141-420f-ab0d-179fbdffd9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aab9aae-7f0a-4ae5-a6f5-67cc0742a079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427a4a42-65cc-4976-9886-6c3d1ada1e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e42399-9683-4376-b27a-11f529faebba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2821d93-05db-4567-a663-2db3019b33c5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23eb512f-7882-43be-90e9-1ae8b693f6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244759d7-6983-4d85-a77a-05ec43f0bb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfe2e93-4fdc-47cd-8add-cf1b963aab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c9a19e-178f-4a35-898e-8fef0b6aec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce5c463-a960-4212-a5d5-e1e0ba562462",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0262f92-9951-48eb-8701-839efa71e9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c437056f-5fdd-4b87-b658-8b83c1a4250f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2d1d86-3678-4c8c-ada6-d887fac2cd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e95671f-3421-4a3e-96f3-4684c34d9c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6470a1d6-ec9e-4157-a4d4-c7b29b69e493",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45f8523-0429-4bbd-a5bf-48705b9201b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a8daa3-ddc9-4fcd-b500-3f5a1f236992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a407445a-0db4-44c1-a88f-3b1e402c9c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "13085d46-6cdf-42ae-be6d-29556500bb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1008ba58-51fe-4c37-873c-b9d6aa3bbc30",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bfa29f-9568-4263-a598-1ba42ab7015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1743e8e9-9b90-4e41-a28a-0296b8c9a109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513ed3ab-7ac5-4a3c-836b-68ec9830b1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da67a3c-cc48-4d62-bae1-2d51bd4a90ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cfe909-9744-464c-abe7-eb07d58c807f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd577b2f-d08d-48d2-b428-8e1709b3d0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4d91e2-c542-466a-8efb-59179b5e4104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2aa20d-9676-43ea-bd00-d3f280555cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bde988-d5e7-4641-8762-89d7a5d95e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6e0f32-7dd6-464d-b9a6-8a3c4b8ed432",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f78ad91-2519-43cd-8761-99b916cd2499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979e9828-bd6a-4b58-a667-965499cc98b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64305fe3-c9b7-40cb-a4e5-3dbaae12f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a13ba1-6989-48db-9a1e-8cd90274be6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2a64b2-dddc-4748-9453-a411f70c2cb4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea733e9c-aa2e-470d-ae6d-9955d59e0134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5e73f2-158e-4ed9-8923-118994fd5b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cef9ee-ccce-4b58-992f-9a53d2e7f385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "68eb0cca-d5c6-40b2-a1db-8590ab6fac8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c76861-7919-45d3-a375-af77eedfda38",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b3ce41-38b3-41e3-8cec-d199b7cd92e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b08e36-73f0-4897-adb4-bd93af907ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24d9bfd-336c-4a37-940b-afd4459f389d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd5c1e1-914e-4dbb-a818-2379b36d1307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9df1f0-53c0-47c3-93d6-df3711769d5a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef84ddb-3923-40af-9a1b-c269d259fac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7daf534-3b9c-47bf-b7e7-d5db9e281987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e9b8a9-7866-44d1-9fbe-3ddfecd0ea4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e18e59c-92cb-4733-84f2-9f7d506e29ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee16234a-f817-4d2d-a59b-8e944c62f47f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c14a7b-c738-4da2-9f3f-0a28784ff6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75014572-e1d0-4b61-8e02-6901c8414c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17b2655-5a69-4477-a5ff-84c97aa16d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "59682d2d-30ca-414b-8897-b5a21f12e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a6d645-38e3-4728-a08c-0949e0811b40",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc8be76-2e61-4d58-80e2-7d72420407df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ece599-8dd6-4c3b-b6ba-c634f7659ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4709e3a-5b3b-4840-8923-c9b876892272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c364a6e-0b79-4cb2-b3c9-58e7ef56150f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c519b5c-3c36-46b1-82a6-daee48fadfb2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547acb92-132d-4864-8577-703e68f7b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ac00b3-cee7-4480-ba37-4df2f995f68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f8bc4f-c066-44ad-bc29-df120216881f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b835c0-0aea-48dc-b07e-7fa0f53ec6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cb0157-e553-4ab6-8cea-9e73ad696ba2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f8781b-05b9-4ff6-a0e5-17c1471ee4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b992aa3f-8d78-404f-9e67-e7284373f781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdd8b1a-8913-46cc-b0c5-a8d0ebd70713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae3ec96-e660-41f7-9de8-12ecbe1039a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0151901f-0d48-44d8-b259-2094218eed0c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206a4d4c-9b69-41fb-9049-3368040af259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31eb25f2-0e35-49ef-8907-5445eda2f4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f6a913-73b8-4a94-aed0-a6f01a2eb394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16847f66-e0fd-49ed-90e5-cc8bce8e6844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea586421-3db2-4ba1-837f-6b310df34e6e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733d754e-6c72-4b80-99f0-33f6548ecb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa100d5-f256-41a6-b3ce-76ba9334b66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f990fca-6ba1-448a-a220-8c9b6ebcf97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c1885e-369f-4f1c-8a0b-910a0ad5e40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac0ceb8-7e9e-45e5-9b6f-b0920549d8a2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77c1275-00ab-4cb5-a125-bd5994ce3cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd712930-f7a9-454e-bca5-ff5b7b6a6ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac4e248-c5be-437d-b656-c8b231a02a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acffc4db-b4b8-47c7-a1f6-e9af4a23db0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8e4a55-8ed0-4364-b482-e9230fd9e5ab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a66940-b1cb-4133-b4bd-f2ef19fc624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be291eed-3370-44ec-bee1-b27141b58cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22395634-6328-4705-93d4-9f3226c290be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e9f799-7609-44e1-82b3-6528e161fec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d33c6c4-756b-4b45-80e7-3a21f87c9e4c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff86be93-66a2-4014-8701-3371a55b41b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09f5ee9-c9e8-4ea7-91de-d1c5960ee33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7184191-2acf-419e-bfa8-7b6084c901a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e4d151-c52e-4ee2-925f-450e27767be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe8d294-f440-4814-810a-05ada2a2ca3c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdd86c2-af1c-473f-be17-bf8cf25d51f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3c5e59-89f6-4a79-ad43-44ebeb87fb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30668816-9a5f-4b18-8152-abb2a261e63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4270f1f5-3ed0-4b4a-8196-47f9b88dd063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd49a7e1-847e-4d94-8e99-8a6bc49164e6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c005767d-4848-4586-bf7a-d05302e2b328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e8439f-b37a-40bb-8697-d4a78759a433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64848160-153a-4228-a6f7-c2e165e52799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8daddb4d-8201-483f-abf2-8e7e0e13c2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d287c500-1956-4046-b31a-90697e7431d1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653dd0e0-2e29-4c76-a31a-5fb876705b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39c50dd-a64b-452f-9856-3f7c0b3fbffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88b1ff6-3c26-4598-bac5-e89b8f837c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080d5202-fe98-47d2-858c-c6201576d774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76207ae-791a-4dc4-88a7-04c0bbaf08e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465a479a-70fa-4211-9a45-7344789b7325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e52bc4-43ff-4004-9157-ebaef9ad8285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0436597-04f5-40d5-8f27-297ca25a2df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a42cf2-7261-4df3-a440-ee1bd014e2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a763612-92f2-4785-98f9-9fefff266ddf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7d8757-8a57-4364-ba1b-ff29e5ef65e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567aeed0-4ce1-4a31-ac0b-bb25b72019e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef620e-cbf1-416e-b699-e590df4a7dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a826e4a-cdfa-465f-ad80-9f01fe5cfba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc22a6c8-f91e-431d-ad89-d367ab969365",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447a50e9-db91-4092-9791-0d0de909df2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eef8e4-f63e-40e8-aeab-870315a6a011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff53b3a7-6fef-4768-a6f2-d5c2e495e56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b4e389-70a3-406d-b8b7-bca7d58cc4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c37287-4d0a-4768-8b32-ec1c974bbe2a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8b5c96-4707-49fb-83d7-d31c3ba12b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabd0f17-8fc6-4124-b368-6aaee8d5599d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a15f062-551f-4434-b33b-c9067a5afa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c944c1fa-dab8-4ec6-b46f-d65e02e95a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae8fa66-f1e3-442d-86f1-4af245a39104",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b195af4d-07fa-43e0-9dca-d2e52b77ceb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714751c4-12c6-4daf-ad1e-48f819d6d7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2380490a-0ca3-470e-8a7a-eb9774dfdf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "918ecf66-f7af-4e07-ab8b-25570520e878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa533678-e069-4080-b5e8-25b750e6eb5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d4df58-b969-452a-ace9-bab6ee4829f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa8fea8-bdd2-4ae8-bbdb-8c76ad831ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f18988e-07d6-4246-a158-80090e83e774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "069bf49b-b2b2-435b-b6d7-59e58f9e0a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf3031d-1372-4ba5-9a5b-314106ec89f9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402553cd-9e28-47de-a026-fd60aaaae484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f92d933-fa53-4a5f-be7d-9db26e2561fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ed4e91-0a41-4457-b34a-6d046b8c5212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a9462d-03ce-4aa4-81c7-b3e393000df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88b1245-4a53-4da0-8361-83e8e2855c0f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cea7a68-9566-42f2-89f4-15a5841ad14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174bbf17-5bd3-4e0c-b9e7-ad30f1a0f2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e3bb7e-0a68-49f5-8f96-e1b62dbf4946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3020049c-ec87-49b7-9c33-415d70ec25ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af34ddb-9da5-4bba-af6a-7cf7ea87761c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae0c890-be26-42b1-8a8f-5d22cb9c3b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae1acec-0a00-4787-b0b6-96ff33cf4b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f8616c-e34a-4a61-9c2a-59327dc4c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aca2c22-71b7-4744-a3a1-5b42f343a359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec267a4-4fd4-491f-936a-42e8e443ff53",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70221a5-8505-47f7-a799-576f4bd6811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1310d71e-6be4-49f2-af64-0b06e0c7416c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907b3f0b-69db-42f9-9c18-aa5419d08c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c842eca3-0978-4c9e-b770-b8d00d1cf5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01a6d78-c3ee-4ab8-9454-85e5c4079026",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab34de22-0f76-4ded-960a-d3c66ce1f7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cbb85e-9abe-48a9-8277-d28f7b40f8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5f4022-7fca-416a-a5d6-032b348798f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cde856f-9abf-401f-99d1-78b98dbe7fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b69138-9c03-4ea0-aa93-2d42d2372422",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592bb4f9-8d4c-4695-9dff-04f841bd198c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd32d3a-1af1-4440-b52d-f77a02cf56da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519440fc-d10d-463f-a909-82ffc3bdd479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e90a21-5c94-41bd-8f63-7af872ece990"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57076455-828b-43c0-a8a4-1d87ef3a27cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fe44ceb-5386-4ad2-9d25-152d29216253",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f271d491-3964-408a-82ea-25812563fe30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44d3e483-f92c-4263-91de-6dc10f8fc6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f74b22-53e7-4bfb-a3a5-12bf72b46914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16c7b59a-ff56-4b0b-9a09-bc3bf2524dbb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4adde919-37ac-4795-bb7d-5c50ca6a0fd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "599fbb96-bdf2-42dc-80da-38ec3fe82f93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d56affdf-f133-41fa-a78f-6b280cc09679",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05d61bed-02cd-441b-bd7d-8efd5ec85028"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06782c6c-85e4-4529-848a-1870f2964448",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9f5f2bd-0d38-45e6-8e12-42da3148a481"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31cb75c1-fb18-4419-ba81-649e355da010",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b2eddab-2dc5-4180-b5d9-0a600b74894d"
            }
          }
        ]
      },
      {
        "id": "fc28729c-55ac-4acf-8478-8bc9dac7d6b7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fc83802b-ecbd-4a01-99e3-9c84b4bb5e6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8494d3c-d660-489e-8fe0-4f1a0e0e3719",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e0b13c4-12ea-44a2-9c77-ee7a0e391590",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906798da-4e85-43fe-83ff-58117f92bf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8981bea1-6188-4197-a25e-6babd4559041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227eefc6-2be3-463b-ba84-c273f2fa2b67",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357d172d-4613-415d-acc8-92500762e087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e040106-9302-4312-bde6-c7eb9481e068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966bcd8c-3593-4c14-88e6-1a64f72d18ee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dcd900-220b-41f1-a617-93a3e01357b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facc34e0-74a2-47fb-8b2a-13a9ca094375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cac202-a19b-448e-9975-2c2f5fa8e42a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307ec223-855e-40fe-a329-c483a7f7b741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdffbf7-99d9-49d8-9e51-45768084346b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b201434-f8af-4373-b079-008a4ed7b038",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2d0c59-5494-4c3f-9a87-5f4ae89bb341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24d8dc4-ca54-4d66-b58c-7ab703f720cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976dcb50-a71e-492c-ae37-585eb3a1d39c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3850c064-667b-42d1-93c3-ea86d67c392a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e47e41-97aa-414d-ac11-1c74fe4d87d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de958c3d-709e-4222-8c2e-4e8ece82f7be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbedc25b-f01a-4d8f-b6b2-7cd0da20eb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd6ec84-7654-424a-b340-1b4b0d9bd3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79607943-8ab5-4102-b93f-bb5e8a920e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be61b87e-6cf1-45bc-8d0f-4bb35f95811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c808337b-30cd-4b78-9c3d-7c0912225990",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeef9f7-b39c-472b-9057-8ef80d261f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d2060c3-9555-4f7e-b491-ac828b4ae71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31795e8c-60ce-4bf9-a518-7d5b7703d265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26531e87-ef80-4412-9a61-796b031f14ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf3126-4756-4542-b3fd-c0af5cc08bd7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012179b3-a69f-4c44-822e-bedddc0a9b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dac380c-9279-4d0d-83fa-59d1ca98ed44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef974cf8-067a-444a-8ada-616ed44517b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e78a09-c114-4ef4-9e4d-93cac7988cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea114762-ec7e-4a00-b478-12260947cb11",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc716992-2af7-4051-b495-f6b74c3519b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1476a9ae-fbfe-499f-9154-d76392cbb1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b29558-5b6c-4cad-a918-e94c4cd9d7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb46dbb-9aee-4937-83a8-f5be977338cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73033f7b-fbee-4297-bd21-fc0ef5192591",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6abbde0-d3a7-4a3e-8205-8c8bbcd68db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb80670e-a6cc-4aa7-a317-40c08a7927fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d230ac0e-da27-4d8a-ba25-6da7bcabe87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed810c7-976f-4140-871c-0880d6ee627a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dd8712-3951-4fe3-b90f-9fc44ad057b8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836672ae-7d28-4b9e-b7fd-ff15a55cf0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc47615-145e-41f9-8b65-81a95c11e14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1248ff70-97bf-476b-8224-6679940d1fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf26d73-948a-4e28-afae-47267525b884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f5c341-c9d4-44f8-9b27-8a3269d56d37",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b84aeaa-927f-4497-80e6-caefe91c24cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94eb82a2-d61d-4e57-99c5-be3c21311f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c64487f-c74f-41eb-be9c-812fb4849f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43380e23-d1e2-4df9-91ef-071454640350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddadd94-0988-448d-b707-42ae0e75b32c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46af238b-a598-4be2-b06e-274b5f7a25c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3707270a-bc6e-4c3f-b887-65684624f62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab073c8-3e21-45fe-b7dc-74121a6e879a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747c2329-e82a-48f2-9d54-675878b6b617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcb78a4-c6c3-4a70-8da1-baa9a670800d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f381485-af86-4e7b-970b-709289701951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79221a59-8296-42ea-b537-27670fd836c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca36e60-4dbf-4bed-9ae0-88a60cfe45df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a4b8c8-9829-440a-b9e7-6152db05555b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa27dc3-b1ec-4ae4-b1cf-08208e02a6c6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287711df-1ddb-4bbe-8ee5-f69ca52d8c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3835d4d-2acc-4e91-8557-e72e6d20005f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e9bf01-0aeb-47c4-b30f-a0211379b813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f21f0cc-8789-4eac-a3cf-a2920429c72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9703cbf-3d69-412e-8a2a-eee67474a13a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb016743-7d8a-4613-95cb-cbb0a3e348bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f51a0eb-8a05-4a61-88f6-a7f4451ca25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed521687-a9ca-4345-b475-21b5299f0e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43504790-fab3-4951-88e9-ae978866a942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54a4a8a-1ff6-4092-877f-4c66da3d9fe0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67852275-600a-403a-aead-65c0b1a79b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fefa88b-b0ea-4a53-ad2d-87ac4e66d761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcc0dc4-dd71-45d5-87b7-bbeae9e882a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b3d8b9-c5d7-47be-9881-d94dabd69069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c905ba80-db2a-4ddb-a9eb-7560d0736f10",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a49362-1d0a-4fd7-9941-d16d91a64c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775d95df-6189-463c-b54d-d16af8aaccf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba3f481-af10-4742-9f2b-4b415ca37f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd8c9c3-19cf-49fb-b174-7748af7cb384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f511df0e-29c6-4363-9d5d-f1684b7c801d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a3db86-f4ff-4188-8d6f-b1f0316c81fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0baf73-c6a3-4718-b52f-8c85ea194131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3796d354-0421-456f-a0e4-f7848c421854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628fe246-4856-4ee2-b8f1-7b5b76b20e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c061fa-aec5-42fb-b590-ca91394da6aa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea21e6b9-2ab4-410f-b04e-0239c431b25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac01e28-a7da-4d7a-a5fd-034fabe112d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b24dcab-8e8f-4ac9-b969-900a51cb6242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5816862c-899c-4afa-abb8-69eeee83edeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35a1c2c-0425-42ad-8ca7-a285a795ea28",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a02b28-a359-4013-adf3-fef7a3e0e92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d36dc6e-3435-47a9-be53-59d639474818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b5b439-c70e-46ba-8c85-1b4c40742b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef81e633-2c0b-4a06-993c-e3413c10d829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fe3afd-f3a1-4787-8d02-e68386d22b5c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92a462e-cdc9-4cd9-a913-aaf49c1881ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2ee1ed-bc94-45e7-a4cf-ccded7146852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e62913-399c-4fbe-a198-d099045bb13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e4eb37-022e-4c9e-9ac8-689b315aa9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3287ed5b-9259-4118-8749-afa3897832dd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c0c37d-9d9c-4775-96bb-b094c1230188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cedeb796-daef-4b90-9701-29840a01dd1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4b72f3-4d5a-45d9-9caf-05b82c2ff394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5aab3a2-8ae8-4424-ae87-1217ff560aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23ec9e1-ac25-4ce1-967f-e8dd96cf9688",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff39ff20-24a8-43cb-8d67-e562bfbf8f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725e258c-fd78-4a32-8cc9-70aa8ee80d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366ce0b6-8b2f-4a2d-91c0-c63a412af585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094e8bbd-0ed5-40b4-9267-b3ad4ca0757c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0690e797-6fce-4f02-b7b9-e4b288ffc7ff",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb40cb9-31a5-487b-8f76-bcf8dd787d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd2c6fca-7d87-4e11-896f-8e5156e3aa77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be2fc51-b32e-4c40-a40c-c20e5201be92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25972fe4-60e1-4614-9958-41a97245ab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bf1c95-4c15-4d13-b788-664d8073685d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a7aaa3-6823-4fc2-b2bb-062b67629308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a564e94-a7fe-4893-afd7-8abc05c3f28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4b3a8a-73b4-4403-bedf-8748c4d2c653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e5c6eb-250a-4765-abdb-482f14373b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f16c5c6-2509-42d7-9f15-8dec9755c169",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eea615-7449-4901-a3d0-2db31a7948b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05373166-1021-4655-8155-4043a15d6616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d36e0d-6177-471f-a28e-34043a4b4505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a951e7fa-0127-4cfa-902c-a2396fab091f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e42bce-c5a4-4670-ab8b-13661df3dd32",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449de514-d7dd-4fbd-83f2-8f5130b1cde5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8c787b-b887-4781-a666-1e4c2e21e375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba1c797-d35b-48b3-9c87-c5bdea171d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833fbe07-8f50-488a-8bcf-cff57c109476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a103562e-79f5-4213-b6a9-b9b3c7f4597d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca8e365-4524-4661-84d7-d9ced7ff4293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ada6ad-910d-47d2-97e7-43520f9c4b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba849ec3-73f5-4dc1-b661-537f5727aa5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dab39a6-92c0-45ba-b190-8610692b88a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b0c080-d2a0-4b37-979e-024fb58e0ee5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1f78e2-fadb-4816-b7bd-d41c07dd5b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5371647-7cf8-47b2-9e75-ca2f97f8ee87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34637a8-fc76-44bd-a597-17988dbfd4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8b3988-67ab-4eb1-aefe-984f427da976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e6e274-f17f-4237-8ab8-c0f9266468d0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9b9f33-72a8-4411-bee2-96b4fe6c772c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2137cc74-70a3-4ead-909e-56d807024a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276bbd07-2ebb-426a-8b69-6012bc5b7c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14de186-c450-4737-b039-3276b9b968a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08b0ed1-8524-4c88-a709-884d0ae77532",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410a30fa-f7b6-435b-b05d-4b5846cba46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c74baa9-7106-4a28-a669-81718bcaed5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35638f2-d532-4605-8353-863b77a3a688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4641bf76-f2a8-4fcb-b991-9d6b0ebf5b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f84a01-f56d-4235-9110-649f48cd45a1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba9c916-7592-4b5c-8a65-6db5b53bb3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd563812-10ca-4024-833f-cdda6b195a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf885255-92cd-4229-ab87-57dd8aeff2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470ec89a-1a77-43d4-9fde-b1eaef59cbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6574bb8e-a909-46c3-b0e0-4d309fd339a2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b993f6-db82-402c-8730-3d15c0f6ca31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c39349-170b-4256-80ba-85da1a6499d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33194cc-48c3-44b5-8a05-7670bfdbb8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5a68db-ee4c-44a0-9fe4-93076125580b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abf3241-9afa-4a86-97cf-c789592cf64f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd160cd-5c8f-450f-b445-bc518ea211ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f13848c-0afa-4820-a490-d8acd7601536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fab975-57ec-42a7-8540-f611ffa238dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479d40e6-8fe0-4d54-980f-29416d3ee6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a074abc8-5943-4af0-93e4-a5ab9600d332",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4955454a-fdd5-42aa-b19c-fa39bc5c554a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7744c3fe-ca6b-40dd-ae5f-67816da6dea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70b442b-3ec2-4b3b-a0b4-5f00372916ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8fee16-f27c-44f8-b30a-80fc334aa68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfb4904-f07d-499b-94a4-35a4755a49d5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af19368-760a-4fb6-8252-1837a3fb685d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c5d6ba-2caa-4c79-bb30-a437b4007d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86ad5db-0c55-4b84-a25a-7cb8d61a1eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7992c8cc-dca9-4e7f-951d-98f2d15401af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d46b5d-606c-4326-a662-14542168ea5a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615dc038-f67e-4d78-bbfe-40ed6dc7da5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf6856d-d0c8-4ce6-9e28-28353d51df25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84205ad-d902-4e37-9e52-13f50cbe4f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d11b8e1-b5f6-45f8-898c-dc25b339e0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b98e9b-ddc6-4ff0-9c8c-6bdaed53822c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c06fd9-8ec6-4636-9908-6f08c3037364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5e81cc-b9a6-42c9-b6db-ea78b5e277a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a418b82-2fb9-4a8b-8381-630399fddf66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b40c29e-9aa5-41f2-8d93-5211c27c77a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca529a1-96f8-405e-97ad-fcc27faa844e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0b994e-2b04-435c-809b-d837c77dc6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc63f7ca-b9ec-4c46-9d0e-247cd0f70d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2e6f49-f985-47f4-a615-f050d360b698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979500b6-4a82-404f-90ad-b74472bc2bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90af0f80-295f-420a-89cd-c5cc89a10e19",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6973dcb7-cbc1-4ab6-a8ce-bdc9d5babe0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f0aa89-f290-4a01-a1db-5eabaff114dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22419664-09de-4c23-ac38-c7d11e1401a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da47231-1e40-4718-aa3f-04696785b391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323789bf-1916-45dc-ae5a-46eded4e386b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d815469-636b-4b05-89a1-c45076d94c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f363eae-10df-4f84-ac41-c7b33971be27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46bd2e0-5d8f-4180-bdff-06229384ed96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9c5bb1-54c2-493a-b13d-d751d2f5c021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b20e2d0-d13d-409a-9dd7-3ff86694cd41",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c79b1f-8cb3-4a0a-8ec9-66c635d87f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c5b5ce-c485-4a66-b4e0-8e9bdb722744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c175893-b469-42f5-8a5a-268f0a9ded3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e508991-56ab-4064-859a-5014b4b03cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca35420-1a42-49d6-8a18-2dbf46685f0e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6efadf3-0bff-4101-993a-ffa9b48bc75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8009f3a2-3675-4ba8-a06b-87bcfc1afff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80a8bed-793f-444a-8ffa-3b6591fc422e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca69882a-60ba-400c-b330-4974e4ab24c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657357e7-d24d-45d8-be04-b95b8a9bd7fa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1c0fbe-01dc-4f25-8c20-cfb88728eb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16feac2-6749-42aa-997a-184e110009d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0961c7a-9964-4920-bb2b-c86316b0a18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3dbb84-08fc-45c5-ab23-e13b10c72d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306f8368-eb91-4d4a-942c-12c66194ab78",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd92b66c-c4f1-4ba0-8d03-cd891f8fc600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ae31f7-1e06-47c4-8677-93a4f02fbfad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebfb189-e2b0-4196-8d13-8cbd78e85f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a948c0f-b60d-4c8d-9a0e-be6f10f59d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9824e005-ebfd-4d51-8f07-7013319e2fb9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b33002c-240d-496b-a47e-6fd0d663b034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5572362a-c8cd-4a14-8c24-ac852dc74280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfcf5bd-0b60-4f12-8487-41c8c44f735a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46badc4-c0c8-46f8-ab3e-38278ede3a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d691edc4-4d5d-4ccc-a95f-f4e15e3dcb3c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fb5c74-343e-48ee-89c6-aad37424992c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5880ac4a-2f19-410a-8cdc-9fad25da8f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d05eda-3a6b-47ed-8e51-83a012dc4ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763b715e-2f5e-450d-998e-8d305a127d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef04757-3f52-49db-a751-fc3f2df2deb8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1614ccc9-29d7-494d-9a65-7e17f3047652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7955ac26-2991-4a43-bb00-cfe2c5b1c5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2a7155-609c-4d18-a980-eab41cf938eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66b1b54-3bb7-41ff-a6b2-0bbaab363ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78831111-a16c-4ca6-9168-3ec3883d4c73",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086c169d-5fdc-4aa1-98bd-a259c43a13c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611831c0-0aef-439d-ac3e-2718574fbced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df418cb-e3e8-46ac-b8ea-100f34862910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe3ff44-e909-47b5-86f0-61851df0db28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb9d86d-2baa-48bd-9c28-0ab8b07f9839",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34865ac9-48bb-40df-8455-3d0deba2a6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ba5c40-07d4-4df4-8dd0-a6219af726d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb7005e-4551-4648-bb2c-b93032884c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b72e8f-4971-4709-b5dc-161dc2a6998a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8799df7a-329d-4dc9-a5dd-4b779368b728",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5bd497-7fc8-4ed6-9d67-cb35a22194b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f8346d-13ef-42c4-aa45-f132000eecb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e516bbf-056a-4ecf-a07f-d205983420e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34dd0ae5-f4c2-4f84-b05a-7eeba8657633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5871933f-4323-4cd7-baad-b1fae4662907",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12732a6a-b979-4a79-8291-c4b0ccf12f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827add7e-f7bf-46b7-9ad4-bdda839f3b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0fe0d3-09be-4a42-b092-4a331943d080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c55980-84c0-44da-8eb7-f148b41d4bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdde87d2-886a-48ff-8d55-20c62ec2443e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bff9e4-e8a3-4c6e-81ba-2459a3e90006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d853f0b6-d595-40f3-babd-f5648ba24511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e319ab85-cb6c-464f-a9ff-fa8f59e696e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c411e9-c047-40a9-b6c0-f1faebff8082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68e2f07-7357-430d-ba61-a654616a0540",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095ab21b-8a59-4c6e-b2d1-13d3b34ecd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ae21dd-53d7-44ea-8af7-ea5f1ca8406c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7171a4c3-6a1b-4e48-b90a-50010a5e4330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322e7a97-31bb-4de5-b056-a895ff81191c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a10cdb5-d9bf-44c6-8b6e-6257ca4bc469",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c4c441-9c58-41c9-805c-c74ef012429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b98beb-2129-4241-b38c-034611b77020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15bf247-1c6d-47db-b300-635b89a049e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9f16b4-effa-407f-bbc5-6dbeb304173c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69802217-2fed-4798-bfae-ec55241f3929",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbe28ff-c284-4b83-8428-75f505505416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9e4cbf-388b-46e3-a08b-c5499e884c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f14e37f-22e1-4638-8550-328cd5e588f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ff5ed0-e858-46ae-9be8-ba8c1fe6830c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbb61dc-0408-447e-a825-f625bda532ef",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513f5c2d-ed62-4ecb-b1de-e88716f6b310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00600e71-77aa-4bf4-b309-4dfabc6de6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f18fee-3735-445c-92ee-1d18048ef89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4b1199-fd0e-4bb4-8b01-e7a6d9620256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cadb554-1ac7-4260-aa3e-7b1fd4e538e6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbc7276-9b81-4cab-9753-3e9b90da9968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dfb13c-34ee-4a74-b3ae-eebc022fe010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78c9ccf-59cc-4b20-8b47-37a9c1c4dc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad068ee9-eb70-47f5-9a60-9074e2f1d6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e281f8-a0db-475c-a9d2-25930c8b98aa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f480a9-44d8-4ac6-bf0e-812bf33f28cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3470b68b-e591-4b14-8a29-578b408200bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3b8bed-372a-4dda-bdad-e3cf0ac5901b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcbf9d9-1d7c-4fa4-93e2-a8927f94b36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a382ce-dee6-4a3c-b606-8b9c8c241411",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019aa88b-2275-49cb-9ed9-e3866edfe70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3b6d38-fffc-4e87-bfcf-5f350fa959fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396da759-4eb0-419f-a0ef-3565077fe88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6d7ed6-ba05-407a-b84e-f87b8bcff0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9317c7a1-6c59-45a9-8c7a-1ba76d64bd43",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc04d07-9fc9-4343-a3e9-1ad5909803bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfb9028-8723-49fb-9dba-605327ce8993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7b5c88-89f3-4ac4-b8ff-83449fac6d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f45b35-3dab-4256-a940-486e425474b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea43c62-12cf-48f2-b277-30c7c0116ec7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625b0fdd-bf44-4ec3-ad9e-2dfb132f263f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "108a732b-0049-47b7-9d55-95039de0d0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec7053c-5d6b-406f-bd8d-bca7e8f60c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be68204-689e-4075-957a-f50031f7fc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50614e1-96e8-4f5d-8ffa-3c9b96beb07e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1885d9-45f9-44e6-8b67-5c86459a5909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed51febb-7b0a-4bdd-95d3-5eeb11f39d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2797dbb-974b-4803-898b-2666951583ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ea7dfc-d698-4035-b5fc-e5d05ade6f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0013449f-bc22-4a28-a0aa-dac8654b9cb7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7d8bc6-389b-4078-a27f-1fe0d6d4f66a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26f14f7-f9fa-4f4e-96de-a12c3ba40a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f077ef5-829f-4225-910c-62649769ca54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b099ca42-f1fe-496e-a9fb-857e4a4ddee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1128756-042a-41a4-b7eb-db31255eda79",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c191d-0c23-47c5-a9d8-08ab25bf5e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b0c2a9-1d1f-416c-9012-6b29ac247cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047191c7-7bbb-4970-8f72-f5f745c40416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acd02db-87f2-4ed7-ae0e-5e45ddf25d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb5fd63-9bf0-4d98-9fa4-add973e03eb4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe624c50-38d4-4409-8e6c-dbf60f436ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c930292-e4e8-4de0-9d94-f34e5b040097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44b0556-388c-4c42-bd6a-ef3acf987af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e4f925-c259-4379-b232-d226482171ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842d1b87-5e48-4ff6-b234-1460f6ad1b2a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a290a28f-d500-4f42-b303-7d4d91c66a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dec2332-87bb-4a6c-a60f-ffc0c62f94a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e883ed9a-d998-4d3b-83d2-20cd9616df77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42c8f8a-cc5d-4e0a-a6bd-acf2d6d72013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a79669c-e146-40df-9d21-fd80604ccbf4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941b0a03-c1e7-4685-afad-34222f9dfc0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c348673-267b-4912-bc7c-1a0ca2af15f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786d48c7-f3fd-4d25-8e11-3862e7655557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b404e96-41d9-4873-981f-31ed43a1e3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e39b9b-b021-4d49-8c3b-ab92cc23356f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deac7d5-0cbc-46dc-a510-808a9619ef19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aa9e6df-d60d-4fad-a302-792bba4cf217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae15828-e43f-460a-8c55-6567e9e491ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ce7e60-20ff-4a98-96bd-993da2f966c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4602c73-bc80-417e-825f-9770bc99f984",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35b8dc6-a883-4f64-89a8-37eca0c179f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6cce85-0bcd-40d9-9983-c542595070f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a09230-da41-41d0-821d-de791ef13a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7365a1cb-1415-4bd7-be95-5a40d7245e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37ae98f-d29d-4725-8532-4bf887ee1a99",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faede67-4702-4057-9b20-f050a8636259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47f8bf3-4de5-48fa-9f6c-934f4e0a5ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb043f24-8bbe-4413-9775-c92894ae8a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a28e94-3a7f-45e7-aced-f3dcfef4a5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e82cc1-6497-45f9-9af4-a8d344b50d7e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a825a848-59b4-47da-a7f0-bad2a6309a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6311ac55-aca2-467f-bc6d-87a75f681f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94afdd8d-7c6c-4d4b-9cdd-35aec8de3bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29740999-6fb5-4b5d-bbb3-cb835e111895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7e2006-4b1a-4197-8b17-793d5338430a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0907362-71a1-4b0a-a0c8-c2d7907512bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3abdac-799c-4ac6-90c8-f5b7e55bc7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c248ea-c6f8-4644-8f9a-ae73ecbad18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c39c53-a62f-467c-84fc-6e0d91aaeb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db2fc03-4bbc-45d7-8841-a838410c5507",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c150c4-6fb7-4ac1-a0cd-e3bae81a87ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e12fb1-69b0-4a6c-a074-0ce9a18ffe1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c742ac-91eb-474b-8e4f-d02c599bc64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e93d5b4-35d7-4786-a14c-aed771726e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6ab264-fe2d-4267-8427-59104071ee58",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a620bcca-6e42-4620-99e6-ff8261457388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a96f72-01f1-43da-ad97-4c9ce711df40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b7ca65-beef-4257-a6f2-3f01b73a9d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6af6e41-396d-4e80-afc7-37d7ecc221a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fd7e1d-c825-451d-b91d-96fda0315c32",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1648ff-a4ee-4707-bb38-140d745137d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7ef56d-228e-439f-83a1-59aa8e92d3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a212f5-6a1a-4b2e-bf3c-2973c3ab3967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674e15b5-ba58-47b0-b1f6-851dc5e38a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f0ba28-abf1-44cd-82e1-21e07cca9270",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061c0424-f4aa-4e1c-9c15-d72ef08665dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feceffa7-9f0f-4687-9066-248f8798a8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ed4184-a021-4032-85cd-25a47f497f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9feeaa-17e2-43c7-b2ea-a9be907580ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de83252f-7f2b-47de-8a0b-5057022fae74",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1a71b8-ec67-466b-8b70-c98d09ad4eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6733a05-349e-4c02-8661-7ac67a08ad5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988d6b7f-3df9-41a5-966d-98305c83dddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633bfd7a-10ff-4eca-8f2f-3068a763109a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d208c11b-3839-426a-870b-5dc5b29e3a66",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c951fb-2567-4bce-b447-757e6dfe8811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7f786c-1e73-45c2-94e4-10cad7d4566b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3cc02b-d981-4b15-a109-bd4b00273712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fd180b-3e7e-4e53-b08c-a0b8ff1c37b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a81181-26c0-4af5-aa89-88500bc9f5ab",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3d4f2f-19d0-463c-84b3-b9aa9fdfb380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95c5399-c6f9-4b00-98db-826944b2c63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a488108-c594-48fc-8374-7476155f76b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7099c6e2-ad7d-4f51-9c58-848a6d336c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30371765-92b8-447e-a59f-d4d82a38fe4f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf17e01-ebce-4325-8ded-c266e040a620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37bd6562-1e2b-4daa-a00d-23575ac5d48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99865f97-6cda-430d-95a8-762d9f94ef02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093f4cc4-b0a9-449a-9602-9b887353f4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fce2099-949a-430e-8de8-c9e0e294e11a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f230ae-cf96-4584-b843-e4fd9015b29e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027cd2c5-0645-4f74-8abc-55981e5dfc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a69acc-d902-464f-a876-75d8ab1e2bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793cd88f-94cc-4755-98a7-28339948892e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7c43d0-a5d3-41f4-a8d5-21aac032354d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757074d3-acc7-44e2-a7ab-8623aabeadfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0302d83-1a36-4285-872c-fac2489d861c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0291df17-d41b-4e3a-b46c-d29b5a32b050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e785bc-7b5b-44de-8fcb-5e3d9ebbbdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cc2bf7-e877-4336-a15c-8b5c7926b85b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb14b38-9a85-47df-8f13-c99d9b34f68b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ad1aab-55bc-4f95-b6d5-e553a2a09df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c13474-1bab-44c5-acb7-464c3a7a4a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d4d644-a9cb-4689-ba49-3b5c682cfc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58beaa9-5ada-483c-b6d3-b4ef645aab35",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee47e1e-0db6-4a8b-a3bf-8088b3646c81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3109b34-4c4c-46e8-887d-421dc4617bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85714954-4374-4225-a048-27ea762376a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5787d97-9b97-401d-83c7-cdb8bda0d585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f755c8da-e6b2-431f-ae86-4e700e4331f9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec853b4-b8ba-4a6b-93ae-5b2ba6b2b951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06df86b7-0a98-4e21-b74a-33109ba583db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4649ba-586a-4210-b4dc-1d6a330e3f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411fa492-114a-4d02-943a-7909c3bcdc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82753e83-564d-494b-b306-649f4f372b92",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab489d2f-3f34-41db-8776-715e6017789b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a32f77-f134-49f6-9676-239c9dc91768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0821bd-ec79-4195-846a-a73d6d895d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfe01b6-3cb6-4e8e-9444-022cb40d080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b0bfcf-6646-4ef8-ac61-1d8ec3b4214f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a0cbf6-f57a-4c9b-9858-796319f24bf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a5bb73-ea56-42d7-a094-f7f05b68de22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33e35d6-adb1-4ced-ae49-128898a3c0f0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def21fd8-4db1-4a1b-b143-d9a04378c7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7b5194-a43e-4a05-b879-3cc4eb066c11",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c367164-7b0e-4272-830e-34f6af6d396f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c61701-0d16-43bb-acb8-6573822e402a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2587ad9-00ae-41e1-a187-ac218cb20006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995cb3bc-e3aa-4a00-a714-c505891659bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac605d4c-7484-4245-b8b2-1b5d829217de",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32efdeb1-09ae-4d08-9444-e5860076d19e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d220c76c-b48a-43b8-8a8f-1204e1275ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca0df02-133a-4067-b518-2e7e782ced17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9458f81-3e39-4b52-886d-354b666c6c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4cb1ac-fb4d-4cf9-8bbe-bacde49aecd5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10953111-a219-4573-ab33-2c9e5b2a567e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e284b66c-bcbe-4cb6-968d-ea32aeb1beda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08555e9-07c6-49da-b195-d4b5823ed6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37789f46-8a8d-4c79-b491-e6eeb81a840a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b363919d-e6d4-4f9a-9702-52ff8ea4746e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec2b230-2e90-4d91-a9b1-0b9c5051a82b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e86fab1-e043-4514-adb7-ff11b3a0bc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea84be88-5d8e-4b08-810a-ae9971d155bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af169f8b-2d14-494d-8975-16f18049a66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8dd4bc-5884-4f57-bc71-312b5d7c22fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd4af91-c645-4878-9bc9-5e2f15da91e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1792b59-d428-4ae5-83dd-01f4b1b1bdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896cdac6-0aae-4dd1-8b50-8f700f3d18d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bd866b-85e6-4521-988e-836efadbe00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2e5093-5864-4a9b-be89-429d34b85865",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1e533e-a627-43a2-ac45-0cc186a34c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f5ce94-4f8a-4642-9858-8475ec8360b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a42e811-eedd-4063-852b-c3dab2b2eb8b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5edfc9e-e62c-46f8-ba76-9d1db50549b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb70c5a-fe86-46ea-8628-d9c8435abd43",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca2d32a-15c0-4799-9800-441c47eca6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a814fbc4-a516-4a38-9fea-f0a54493358c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64c20f2-394f-41c9-aa86-1d6bafb3db4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b48ea1d-506f-4e1f-b933-fa470a83d4ec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f09d99f-0469-4240-9431-03c8e1da238a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5aed1ecf-08b6-41d2-af3b-d4f5705d1b52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "678f5bde-2900-4a10-8d48-979b7439f8fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "502bc06f-d55e-4fdd-8bf1-bd70dcd2a7b9"
                    }
                  }
                ]
              },
              {
                "id": "29edb8cc-4da3-4a19-bb7d-ec89c2e7fe45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc64e4f7-77f0-4600-80df-bb3f76d6b283",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a15d075-3d7d-47c5-a5e9-303d0ded7355",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1ebd4ded-cf5d-4926-8b14-e0658dca37ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1432c1d1-2735-45bb-aa6f-36b173e80184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3528bcc-6575-4a3d-ac8d-62319ae2ddbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b4cf94d-bd77-4f25-b885-df3f2a1fe910",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2195e80-df7a-4386-a48c-04a0e1a0e3e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bba99d03-db4e-4011-88b1-8dc374cda845",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d24f6e48-1378-4aec-a77a-912ca9197683"
                    }
                  }
                ]
              },
              {
                "id": "45ff7684-640e-4a87-a52f-f2ca0c235cc7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1d52bb68-d1a0-4093-9806-eed1340c4add",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9522c8e5-ecca-4681-a143-f85d4ce88217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7f107aa1-b10a-4409-a44c-f49608fcefb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f66453f-580f-41e7-a095-f0e09f6d868a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1b436d-f456-487c-b91c-c9bb03f70b0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bb0a9cec-56ba-44eb-b2c1-1b5a5e349234",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aeb362f2-8de5-4dc1-9359-28018d3cd372",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1156bd77-9b76-4095-8c35-8de24267ea27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8edbd2ea-7b0d-43f0-a761-04854138dcba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7647a1c5-71b2-4a8c-a538-31d7c2aa87c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3bd5d8d-d093-4fc3-99ef-4fa575708b41"
                    }
                  }
                ]
              },
              {
                "id": "6d9b352c-d8c6-4ab5-b876-6b3e9f3b4e8f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bc61f02-c7cc-44d9-97f5-38d4ad39bc53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea2e0023-ff96-43d3-9bc3-0b298e71c34a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b5ce6cc-1794-4db5-90f9-9cd8c22fd295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8cab98a-8bc5-4308-b679-b2de89591075"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d2ffdba-395d-4db8-aa45-e22282fe9831",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bdef0451-90e8-4715-b2d5-2c7c80a81001"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa6bdaea-0695-4dd7-81e5-7ba2305ed807",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5324822-b7ef-4f4c-9299-b3d343046593"
            }
          }
        ]
      },
      {
        "id": "7f4385d4-a718-4748-9d2b-75a401907da7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "390dac50-e7e3-4302-89db-a02500081e04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b02f4591-a48c-4373-8396-4a21bd673554",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e3e4203-d175-47b2-ad39-cf1a465ee9a5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8ce87f-ffc9-4984-8182-0db2021d96f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8d3d5455-1f04-4829-b734-db49e42d74d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1b682d-376d-47c3-908b-6e7cea43002e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "539ece22-464c-4269-b2e0-9d89bb6d69b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e23aedfb-8c18-4c69-97f5-94e18a6c9ad8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2f00af3-d823-46b3-9ed8-565098b01e40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a6c84f4-654f-46c7-8b89-76eb297cb4ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01703593-a5d1-4882-9599-8f5c72d314b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "866ede78-dbec-41f7-84b4-d3e6defddb1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9d175334-6d7b-4906-b531-f4458f156926"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7d15c20-a885-404b-9895-5b05ccf7dcc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7078c3ce-cc8a-4dcc-ba50-cbeae460d169"
            }
          }
        ]
      },
      {
        "id": "b9eb51f0-3465-4f6e-a2f1-b535d2434e29",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bee4ae9c-ec6a-4a2a-b7e1-ef6c4b9ec4ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71e25790-7b1d-439a-882d-fccf23e5b8fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99e85694-1e03-4982-b708-f99e3af470e6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effae213-83e7-4626-a6ff-afe766010f9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d219391-cf93-480a-8604-7ec146816c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae66170b-1818-458b-95a1-67b2ea3e2be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0697678-8147-4b1b-a9db-59c44c1e90b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85e44619-32c7-4c45-a13f-42b660f3f903",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81763cee-c5d3-4175-a418-0fc0d5559ef8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ab557e1-c195-4be3-9e78-2e38f33a7afb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1914b9fb-dc85-4966-9680-64fd5a636fed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29a21da2-30a3-4b6a-954c-68dae802e85a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1bc288c1-6ccf-475f-b0f8-be382a0226c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99c74885-c854-49fa-87c3-d5f0b6ec994a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6989b3b-9df2-4b15-a1ea-075a969cc3ea"
            }
          }
        ]
      },
      {
        "id": "25ba9467-86a6-4002-a743-305fdaa07203",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "27d1e1cc-d0bf-4ed3-bf2c-bc05333d3685",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c6ecb13-b441-476f-8038-95c220258435",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8574fd83-9297-4337-8879-e85bf5c9381f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2b7c3e-9bb5-4d9b-869d-b9f6dd3c5f36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1561f77e-c1c8-4cf9-8ff3-ac336160c03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d90222-dd11-4508-b7ee-defeb6dd9991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "349d2677-079f-4dff-9bce-0460b86978e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66319ef3-2486-4221-b498-536760e01797",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "639eeeb4-0fb0-42f2-834e-f2926c4cc796"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b0ca174-48c5-46b5-952b-ef44c6b6d66d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61e62b07-863f-41a5-9591-4d7e0794da46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3d3ba6a-1a05-49aa-8cc6-c0c2f711cb5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dead58d3-c26e-4b48-82ba-57e0357b8b18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d1a7673-0f63-483a-9dee-61f27fbbde26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fbcd0d9-cfc2-4319-b5bb-a081422c4925"
            }
          }
        ]
      },
      {
        "id": "27d67251-eb18-4abe-8d14-91b3283de1b4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3ade09a-dc69-4ccf-9932-8320a53c4769",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9540765-0e35-4069-9935-048f872a1031",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c6ace3f2-4b61-4ce2-9f13-b2b63e29a673",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1af684e2-538a-430c-b2d3-c27dec091c2c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47f44a1a-df03-43d6-927b-a3cb8040c9a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.0701754385965,
      "responseMin": 8,
      "responseMax": 6961,
      "responseSd": 550.7754807207082,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704846996656,
      "completed": 1704847038640
    },
    "executions": [
      {
        "id": "358e13dd-56bc-406d-a9e1-214689ea4cc7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "137b6cd6-aaa0-441f-8bf7-6a28b1e07968",
          "httpRequestId": "adb2a359-19b5-40bb-ad53-1ee7bd10c009"
        },
        "item": {
          "id": "358e13dd-56bc-406d-a9e1-214689ea4cc7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f0a7af63-7aa8-45dc-8a7b-9130d205294e",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "dc02a934-4efe-4dc0-b3d2-aaf68c7967e5",
        "cursor": {
          "ref": "22e171fc-4e71-499c-9293-0bf254275ae1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "614978e1-87ac-4561-8944-45ca1c2f1c42"
        },
        "item": {
          "id": "dc02a934-4efe-4dc0-b3d2-aaf68c7967e5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "44f9bf4f-146c-4910-847c-29cf4ac1e88f",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "fb464d3d-b333-4b30-a040-3d6ba4502755",
        "cursor": {
          "ref": "979526e6-4935-4b37-b2e7-3e1d49dc3afd",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "344a757c-34a1-4b3c-831c-dc145cf65629"
        },
        "item": {
          "id": "fb464d3d-b333-4b30-a040-3d6ba4502755",
          "name": "did_json"
        },
        "response": {
          "id": "5adb68cc-ebe3-4968-99ce-386eb3f791c1",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de4bb3f-def9-43da-8683-1e8c1300a126",
        "cursor": {
          "ref": "3f96478d-7b74-4961-b3e7-08997b49b24d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85e4e7b5-ad82-49ed-92e6-0cf4083c2343"
        },
        "item": {
          "id": "7de4bb3f-def9-43da-8683-1e8c1300a126",
          "name": "did:invalid"
        },
        "response": {
          "id": "ac0b923c-1843-422e-bde4-92e7ba90218b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 956,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de4bb3f-def9-43da-8683-1e8c1300a126",
        "cursor": {
          "ref": "3f96478d-7b74-4961-b3e7-08997b49b24d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85e4e7b5-ad82-49ed-92e6-0cf4083c2343"
        },
        "item": {
          "id": "7de4bb3f-def9-43da-8683-1e8c1300a126",
          "name": "did:invalid"
        },
        "response": {
          "id": "ac0b923c-1843-422e-bde4-92e7ba90218b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 956,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730cdc0f-b667-4ea5-80f6-2516ff3ef46f",
        "cursor": {
          "ref": "2da1d3f3-fd65-4ce9-9a3b-ac58230051ae",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "87c41dee-773a-4b2e-ba8c-fdf10dbdccf6"
        },
        "item": {
          "id": "730cdc0f-b667-4ea5-80f6-2516ff3ef46f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "09eaff01-825f-4f82-ac6a-ad1aff4fbf00",
          "status": "Not Found",
          "code": 404,
          "responseTime": 214,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e73e92b-5ae5-4c97-b125-adc6ae9b66bf",
        "cursor": {
          "ref": "6dc80095-a384-483a-a7ac-ee9d648c7b70",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9643627-6509-4b6c-b766-7c673d191e2f"
        },
        "item": {
          "id": "7e73e92b-5ae5-4c97-b125-adc6ae9b66bf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5356a7ff-738c-44d9-a0e0-243653cc5223",
          "status": "Not Found",
          "code": 404,
          "responseTime": 219,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1f0a0f-37cc-4492-a871-1ee8a10b03eb",
        "cursor": {
          "ref": "783749fb-7c44-4896-9db2-c2c6fa1d5405",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d973fe3a-de5d-4fc1-8bd1-83f7588e2a2b"
        },
        "item": {
          "id": "3f1f0a0f-37cc-4492-a871-1ee8a10b03eb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7ad80a43-5088-460e-a04a-6eba11bb2ad0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31329065-1df3-4c1f-8d29-5ad78d0107b5",
        "cursor": {
          "ref": "f2ef249e-b069-4435-976e-9bab81a8565d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ce13929d-9cc5-4252-84f7-9d7adf6d96aa"
        },
        "item": {
          "id": "31329065-1df3-4c1f-8d29-5ad78d0107b5",
          "name": "identifiers"
        },
        "response": {
          "id": "04f39976-13b8-464b-bed7-29e5bed0ca1f",
          "status": "OK",
          "code": 200,
          "responseTime": 188,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4786a4f-d90c-447b-bb06-3f9024c32b42",
        "cursor": {
          "ref": "9680833b-8f08-4454-8143-671ea2625fd1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d3cd4697-1763-46f3-a559-b054c82ed0b6"
        },
        "item": {
          "id": "b4786a4f-d90c-447b-bb06-3f9024c32b42",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e7115027-c11c-49a3-9070-52aa49e81c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07dea6c-d581-4a82-b6f9-c388a37e2fd5",
        "cursor": {
          "ref": "158085b0-7198-416b-b84e-3f9283b65fc1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "462a770a-b18a-471e-a2ab-b5a04ba4d351"
        },
        "item": {
          "id": "e07dea6c-d581-4a82-b6f9-c388a37e2fd5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bbf69b2b-395d-4fda-8f9b-926dd466bbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a25a37-292f-476a-b188-a9310cb15511",
        "cursor": {
          "ref": "60cca0a5-69d3-43d0-b048-fed16eb10dd6",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4bbcfcd3-ccfc-4f2e-a154-2feba905fc7e"
        },
        "item": {
          "id": "f4a25a37-292f-476a-b188-a9310cb15511",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "137de79f-7a24-4fc9-aefa-6f19dcb5b9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5e1f70-56c4-49a2-98fe-f9cf76c662ba",
        "cursor": {
          "ref": "aceca554-cba7-4f11-a945-4fe82577c847",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "96bd2a32-f47a-4941-a16a-6da130a45a1c"
        },
        "item": {
          "id": "9e5e1f70-56c4-49a2-98fe-f9cf76c662ba",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d4f7fdef-7f98-4aa1-99f6-87f1c5bcc554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a357efc-d0b0-4478-b758-33c8c14a32b7",
        "cursor": {
          "ref": "a7759576-2743-4df2-8495-9741b15159f7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bc6d1c93-8dff-4bd8-8498-4f727ee3db8c"
        },
        "item": {
          "id": "7a357efc-d0b0-4478-b758-33c8c14a32b7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9fe4e74c-251a-4544-ac3f-c3191359c5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171b88fe-8859-4a08-9a88-632cd4721a7f",
        "cursor": {
          "ref": "18c9dc29-f3ff-4a17-8b1c-497c92dd5238",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e5dc91e6-3c03-4bb9-9bff-77619bee26a1"
        },
        "item": {
          "id": "171b88fe-8859-4a08-9a88-632cd4721a7f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0432ed84-92d3-418d-9704-7e4960a107d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b266b18a-75a7-4802-914c-73e687c004c2",
        "cursor": {
          "ref": "c3f50c1d-228a-49d0-a364-eb4a28b15d71",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "347783a6-e092-4d96-8a36-e948f2662098"
        },
        "item": {
          "id": "b266b18a-75a7-4802-914c-73e687c004c2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "508d108c-0bde-4678-9be1-4e5b91359bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031e9e62-0a7e-48a4-8ea9-74f8605ef8c7",
        "cursor": {
          "ref": "45b90509-eeff-4b16-98c7-865fb58ba773",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "38d68edb-627a-4d79-8e3e-f28e93eb87da"
        },
        "item": {
          "id": "031e9e62-0a7e-48a4-8ea9-74f8605ef8c7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "04b1d852-36fb-4171-a69b-b39e44624e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee2604d-545c-4f6e-ada3-3a1e56505a80",
        "cursor": {
          "ref": "a9fb3475-8088-4a70-9669-2c1b3a4b459d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0c020fcf-1ce9-445e-af15-9652192ed6d6"
        },
        "item": {
          "id": "dee2604d-545c-4f6e-ada3-3a1e56505a80",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "91fc918c-d524-4b5a-a221-3353ab98e94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398c9504-7f53-4844-8b6f-a243579e1856",
        "cursor": {
          "ref": "997b14be-2c82-4c4d-96bd-624c1e719598",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "abdb320b-c99a-4056-80d1-be8a6a41e19e"
        },
        "item": {
          "id": "398c9504-7f53-4844-8b6f-a243579e1856",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "695d8f9c-ffed-4517-89c7-4350b68e61d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76236e56-3962-4866-af46-f6b317ee264c",
        "cursor": {
          "ref": "7d5fe4fe-e86a-459e-a9e1-8475a0b12cae",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8d6f5521-63a7-4f5d-9a06-1db092357594"
        },
        "item": {
          "id": "76236e56-3962-4866-af46-f6b317ee264c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4cad5d77-8236-41b6-9e9a-a7793910d3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20b6cb7-58a3-4f74-ab34-d4e640b01c8e",
        "cursor": {
          "ref": "6f03ec82-48fa-4e1c-80ed-bbf3717c62e8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ca85479d-7b09-4d9b-ab67-d9a2f99866fe"
        },
        "item": {
          "id": "c20b6cb7-58a3-4f74-ab34-d4e640b01c8e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "df6a06ee-be5d-411c-8c9d-e4875629f531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c12fe03-d7b7-49a0-a6eb-a3698f40b07d",
        "cursor": {
          "ref": "ff991450-67d1-4849-ac59-2e3e5fa7bf4b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ff876053-3e16-465f-831e-2f27f974f173"
        },
        "item": {
          "id": "2c12fe03-d7b7-49a0-a6eb-a3698f40b07d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5e9268c6-2eb5-4fab-8079-8814f9ca2138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bab6044-35ab-4e37-9162-00cc4ea64490",
        "cursor": {
          "ref": "a76b829a-44bd-422f-b1db-8b657958e06d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "71023181-2b32-466e-8766-54dff7cc9d56"
        },
        "item": {
          "id": "4bab6044-35ab-4e37-9162-00cc4ea64490",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fedcb340-8e99-4f07-bffd-5deb95d0bf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b28e1fe-1ef4-421a-b697-8f09ec2fe77b",
        "cursor": {
          "ref": "8cf9c8b9-6155-4173-84bf-8bd04e98af58",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d18a5fe0-3f7c-4d11-9873-72736ac6ab3f"
        },
        "item": {
          "id": "1b28e1fe-1ef4-421a-b697-8f09ec2fe77b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "46f8c617-69ea-4aa8-ac8d-5bf268fa1499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efb96cf-dc2e-4cbc-9590-05cca92a21f4",
        "cursor": {
          "ref": "83b1c188-d829-4321-b70b-66634cff44e6",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8ca06411-e14a-4eaa-abe6-d35930adaf99"
        },
        "item": {
          "id": "9efb96cf-dc2e-4cbc-9590-05cca92a21f4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1bf0fc3b-c170-423f-902c-0bc6f99ef7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0be3e06-2b7f-49fa-bf6d-6e0b04ba3d44",
        "cursor": {
          "ref": "b698f808-054b-47a5-be0c-d036f4801676",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "34017188-9cb9-41ac-b42c-54721eb8e785"
        },
        "item": {
          "id": "b0be3e06-2b7f-49fa-bf6d-6e0b04ba3d44",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "baf0881a-34c7-45bf-821a-07fee63b0210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80c71fe-5318-44bb-a042-873c101782d9",
        "cursor": {
          "ref": "7dd00c5f-de66-431e-869e-8434561612af",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "84dd587c-0496-4007-87ab-be56996fba29"
        },
        "item": {
          "id": "b80c71fe-5318-44bb-a042-873c101782d9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2aaed87e-66fc-4b4f-9137-c30285c229ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b307b8-60e1-42e8-bb7a-b9c948f53018",
        "cursor": {
          "ref": "d2df89d2-46f5-4099-88d3-3f64c27acc63",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "111fd58e-9362-495c-ace8-1b931a618109"
        },
        "item": {
          "id": "71b307b8-60e1-42e8-bb7a-b9c948f53018",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "be3d61c7-1347-4e0f-a7c9-fe232ea4d279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f60ed0-aa05-4199-b5eb-4bd3c16a5df2",
        "cursor": {
          "ref": "16f71f51-5194-4c76-a9c3-c1465bfdeae2",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9bb8aefa-6876-44a8-b498-b9926adab31a"
        },
        "item": {
          "id": "f1f60ed0-aa05-4199-b5eb-4bd3c16a5df2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9f05bf42-f415-44f5-becd-a34296c3b5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105a572e-3b9c-409e-8676-217712f9feb9",
        "cursor": {
          "ref": "3af80de8-3c64-4a80-a353-0a81d9e8e242",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7ac59c74-823f-4eb0-a8dc-418ea85d48a7"
        },
        "item": {
          "id": "105a572e-3b9c-409e-8676-217712f9feb9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a3738f6b-0a20-4ee0-ab5b-7eac0ab0b7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a24d45-dad7-4e4a-856c-a777c2891e9f",
        "cursor": {
          "ref": "61fdff54-48f1-44d5-bc8e-70ad1fdcdf4b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9891d70f-8f01-482e-a409-b425d6249641"
        },
        "item": {
          "id": "a0a24d45-dad7-4e4a-856c-a777c2891e9f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7d00b394-3d29-4a3a-b6e4-52e3a224c4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947a2124-b389-44e7-92c8-7630b9b1fe85",
        "cursor": {
          "ref": "a97a9599-838d-43ca-8631-e99a7e31332a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "51ca9fa3-676a-4d9b-80af-b615c73e4006"
        },
        "item": {
          "id": "947a2124-b389-44e7-92c8-7630b9b1fe85",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "484e33fb-f521-40a0-b5dc-448378476214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56252051-5476-4213-9c30-023a97e08bb4",
        "cursor": {
          "ref": "1423d3b2-c636-4c9e-803d-39a0696a8efc",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3238fe75-b895-470c-87cd-0b12a57d7fd3"
        },
        "item": {
          "id": "56252051-5476-4213-9c30-023a97e08bb4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "91d6e9a4-8698-4dd6-8b13-baf7e9f6f3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3493684-87a0-4d5e-992f-1255fc39e085",
        "cursor": {
          "ref": "79d859aa-f575-48cf-bd06-c50e873e40c4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9ed1a78f-f475-4417-8b05-cbec4c557977"
        },
        "item": {
          "id": "b3493684-87a0-4d5e-992f-1255fc39e085",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "921f0663-db90-4304-b85d-573eeddc8303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb172e7-e470-436a-a401-6bbb1093c1d9",
        "cursor": {
          "ref": "012854c4-daab-493a-abf3-3b1424baa7a4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "05a55bd0-7f7a-4977-a82d-2632d27b575a"
        },
        "item": {
          "id": "9cb172e7-e470-436a-a401-6bbb1093c1d9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4d61c0a0-6cab-47d7-a6ac-0b6ed2b62213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f12c7e-73bc-44f9-a0ad-a0adf9330fe8",
        "cursor": {
          "ref": "6d24d786-b974-4434-817f-087ab3a5241e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "07a3096b-09cf-4d63-ad66-39148500f86d"
        },
        "item": {
          "id": "16f12c7e-73bc-44f9-a0ad-a0adf9330fe8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7154a90e-4898-4ac8-a921-6e3daecc4691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f395f13-9bec-4e5a-90ef-1beb9fc10f34",
        "cursor": {
          "ref": "0b953446-7202-4cae-b77b-be662455bf70",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f0472011-e1b2-46c8-9792-cc34457e96bb"
        },
        "item": {
          "id": "2f395f13-9bec-4e5a-90ef-1beb9fc10f34",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bc9d1bd3-2df3-41af-959f-c483100b07f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36608a2-fb31-4fbe-8344-45e4bdf20e66",
        "cursor": {
          "ref": "aaa436d9-886e-4a22-8228-0339466c846d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "23e94005-5142-4814-8c8b-ea22da61d3e1"
        },
        "item": {
          "id": "f36608a2-fb31-4fbe-8344-45e4bdf20e66",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a060c8c2-f4c9-40ec-9ed8-9733be1d42a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30793b7-924d-45f2-9b3e-68db655fb80b",
        "cursor": {
          "ref": "bd06b73d-7f71-48cb-ae81-9d7ddb89f285",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9d711a22-09cd-4e75-a47c-cb2c8a8ac145"
        },
        "item": {
          "id": "a30793b7-924d-45f2-9b3e-68db655fb80b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3f5838dc-74a7-4e37-8e24-0f42c2fd833f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df316ba5-ab9b-4302-8398-5f77de4c1598",
        "cursor": {
          "ref": "ce648057-6fe0-41ed-bc62-19bc76d06795",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "07527719-86c2-47ac-87ac-251af1993a32"
        },
        "item": {
          "id": "df316ba5-ab9b-4302-8398-5f77de4c1598",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "726c6a56-93e0-40a2-bd5c-d2e2361ec0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c688368-da75-4b3d-aa06-8176d3ee88d4",
        "cursor": {
          "ref": "a41a0d0a-0cde-4934-9c41-002cdd3c7735",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "41392bc1-4e49-4d15-b13b-eb771f8da973"
        },
        "item": {
          "id": "8c688368-da75-4b3d-aa06-8176d3ee88d4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e423ded2-ff01-4ea6-97e5-9aa09905db0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f48eef-0025-43c6-a450-dacdb51246ae",
        "cursor": {
          "ref": "51657c20-d700-4d53-9b65-7cbd0587fbc9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2a9fd293-602f-4b75-8376-e1d7df265221"
        },
        "item": {
          "id": "52f48eef-0025-43c6-a450-dacdb51246ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "031ceee2-58b8-4489-815a-aa5163b35714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e16039-e3dc-411e-b18f-f52d327ac455",
        "cursor": {
          "ref": "6b3da44f-565d-400e-8013-2a18c7c11fbf",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "347bfcce-bf11-4f17-8a1c-d23c10a13f6c"
        },
        "item": {
          "id": "d1e16039-e3dc-411e-b18f-f52d327ac455",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "70296b52-08de-4b66-8fa8-ed0ee2f495b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7febf4de-1fa3-4169-9e3d-a66e728b253f",
        "cursor": {
          "ref": "1e4b3ee4-b40c-40b0-922e-28a2e0bf4c4b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f198ee0e-ba5b-4444-8aa2-d75128285218"
        },
        "item": {
          "id": "7febf4de-1fa3-4169-9e3d-a66e728b253f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0daff8c3-3f65-46b1-bf61-815ae1d1b120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4a3c59-946b-46ed-a6d4-c08934862442",
        "cursor": {
          "ref": "03eeb0c6-2543-4a32-8119-08c6806bcf7c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3670aa48-fd35-4097-a749-4eefafd172db"
        },
        "item": {
          "id": "dc4a3c59-946b-46ed-a6d4-c08934862442",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dcef235c-45e1-4f8c-9a80-686cd763c3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53aedc3-cd0a-4e9b-9779-32da5880cb65",
        "cursor": {
          "ref": "5fae2b75-c97c-45fe-a598-6931356cbe6a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5ba6a730-377c-4d83-acea-b93f9e3d2988"
        },
        "item": {
          "id": "e53aedc3-cd0a-4e9b-9779-32da5880cb65",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c638400f-ff61-47df-a215-618128a107e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1825b2-6226-42c6-a0ee-0e949bd8f486",
        "cursor": {
          "ref": "76ef7e58-7874-4101-b420-eaa66c896752",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "283614b0-8e48-4774-9e6c-01f50b62b2ce"
        },
        "item": {
          "id": "2d1825b2-6226-42c6-a0ee-0e949bd8f486",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7ec9bf06-5784-4716-9a97-5337125f9bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde75fcd-587f-49c5-91d2-06cb8bc91c3d",
        "cursor": {
          "ref": "a18c7ad7-cd78-48de-9ab3-8b580301d3c1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ac3d67e6-a566-44de-8b41-7eb6a2e12707"
        },
        "item": {
          "id": "fde75fcd-587f-49c5-91d2-06cb8bc91c3d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b067666d-88f7-4088-8b0d-704b6fcfadf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd4b677-167b-47d9-bce6-6582f0880db5",
        "cursor": {
          "ref": "c6f84fbb-a154-4b55-840b-09dbe5a166f3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5a2c3236-0de2-42c3-8297-659ff75f80df"
        },
        "item": {
          "id": "5bd4b677-167b-47d9-bce6-6582f0880db5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c7325319-d7ec-4b41-bfdf-0ce97ee9b94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85691e89-1f8d-4ff8-9bde-b4b8cbb5d1b3",
        "cursor": {
          "ref": "7742acf3-5379-4cc6-84b4-9f2599f47d46",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "36f3f3fc-72ef-4813-b4b9-1a4e366e337a"
        },
        "item": {
          "id": "85691e89-1f8d-4ff8-9bde-b4b8cbb5d1b3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "445b8e15-2341-48f3-bc59-70b313399a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe19f97-cbed-475e-9a62-fbc5c21c819b",
        "cursor": {
          "ref": "5672ba9e-9fec-473d-aec6-f43fff783270",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b3742548-2303-4c61-b45b-1354c6c65010"
        },
        "item": {
          "id": "3fe19f97-cbed-475e-9a62-fbc5c21c819b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d790d18d-a0f7-40e8-88f7-05f6216b106e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4abe3f7-8ad1-4393-a046-fe6ef1b78fc7",
        "cursor": {
          "ref": "35843c08-1068-4db9-9c35-2b68a3d3173d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a88f7217-0c72-4bfa-a653-a239162cc5a7"
        },
        "item": {
          "id": "e4abe3f7-8ad1-4393-a046-fe6ef1b78fc7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "256db65a-206c-48d6-9e1f-22b8e72027cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75419c1d-b022-4dae-8857-a280dab9614f",
        "cursor": {
          "ref": "347f6897-8638-4ae4-9e90-93f6313bed1f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ed5bc8eb-6105-4d97-85d6-293ca4400101"
        },
        "item": {
          "id": "75419c1d-b022-4dae-8857-a280dab9614f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "db250473-186b-4d4a-bc6d-2a996cc10f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2467dac8-eaa9-4c71-a2c6-87c4f4d0c586",
        "cursor": {
          "ref": "f7c01e23-77d8-4117-9831-0667ee2c80fa",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "97751374-b327-49c2-9037-37b6a6109675"
        },
        "item": {
          "id": "2467dac8-eaa9-4c71-a2c6-87c4f4d0c586",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d5d2ea7d-2015-40b3-99f5-d787afeacdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1657a6-c92e-46dd-92fe-37fe659b4fec",
        "cursor": {
          "ref": "c770eb49-ac0f-41e8-94c3-192d16fc3de9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "631c60dc-4f7f-4009-b35a-aface0681ff5"
        },
        "item": {
          "id": "7f1657a6-c92e-46dd-92fe-37fe659b4fec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e3f48dd0-16ac-4b82-a993-17606897231b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4116a49-1a9f-4dd8-8f2b-6df3f5b36830",
        "cursor": {
          "ref": "df211765-1eba-41f9-8ff5-384d61e2a090",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "90d4c697-abce-4f5c-a850-b691a00c97f0"
        },
        "item": {
          "id": "f4116a49-1a9f-4dd8-8f2b-6df3f5b36830",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d840aa80-891a-4e89-a90f-d838b6603d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6341100-8e4f-4b12-b8b8-91f3e40f7922",
        "cursor": {
          "ref": "ccd02262-66a1-4611-9360-3a24e43390c0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dabe2c67-81be-430c-adc5-cdd829717ff1"
        },
        "item": {
          "id": "f6341100-8e4f-4b12-b8b8-91f3e40f7922",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d80656e3-febb-4a43-91c3-537e8532a9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d27e6b-6924-4a32-bad3-8a593b1f8143",
        "cursor": {
          "ref": "cc38a811-7376-4ec9-9c15-57910ced36d4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0d97e5de-c9bf-415e-91b6-0112bf41d39b"
        },
        "item": {
          "id": "e9d27e6b-6924-4a32-bad3-8a593b1f8143",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8677a026-dce3-48e0-b923-092e8372fc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7288821-f4c8-469f-a2d4-cd7eaca889ff",
        "cursor": {
          "ref": "ca35f507-0520-4e5b-b208-d8bd810220a9",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f1251ae3-a7ed-4fd0-85d3-6f89f2a3ba1a"
        },
        "item": {
          "id": "a7288821-f4c8-469f-a2d4-cd7eaca889ff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c7b64160-5d18-4e65-8107-9aa575616e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2ad719-965a-401d-bc57-db78bb974908",
        "cursor": {
          "ref": "7b0b5a19-c2d4-46e3-87a7-98b6f961e2ab",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "05bcafcc-4911-442f-bb9a-911bd2a19819"
        },
        "item": {
          "id": "cc2ad719-965a-401d-bc57-db78bb974908",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "269a115c-e0b4-4bbd-9400-afb869bb3a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70becf24-746d-44c2-b021-36e8b22470d1",
        "cursor": {
          "ref": "bba39282-199d-4360-af57-6b0be6858823",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "71e2ab7a-e561-4a76-950c-e0f57f69bf06"
        },
        "item": {
          "id": "70becf24-746d-44c2-b021-36e8b22470d1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "219f94a1-6746-44cf-9c2c-0e64e1a0196f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc39255-19b0-4500-8a6a-5bb19a547f4c",
        "cursor": {
          "ref": "d1a504a3-83bc-4a32-a70c-d5de6fe7efc4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f9989d08-23c0-4ef2-a22d-603793fcbb99"
        },
        "item": {
          "id": "8bc39255-19b0-4500-8a6a-5bb19a547f4c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3630baac-ff30-46c9-8e71-f5f5d5db0eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705e754e-cd9f-42ba-9fc2-671dbd5343be",
        "cursor": {
          "ref": "389d0af7-0501-451b-9fd7-5348c7d152f4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "85c5ea93-ca41-497c-9c8e-27ddc3c44ba9"
        },
        "item": {
          "id": "705e754e-cd9f-42ba-9fc2-671dbd5343be",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "079a11f4-02bb-47f2-b725-a4072793b5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73c340d-dd86-400f-a121-3be58808990b",
        "cursor": {
          "ref": "70f10c29-2c55-40e5-b01b-dcb94e97defe",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8d43fcfe-874a-48b2-909f-48f063edc761"
        },
        "item": {
          "id": "f73c340d-dd86-400f-a121-3be58808990b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "67ee7849-f945-4800-a534-311deaa6c832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86152784-9cd6-4c81-8f1f-311507e152a5",
        "cursor": {
          "ref": "8d2750b8-fcdf-4492-b2f6-d3c9e04c266d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "054797bb-c606-4b56-9bee-a2eeed414c0e"
        },
        "item": {
          "id": "86152784-9cd6-4c81-8f1f-311507e152a5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1b928a11-d00d-44ac-909b-163c83990a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1a1a30-41be-4d65-bf74-8d3b59e72b8b",
        "cursor": {
          "ref": "1432362c-87d0-4992-b7df-07892ebceba9",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9f379098-49c3-4c54-bb8d-4d8dfa15e5b2"
        },
        "item": {
          "id": "4e1a1a30-41be-4d65-bf74-8d3b59e72b8b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7310b748-7e80-4bd8-84c5-9e8e24e713ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd08fb49-7f35-49f3-b5cd-0ff329069437",
        "cursor": {
          "ref": "6ee2d0e0-3a25-4d2c-90c1-7dc8701ec332",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "43430ffd-4597-4e19-9e8a-0b43f0ed2f12"
        },
        "item": {
          "id": "cd08fb49-7f35-49f3-b5cd-0ff329069437",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2b51397c-648b-4c21-8c52-3ab2ec6692f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e154ba07-7b80-4660-83c7-e20ddefe7417",
        "cursor": {
          "ref": "47ffc702-64dd-4fd3-aa27-beb4f33fc357",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7ad8ca68-727c-44bd-bb15-02251f4a56b9"
        },
        "item": {
          "id": "e154ba07-7b80-4660-83c7-e20ddefe7417",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7be193e0-7871-4d42-91e0-a7d77ec45135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3764487-d4d9-4182-b826-3d3aaef717c0",
        "cursor": {
          "ref": "f804c6c8-ed6c-412b-a57a-5b4ec6f2f05d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7181a368-4759-401c-a5bc-ca0d2d6e8180"
        },
        "item": {
          "id": "a3764487-d4d9-4182-b826-3d3aaef717c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1ffa113f-0a6e-461a-959f-189fee096f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55681c1-b331-447c-a654-d7098c7541f3",
        "cursor": {
          "ref": "7abb24ab-2982-4046-9160-632bc3d00e6a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c84f3662-8413-4469-aecf-77ebcbc7631a"
        },
        "item": {
          "id": "f55681c1-b331-447c-a654-d7098c7541f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d50149ee-1dc0-4833-94f1-3fef5020d3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903290b3-1538-40e3-89b6-269955008b96",
        "cursor": {
          "ref": "4e7c79f6-3e4d-4102-ab5c-d2702dfe93c7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e66c709f-8859-41f8-b193-1f7a67f311b4"
        },
        "item": {
          "id": "903290b3-1538-40e3-89b6-269955008b96",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9c178519-fa0a-4417-b58b-579a0feb1bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1b58d1-067a-475b-a602-ef0c9c256bf6",
        "cursor": {
          "ref": "2a400e4b-6604-4106-a896-85a4f56c92d1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "04486019-75be-4854-8545-4528666c0e41"
        },
        "item": {
          "id": "9d1b58d1-067a-475b-a602-ef0c9c256bf6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c85741a1-4719-482c-8447-a89a61a6b58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54591e6c-846c-4791-8bf3-6f8e708dd93e",
        "cursor": {
          "ref": "56cd1b3b-d3d0-4c0e-8017-796efc06cb86",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1e1c4eee-36fb-4650-a44d-0b7caf84b23a"
        },
        "item": {
          "id": "54591e6c-846c-4791-8bf3-6f8e708dd93e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cf005dc1-a7eb-43ab-b21a-26fa85e89bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c519a390-b6a5-421c-ba10-690c0f634577",
        "cursor": {
          "ref": "41185772-36eb-4eca-b2e8-232193ade281",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b57a426f-eedf-48bd-b918-ced4f9ec3713"
        },
        "item": {
          "id": "c519a390-b6a5-421c-ba10-690c0f634577",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c7c43d67-cc99-43a2-afff-b8f91fd76b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d903f3c3-883f-49b7-bce4-1caec1dc2506",
        "cursor": {
          "ref": "1749342b-0bd2-4417-9bf5-6cac39096635",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e1cd4c8e-ed60-4a00-a779-b07173375213"
        },
        "item": {
          "id": "d903f3c3-883f-49b7-bce4-1caec1dc2506",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0c69e701-91fc-45ae-87b0-bfe172214544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da46e7e9-ba52-472a-97e8-bac769a08912",
        "cursor": {
          "ref": "b7076d48-6f96-4d68-85d8-30b6aa882c12",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c9760baf-b0d2-41d3-8bac-fb007bc006f0"
        },
        "item": {
          "id": "da46e7e9-ba52-472a-97e8-bac769a08912",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "43c88fed-2e42-4f76-a956-3e9d1872a240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1439bb-790e-4ad7-a554-b4c71fc5f74c",
        "cursor": {
          "ref": "fc5bd60e-20ba-4f1f-b3bc-174c46ea6adf",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "47729f83-6fd5-4849-8d83-6e6fe9ecb6b4"
        },
        "item": {
          "id": "bc1439bb-790e-4ad7-a554-b4c71fc5f74c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3306b74a-ff8b-4647-b18c-555b0e6b3ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88eb7114-8462-41f6-a6ac-4492e7ea81b8",
        "cursor": {
          "ref": "1ec0cc60-0687-4127-9035-b11234157081",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f5e8e105-bd8a-4f8d-8836-fb4da800e53c"
        },
        "item": {
          "id": "88eb7114-8462-41f6-a6ac-4492e7ea81b8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "357a7bbb-61e0-4e67-9b96-44191721ff78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae58612-ff3d-418b-8509-3f6934018ec1",
        "cursor": {
          "ref": "c8f82080-8c33-41ab-a730-080ac2b0ffe5",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "148206c5-4f0f-4562-90d8-b8001b7878dd"
        },
        "item": {
          "id": "9ae58612-ff3d-418b-8509-3f6934018ec1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dae67804-f2c9-4864-b532-31b8bfe543ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93712cf1-dbc2-44a8-a201-29518decc599",
        "cursor": {
          "ref": "c4bd5ab6-0bb2-418e-b1f4-8cfc02073062",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c959d460-56ed-479c-a19b-b9fef017df30"
        },
        "item": {
          "id": "93712cf1-dbc2-44a8-a201-29518decc599",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8f0f6bfc-3ddd-4e8d-8195-8ea39c88bcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061d032b-cb68-4420-9382-421f456d4517",
        "cursor": {
          "ref": "f7657f0c-2e63-428c-9f6e-3b6762c4da81",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "10468b4c-eb9d-4e4f-bc07-a8c997298a76"
        },
        "item": {
          "id": "061d032b-cb68-4420-9382-421f456d4517",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "51565b30-d09e-452e-ba59-26958d716430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad6be8e-06c2-45c1-abd4-9cf9e11ed8a7",
        "cursor": {
          "ref": "baa7192e-9cfc-46d1-a80e-92c00cf4bc81",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5343c008-793b-4315-b62d-15caf88632ea"
        },
        "item": {
          "id": "6ad6be8e-06c2-45c1-abd4-9cf9e11ed8a7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1f914c40-479b-49d1-b22e-144d79fa59bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83087f26-07e4-4281-b646-38a086cd7843",
        "cursor": {
          "ref": "c68de747-4745-4b0d-8037-f41795ef5bc9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fd55f6b5-6950-4d96-a2b8-7ad0d85f02e4"
        },
        "item": {
          "id": "83087f26-07e4-4281-b646-38a086cd7843",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a80ac073-63e1-43de-8da3-8a41fbf72070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f2b592-a101-4f89-9c46-a5d252a7291d",
        "cursor": {
          "ref": "f8259c48-075f-42ef-9723-d9cb0593c611",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3ba69e76-1b8f-4d0c-8b36-07be059035de"
        },
        "item": {
          "id": "68f2b592-a101-4f89-9c46-a5d252a7291d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1f10a000-b364-431a-8d98-3a9c2113a0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1198d527-460f-410b-8577-60ff4bf22209",
        "cursor": {
          "ref": "8f8016c2-3604-4a34-80d1-5bce51df9715",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "79d814d0-38fc-42d2-956e-6821e84993d8"
        },
        "item": {
          "id": "1198d527-460f-410b-8577-60ff4bf22209",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0077487-ef29-4b01-9797-3fee51159c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29907fe2-1c80-4c60-b6fc-647df978afd4",
        "cursor": {
          "ref": "0ebd4fa6-1f62-4584-a0f4-109bceb0c3cf",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "24a2c080-d0a9-4a75-8602-7d007313dfc2"
        },
        "item": {
          "id": "29907fe2-1c80-4c60-b6fc-647df978afd4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09776a98-8790-4117-8563-cad817a5a8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33e54ac-ae33-45c5-a45a-8ba79273d5b4",
        "cursor": {
          "ref": "22e07b73-cfb7-4926-8276-a13535fd63b8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "524d9261-463c-4873-a85a-421b6719c30f"
        },
        "item": {
          "id": "d33e54ac-ae33-45c5-a45a-8ba79273d5b4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1830b7d0-0390-40bc-aa35-e9503aa9709d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787806a2-81ff-4fb8-8e4d-488c99aa5b5e",
        "cursor": {
          "ref": "1f8d69bc-ea1e-44b8-9cfd-52c65785e6ee",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f4f932b1-3686-414c-8e40-a73514d9ae50"
        },
        "item": {
          "id": "787806a2-81ff-4fb8-8e4d-488c99aa5b5e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6e0b78f2-80ef-4838-b267-706bf8962c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7499f366-054f-4960-a02b-c58c6e9854d2",
        "cursor": {
          "ref": "e52b78c4-5c39-497e-bb16-9fb850a73e87",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9ab58634-b769-44d4-adee-2de5c3688f32"
        },
        "item": {
          "id": "7499f366-054f-4960-a02b-c58c6e9854d2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c644eb9f-59cc-489e-9a98-3ac65ec31f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfdb4cf-04d4-43d7-a546-1aede7ddfe0d",
        "cursor": {
          "ref": "49a35df3-e0bc-4609-b8a5-f0447bca2a14",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ee26485a-1392-4a01-8162-1ca5f6b67172"
        },
        "item": {
          "id": "ebfdb4cf-04d4-43d7-a546-1aede7ddfe0d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6fb4ded1-fcaa-4096-b197-9a771038352d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408d735b-bd8e-490e-80ec-e7b9871ee6a8",
        "cursor": {
          "ref": "7ea79b65-9605-4247-9a74-140fde019c23",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f7d5b60e-2959-430c-81a3-35f60661d39a"
        },
        "item": {
          "id": "408d735b-bd8e-490e-80ec-e7b9871ee6a8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3e3b3a26-91e5-40d7-bd33-22a4de6cc5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294888af-a701-4e67-890a-b20a92e56b12",
        "cursor": {
          "ref": "a7ecd9af-3ab4-436c-9e29-e692fd71dac8",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "21dadcfd-ace3-4050-8315-1419c67b7006"
        },
        "item": {
          "id": "294888af-a701-4e67-890a-b20a92e56b12",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "414e794f-14b7-40b9-93e9-5e7530bfd3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d262a6-84d8-41d5-b357-31c422bcd6e7",
        "cursor": {
          "ref": "ee47a07a-5290-4768-9453-f22b5fe8e091",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "46fba4f3-925d-4335-9086-ab4c840742d2"
        },
        "item": {
          "id": "82d262a6-84d8-41d5-b357-31c422bcd6e7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3d121d86-0958-4be6-9f00-bac69161dd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008f7eaf-4dfe-40b2-aa10-2a48ba8a03e7",
        "cursor": {
          "ref": "eb9ec195-f692-4a5b-8dd3-9a605447b39b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c2c94039-6022-4c0b-93cc-49369532de49"
        },
        "item": {
          "id": "008f7eaf-4dfe-40b2-aa10-2a48ba8a03e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1a0d56f6-ae15-48e2-9a22-6ece3639b48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40944259-4e80-487b-8319-c7449e0651da",
        "cursor": {
          "ref": "72dd0bb7-a858-4731-8399-a5f2d88f3177",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4c9c1004-45ce-4d4b-9647-ecd7f87621d5"
        },
        "item": {
          "id": "40944259-4e80-487b-8319-c7449e0651da",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "909402ec-556d-47ad-8f77-1db1a62986bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce42db37-a9d1-45c3-ba1b-a394225e9808",
        "cursor": {
          "ref": "373b5633-abe7-4162-961f-db39ceecec4d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9bfb8452-5133-4adb-9aa8-e59d911def9b"
        },
        "item": {
          "id": "ce42db37-a9d1-45c3-ba1b-a394225e9808",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3cc6dd46-d332-42c1-8be1-afdcabec7f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351a2286-9605-48d5-97e8-87f64c7d1224",
        "cursor": {
          "ref": "19a0f5e6-fc0b-4b42-a63d-c24225e440c7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0e0c0fb0-892a-4d44-99e0-04fe2912acd5"
        },
        "item": {
          "id": "351a2286-9605-48d5-97e8-87f64c7d1224",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8b6de745-2617-43e8-8e90-769bae5ddf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f66058-3ffd-431d-8e12-90e836d7a879",
        "cursor": {
          "ref": "016c3dee-e6e6-4d5b-a48b-4cad381d10f1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "13147481-d499-47f2-8a26-4f739534f224"
        },
        "item": {
          "id": "92f66058-3ffd-431d-8e12-90e836d7a879",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5a23f1ed-3594-469e-af29-2aeaf8fac9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f5d742-0848-4bd5-90dc-e8a7668c1b24",
        "cursor": {
          "ref": "5394a78e-5484-449d-b3cb-ca32cafb5b54",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4dccf72a-6327-4201-97fa-657db463ffdd"
        },
        "item": {
          "id": "92f5d742-0848-4bd5-90dc-e8a7668c1b24",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f2bd765c-2aa6-4cf5-8fae-cd2f6bde647f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad036187-bc9a-4d5d-b830-dd02b0f9661a",
        "cursor": {
          "ref": "86b59e6d-f0a9-49dc-bfe3-41bce29e6879",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "75c6a62e-9c2e-4c72-9659-be5e72bf5027"
        },
        "item": {
          "id": "ad036187-bc9a-4d5d-b830-dd02b0f9661a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fa6ef580-c9e8-4206-ac52-78289194a55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2e515a-9402-47aa-bead-80cc46805193",
        "cursor": {
          "ref": "bc3bd67f-4dba-4e82-b63a-06f7424ee4d6",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cafb0dc5-2121-46dc-9a4f-bd616ef85142"
        },
        "item": {
          "id": "3c2e515a-9402-47aa-bead-80cc46805193",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c33126fc-0ecf-40af-a542-eb6b107cf5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39d69e7-22cb-47e7-af3f-0aaa204a2c7d",
        "cursor": {
          "ref": "61394981-5df1-4227-9979-00d8671c73f7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6c54834e-9027-43ec-9d32-e559e2fcc427"
        },
        "item": {
          "id": "b39d69e7-22cb-47e7-af3f-0aaa204a2c7d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9d47c1d0-0431-4608-bd4d-5b6db570377a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcc8c76-3021-4cdd-8fbf-1a4e0c39f241",
        "cursor": {
          "ref": "eba4bd9b-128d-41ab-954a-3a94bf3a021f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3b092403-490a-4f1c-a4ca-47837a6c66ed"
        },
        "item": {
          "id": "afcc8c76-3021-4cdd-8fbf-1a4e0c39f241",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2307e371-271e-4663-8074-47ad5c9cb7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "22918f11-a7cd-4431-a65f-4ce9265504bf",
        "cursor": {
          "ref": "5ac66033-6eb6-44c7-a409-afc0d8754126",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5d2d486f-a68b-484f-87b0-40bd9c4a1eb8"
        },
        "item": {
          "id": "22918f11-a7cd-4431-a65f-4ce9265504bf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "051ba575-90ec-4305-8b63-1c871beb93d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1e8fca71-e204-449d-8139-d6c3fbea2c19",
        "cursor": {
          "ref": "d497082b-e8e7-46ea-ae30-870b94ee125d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "557f71e3-2f26-4a30-8514-3044bb34b59e"
        },
        "item": {
          "id": "1e8fca71-e204-449d-8139-d6c3fbea2c19",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c4a494a4-931d-4151-861e-b0c808a2f686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "445b9de9-fd1b-4966-adbd-19811cc8c04d",
        "cursor": {
          "ref": "df7e38de-5251-4123-bdf0-401cbe86fdf9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c6e8c162-fcdc-462a-9784-e246acec8874"
        },
        "item": {
          "id": "445b9de9-fd1b-4966-adbd-19811cc8c04d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a3d74d2-5467-4112-b94f-5176a5df264a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e5c5219c-defe-4340-9986-7977bd3d2f03",
        "cursor": {
          "ref": "02223ee4-1a82-41a2-aa81-038c2a506cac",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e4f4c74b-dd6a-48a3-8bf6-60953050245a"
        },
        "item": {
          "id": "e5c5219c-defe-4340-9986-7977bd3d2f03",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "20ee2166-c057-408c-a91e-7f6224334541",
          "status": "Created",
          "code": 201,
          "responseTime": 4262,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0168bc5f-7013-4ea0-84c4-00e1ff95cfc3",
        "cursor": {
          "ref": "99a5108c-ff84-4508-b8d1-600fb1e12a35",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9432421d-beda-4c2d-89e7-e3a612917d19"
        },
        "item": {
          "id": "0168bc5f-7013-4ea0-84c4-00e1ff95cfc3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "405bfca1-4d71-4a8b-b2ef-337c34ef50d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e019e429-245e-4532-8ac2-27b88ed2fdf1",
        "cursor": {
          "ref": "2e2e70a7-dd6e-4767-9373-06899f7e9ef8",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "77430053-a33d-4b80-8e16-7bb5dcdd3823"
        },
        "item": {
          "id": "e019e429-245e-4532-8ac2-27b88ed2fdf1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4e3279e0-0d10-44ca-bfb7-8cbf800472c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "94f971da-6dcd-4558-bfd1-40163f579056",
        "cursor": {
          "ref": "9639422e-4803-42e0-8f48-3adfbdaa7b40",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e9512df2-555d-45bf-a9f5-9ab063dd60d2"
        },
        "item": {
          "id": "94f971da-6dcd-4558-bfd1-40163f579056",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8f133ac1-c8ed-48bb-9a12-36059e307ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f85b13-e8c2-424b-b45f-3c756655b0a7",
        "cursor": {
          "ref": "5a6ce8e9-5986-4610-ad04-45d7d2adb8e0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "71cbdb22-93f3-4607-929f-6a90b8fb56ca"
        },
        "item": {
          "id": "34f85b13-e8c2-424b-b45f-3c756655b0a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03747f21-94e5-4eac-8216-74c05ce72cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1d2890-cebf-4643-9d12-8d591f66a589",
        "cursor": {
          "ref": "7b786a7d-2db2-45ce-a459-338bebc5cb0f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0320c530-4d6a-4843-a356-0753d9f301c3"
        },
        "item": {
          "id": "7f1d2890-cebf-4643-9d12-8d591f66a589",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bcde05c6-c3bf-4f3e-a4dc-414b366c2732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9255ac-4b1c-4aeb-9f2d-0f533fb87475",
        "cursor": {
          "ref": "5bf14821-39b3-47c8-ad7a-809600861f05",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8b175b15-7b86-4b56-858f-caef731436ed"
        },
        "item": {
          "id": "dd9255ac-4b1c-4aeb-9f2d-0f533fb87475",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "266f246b-6fd6-40d2-8219-428c5da8c9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e882f56-ecea-40b7-8890-ccddf7ff727f",
        "cursor": {
          "ref": "343e60f2-ea15-4a61-8005-8ec4a5f4dbb3",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b9d1f111-9243-43a0-a23e-c46ed3112e1a"
        },
        "item": {
          "id": "4e882f56-ecea-40b7-8890-ccddf7ff727f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c76a152f-5e1e-407d-96ea-8a9fceea3829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176b96d2-7b21-47c6-b032-1363a41ac669",
        "cursor": {
          "ref": "50fed88c-90f1-4510-ace6-97fa82957146",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fab7c5c1-ee92-4f57-8fe8-e476ccc580a6"
        },
        "item": {
          "id": "176b96d2-7b21-47c6-b032-1363a41ac669",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2d005438-5728-4f00-bc3d-87767867e49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744206b7-96b0-4652-90e3-58679788938d",
        "cursor": {
          "ref": "7f95b542-4721-441a-99aa-95f24cfb1c54",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c8a80c43-8559-4128-b8ea-a071b67dd292"
        },
        "item": {
          "id": "744206b7-96b0-4652-90e3-58679788938d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cd86e8e5-101d-4a8e-a34d-8a781504611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5edf64f-fd27-4ab4-be57-29731f4e5f86",
        "cursor": {
          "ref": "b0d21bbf-123b-4d54-9e16-12ca831c63fe",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1df78faa-5a48-4fe9-8ec4-8f5153c886d1"
        },
        "item": {
          "id": "c5edf64f-fd27-4ab4-be57-29731f4e5f86",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "19a27822-2650-4ea1-82ac-695d88bc585b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81071d4-bf2b-4304-b294-01af428f2895",
        "cursor": {
          "ref": "4c5500de-0b41-414c-84ba-40017eec15bc",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "25e744db-fae9-4297-95a1-f47ccbc305c2"
        },
        "item": {
          "id": "c81071d4-bf2b-4304-b294-01af428f2895",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d7ecb03c-862a-4415-be1a-ee4524cc150a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110e67ae-9726-4c09-bee1-ea00b229d381",
        "cursor": {
          "ref": "cd7234d9-e1fe-48f6-bff7-b8e04aacbbd1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cf0dc605-ba1c-4b30-b2b8-05693edc88e8"
        },
        "item": {
          "id": "110e67ae-9726-4c09-bee1-ea00b229d381",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "70f2623a-a69c-45c4-a272-bb50732bc081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6484c9-ea57-472a-8625-41454ca8d77c",
        "cursor": {
          "ref": "574335fd-9d06-4aee-934c-31585b69c929",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "884d459b-c893-4ba4-b2a0-805661bb944e"
        },
        "item": {
          "id": "9e6484c9-ea57-472a-8625-41454ca8d77c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8dbe8d73-5442-4a13-ab8a-6f77324f0b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3787c192-9373-442b-9629-64dab3337ee9",
        "cursor": {
          "ref": "d495da14-a0a9-4b31-addd-1a6065d5632d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4f8ef66b-8c57-4948-a001-9b268022309c"
        },
        "item": {
          "id": "3787c192-9373-442b-9629-64dab3337ee9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b6215f7-f6fb-4479-a4b7-9d76ea4c3dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d266cc3a-a925-4a91-bbb3-033bc9029c44",
        "cursor": {
          "ref": "f7499c5b-d6ec-483f-99d4-fa78a6b3039c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a7a33bd9-67b1-498d-af0f-6108952bcfc0"
        },
        "item": {
          "id": "d266cc3a-a925-4a91-bbb3-033bc9029c44",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9f949e6c-9bf2-4d97-8fea-b9963ed21f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f19d490-1f75-49ee-bd7d-882b56ca9f4a",
        "cursor": {
          "ref": "3fddabdb-5d15-4da0-9b54-53096c4d84e3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "351f3159-536e-45ad-adfe-01ff8b0fd53e"
        },
        "item": {
          "id": "8f19d490-1f75-49ee-bd7d-882b56ca9f4a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c5407d28-effa-4db2-89c5-393b6a8a0bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76598f8-8ab2-4bab-a137-3858e4aa56b2",
        "cursor": {
          "ref": "bc870db1-5c1d-4e8c-a5ea-133959708ba4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cba6ead1-9c12-426d-bca8-68f9e265c7fa"
        },
        "item": {
          "id": "d76598f8-8ab2-4bab-a137-3858e4aa56b2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "92a1d7fb-b344-44a9-8b31-c1aed1d9989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dd81fe-c4a7-4fdc-a113-102d279b4128",
        "cursor": {
          "ref": "73d0f271-042c-4336-8ec3-9075c08d6e44",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dc6516f6-369e-4a96-b8a5-78bc518ad0a0"
        },
        "item": {
          "id": "77dd81fe-c4a7-4fdc-a113-102d279b4128",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d84e9f1f-931d-4723-8dcf-31721d58305f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee839e23-86a8-4640-8da1-af2410d12395",
        "cursor": {
          "ref": "18899e47-b3cb-44a3-a89e-a0ba01cca19a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3a86091a-8c85-43b3-bb63-ea57429adcdd"
        },
        "item": {
          "id": "ee839e23-86a8-4640-8da1-af2410d12395",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "35ad573a-4db6-485b-9607-385240ebb382",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fca247f1-debd-4af0-84be-edfb345c7d8d",
        "cursor": {
          "ref": "c3bb83d9-f7ef-4f23-8c4e-4f73ca2d0452",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d6c2ecc8-9245-4019-bcd6-19ea42be4168"
        },
        "item": {
          "id": "fca247f1-debd-4af0-84be-edfb345c7d8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cc215d88-7de2-42eb-a9a8-50bdd4481073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3af5a29-b8f7-4302-bb5c-5350810e6e88",
        "cursor": {
          "ref": "61687354-37d8-4261-babd-4174f4b9c46b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7527fe7e-f32b-464d-b623-6d6cb4ebf1ce"
        },
        "item": {
          "id": "b3af5a29-b8f7-4302-bb5c-5350810e6e88",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "33654335-1985-4f28-839a-ad9dab69da32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626cc4b3-1e97-49ba-8d70-ff2ad9d093be",
        "cursor": {
          "ref": "a5d3327d-bdbc-4d66-bb77-6a20638f6ced",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5d0ec9f3-78b5-4ead-84a6-0238bae1cd30"
        },
        "item": {
          "id": "626cc4b3-1e97-49ba-8d70-ff2ad9d093be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bba53882-1efe-4193-b1a0-4f5944870969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75aacee-de49-4ba2-9ccc-ff93a6745338",
        "cursor": {
          "ref": "7b097fd5-c042-4802-ac5a-c9619bae37b8",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6432f690-7215-4c25-8888-c2ed542e0956"
        },
        "item": {
          "id": "b75aacee-de49-4ba2-9ccc-ff93a6745338",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e971981a-9f77-448e-be8b-46557393b1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4daf6d-7eb7-4904-b14d-2d807a24609d",
        "cursor": {
          "ref": "b31a9a12-cd9b-486d-bb6d-a04512770c94",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6ab776fe-679f-4304-9ee6-f4c211a1bd02"
        },
        "item": {
          "id": "3d4daf6d-7eb7-4904-b14d-2d807a24609d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a7edf78-4dd0-4127-8195-a4f84c1bf6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66992c7-1e4a-42b5-969a-53ea545b1fc8",
        "cursor": {
          "ref": "89569529-f372-44b5-b62e-1e26a4cf644a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "58cfa3bd-75e4-4be5-a4bc-e26615cb3e5a"
        },
        "item": {
          "id": "e66992c7-1e4a-42b5-969a-53ea545b1fc8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "810130b0-df26-4d0a-945f-1ef9b878dd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba17a8a-a961-46ba-93e4-3a5d52891a17",
        "cursor": {
          "ref": "fe6000d0-e4db-4ff7-be19-d882077569ed",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "91b607de-61f9-42ae-b374-77f4bfc97a24"
        },
        "item": {
          "id": "1ba17a8a-a961-46ba-93e4-3a5d52891a17",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cd4ca73e-6db2-4920-83bb-1a4a961117e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51977fb-f517-482d-81d2-92619636da1c",
        "cursor": {
          "ref": "7d1bda74-b692-4359-a70d-d585711817c8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d88375d0-cb05-46d6-9b2d-9cd566e1e6e6"
        },
        "item": {
          "id": "f51977fb-f517-482d-81d2-92619636da1c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "646790bb-a901-412e-91bc-673de5a794cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0e96e942-65e2-4e8e-a92d-016ebdec8f9a",
        "cursor": {
          "ref": "0be0a345-f606-4d75-9b97-c6f51a8867d9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b19c17a0-0662-4a56-b708-c226fa9af641"
        },
        "item": {
          "id": "0e96e942-65e2-4e8e-a92d-016ebdec8f9a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71456d64-97da-40a2-a3c7-d5287d90175a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f64d926-e999-4fe1-bb5c-af0badd305a6",
        "cursor": {
          "ref": "95ecc8a4-7b48-455d-82c1-3e93a557a953",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ff61b753-f5dd-4917-86b4-132d95381c02"
        },
        "item": {
          "id": "6f64d926-e999-4fe1-bb5c-af0badd305a6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8ecf442-d76d-4eb3-90f9-c78930f3ab2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88c511d-52f7-4927-a642-6c04bf07ea23",
        "cursor": {
          "ref": "811f36d2-07f7-4bfd-8f98-60c78b2d04ce",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f20ac982-0b83-4e40-a70b-59aae73f101e"
        },
        "item": {
          "id": "c88c511d-52f7-4927-a642-6c04bf07ea23",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "46c61490-9966-4a42-9056-abb7b496f5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff46d19-776e-4fb3-89f3-8496f078a65c",
        "cursor": {
          "ref": "e2167e7e-35b6-4718-8232-84dbcc4a6bb1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1821a6b0-c0f6-41a5-b42f-2df5984ae7d5"
        },
        "item": {
          "id": "5ff46d19-776e-4fb3-89f3-8496f078a65c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4881c47-163f-4d97-9869-a651489d4d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239c800f-f6e9-4a62-8e24-78b43b697745",
        "cursor": {
          "ref": "5d559952-2570-43e5-b654-4d75881a267d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c25810c0-8319-496b-a2fe-ef3b2900c6bb"
        },
        "item": {
          "id": "239c800f-f6e9-4a62-8e24-78b43b697745",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9075b790-dfda-4096-a341-bfadea257bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b498b7-c8ba-45b0-9d2d-27dba40558cc",
        "cursor": {
          "ref": "f685f347-1da8-4cd5-beee-100ba9e124de",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8cd13b25-5363-410d-92bf-95c92be5eb76"
        },
        "item": {
          "id": "97b498b7-c8ba-45b0-9d2d-27dba40558cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c239f97-b584-40d9-abe5-a7bfb41f8cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3967a6-1bde-47c6-be7d-aafe0e35df2b",
        "cursor": {
          "ref": "cced86ef-8110-491b-aac0-0b7018e46b06",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7060a130-8cf3-4360-abf0-80848f2339bf"
        },
        "item": {
          "id": "dd3967a6-1bde-47c6-be7d-aafe0e35df2b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "afb454ce-c0fd-43d4-8130-7810d3d3b7a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "7a7a68c4-b39a-48b8-a845-6c7f87a407d8",
        "cursor": {
          "ref": "2900d881-5ccc-46e7-94bc-14df88ea2df4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4501cb40-d678-4cb8-b69c-804a766ed7e4"
        },
        "item": {
          "id": "7a7a68c4-b39a-48b8-a845-6c7f87a407d8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "22ad9869-3d71-451a-8105-9fb7cb34382c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef47105c-a076-4a9c-b8f8-226cab8aa050",
        "cursor": {
          "ref": "e8fa2442-4c02-47a2-96ca-0b4644ffa8ee",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2ecbd1a9-836e-4a21-8d2d-5eb630334c8b"
        },
        "item": {
          "id": "ef47105c-a076-4a9c-b8f8-226cab8aa050",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4a3bd0cf-8e7c-40a3-8f88-103b3a0f1463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd6e85e-2e9d-4b04-96b2-5a38d2f50915",
        "cursor": {
          "ref": "e9f6d17b-97ff-4366-bdd3-066c96d5e499",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "52ec7d6e-e145-4219-b6b9-1bd1f2802ffb"
        },
        "item": {
          "id": "7bd6e85e-2e9d-4b04-96b2-5a38d2f50915",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f1e1ae2f-5298-489e-8dbe-845b97405afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc076354-1091-4d2b-9e02-99b5a1e68da5",
        "cursor": {
          "ref": "b15b3b1d-bc91-48a4-8fed-71aa67d41170",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "17f7c2b8-c151-4335-a70c-09f900146481"
        },
        "item": {
          "id": "bc076354-1091-4d2b-9e02-99b5a1e68da5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b493deaa-7629-4897-95c1-ede7296af5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060f61f7-498d-430d-b805-539f2ea4ca1e",
        "cursor": {
          "ref": "c650ac02-3d33-400c-a332-8064bc8bd862",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "059f98d6-4b85-47a9-9990-832d60924808"
        },
        "item": {
          "id": "060f61f7-498d-430d-b805-539f2ea4ca1e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d55b7a12-ea73-4837-9ded-68e04f65b945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2821d93-05db-4567-a663-2db3019b33c5",
        "cursor": {
          "ref": "e5551d33-557a-4e96-a198-cba7b0a97888",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "97b97323-c1b9-47f5-af19-f35c538c9f12"
        },
        "item": {
          "id": "c2821d93-05db-4567-a663-2db3019b33c5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "986f5824-8e18-4f1c-8074-1e44833abd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce5c463-a960-4212-a5d5-e1e0ba562462",
        "cursor": {
          "ref": "1db52993-54d4-49b5-8412-4525f860bd62",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "73cc19d4-bb34-4ac4-925b-c100b67ff26f"
        },
        "item": {
          "id": "dce5c463-a960-4212-a5d5-e1e0ba562462",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "82242b80-7ac2-4b61-aaf1-d9660729d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6470a1d6-ec9e-4157-a4d4-c7b29b69e493",
        "cursor": {
          "ref": "73089d13-8a9e-44f5-8eb5-a7473fe35196",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9d1366c4-41ca-4926-aaf8-5e708fa46f0e"
        },
        "item": {
          "id": "6470a1d6-ec9e-4157-a4d4-c7b29b69e493",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3591366b-51b0-4c50-8095-f2a3194c8e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1008ba58-51fe-4c37-873c-b9d6aa3bbc30",
        "cursor": {
          "ref": "aacc500d-fde3-4bf5-8422-0124837a4ed0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0644db40-1e43-4efd-925d-785ea58c2226"
        },
        "item": {
          "id": "1008ba58-51fe-4c37-873c-b9d6aa3bbc30",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d4766752-e1c0-49db-a498-1690efc2d721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cfe909-9744-464c-abe7-eb07d58c807f",
        "cursor": {
          "ref": "403fac54-8db0-4597-97fc-4c8b67afc3f7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "682bb334-8378-472c-8ccb-1527c7cc8dea"
        },
        "item": {
          "id": "66cfe909-9744-464c-abe7-eb07d58c807f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "40ac2d12-4e83-44e2-b725-193f7c819eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6e0f32-7dd6-464d-b9a6-8a3c4b8ed432",
        "cursor": {
          "ref": "c90de07d-aaf6-44d5-b205-5ca5318458af",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "20b38de2-18ba-4a99-94a4-036409708d59"
        },
        "item": {
          "id": "5b6e0f32-7dd6-464d-b9a6-8a3c4b8ed432",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "be2acedf-3c78-4f86-b8cf-11d9b9738173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2a64b2-dddc-4748-9453-a411f70c2cb4",
        "cursor": {
          "ref": "deda6143-b55d-4ca9-901c-622fb103739d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bddfb105-d516-4e03-b084-b4eccd004488"
        },
        "item": {
          "id": "3c2a64b2-dddc-4748-9453-a411f70c2cb4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d562ce7e-bcf1-4b13-8694-bca5d5aa935a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c76861-7919-45d3-a375-af77eedfda38",
        "cursor": {
          "ref": "2f866cfa-5dcf-4034-9374-22c59743827d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "067b9fe2-971d-4124-a0ec-a13cf3f0b975"
        },
        "item": {
          "id": "72c76861-7919-45d3-a375-af77eedfda38",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b7a78f65-9745-4849-8808-320f0223fc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9df1f0-53c0-47c3-93d6-df3711769d5a",
        "cursor": {
          "ref": "ddfff9c6-4925-42e3-8f63-710051152d7d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b1b686de-075e-4c84-80e7-0c4486e9aff6"
        },
        "item": {
          "id": "1d9df1f0-53c0-47c3-93d6-df3711769d5a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b555088f-cc28-48f4-9f63-d7343802ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee16234a-f817-4d2d-a59b-8e944c62f47f",
        "cursor": {
          "ref": "892ff843-76e1-4abc-8999-89fcb2e745a5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "abfc2671-67f7-4a0f-8826-40acfdc0a13b"
        },
        "item": {
          "id": "ee16234a-f817-4d2d-a59b-8e944c62f47f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cd76cefc-cac7-4874-9e74-14f270587e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a6d645-38e3-4728-a08c-0949e0811b40",
        "cursor": {
          "ref": "e0740ff2-cab7-4ff9-8838-5277b3df3b3b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dd3b3a41-8be5-4574-a204-73a7aba9dae2"
        },
        "item": {
          "id": "98a6d645-38e3-4728-a08c-0949e0811b40",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a8e0baf1-0005-47a2-bc1d-4130831d2bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c519b5c-3c36-46b1-82a6-daee48fadfb2",
        "cursor": {
          "ref": "fa17ec25-c6e3-43b9-9b25-b18e0d0b9339",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "684601f5-2685-4087-b2d2-c0d401b60ee4"
        },
        "item": {
          "id": "7c519b5c-3c36-46b1-82a6-daee48fadfb2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7aec5d2a-d48d-4d75-95f8-01dbd5e9a756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cb0157-e553-4ab6-8cea-9e73ad696ba2",
        "cursor": {
          "ref": "64a491a8-fdf6-44a2-897c-ae9811390d78",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "734504df-f45d-48ce-908c-50218103b0ff"
        },
        "item": {
          "id": "72cb0157-e553-4ab6-8cea-9e73ad696ba2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be77ad46-4aa3-4670-a70c-48409a2b22d6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "0151901f-0d48-44d8-b259-2094218eed0c",
        "cursor": {
          "ref": "df48e7a2-dbec-4290-83f0-bd3e2d75f73c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e8bb4979-7480-4211-91de-382bc75fccf2"
        },
        "item": {
          "id": "0151901f-0d48-44d8-b259-2094218eed0c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4ed2d57-9d74-479d-a326-44e8558148a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea586421-3db2-4ba1-837f-6b310df34e6e",
        "cursor": {
          "ref": "84562837-0ff9-418c-aef5-17a2a3255e5e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1ef120ab-c25d-457f-8252-eb78111b002a"
        },
        "item": {
          "id": "ea586421-3db2-4ba1-837f-6b310df34e6e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b9d44788-7b90-4715-bf13-f3ab44e16a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac0ceb8-7e9e-45e5-9b6f-b0920549d8a2",
        "cursor": {
          "ref": "def44a27-e1d5-4285-ba21-d2346506e1e6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "409fa237-e63e-4c1a-88b4-e0b2b6ec15d9"
        },
        "item": {
          "id": "5ac0ceb8-7e9e-45e5-9b6f-b0920549d8a2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "532d16ff-4daf-4793-8752-61850a6c48e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8e4a55-8ed0-4364-b482-e9230fd9e5ab",
        "cursor": {
          "ref": "c1934c9e-67ea-41da-8c62-c48ad3b862a9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c763dfd7-71f7-48df-a89a-1d1042c4f9ad"
        },
        "item": {
          "id": "1f8e4a55-8ed0-4364-b482-e9230fd9e5ab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4b4cacbc-27f6-47a5-83f8-2e0bd3d5e989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d33c6c4-756b-4b45-80e7-3a21f87c9e4c",
        "cursor": {
          "ref": "188231ad-8da1-4c59-89d4-a22076e2f794",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "96cee963-bd64-41a1-9589-ebdc217dc009"
        },
        "item": {
          "id": "9d33c6c4-756b-4b45-80e7-3a21f87c9e4c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2e32262a-2c28-4592-9115-5f6954fb58cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe8d294-f440-4814-810a-05ada2a2ca3c",
        "cursor": {
          "ref": "9ad5741b-c502-4290-8372-bd08b21f3d32",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4a89066f-5225-452c-945c-d703ebe9ac7b"
        },
        "item": {
          "id": "afe8d294-f440-4814-810a-05ada2a2ca3c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ca32980c-0237-45d2-bde4-3bf09d612f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd49a7e1-847e-4d94-8e99-8a6bc49164e6",
        "cursor": {
          "ref": "2acbe609-1114-4cae-8172-89236a30a937",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "12f87dfd-3280-4fff-a172-b98952c3355f"
        },
        "item": {
          "id": "fd49a7e1-847e-4d94-8e99-8a6bc49164e6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6b0f6f05-f0b9-484b-be44-0ba0ff6d84e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d287c500-1956-4046-b31a-90697e7431d1",
        "cursor": {
          "ref": "f9e72fe5-d44f-4b4b-9b0e-d73c592982c5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "00c89a50-e0aa-439f-8f03-99215bd0b801"
        },
        "item": {
          "id": "d287c500-1956-4046-b31a-90697e7431d1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0aba383c-fd7e-4c49-a9b9-33331e0ea315",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "f76207ae-791a-4dc4-88a7-04c0bbaf08e6",
        "cursor": {
          "ref": "494355b0-aee1-4ed8-8da8-827e1016d687",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8a00f759-c00a-4956-9828-81b60f912270"
        },
        "item": {
          "id": "f76207ae-791a-4dc4-88a7-04c0bbaf08e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "af6a3011-c236-4a2b-9fc3-c853b277bdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a763612-92f2-4785-98f9-9fefff266ddf",
        "cursor": {
          "ref": "cfde3374-476b-47bf-8856-350ae8d615d9",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2d420bea-2ef5-497b-ac46-c363cadbe49b"
        },
        "item": {
          "id": "6a763612-92f2-4785-98f9-9fefff266ddf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "19137443-9854-4281-aa21-8aae92087c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc22a6c8-f91e-431d-ad89-d367ab969365",
        "cursor": {
          "ref": "1e0287b3-9132-49b5-a0b3-dc50c5be841f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ec1d7db6-1976-4fd9-8c64-4f3f12552c56"
        },
        "item": {
          "id": "fc22a6c8-f91e-431d-ad89-d367ab969365",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b44b7145-8b55-4cc6-9700-5e8990de0aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c37287-4d0a-4768-8b32-ec1c974bbe2a",
        "cursor": {
          "ref": "65d1561c-ad45-4929-b4d9-3486d5e38bd6",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "278631bc-741d-4bd5-9aef-bceb9e248b59"
        },
        "item": {
          "id": "e5c37287-4d0a-4768-8b32-ec1c974bbe2a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1820bbf4-0ad5-449e-86f1-8f6645e1cc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae8fa66-f1e3-442d-86f1-4af245a39104",
        "cursor": {
          "ref": "a0182195-89fc-4f8d-8a5b-b190628ffc95",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5fbc1e06-3f55-40e7-a5bf-7291b81fc9c5"
        },
        "item": {
          "id": "dae8fa66-f1e3-442d-86f1-4af245a39104",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "922775f5-f88a-4336-a40d-a1a8c7b00be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa533678-e069-4080-b5e8-25b750e6eb5b",
        "cursor": {
          "ref": "ba4a7367-3bf9-477e-8fc4-d013d1807ab5",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4fd7894f-1359-43ac-a5bb-31a4f7ae620e"
        },
        "item": {
          "id": "aa533678-e069-4080-b5e8-25b750e6eb5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1934743a-fcf3-400e-9d4f-3090865c4881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf3031d-1372-4ba5-9a5b-314106ec89f9",
        "cursor": {
          "ref": "42a3dd29-f1e7-4d66-8e3f-4797423ccf91",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b920202a-1e10-48e7-b472-2fdb6a9d6b4e"
        },
        "item": {
          "id": "bdf3031d-1372-4ba5-9a5b-314106ec89f9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1f27d278-2bdb-4bba-8439-0f572d437967",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "e88b1245-4a53-4da0-8361-83e8e2855c0f",
        "cursor": {
          "ref": "1dc2d92c-0863-4475-8911-752dc270dfaa",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "67008e46-a3ac-4939-b83a-fa5eebc6be6a"
        },
        "item": {
          "id": "e88b1245-4a53-4da0-8361-83e8e2855c0f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0738bbd7-bc1a-42ab-97e3-813d687c8c9d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "0af34ddb-9da5-4bba-af6a-7cf7ea87761c",
        "cursor": {
          "ref": "d32705b0-1789-45d8-a5c2-b05460cb69ae",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9ee07a6f-971c-4169-9e07-542d1adeec2f"
        },
        "item": {
          "id": "0af34ddb-9da5-4bba-af6a-7cf7ea87761c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bb502437-30be-4595-ba39-df0bcc7c8cd5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "cec267a4-4fd4-491f-936a-42e8e443ff53",
        "cursor": {
          "ref": "746fca94-12b2-4a14-a173-c2b5a12f012a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6cc6b1e0-e25b-4d9f-83cd-b3d096cbe0a7"
        },
        "item": {
          "id": "cec267a4-4fd4-491f-936a-42e8e443ff53",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a53ae476-14b2-43cb-93b3-f0efbaa74de3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "b01a6d78-c3ee-4ab8-9454-85e5c4079026",
        "cursor": {
          "ref": "2af40db4-4456-4517-876e-54395096e7c0",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1ee696ca-53d5-43ee-95ce-7724dc93a24e"
        },
        "item": {
          "id": "b01a6d78-c3ee-4ab8-9454-85e5c4079026",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d168513f-5e4a-481a-b1bc-f0e74fd7315e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "26b69138-9c03-4ea0-aa93-2d42d2372422",
        "cursor": {
          "ref": "eef09c19-fc38-40fa-be5d-ba33af5bd078",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2a6d3f2c-33bf-47f2-849c-3d8702759e52"
        },
        "item": {
          "id": "26b69138-9c03-4ea0-aa93-2d42d2372422",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2814e9f5-307f-41ec-8e3b-577d2e72ae92",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "2fe44ceb-5386-4ad2-9d25-152d29216253",
        "cursor": {
          "ref": "bb3162e0-3285-4e08-9a4e-7c8fe4e2909f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ce3e68d5-7946-44f1-83dd-f7617b795bb0"
        },
        "item": {
          "id": "2fe44ceb-5386-4ad2-9d25-152d29216253",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5acaa0ad-09e6-49ab-9eae-89f696954638",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0b13c4-12ea-44a2-9c77-ee7a0e391590",
        "cursor": {
          "ref": "1d63ff32-7418-4ba0-a284-e76e20e712ed",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a1691e1d-39c2-4137-b973-fdaf4215f850"
        },
        "item": {
          "id": "6e0b13c4-12ea-44a2-9c77-ee7a0e391590",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b4b0926c-472c-43e3-b6db-10fd785034e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227eefc6-2be3-463b-ba84-c273f2fa2b67",
        "cursor": {
          "ref": "a7395e25-3077-4536-a122-07b76f67aa4f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2bcce915-6392-4b12-acff-081294b007db"
        },
        "item": {
          "id": "227eefc6-2be3-463b-ba84-c273f2fa2b67",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "70d948c5-0342-47ea-a713-ffc2dd8110cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966bcd8c-3593-4c14-88e6-1a64f72d18ee",
        "cursor": {
          "ref": "2f531fc0-cd3a-4ff1-ae6d-e4e279aa34b1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fc81f8dd-2019-420c-a0c0-6dc9eeb1288f"
        },
        "item": {
          "id": "966bcd8c-3593-4c14-88e6-1a64f72d18ee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8d0f1d2d-8595-44c5-9f1f-da07e45abf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cac202-a19b-448e-9975-2c2f5fa8e42a",
        "cursor": {
          "ref": "4e2e48c7-f92a-4b19-854c-cf2b521be005",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d767024-0510-4669-b96b-47b77e384c8a"
        },
        "item": {
          "id": "48cac202-a19b-448e-9975-2c2f5fa8e42a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "07de9122-e968-4306-bb29-488b80cce33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b201434-f8af-4373-b079-008a4ed7b038",
        "cursor": {
          "ref": "e91628f2-5f29-4d1c-a65b-14b34520662f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fc13100f-08db-4b2c-97bc-4bfcfd2d9e0e"
        },
        "item": {
          "id": "8b201434-f8af-4373-b079-008a4ed7b038",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dd731e7e-3c39-4a7c-893e-ab0194b41d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976dcb50-a71e-492c-ae37-585eb3a1d39c",
        "cursor": {
          "ref": "2d28c54e-c1a3-4da5-be0d-d984c3fb8f42",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ede5471f-10c2-43ec-8f63-b2d75444b40c"
        },
        "item": {
          "id": "976dcb50-a71e-492c-ae37-585eb3a1d39c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3625ccf8-85d2-4970-8351-d96a0704040f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de958c3d-709e-4222-8c2e-4e8ece82f7be",
        "cursor": {
          "ref": "07880192-a345-4a57-8288-10edbc3eaf73",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "52f2e334-b495-4f69-89a6-3d8bdead1894"
        },
        "item": {
          "id": "de958c3d-709e-4222-8c2e-4e8ece82f7be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e79f0348-a337-4e13-9b82-9308eff49a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c808337b-30cd-4b78-9c3d-7c0912225990",
        "cursor": {
          "ref": "c23e1418-98d3-4f6e-8ea7-251d15d75c4b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c6665d15-b152-4539-ace6-5b151ddf546d"
        },
        "item": {
          "id": "c808337b-30cd-4b78-9c3d-7c0912225990",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "47a5f5bf-c0e4-440e-b79b-0f44fe244c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf3126-4756-4542-b3fd-c0af5cc08bd7",
        "cursor": {
          "ref": "36df2c5f-7c05-4ac5-8211-a6284df105d5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f899a2a1-c300-48df-bee6-ac9c2fabb8e5"
        },
        "item": {
          "id": "40bf3126-4756-4542-b3fd-c0af5cc08bd7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8b5b9259-95b6-4295-a2b2-0c68c3408ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea114762-ec7e-4a00-b478-12260947cb11",
        "cursor": {
          "ref": "7599f014-d0ff-406a-83a6-e271e2ad5f57",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f26ae377-dd39-420f-8460-08f64e4d4160"
        },
        "item": {
          "id": "ea114762-ec7e-4a00-b478-12260947cb11",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "59726ca3-cab8-4226-91c1-becd327182fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73033f7b-fbee-4297-bd21-fc0ef5192591",
        "cursor": {
          "ref": "ffbc588d-eb90-45a4-bd0f-4fd54d73ea32",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "88fd6cce-1051-49cd-82d0-6e007b045fa9"
        },
        "item": {
          "id": "73033f7b-fbee-4297-bd21-fc0ef5192591",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "05baf696-95ac-4f6f-9d88-3b9713a7ca98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dd8712-3951-4fe3-b90f-9fc44ad057b8",
        "cursor": {
          "ref": "579bc28c-203e-4197-8100-c794a1f79241",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "31b0a46e-edef-44bc-bd8e-e0c010ecbc23"
        },
        "item": {
          "id": "07dd8712-3951-4fe3-b90f-9fc44ad057b8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2c328c92-5f76-4af9-b5e2-fc88d8e663a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f5c341-c9d4-44f8-9b27-8a3269d56d37",
        "cursor": {
          "ref": "00328c67-234f-4ba6-bcce-94a8f94e5416",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "385291c3-220d-4287-a3fc-33edfc0b7193"
        },
        "item": {
          "id": "53f5c341-c9d4-44f8-9b27-8a3269d56d37",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "290edf01-4378-4e5c-8c75-2284d2ff4d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddadd94-0988-448d-b707-42ae0e75b32c",
        "cursor": {
          "ref": "0a8000d9-c668-40e2-9969-9ddacb89b233",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "69ded5a8-e8bf-4e34-8cf7-701cbd2b936a"
        },
        "item": {
          "id": "3ddadd94-0988-448d-b707-42ae0e75b32c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c6321343-9e68-4b3e-b5cb-d78048e2ff62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcb78a4-c6c3-4a70-8da1-baa9a670800d",
        "cursor": {
          "ref": "8723c842-b1df-4538-8b20-7db38fd92927",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c793f9e3-f4e2-4358-ab76-8f0bbd4d74d5"
        },
        "item": {
          "id": "0fcb78a4-c6c3-4a70-8da1-baa9a670800d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c3c501f6-ee6f-4711-ae5a-f80e1716a0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa27dc3-b1ec-4ae4-b1cf-08208e02a6c6",
        "cursor": {
          "ref": "3e767ed6-0ac4-4266-8c2f-065a3da1e610",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "37dd5ac6-1edc-4ea7-a58b-6baeb05e2318"
        },
        "item": {
          "id": "2aa27dc3-b1ec-4ae4-b1cf-08208e02a6c6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "034d4b14-238a-4a56-8a8e-45b0aea4f264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9703cbf-3d69-412e-8a2a-eee67474a13a",
        "cursor": {
          "ref": "3410316b-d99e-4d6a-9dcb-a7392ccb79ad",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "73d61ee2-5d22-4e55-af34-49b0de52795c"
        },
        "item": {
          "id": "e9703cbf-3d69-412e-8a2a-eee67474a13a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "759e94f1-002c-44ad-8524-b996c9cc1f19",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "c54a4a8a-1ff6-4092-877f-4c66da3d9fe0",
        "cursor": {
          "ref": "8e5275a6-ed7a-4c06-8a43-e5a9655431ea",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bed33691-0abf-47fe-bc02-408108dbc3dd"
        },
        "item": {
          "id": "c54a4a8a-1ff6-4092-877f-4c66da3d9fe0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "912322b9-105d-4baa-af9d-3d0b41bf0ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c905ba80-db2a-4ddb-a9eb-7560d0736f10",
        "cursor": {
          "ref": "fa472c63-407a-4545-9c90-cb4679ba88f3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4145ca7f-96f4-4b50-898b-6dc8d84d7856"
        },
        "item": {
          "id": "c905ba80-db2a-4ddb-a9eb-7560d0736f10",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f29dfd8c-4db4-4f53-bf92-e3900198bb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f511df0e-29c6-4363-9d5d-f1684b7c801d",
        "cursor": {
          "ref": "ad483b52-12e0-4d73-8dad-9da0f6ae70c3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d23d578d-5417-4a58-a5bf-7e29a74fbf74"
        },
        "item": {
          "id": "f511df0e-29c6-4363-9d5d-f1684b7c801d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "caa0a2ab-6e18-48c0-b29e-662b241735c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c061fa-aec5-42fb-b590-ca91394da6aa",
        "cursor": {
          "ref": "a2892211-7ba1-461d-8aba-1c6f871775e8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7a1f4488-accc-4118-9a95-831208a82a1e"
        },
        "item": {
          "id": "b3c061fa-aec5-42fb-b590-ca91394da6aa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "51814bd8-91e5-4cc9-b73c-3c28b4ddd849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35a1c2c-0425-42ad-8ca7-a285a795ea28",
        "cursor": {
          "ref": "d2f1127d-25de-4093-96f0-3537a578230c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "07a24962-eb16-4590-b2e5-3ef5dd0e5880"
        },
        "item": {
          "id": "c35a1c2c-0425-42ad-8ca7-a285a795ea28",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8ef35184-aa7d-4bec-9cac-7200898b62fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fe3afd-f3a1-4787-8d02-e68386d22b5c",
        "cursor": {
          "ref": "de2dc3aa-23f3-49d0-af60-1325bb5aaaca",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "98b77f9d-33dd-449b-b05d-3a552093f29c"
        },
        "item": {
          "id": "40fe3afd-f3a1-4787-8d02-e68386d22b5c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b3cd9419-1ce0-4beb-a9da-651462ac5b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3287ed5b-9259-4118-8749-afa3897832dd",
        "cursor": {
          "ref": "89995f7e-19bf-4eb1-9ee7-1ca0978bf15e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9eaea3bd-38bf-4835-8b4a-77a6b58d55a9"
        },
        "item": {
          "id": "3287ed5b-9259-4118-8749-afa3897832dd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "de8feb02-9faa-4dd2-9084-91f4b3b60fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23ec9e1-ac25-4ce1-967f-e8dd96cf9688",
        "cursor": {
          "ref": "7356dda4-002c-4801-ac29-29ede36958bd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3f64d672-5c86-491a-a531-291615df4cd3"
        },
        "item": {
          "id": "d23ec9e1-ac25-4ce1-967f-e8dd96cf9688",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4335a46c-bc83-4dd6-a3ed-626258482e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0690e797-6fce-4f02-b7b9-e4b288ffc7ff",
        "cursor": {
          "ref": "7d9aa513-f1b4-41f7-8cca-b2f7faf6b638",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a3c3cc13-bc77-493c-b5b3-778aa1a6fece"
        },
        "item": {
          "id": "0690e797-6fce-4f02-b7b9-e4b288ffc7ff",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "09981ae3-0ae6-4f2a-9dca-d9c2d7885f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bf1c95-4c15-4d13-b788-664d8073685d",
        "cursor": {
          "ref": "63c3d58b-ea07-49bc-ad2d-aebe98477411",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2ea4e5b1-787c-40db-8424-edb4dccc0cb2"
        },
        "item": {
          "id": "13bf1c95-4c15-4d13-b788-664d8073685d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4d469bee-fa55-4efb-9f62-b01c7b0fa3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f16c5c6-2509-42d7-9f15-8dec9755c169",
        "cursor": {
          "ref": "4f25da09-5f72-499c-b867-abc9f0cef565",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9011038d-781c-4042-adbf-423fcb2a075b"
        },
        "item": {
          "id": "1f16c5c6-2509-42d7-9f15-8dec9755c169",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "87960ac2-ca0d-45cb-a62f-605c4995e4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e42bce-c5a4-4670-ab8b-13661df3dd32",
        "cursor": {
          "ref": "a9c84ed7-6f31-4681-89fb-f6ad7c3a088b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "aec2cdc2-7890-4588-8d41-372f84f06afa"
        },
        "item": {
          "id": "79e42bce-c5a4-4670-ab8b-13661df3dd32",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a818a060-2b80-4d39-bb9a-bbb1c7f25e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a103562e-79f5-4213-b6a9-b9b3c7f4597d",
        "cursor": {
          "ref": "6ff0cb0b-767e-43cd-96dc-5f88947c1297",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "26671fab-eba0-431e-a337-0c722a602358"
        },
        "item": {
          "id": "a103562e-79f5-4213-b6a9-b9b3c7f4597d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6bf7a3ee-780d-4177-b59f-28704cf84835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b0c080-d2a0-4b37-979e-024fb58e0ee5",
        "cursor": {
          "ref": "67da9597-10e5-4f90-ac5a-4995be9df225",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7b774cd3-e0bf-490a-9fd1-0544903f5ea8"
        },
        "item": {
          "id": "33b0c080-d2a0-4b37-979e-024fb58e0ee5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9aaab333-7d11-4c90-83e0-87a495d92bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e6e274-f17f-4237-8ab8-c0f9266468d0",
        "cursor": {
          "ref": "9c85b07b-f58e-43c7-9105-c96fc2893028",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5c26f329-6a7e-43ef-ab55-b43e8796ef04"
        },
        "item": {
          "id": "b4e6e274-f17f-4237-8ab8-c0f9266468d0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a0387077-50d1-473d-8184-0374afd7e66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08b0ed1-8524-4c88-a709-884d0ae77532",
        "cursor": {
          "ref": "9632b35c-9808-46ae-8919-db5796ab7f4d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "22adf377-b63f-4584-b069-f936b1a88956"
        },
        "item": {
          "id": "c08b0ed1-8524-4c88-a709-884d0ae77532",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a442bb1b-b065-44c5-bdcb-e139c4ed90f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f84a01-f56d-4235-9110-649f48cd45a1",
        "cursor": {
          "ref": "5c75337a-df85-41b5-ad44-280879bf5330",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "593b9100-6443-4a60-a70f-81f5c6428827"
        },
        "item": {
          "id": "e7f84a01-f56d-4235-9110-649f48cd45a1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5bb56eae-21dd-4344-9cb9-a0d32f6723c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6574bb8e-a909-46c3-b0e0-4d309fd339a2",
        "cursor": {
          "ref": "96574893-437a-48a6-8979-2d23700f8975",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a58abef1-a12f-44b8-ae55-1732926bcb8f"
        },
        "item": {
          "id": "6574bb8e-a909-46c3-b0e0-4d309fd339a2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "446fed00-a668-4e3e-ad61-c2eb14fe2cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abf3241-9afa-4a86-97cf-c789592cf64f",
        "cursor": {
          "ref": "f79874f7-51bf-48c1-befb-9aa8fc9d8a21",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3022f3ed-6af7-4411-b7e8-903ab6b10533"
        },
        "item": {
          "id": "8abf3241-9afa-4a86-97cf-c789592cf64f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b9c8231d-d0b0-4bbb-86d8-2a6bd7039031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a074abc8-5943-4af0-93e4-a5ab9600d332",
        "cursor": {
          "ref": "3e0f4c4a-ce2c-4052-a772-8325a6e63ba1",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c5762b38-c995-417d-a5f2-2cd0a60f7f05"
        },
        "item": {
          "id": "a074abc8-5943-4af0-93e4-a5ab9600d332",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "22760eb6-e56a-43c9-8765-846c3458c4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfb4904-f07d-499b-94a4-35a4755a49d5",
        "cursor": {
          "ref": "64b4fd88-d142-49bb-932a-eb392aba6cb8",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "59aba688-7318-43aa-a76d-10d6d210bde1"
        },
        "item": {
          "id": "1bfb4904-f07d-499b-94a4-35a4755a49d5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1b8b48d5-adcd-450f-bdca-80f9844d4915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d46b5d-606c-4326-a662-14542168ea5a",
        "cursor": {
          "ref": "5799af01-7c39-49fe-8efa-7ef0fabde319",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "785832f2-1dd3-40c8-93b9-632c7aff3b2d"
        },
        "item": {
          "id": "95d46b5d-606c-4326-a662-14542168ea5a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cf584ac5-9b29-4d09-920e-72e1d6da6ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b98e9b-ddc6-4ff0-9c8c-6bdaed53822c",
        "cursor": {
          "ref": "27c198ef-a6c8-4183-8965-ea65e99cfd90",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c27751c8-f6b5-4155-86b8-d3857c898aa1"
        },
        "item": {
          "id": "b7b98e9b-ddc6-4ff0-9c8c-6bdaed53822c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a0140911-a45f-49d8-9111-450ce51afa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca529a1-96f8-405e-97ad-fcc27faa844e",
        "cursor": {
          "ref": "a28c4adc-d762-4bb9-abed-92fd3dbae218",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "91bd7fbf-d818-436d-a8d8-cf9ced6032f6"
        },
        "item": {
          "id": "1ca529a1-96f8-405e-97ad-fcc27faa844e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bf76fd36-f9ed-4d3f-9fed-1376ba65198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90af0f80-295f-420a-89cd-c5cc89a10e19",
        "cursor": {
          "ref": "e4b1d025-6c42-4a0a-a145-d714f6376f0e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f33d0b4d-75df-4952-9890-edab6582da33"
        },
        "item": {
          "id": "90af0f80-295f-420a-89cd-c5cc89a10e19",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d88af43f-c898-4ad5-93c5-b370f776b696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323789bf-1916-45dc-ae5a-46eded4e386b",
        "cursor": {
          "ref": "092600b2-86ac-4a9d-abdc-5438483c847f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dd0bdcc5-3f22-4a68-850b-317b9239a953"
        },
        "item": {
          "id": "323789bf-1916-45dc-ae5a-46eded4e386b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c482adcb-8a65-4201-a352-3ffa1123ea50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b20e2d0-d13d-409a-9dd7-3ff86694cd41",
        "cursor": {
          "ref": "5c84e9c2-6e6b-4737-806f-6224cfa4088c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d68b0a5d-7fab-4954-9819-17d3dfbe7317"
        },
        "item": {
          "id": "0b20e2d0-d13d-409a-9dd7-3ff86694cd41",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8a8153f3-1bea-417d-89ba-6c1013d98b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca35420-1a42-49d6-8a18-2dbf46685f0e",
        "cursor": {
          "ref": "5e4d8093-fd76-4210-bd1f-441b9fd71333",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b91eb811-8af4-424f-a2ed-f0af253a9934"
        },
        "item": {
          "id": "0ca35420-1a42-49d6-8a18-2dbf46685f0e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3c18639c-b652-467f-9586-c3453dce7b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657357e7-d24d-45d8-be04-b95b8a9bd7fa",
        "cursor": {
          "ref": "d5b1cf24-fb64-4dc4-a3f1-331e9d819771",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8e3c84d3-26f4-447e-8dc5-31ab75d62a44"
        },
        "item": {
          "id": "657357e7-d24d-45d8-be04-b95b8a9bd7fa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2ea416ac-c057-4058-bbd1-a9ee16cd4aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306f8368-eb91-4d4a-942c-12c66194ab78",
        "cursor": {
          "ref": "180c5917-5798-4255-a2bd-da5b8d57a898",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "38c8e97d-50b7-445a-900e-b8073d1f713a"
        },
        "item": {
          "id": "306f8368-eb91-4d4a-942c-12c66194ab78",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e735639a-9a1d-43fd-be3a-4d2fd40ae677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9824e005-ebfd-4d51-8f07-7013319e2fb9",
        "cursor": {
          "ref": "ef6ce6ca-fa40-4c2d-991d-d0f1bf809d70",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d5e2edf8-cb41-4ac0-bae1-122276be3227"
        },
        "item": {
          "id": "9824e005-ebfd-4d51-8f07-7013319e2fb9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ab019a16-e2bf-4372-af17-3cd7b4fb3e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d691edc4-4d5d-4ccc-a95f-f4e15e3dcb3c",
        "cursor": {
          "ref": "7e4e91e4-2ff2-41f9-8c7a-1527c7b82c40",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "342765f9-10a8-4bf6-8bdf-f2e8ccf7caa4"
        },
        "item": {
          "id": "d691edc4-4d5d-4ccc-a95f-f4e15e3dcb3c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0159ff20-eaf7-4b0c-a428-d4ff3638ed3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef04757-3f52-49db-a751-fc3f2df2deb8",
        "cursor": {
          "ref": "f5a80eed-87ac-45eb-a72d-06fb562efc38",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d001555b-5c71-4f3c-a6b9-da1cf26f6968"
        },
        "item": {
          "id": "4ef04757-3f52-49db-a751-fc3f2df2deb8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3c19d4d7-9618-49d2-b8af-b18463082916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78831111-a16c-4ca6-9168-3ec3883d4c73",
        "cursor": {
          "ref": "cbc89a8f-fe99-42c3-a061-fe6b29557fb5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "574a559b-5b37-4c90-93b0-bdda120af7af"
        },
        "item": {
          "id": "78831111-a16c-4ca6-9168-3ec3883d4c73",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1404934b-9619-49b1-8d66-a588ff780064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb9d86d-2baa-48bd-9c28-0ab8b07f9839",
        "cursor": {
          "ref": "5f98d311-96a4-4543-970f-26fff3d0ffc2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c1c6348c-437e-4b9d-bed6-830ca2503fa0"
        },
        "item": {
          "id": "1fb9d86d-2baa-48bd-9c28-0ab8b07f9839",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d4adf022-c4b1-4f3d-bb96-00ab89b9c5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8799df7a-329d-4dc9-a5dd-4b779368b728",
        "cursor": {
          "ref": "cfcdcf5c-08ac-433f-9c50-6859de58b24d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ee084295-40c2-429b-8114-e43efa110f0b"
        },
        "item": {
          "id": "8799df7a-329d-4dc9-a5dd-4b779368b728",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "11ee4836-29a3-4122-b4c8-5d18598cc395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5871933f-4323-4cd7-baad-b1fae4662907",
        "cursor": {
          "ref": "7803ea76-65e8-4857-81f3-10def315702e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "05e5822b-e644-4c5f-a6d2-7f9aff7137c4"
        },
        "item": {
          "id": "5871933f-4323-4cd7-baad-b1fae4662907",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "781b3e88-9b45-4a55-ba2b-df80d5002a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdde87d2-886a-48ff-8d55-20c62ec2443e",
        "cursor": {
          "ref": "e65c2e96-0fc2-4119-b8e4-cf1831fbf44f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2768f876-2684-4e32-95de-6b246a263bae"
        },
        "item": {
          "id": "fdde87d2-886a-48ff-8d55-20c62ec2443e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "77a24268-58d4-49a5-9514-a58b48bd0a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68e2f07-7357-430d-ba61-a654616a0540",
        "cursor": {
          "ref": "f1eb81e7-08cc-4bee-9ba7-9f8b7e37ecc7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5361748a-bb69-48b6-b624-95e3342ae3fd"
        },
        "item": {
          "id": "c68e2f07-7357-430d-ba61-a654616a0540",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "86a48609-7507-4d9e-9251-cd20405ce7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a10cdb5-d9bf-44c6-8b6e-6257ca4bc469",
        "cursor": {
          "ref": "08ecc3e5-653b-429d-a6b6-f0929ba42dcf",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "adfba85b-b7fb-44cb-83da-db60ada5ccfc"
        },
        "item": {
          "id": "9a10cdb5-d9bf-44c6-8b6e-6257ca4bc469",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cfe7b2c5-4eea-4db1-a108-e6da67e66959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69802217-2fed-4798-bfae-ec55241f3929",
        "cursor": {
          "ref": "b15d9b13-7e35-4040-a1b5-947e9e14f57c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "32f8da54-18b6-44a6-9886-668eed32f3d0"
        },
        "item": {
          "id": "69802217-2fed-4798-bfae-ec55241f3929",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6bd5151c-f590-4a13-a53e-9bead7082588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbb61dc-0408-447e-a825-f625bda532ef",
        "cursor": {
          "ref": "80ca8283-0266-4bff-8918-1e708eedff94",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f85a5469-c936-470b-b4b0-59d6bf4a1b61"
        },
        "item": {
          "id": "dcbb61dc-0408-447e-a825-f625bda532ef",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "74338f0b-59ab-4c42-8f15-421bc163391f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cadb554-1ac7-4260-aa3e-7b1fd4e538e6",
        "cursor": {
          "ref": "a31001a6-e2e0-4d7e-a91b-0f0a1a12d103",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "468c5408-e9be-432c-996a-ac792d018241"
        },
        "item": {
          "id": "3cadb554-1ac7-4260-aa3e-7b1fd4e538e6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5c0dcdba-de23-4421-bbcb-80810f83c2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e281f8-a0db-475c-a9d2-25930c8b98aa",
        "cursor": {
          "ref": "593b2d21-90a5-4224-8b7a-dcfac0ff51b8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f3d81dd6-a46f-4273-be0a-aa9e49437771"
        },
        "item": {
          "id": "a2e281f8-a0db-475c-a9d2-25930c8b98aa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "90139fca-22ca-4d5d-a949-5fa0ec0de8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a382ce-dee6-4a3c-b606-8b9c8c241411",
        "cursor": {
          "ref": "fcea300c-fa07-4936-b507-ae91ec51eba5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d5a75265-78fa-4714-aff5-11fb91b60ecc"
        },
        "item": {
          "id": "f8a382ce-dee6-4a3c-b606-8b9c8c241411",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1ac00028-aa25-4b34-8de0-6d615c005784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9317c7a1-6c59-45a9-8c7a-1ba76d64bd43",
        "cursor": {
          "ref": "411f835c-58bb-4f9e-95a7-f6a16de0a514",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a010a091-b890-4cdc-b920-1bd0ab1f9688"
        },
        "item": {
          "id": "9317c7a1-6c59-45a9-8c7a-1ba76d64bd43",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f5cc1af0-1f0b-4abe-8ea2-b347a0d55c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea43c62-12cf-48f2-b277-30c7c0116ec7",
        "cursor": {
          "ref": "49aa521d-4b29-4cd1-be39-d61a58c83bfb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c838c357-2d0c-44cc-a2c0-4386d3937c0d"
        },
        "item": {
          "id": "1ea43c62-12cf-48f2-b277-30c7c0116ec7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6a9a3e5c-2d50-41fb-ad46-36ce23e75d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50614e1-96e8-4f5d-8ffa-3c9b96beb07e",
        "cursor": {
          "ref": "5565933b-1434-430c-bfa5-95891f1bd9c8",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bb8a8fcd-0a6a-4c65-915e-160c54335d06"
        },
        "item": {
          "id": "b50614e1-96e8-4f5d-8ffa-3c9b96beb07e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9e9ee6da-7daa-4703-bc24-3d5514e2ca2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0013449f-bc22-4a28-a0aa-dac8654b9cb7",
        "cursor": {
          "ref": "f798ce99-f4a2-43c9-8b04-31d804db536c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e57fa951-03c0-4647-b144-881c727b800d"
        },
        "item": {
          "id": "0013449f-bc22-4a28-a0aa-dac8654b9cb7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6d61dcb7-b8fc-46b3-8a68-d561a268da90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1128756-042a-41a4-b7eb-db31255eda79",
        "cursor": {
          "ref": "78de32b1-5d8d-47d3-932f-6e85837f0d14",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9e7374c9-eef8-4d14-888e-d96ac4e15716"
        },
        "item": {
          "id": "c1128756-042a-41a4-b7eb-db31255eda79",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f6c2b191-30d6-40a1-a819-310cb1acb113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb5fd63-9bf0-4d98-9fa4-add973e03eb4",
        "cursor": {
          "ref": "50a4eeb8-3bda-47af-9ba9-c5e3424c9c77",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "30b6cf80-ad88-497b-a267-2419a42bf3ff"
        },
        "item": {
          "id": "8eb5fd63-9bf0-4d98-9fa4-add973e03eb4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9504349c-2a01-4e2e-b9be-15a57414b4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842d1b87-5e48-4ff6-b234-1460f6ad1b2a",
        "cursor": {
          "ref": "e49cf062-bb3f-4ad0-bd44-9557334e8db4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ca30b7a3-673c-46a1-b4af-c9d455baed2e"
        },
        "item": {
          "id": "842d1b87-5e48-4ff6-b234-1460f6ad1b2a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "64c7ab8b-3da7-49eb-a97e-25821a4e959a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a79669c-e146-40df-9d21-fd80604ccbf4",
        "cursor": {
          "ref": "30341ac6-646e-48be-9ec9-be2b69da99c9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "70bbbbf9-fff2-4fcb-9d2d-ef976231b166"
        },
        "item": {
          "id": "4a79669c-e146-40df-9d21-fd80604ccbf4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dfb61d84-c456-4d6d-bf0f-223815e8aeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e39b9b-b021-4d49-8c3b-ab92cc23356f",
        "cursor": {
          "ref": "bbb7f8fe-00c2-4353-9c45-66d18e8ab794",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ba55c1fa-5a73-4921-b150-32e20c60a0ce"
        },
        "item": {
          "id": "e9e39b9b-b021-4d49-8c3b-ab92cc23356f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b0740f43-fcac-4d3f-8a42-7bb6fd6ab402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4602c73-bc80-417e-825f-9770bc99f984",
        "cursor": {
          "ref": "b8fa5cd1-38d4-47b7-8c0f-7500cb73d350",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d54c88e3-d405-4e19-b790-65b7151c6b03"
        },
        "item": {
          "id": "f4602c73-bc80-417e-825f-9770bc99f984",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c7b5f2a3-0492-4a52-8c0c-b184e6a0657a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37ae98f-d29d-4725-8532-4bf887ee1a99",
        "cursor": {
          "ref": "36b1fa84-31a7-402b-8eb5-c7c8b60467a3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "15253448-51ed-44c2-86ce-b23650972030"
        },
        "item": {
          "id": "e37ae98f-d29d-4725-8532-4bf887ee1a99",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "13ea6a7a-cc54-4a4e-a47b-09d953d3d098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e82cc1-6497-45f9-9af4-a8d344b50d7e",
        "cursor": {
          "ref": "31e7970c-ad69-483a-b792-bd8530ba15ee",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d772452e-06a5-4e20-bce2-5a105adca235"
        },
        "item": {
          "id": "77e82cc1-6497-45f9-9af4-a8d344b50d7e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "71ec1acb-565f-4492-b23a-ce8fd466d8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e2006-4b1a-4197-8b17-793d5338430a",
        "cursor": {
          "ref": "bafb34ee-7e81-411e-9af5-bc30e3781f0d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6e51bf21-5093-41ed-9d1c-753679f273c5"
        },
        "item": {
          "id": "1d7e2006-4b1a-4197-8b17-793d5338430a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f28f4e7c-c414-4df7-bfaa-96239a277a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db2fc03-4bbc-45d7-8841-a838410c5507",
        "cursor": {
          "ref": "5fefae6e-3235-4d35-8670-27fa8c3c587a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "57d020a3-aa8d-4b79-9a4e-0462a6a43d7b"
        },
        "item": {
          "id": "9db2fc03-4bbc-45d7-8841-a838410c5507",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "411e7397-85fb-49f7-a3ef-1372cb75bb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6ab264-fe2d-4267-8427-59104071ee58",
        "cursor": {
          "ref": "769271b2-69c5-4c4c-99d5-d68c9a21276c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "22833b63-d3ef-420e-a8c9-889201ef61f9"
        },
        "item": {
          "id": "4f6ab264-fe2d-4267-8427-59104071ee58",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8e9966e8-3e8d-472e-8fc4-3f4c48c4ef52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fd7e1d-c825-451d-b91d-96fda0315c32",
        "cursor": {
          "ref": "c76c2b92-21ba-4997-9f58-fc206141c754",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5e85a1fc-35e3-4843-970a-a23275d87f53"
        },
        "item": {
          "id": "64fd7e1d-c825-451d-b91d-96fda0315c32",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "96cab87c-4673-49d6-ba46-94822ccf0352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f0ba28-abf1-44cd-82e1-21e07cca9270",
        "cursor": {
          "ref": "a8d56d82-ceaf-446e-a45a-2414ed8e75b5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fc0c013b-b837-4ae8-a591-d08b87fa35e5"
        },
        "item": {
          "id": "b7f0ba28-abf1-44cd-82e1-21e07cca9270",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "25fc1518-ef4b-4f36-b378-29ff9f899692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de83252f-7f2b-47de-8a0b-5057022fae74",
        "cursor": {
          "ref": "4559731c-b2b7-4ec7-b872-927cbf272a16",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "665eb305-fa71-49d8-8536-75cee0661a75"
        },
        "item": {
          "id": "de83252f-7f2b-47de-8a0b-5057022fae74",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "69790c2f-1fd4-4281-957d-47b65ba40db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d208c11b-3839-426a-870b-5dc5b29e3a66",
        "cursor": {
          "ref": "4c6be8e6-2cff-4b04-9767-05b9dc66388a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0cf2b595-5534-4917-be61-3bb4c5d59fca"
        },
        "item": {
          "id": "d208c11b-3839-426a-870b-5dc5b29e3a66",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7da0f311-0537-486b-923c-3e10b34686c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a81181-26c0-4af5-aa89-88500bc9f5ab",
        "cursor": {
          "ref": "a0db5c33-82e6-4dc9-b19b-963ff43655a2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "41ffba17-2433-4306-8f06-3892a823eb32"
        },
        "item": {
          "id": "a0a81181-26c0-4af5-aa89-88500bc9f5ab",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c105b6cb-e1ba-40d3-9ac4-974490440d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30371765-92b8-447e-a59f-d4d82a38fe4f",
        "cursor": {
          "ref": "6692b09a-617e-4cc5-9552-a157e7282149",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6a51aa41-2cf9-42e3-8e14-97d66e5add5b"
        },
        "item": {
          "id": "30371765-92b8-447e-a59f-d4d82a38fe4f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a6ce88dd-8030-44f4-bbf5-f87ba4a58482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fce2099-949a-430e-8de8-c9e0e294e11a",
        "cursor": {
          "ref": "6c7254c3-9676-4e31-ac7d-31349f42b59b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7987101f-de21-4836-a8a9-2cabd09d1e96"
        },
        "item": {
          "id": "1fce2099-949a-430e-8de8-c9e0e294e11a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aa5bbaa2-235f-4bb1-9071-dd584ef4e767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7c43d0-a5d3-41f4-a8d5-21aac032354d",
        "cursor": {
          "ref": "59862af7-7390-4523-9046-f26e6c6cced8",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f0d05e3e-c1a0-4e9a-af31-32221ed75227"
        },
        "item": {
          "id": "1a7c43d0-a5d3-41f4-a8d5-21aac032354d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5d5bcd2b-d1ae-4140-9c8c-fd50f883d3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc2bf7-e877-4336-a15c-8b5c7926b85b",
        "cursor": {
          "ref": "9ea84b8f-516c-405e-856c-7bc2518123f6",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3df69da1-4a71-446e-a098-9b93a39de051"
        },
        "item": {
          "id": "e6cc2bf7-e877-4336-a15c-8b5c7926b85b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b751e288-c526-46e7-acdc-b2be7925cb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58beaa9-5ada-483c-b6d3-b4ef645aab35",
        "cursor": {
          "ref": "9a0cedfd-b3c3-4b0b-986a-af9060fdc642",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7a50703c-2f5d-4410-a0a0-9274febef0af"
        },
        "item": {
          "id": "a58beaa9-5ada-483c-b6d3-b4ef645aab35",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2d3ae961-f8bf-405d-9539-fe48385d4393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f755c8da-e6b2-431f-ae86-4e700e4331f9",
        "cursor": {
          "ref": "fc184234-0eea-4360-8fb4-f07205fbdf7e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6686a71f-a3e7-41fe-b646-2afa6deabee4"
        },
        "item": {
          "id": "f755c8da-e6b2-431f-ae86-4e700e4331f9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2f6655e6-aa55-4957-9d43-a8b309882673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82753e83-564d-494b-b306-649f4f372b92",
        "cursor": {
          "ref": "f80846ab-02e3-4cb9-8094-2a2b62b7dd0b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8742c67e-b782-4881-802c-27471ab32d95"
        },
        "item": {
          "id": "82753e83-564d-494b-b306-649f4f372b92",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "139d20e0-18e3-46f6-a072-2fd804ff60c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b0bfcf-6646-4ef8-ac61-1d8ec3b4214f",
        "cursor": {
          "ref": "92e3d31d-210c-448e-b835-3b4aa44aebc2",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a4c68f46-ba33-4c83-a01a-100b3fab205f"
        },
        "item": {
          "id": "d9b0bfcf-6646-4ef8-ac61-1d8ec3b4214f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5681b2a7-169e-4dad-bbff-77ec7f572177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7b5194-a43e-4a05-b879-3cc4eb066c11",
        "cursor": {
          "ref": "013f1fdb-aaba-4938-948e-2439457d190d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a614af7d-8459-4430-8b7a-47aaf856e3ec"
        },
        "item": {
          "id": "1a7b5194-a43e-4a05-b879-3cc4eb066c11",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b752ba49-e552-4ad8-b074-460b980f458e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac605d4c-7484-4245-b8b2-1b5d829217de",
        "cursor": {
          "ref": "7b568b47-b0f3-4d2f-b2f4-79b1246c6acd",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2ad8b64a-6ce3-4f35-ba08-6c7ca3a39900"
        },
        "item": {
          "id": "ac605d4c-7484-4245-b8b2-1b5d829217de",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e3efc827-9c5a-4eae-9261-b25a5659957d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4cb1ac-fb4d-4cf9-8bbe-bacde49aecd5",
        "cursor": {
          "ref": "914eb54a-b3f0-4640-aa4a-1d16d38dc7df",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "66a7c9fb-ab24-4080-a254-068f57474690"
        },
        "item": {
          "id": "8b4cb1ac-fb4d-4cf9-8bbe-bacde49aecd5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d472de9f-0e75-46bd-abc7-198f20810132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b363919d-e6d4-4f9a-9702-52ff8ea4746e",
        "cursor": {
          "ref": "e3f792ca-0c1f-4405-a853-b13a529ea441",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4baf2b43-71f2-4d5a-9df1-6ed797e79ce6"
        },
        "item": {
          "id": "b363919d-e6d4-4f9a-9702-52ff8ea4746e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "effcb544-e3fb-4903-9d9a-ecaaf0685abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8dd4bc-5884-4f57-bc71-312b5d7c22fe",
        "cursor": {
          "ref": "fc457e76-dda0-402f-81e0-79e4bd130966",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e072d8ff-7e82-45ec-8edb-9f7f387eeaaf"
        },
        "item": {
          "id": "4e8dd4bc-5884-4f57-bc71-312b5d7c22fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "acfefb8b-f11d-494e-a4be-9ee3895bf35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2e5093-5864-4a9b-be89-429d34b85865",
        "cursor": {
          "ref": "2db495bc-7c13-45ce-9f50-9f08b4451c0c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c5a27957-e18d-440d-bf50-4a661fe06fd1"
        },
        "item": {
          "id": "8f2e5093-5864-4a9b-be89-429d34b85865",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4f68f777-b9a8-4a31-bb80-a0ebcea3d7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb70c5a-fe86-46ea-8628-d9c8435abd43",
        "cursor": {
          "ref": "1df0fe50-cc27-46ad-b5f4-a975a8ee3146",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a2801b55-e3c1-4dae-9389-8751552543c3"
        },
        "item": {
          "id": "9cb70c5a-fe86-46ea-8628-d9c8435abd43",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2493d81c-eb93-4da0-80c5-0b3b602fd267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc64e4f7-77f0-4600-80df-bb3f76d6b283",
        "cursor": {
          "ref": "cf7f438a-64ae-4a64-b786-b4aa4182a0ef",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e796ddf9-1bc9-4e34-ac8a-f0c9291b63c3"
        },
        "item": {
          "id": "dc64e4f7-77f0-4600-80df-bb3f76d6b283",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d51594f2-e58b-4cb2-9e37-6276c199cb0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d52bb68-d1a0-4093-9806-eed1340c4add",
        "cursor": {
          "ref": "effffd36-9177-4145-99d1-6459baf71430",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9ca76635-be41-45f1-aeef-47b5aec8e9d7"
        },
        "item": {
          "id": "1d52bb68-d1a0-4093-9806-eed1340c4add",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "441d21c3-e148-4a7d-8fbe-bf2535eaffb7",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb362f2-8de5-4dc1-9359-28018d3cd372",
        "cursor": {
          "ref": "5384c6a6-2d9f-4a9c-b772-1c73d5f5be73",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f1c45104-d558-4ffa-adbe-f3758c1810d5"
        },
        "item": {
          "id": "aeb362f2-8de5-4dc1-9359-28018d3cd372",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3b0d9acb-5367-41f3-a5df-01b20f931831",
          "status": "OK",
          "code": 200,
          "responseTime": 4273,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9b352c-d8c6-4ab5-b876-6b3e9f3b4e8f",
        "cursor": {
          "ref": "6ea8d3c5-490a-4932-8e4d-410614b78141",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2b8963e5-92b9-4713-9bc4-5b635f38956d"
        },
        "item": {
          "id": "6d9b352c-d8c6-4ab5-b876-6b3e9f3b4e8f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "895f5a4d-286f-4506-9d81-919eb6902af3",
          "status": "OK",
          "code": 200,
          "responseTime": 6961,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3e4203-d175-47b2-ad39-cf1a465ee9a5",
        "cursor": {
          "ref": "8179ebc2-6ba4-458d-b6dc-0be69515154a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ac7631fe-bd0a-43b4-b53f-914ec5f16d47"
        },
        "item": {
          "id": "2e3e4203-d175-47b2-ad39-cf1a465ee9a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d2130f4d-4935-4c68-b8f2-955224dc7e74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3e4203-d175-47b2-ad39-cf1a465ee9a5",
        "cursor": {
          "ref": "8179ebc2-6ba4-458d-b6dc-0be69515154a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ac7631fe-bd0a-43b4-b53f-914ec5f16d47"
        },
        "item": {
          "id": "2e3e4203-d175-47b2-ad39-cf1a465ee9a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d2130f4d-4935-4c68-b8f2-955224dc7e74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e85694-1e03-4982-b708-f99e3af470e6",
        "cursor": {
          "ref": "c6429fa1-21ba-4d65-bf90-f3edffdafd6c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "31364a02-05fb-43fe-977c-7a25d1c6482c"
        },
        "item": {
          "id": "99e85694-1e03-4982-b708-f99e3af470e6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0cb7d7ed-930a-41a5-b1de-98a1401cf4ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8574fd83-9297-4337-8879-e85bf5c9381f",
        "cursor": {
          "ref": "55c92ccf-8d55-41d4-b751-5546e6680fa1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d94423b6-a991-4ac6-9689-60200a32c28d"
        },
        "item": {
          "id": "8574fd83-9297-4337-8879-e85bf5c9381f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3398e5f9-9198-4243-b819-1f6d57a2408f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}