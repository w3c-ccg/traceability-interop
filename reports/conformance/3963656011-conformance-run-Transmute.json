{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9f82b4e6-0986-44de-a4d1-1a1bf49d4417",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3a31a4f9-fb76-4101-a304-94a3aaf1af1c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a0eb83a-2e1d-4b7c-b988-77533bbe8ac4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "74b39e14-ca5c-4767-8fd1-1d2acf3fd205"
                }
              }
            ]
          },
          {
            "id": "971eee28-5add-4f1b-ad10-54f2bd49a6cd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "214665f9-688f-4943-a3f0-b365b5142bf2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0d74d2f-5878-4411-8567-66232b646faf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "53869269-60bf-48e6-9cd8-dda943b439b8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "057032e5-0896-444d-9026-ee919d53704f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d362aed1-ee0c-41c6-aac1-a60937c3b34b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcdfdf84-6f3a-42ef-a738-4936b435fbc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ec11d80-338e-41a4-a436-4da388de51d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbf605cf-a564-4997-9551-492357a44695",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20aad3b7-4ea8-4fc4-915d-f3ab71b1a21d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ac00266d-ff6e-4021-b40f-5d58cc0df704",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0bc6a85-b0b4-4b48-9191-a26357caecb7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "629300d5-9d2f-4da0-98e1-2fe2995f2075",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "eb4f8194-d38a-4f87-86fe-2779faf91571"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c271323c-c94d-4d42-ba5d-bb40184a6a5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9b07438-82a5-479f-b908-73429c4d642a"
            }
          }
        ]
      },
      {
        "id": "d0f33153-a3c7-48d3-90a6-207950f74cf8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9534431f-677b-4d71-8096-dccff9f0c652",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72210e7d-d604-41a4-b0ca-a2d8921393af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "70216f39-9adb-4a93-98eb-0a63667d2f1c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768aa4c4-9a8d-4d68-bd0a-c0413f03feca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "839cd019-5926-4815-8943-8a1195588998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c53292-8b45-464c-a03b-737f2f96d9d2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47753f9e-314f-4f9e-8fc4-f5ce74a3c200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba69eecb-fc8a-4181-9410-dce3ebb32685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604157f0-f621-415e-8db4-d15e4a4118e3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f468820-eefe-4084-b255-5123f7ec8b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c55f7bb9-9a3b-46e1-a06f-ba5444a88c60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fdd5344-0aa1-4855-bf00-fda74c6e6a23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c52b3f65-a208-4ad1-b30b-b4f71e0149d7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac70ad7e-9ae2-4a5f-bd87-3809612566ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e55557e-7953-4098-88c9-13231662d3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238f2853-455b-49f4-8a77-660ad255fa4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b267b78-8460-494d-aacd-7facba8b3711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a894bd76-4b88-4c05-acdc-4608533607b3",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394e8ef8-770d-4bf8-bcdf-807330ecb7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb2b8363-0d13-4625-a358-3c6276f67427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ed6692-25bd-4364-8c87-234ef3b94a48",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ee998a9c-6679-4eeb-8206-94b9709699fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a232b31-d3a8-4a0e-92e5-3c53a51df252",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e4b188d-30b1-42f8-974b-456c7bc35805",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c30043a9-7112-4cce-a157-21cb47e39043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b9133d95-f59e-44fb-9e61-caeffae80485"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51b2d927-1f3e-4585-a550-9820f533b8cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "2b338d78-daf7-4018-92d7-aad6492086ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fb676ef-a5f4-47f1-9ef6-4a63ff99b055",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08ec4470-5161-4e70-9338-1c2e0dceace7"
            }
          }
        ]
      },
      {
        "id": "06453f64-d09d-44cb-8867-f2e79f7294ae",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "37c14650-4cda-4b9f-ae43-b3061ac0d92c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f427efda-233f-48c1-bc76-4fb7456b8aa6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "02b6b029-2fac-43d5-a867-1e4beaceab47",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a36518-d2f5-4247-88b7-769ed0e1263d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f878d178-1172-4a7e-b234-b5674f485f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4b6201-9765-400f-a9ea-8e39c2e86d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2b6f55f-bed5-4160-b4be-bcfa7ac5a949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3a39f3-9e89-43d8-9e10-03ea9fcdff15",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78915494-5471-4adc-b3c3-74a582b976cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6341a78-05b5-4530-bb77-cea610e5ae19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ef0b83-7ebf-4c9b-a754-bc7620fc6255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7065c33-290e-409e-a52e-82cacac90883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f0b54c-6d77-4e9a-ad9f-e0e07d128c15",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9924a7ec-1bf1-42fc-b0b6-02d89d4923be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8eddec-30de-4498-bde6-2eb07696cf8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69fb597-b03b-4865-be2c-4754239ed88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc5be6f6-3427-4008-8dc5-13b375486780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc521469-118b-4d6f-a41e-55b9356d9e02",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fad109-3d42-4ddd-8569-890557acc6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0a7b5e-b530-480c-838b-2a588a17df51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2810f20-87ec-4491-9f1b-dc56649f25af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbba8495-6478-45e9-826f-101361c7bcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf02a82-5ad3-4af4-bc45-21e103955ed3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97734c7-dc53-4c25-8aff-f4a2b10c8d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd28309-38d9-47f4-ad17-d2b3bcbe68d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfb0f1d-18e2-4f0d-b15f-eefd12da2756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f390a92-d54f-4fa1-b482-2a4ec1af9532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8c290e-d82e-4944-91a3-1efb4e500fe1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f9e601-97d4-4e33-a2ce-067b75b04d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04cd412-f5a8-44ff-b1c8-2cc30edfd4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068bd8e6-36a1-43ed-94bd-a6708c8642e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e4cbdad-4a88-4373-90c1-6dfbcc652232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3515dab1-0567-416e-ab4b-8bd804d98a74",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca72d02-85d3-48c1-b0e4-8c536b875c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a50fb0-c3ca-41ac-b0ea-778b72e22033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722a070b-4c2e-4519-96ac-a9b806e34660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f8c22a9-2781-4df0-ad6e-01088fedbcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a559f1c5-e4c9-4407-99ed-d2725098de78",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436a4a12-d543-4bbb-883e-46342157c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b99f5b-5587-4578-91fa-a4f9451239df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e31a7a2-a324-4da9-a2e1-ebdbaf2ef8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "784829c5-1bcc-4350-88d6-32b28b251fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9edba32-4d1d-4650-a3b7-6e0f6784f3eb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30449a82-a34f-4754-bf97-7142ebeec2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc20a8d-ceb2-4940-b283-4d9343746aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859f03af-c10e-409c-a322-b91d53f5d282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74119fa3-a799-41da-b460-6b1aab04726c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7905b451-823e-4fc5-8be3-384c48c59986",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ea7d26-289e-4917-a18b-7228bbc45f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922e1647-c950-45f7-8e98-0f2eb519c810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ccabcc-caaa-43d3-8639-a9a4413c7bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1813e965-5935-4103-b8b8-5002249f649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a9b50c-c80c-43f4-a58c-78996fab3963",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e66c44-af69-4985-b60d-b9ee17036e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d79e45-943f-409a-9e45-ad698ca5f081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76368a9a-75af-4d2b-b8ff-0a1cf3c53d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d13f401-4bc3-41af-8490-890714579efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb114d08-875b-4b91-96b5-0cc1a3e1c04b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c04c64-43bd-457b-914b-69b5c552a080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd38cbc-f4c0-4729-98f2-129792e46692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee8ce81-e9da-44f6-a38b-3c8b6be4b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a54950d-d0e9-45cb-80c8-a2d3f395d6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4f735f-d4c4-4145-861c-6dd74e262ec0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3981b60-783f-4973-8107-a09b3f6bb9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a316e237-f8e8-4406-9d47-8007d1afa942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4eb20f-b94f-49ab-8166-7d192219e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d7d9a4d-a30e-42c3-b719-44c985e0d289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01447ba6-59f8-4d37-8578-a172bfdb6e4e",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19da405-721f-4f5d-b467-64258aaa9ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ad5bd3-e50d-4221-89ff-11a0a9933363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb319b4-71dc-4047-b1af-d46e2d256d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0dfd8c-4b60-459c-9dcd-044113808ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced86cf5-8fec-49ee-8bab-a8fff51f385f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94d9972-4f08-4a78-b627-c04011969727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31506e8-02b4-4395-9c6d-a124b9404c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64f8fc8-d423-4a5b-b8fb-42a4612c0c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "227ab79a-c0f1-4c0f-97c0-5e831db9d2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90ceb93-11a2-4bdc-a3c2-d4478448ef66",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2111e830-ffbb-4e8c-8165-1093435e4082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651f5114-68d0-4071-9f54-f67dd3b60721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4057cfb-3ae2-41a9-8375-88e078dd78a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aaa37dc-ff44-4b81-a91e-b0618acacf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce93172e-b0fb-45f2-8a2e-a66209c39ee7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33096bb9-9eab-414a-a215-9d302850f191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312c10c9-4170-444d-9416-bf1eeda9bf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633b366c-d23b-4faa-b695-7df49d81e760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68e02d1d-090a-41cd-afa8-56ac576f7851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4844db1-5c88-4b0f-ac67-62cd1b3e7720",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca01ffb-5330-4d63-8c0f-99773a2da51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e445367d-cec7-4d30-9429-12319588316f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee9e8b4-4afe-49b1-b356-3e7d1b66c968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9b80a2e-0ad1-4921-81fb-076a7459fd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd20e5c-233c-402f-9f79-c2b0aa4c2218",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d7db4f-ea49-47dc-97a6-a1e0bd0ce4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcf8d34-23bf-4b66-aac3-575205931cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c21f553-b0b7-4c8a-981a-fa96e50c4ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f41092e-8fc2-4826-ae5b-31818c8155c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d25494-1b78-4e71-b4f9-77c7309c088a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f1a652-0f88-45e3-8e24-3d0de9e3e586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb5e625-e68a-4b88-ad2d-a6562bd16c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249df7f7-8696-4f58-b8ff-fff0b8381306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9041583d-9501-4943-97c2-617f1d106aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171f645f-4b4d-49c4-ab8d-2dc32cb780bd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaa5704-1094-4e25-95ad-dfee2a38eaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b19bb4f-23d3-4a5e-9567-ef5594a712d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a958f5-33f7-4f05-9617-2a2939d06076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccbb9bc-4f60-4f68-bc4f-a906573fa61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b470347b-03cb-47b3-aa19-2cbfb448da54",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa8cb1-a953-45eb-bc2d-758d3a01ac6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25227b87-a199-4adc-930f-b5a51a3bc9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847d788f-4777-4171-9196-21be7de582d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd1f8a5-f23b-4e19-b59a-255c7f162a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c9aa32-0c66-43bf-93df-38efca962987",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8059ea-1a6d-4bf8-9ad6-63b310d1eebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0950f31-f869-4215-9fa9-1a7247c11640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd66175-eb8c-4c4a-9f5a-71b2f9a0bb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46102779-5825-4e16-b6ec-317220264afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc350303-c5cb-4250-8481-2b8e41b004c7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a66c0d7-fd1e-4be0-85fa-0c3b11606ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7194a72-11fb-43cb-a211-e8289c2c6cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faaaa89-8353-4aa9-9885-0200f5e8f377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54626702-97f7-428f-a6bd-4247741b9891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1369a3d0-5f85-4fc1-b70f-4cb05196473b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abca721-46b8-4912-93b5-96308da681ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8676403f-dd95-4f1d-929c-1a949d263990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4d5961-ece0-4720-9740-c1a7aef372a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f282c71b-0af2-4b5b-b9d9-8cf96e3a4bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06adbad4-2a55-428c-9d55-37c9a816559e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96b6935-c675-41c0-a9e7-c15658a2869f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6dfb9d-91fd-4569-8145-7b33e0fed2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8e4041-6b11-41d3-9b8a-b88cf187841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c408db-458c-4408-aaa3-64aefaf1a520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2835d2bb-beb7-4c2a-9e6a-2122815fbaf8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd62a61-f4b0-48b4-a677-c9484880261b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f95f17-c623-46c6-b9fc-370bd7cee50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333de43c-dacc-4d79-8781-923e180e42e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26bca902-8dca-4558-92ea-e9fefd82c2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde7c551-4785-4b9e-b840-59139e559880",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ba0d73-c7ab-4c09-a8b4-2d82eca9621c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23158f65-867a-4467-b53a-b524fbb202d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099d9d72-3797-4dce-8933-2448f4f88494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f144aed2-e004-4197-bf58-535fbf7dca66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130abe92-4e56-4ab0-a9e1-32323f23b4c7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758d4d44-9de8-49d9-974b-16f877871bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c909d9-139f-44b7-87e9-e4556b8924fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f22cf03-db9f-4388-aaef-f0c7329e9602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4540a55c-4c0e-4236-8183-875f92a6545e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e71e46-d4c0-4ef1-91c7-317d8e091d93",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2482c09-fe5e-4b5b-9cfd-b48f6e2d5687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ab4538-b966-4cbd-98a4-dcc4d7f90a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97926526-7c78-488d-b6cc-46824991582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc1e8fb-8f04-4935-ab5d-1ac7ef3be247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b09305-f3f3-42ba-9336-f4932c10c21b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4c850b-40cf-4b88-bda5-acac1e2342f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2afc62-5845-42ba-ab2e-cde3e832a66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978fc436-5084-49fe-b735-68d026267551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7df879c-5f11-46e5-9f69-adcb0a0d5940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e74f07-f322-44c5-a763-d354265d0046",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74798c67-8a37-4766-baeb-9b92fa13ad73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca96855-f76d-4c73-ad9d-54ff770f74c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14488b1e-d7ab-4238-b993-caab5886bd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b039ef2-88e1-40bf-b394-09e2e9e847b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2ee4ee-e87e-455e-bd15-d962027a905a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78791b50-6ffe-4b9a-869d-f30e8b19324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72144fc-0d82-4ccc-bb90-1b08fbc1ac85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32f04de-1ae2-4963-87b1-bcdfd6b391d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4454c709-3562-4b57-8fc4-10f968b68c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29aa7994-b8d4-4984-b7ff-4f6d78a9045c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bf1485-6834-4a07-97e0-8b63aa479e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ce1665-729b-4616-99c3-28d65002b1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e020e681-99e2-4b4f-901b-bc1f980760d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "093d711f-7749-40c9-9b60-0b79bcab3814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a58214c-dddc-408d-b7d8-b9b4e9b23e5c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776045a3-1280-4845-ac84-86b708862880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206ae725-b522-42ed-ac10-a07c8b5bf751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4b3e0a-9df4-4029-bfcd-589ca9ae86f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52988a9-3828-451a-93dc-f87ba494cbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae82ed9-3d27-46d8-9c76-849cc1c247a9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb0131b-3184-4e12-b2cb-449fa77e3f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8532cf-0b94-48a6-b466-727968c206d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7019b5a1-6cce-4454-8565-3ac7dc104e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83bc5b54-47ba-4f1d-80e1-f845cb7eee09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7066cd-5352-4056-b3b3-b963bc205a7b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee91a7b1-74aa-4687-8f6d-51ae6b8c7894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ce7140-1768-4f0a-837e-c204ff29641f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf44e88-9647-48cd-98ff-97e297b10a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3a1c18-3c3b-485e-b5ff-d8c0a839d444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03186928-3509-4d85-a3d3-851f18255f73",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40be8835-73d6-4986-92c1-f5cf0c68c04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20fad0b7-27e9-49dc-a06a-a53f926565de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d26e4c1-39d4-48a0-b717-76bd974763e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36b339be-1e8a-4325-8c6f-a6068508d681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc80adc-4b36-45b7-98d3-dddfa32861b4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635d24ec-09df-4fe8-a3e1-51d3d3d70816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3b919e-b964-4ea6-b8bf-c156f8206018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce374c2-0c02-4061-b3c7-72f5506dfa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1594550-7d4e-4b71-a2ed-0edac7b67b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e3833b-d2df-4440-9cb8-ac448ac13fe6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f6d39a-11ce-403b-80ea-47c201c63e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16e160e-1ffd-4320-823e-8752bbe69e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5f9212-3ce1-45b4-8e54-e72e0f2ce095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "14933037-c6cf-430d-a5a8-58d471a16649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04afd68-bd02-438f-bac8-00b8d4151bff",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb57a1a6-5af7-4823-af19-be427f725fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423de5b9-395b-4182-9a8e-ab9c86df0064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7edf180-eb6d-4ce8-9af4-07aea959b968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec0893a-1f76-4ced-b19e-29d452746315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641ec137-59bb-4915-a503-aa107a41e526",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde6ffba-c7c8-43ef-9ab2-9b80c65e4fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8745ef0-bb96-4c4e-b810-4a93a986f817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201502f1-3ec2-4e96-aa95-804c5259dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbabce7a-1bc2-43f3-a620-e63d725de6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18851fe1-07eb-4f24-8377-a34da44a3e29",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32813430-8379-405a-90c4-bac3bddacc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2337a7-b7e0-4045-b918-9228708f097c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406b66ef-bcdd-4613-842c-fb8d0347f58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f53c11-2880-4ab4-b7a5-9d23787c380d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3713fb7b-ace8-416c-a6c8-19ef6c5c4793",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2024c4-f35e-4436-bf67-38404027b83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba47038e-6f70-4f51-a8c7-8a2833f0a276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4ab6fa-3e4c-4e04-954f-9d14d9fe5d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd1000d-99e3-46d9-81aa-56d32e4135dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5504e2a5-44dc-4b64-bd58-c87e99a696d5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefaee29-531f-4e38-a8df-334e7c47356b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a30b30-b640-406f-a350-294c514155dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e452f1-cb44-4a62-8c55-6671d00a918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "86ffd4b6-4f7d-43e1-86b8-4d024dbf7567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33661e54-edff-4a59-8449-96a3d55f75ab",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c4e156-b772-4413-900a-34593ae33e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74393572-444e-4208-8d54-4ae6f21279b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ee59db-990e-4561-b7d0-78e4aa3112a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e97b38-a48c-4898-ad28-d818436a7244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4922aa76-0454-4292-a0e1-06213a767940",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab53fcee-fae0-49c6-86f0-5bfb3f60c396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f24ea15-5d6a-4016-8122-8635132dd465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6294a3af-d746-45c4-a059-142c730c2c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f822a8a5-a895-4afb-8a9b-59630518137b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8458e3e2-4a37-4805-b137-4c2abea76cdb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962ead96-43a6-4bfc-8f47-67d5d060d1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b4fd47-3f91-442d-a84e-29414f6622db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10269e2-6426-432c-aaaa-83e2aacec65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77d4ed2d-dd6e-4b1a-a8ea-bf461c87a96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698c2c00-a132-42bf-9094-4f3f1502c75a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daa6c32-9fdb-41da-8a0d-bd2a9c410d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e51f53-fbe5-4e88-8234-9849a67cd151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000ddef-2fda-4b58-897b-e0e5ab37ffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66153276-8d19-4c37-9fdb-a3ed483d1da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8c9387-7ed8-4a1d-aa9f-96b188843b4a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8725a00f-8c57-4e54-8eec-963f05d5edc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dc4616-77e1-4670-b881-ce9e52b3eac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c80f85-15d6-45e9-8fd7-9951c4e5b176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aafdc5bf-070d-484d-98a2-10defee70d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e40142-d5e7-4fd8-b68e-689325c08954",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313ce4cb-0473-433d-b8de-2b3b65aa4cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb115e31-4f73-4fa2-99bc-30851950e947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f402c5-8f8d-4c84-9a39-bdae1340586b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dafa88b-3000-4040-9d49-dc8ff97ec59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4451f2d2-4f5b-449c-bede-416c424f423e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a28a92-d093-490a-98f8-dc868c0ce0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54aa47a-ae95-4651-b9db-279c2bed9b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea0fa96-5324-4315-877c-0e4fdcc4dfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36fc2700-1455-4964-a9c8-0d27f1c8d0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e315562f-a83b-4eb7-9381-dab3fe1b0e66",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93354f36-12f9-49d1-bbe9-4475dcece221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed63b2c3-a27b-44d9-b86d-79e7daf67c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae483324-bf05-4443-93df-cc8fb4e25446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d92a6be-ff84-4262-82fe-c66148908ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3810c5b4-c5a0-482f-8363-008336ddcd71",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28248f46-dfeb-428f-b0f2-e49a2c9c1ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6681ea-b654-45ea-94d7-7205c8e17c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384a7160-02d5-4cc6-ab6b-572b5bcb0c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d0545e-e1a8-4a9f-aa93-ea0b4b5b192d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ba7972-18ae-4ed7-a5f6-a82c08f315bf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c89452-57ab-4044-9f94-f0e5b2afe71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35d2912-d125-46ed-902c-5b6a1db174c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a23dfad-e939-404e-9d12-057452f621d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10927422-e344-4915-9dac-2b17aa4be19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5018e29e-ecdc-4c2b-8a22-b4988b358664",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cb42e0-3952-43e5-bd4b-b0458eb803e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1641cf1-507e-463a-a586-7d59d948107b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ad2d27-2b53-4844-ace6-717f911d001b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72532b51-1b20-451d-95d2-b7c6de2f41a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bbd09c-3149-48da-8d23-42e0a1db9cc1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e2409d-e6e0-4514-8920-0e3158caa088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af951217-b2cd-4b94-8b38-c7e3a84f5abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d598dbb-94f1-4770-8189-e45c50ad47f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7117328-5a8d-4de5-9702-8b8b30394d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfabb76-029e-4543-a05f-a4d39bfc2219",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2c10f8-751d-458c-b572-ae719122a32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12171c5-f12b-47af-893a-f4f7060783b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142663bc-14b9-4c47-b485-0aa2f4013124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f7584bfe-174d-4f38-b460-1b3e839ef49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b28585-ba2d-4030-93b0-804e5da21277",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d136739-b0f2-417b-8b1b-028073d685f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78662db4-6d21-4d4f-82bb-8872b38d2032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5283dc-4301-41e9-b937-8cdabdd93a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca47550-2811-42a2-8664-92eb9b69f596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e49328e-6874-4024-881a-61c63664e917",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bff0d8-048b-4ac4-8228-672aa088b4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5d943f-949c-406e-88c6-2f80164755dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da61e7b8-7a90-4543-a844-4d83d6e6ef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d24fb5-49ca-474f-b2d0-e30993e4ee4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eceb375-7c00-479a-8af2-d50cf6ef5a26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d9210f-eeaa-4733-8ae6-48cda77ce879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aa5047-1ee3-4a23-a461-f4b913e7a663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c30e0fb-1ac9-41f9-99b7-31e283141cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37e6a54d-d662-4214-a420-7a907cd28016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8c148d-37e7-4fb8-b5f2-7e7a8a0431a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb6ef7c-b4c5-46d2-866f-edb292f1b660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5202df54-f674-465d-9a48-864d148c88b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc139f33-a6cf-410a-a6c4-48027711153f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c25c13-0647-470d-9aeb-0b526a24a456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2873160d-a78b-4cb9-95d8-b1dbc4ebdef3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4c290b-8f71-41eb-baa9-e624cfb78bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e271e3-97df-46a0-ae40-afe3e401744b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40df54c-c0ff-47e7-96a8-40e2d1844a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "477fa29e-0c55-4657-82f9-0618fd70d330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de3c768-73c2-4664-ae90-cd6db127b1c9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee55c920-81f4-4b05-8782-a123dce9dd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0e6682-3e38-4525-82b7-e449889bde6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34160348-9956-453c-b242-6c06af265d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a204a477-8d1d-4043-998c-08b17ad54a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5b8b38-352e-4472-ab90-e253f9d471d9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceab346a-7e9c-4b9e-9519-30da4b1694a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac71733-2795-4b8a-b0da-e5e152fe6437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a3912a-e030-476d-8979-faed871433ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c03839-72d6-42d1-a4d4-0c3d656398dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6629ed15-adc5-4470-8420-eec1bf50428f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b16acd1-5b21-410d-a269-b379c6549092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6eddce1-b290-4316-8f7d-1907241931d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29cc42b-7ec7-496f-bb4a-d5fd86bb3e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a805ad24-36f6-46d6-b4db-ca269b77d4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7b2aea-0cb1-4757-a372-b7d31db7864e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fe8112-308f-4dd9-a4a9-ce6423b46870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12942e0-cd93-4352-981b-b75e071eef26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d030a8a1-6757-4f5b-a827-735d0e5abe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ce85a1-3ec6-4391-b52d-abe0359fbc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0783910c-0def-47bd-a62b-e62dd27b86da",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eceb9da-64e6-4857-b246-a29babd4ffc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd3752f-d478-4f73-8c58-7de8b5b3a9c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f5bedf-34ea-46ef-a88c-76b32e96d202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df321c2-4b45-45b6-a0d8-55db069428ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84781c9b-bc30-4c48-a1c9-af8da98ee330",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bca9d0-5db1-48ee-874d-b0254f3aacb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe42c38-c531-4a5d-a0cb-32bcd9073b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcac31a-8453-4480-9e0d-137411e2d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb1c48b-1230-4715-88e7-e1f7fd768a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48839623-de45-440e-941e-69a049a66766",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24a08ec-7aaf-4c15-9365-0f6e1415e370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed42e1c-92b4-42b0-baae-c638800aa586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af3a1d8-1006-43e1-b56f-55cfe053f6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "23f9d799-a45c-405b-aea2-3e7c8b4a439d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20249190-913b-48d7-acba-6a95dfb9c2b2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b37c172-1f68-4295-8f05-cd364a8c1f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29a413c-b211-45db-9292-95a145d76548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375b79ff-ae14-4cb9-bc12-e34515578eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2603d57-3fe9-4809-844f-921b745fba33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5396e5-37e4-4526-a0ef-c9364681218a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f4b420-d65b-44ea-95f2-55dc5dc2748b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc6e8b6-62de-4cfe-9db9-93315c470567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f7256c-da0f-4a52-bf8e-d85615661ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7d20da-c5e1-4acf-80bb-ea9acbeb72bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86511d98-9f8d-4d2c-94e3-73653b75bf49",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dba931-254b-41d3-bbfc-c04a970aed5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc6e11c-409d-40b6-8d72-6039ff00fe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361eb1df-ae36-40b8-af42-50b2e0a584c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02d9bd5-1184-4947-a0b1-f92dc52bf7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bb05a4-d60e-4567-bdd2-ed621fc0fb23",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfb44f5-5cbd-4f79-b7b7-6aeac71dfff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7db6e0-3327-43b8-bdc1-dc4c7cf6b4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692c266c-f4a2-4fec-8bf2-b5d811ada0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ccaef0-4d0d-4a95-b500-5482e1fbd51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdb10e6-912c-4a16-89b1-d20009f2cc6b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45f166b-e84e-4859-bff4-00295de19b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ae22f9-9281-4f1c-bf84-5a44f6a0f149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5075a7d5-ea5f-4edf-a393-5e9bb6564bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd433a34-5c39-40f8-9ce0-dd9968921e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5e40c7-db90-49d8-a26c-d64a9891627e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695873cb-3e1b-41ae-8c0d-568bed2ee8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfaa9ca-2665-4d7f-a5e3-bfa28cb6beb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f41881-c8c7-4400-a824-e5a98b388206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "def947cd-3b21-4310-b1ee-1cd9f1620626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d53c7e6-6669-4008-aca4-80b7a47fecfc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0136605-9aa4-40c4-b298-dd422f455597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5930bd3f-5d3a-48ea-827c-96ae40b75049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4fae7e-d665-4c13-95af-585886b07111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d942123-752e-42b4-a8a5-81ea7a77011d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e485be-f85a-4311-914d-2c15392b2c56",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1bc962-1bb3-42bd-a351-379945bc9e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabab155-e3c4-4e06-8143-e36afb48aa6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17aff407-f296-4a9d-aa4e-f3139bd4435a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1025c06-0a52-42ca-9bad-91f91b59afbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693a858a-6488-422f-a728-938db8dbd0c1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4f8f59-0b3f-428c-ab95-9619ba6c4eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f35ec4-df2e-495d-8ce4-e501af05d7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3a8fff-9099-441a-b204-8c4970288a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cc4644-82ae-4462-a3fe-1f48581d5376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862de7b2-0526-4aa3-9f08-82c41487c84a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8916f0-fbbc-4d92-a296-fccf993d3e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806f528c-ba4f-4eed-93e6-acf79fec17cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9501261-e4e4-40cb-a419-a34e6bdd58e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec74ab2c-a8e9-4379-87e8-382152959cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27107b0f-e3e9-4bc9-9b5c-a5b872e52568",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264daf4e-af8d-467d-8e4a-c05a18f36907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ef8281-8709-42e0-9066-83ba7993bd8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4533fd33-f6e3-484a-ad07-d3048d8ae40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e460cf-9799-4e43-8cb5-2b34d95f7918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e661e1-05bd-415b-a4e8-45c084e05d2e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1981ce-cc31-4a9d-90bd-e258e2cefa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976713f5-b1d3-4516-8774-50f8a75e1fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1559fc5-10b4-4888-95e1-20956f06488b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bca80ae-31ed-484b-b595-22cf77012d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a048c6be-bb2e-435e-b6a9-06492d8aaafe",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9854fa68-921e-454f-ba8a-7a1fe0758a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb0569c-a8c0-437e-ae5f-e4e7da3480b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20595cfd-7074-4a58-8b00-021f31ef18dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ecdb2b-6697-4d04-905e-d80013ba850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec181ce5-b7dd-47b7-a377-f5a48ab5d36d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae80d481-ee94-4bae-adf4-4445e39cd4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1f94c7-7497-4c7d-8b3e-ccfc006c7441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25903bbd-a6be-45b8-ae30-a834836162a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdd9ab1-db55-481d-a31d-1e8d94779a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd801258-8d81-486d-9bed-4528feacb684",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e55c916-94f8-45e1-84f2-97a5183b7f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03efddb-60cc-4ecf-9469-3e5ac9863b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc194af-cd36-4c42-8315-a559681bb960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "762d3d39-db62-40c8-abde-659fd862f4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb175a2-db1e-466e-8cfd-74ef59b6d1d4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33691ca5-af7e-4e49-b704-f78e836601b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a4a4c7-9742-451a-91a7-6b2a9c9e0f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a85c18-5cac-4ec0-a182-348fd5b51e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef339d1-9d63-4ad3-9efa-3b812b9d544c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccd3954-6094-469f-b407-39b2d25abc0e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b635594b-f64b-45bb-a045-134947397531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6340af86-0e6f-4ada-8a01-7b780a56665a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7da3d4-244b-40e5-8a80-9780f6264fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c0c4a9-f6b2-47fc-b38d-4ea92358d814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e146c9-958d-411a-8de1-4a02b98fb9b3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3ab35e-2653-4048-99f1-1b1718c6d158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dfd579-943b-425d-a52f-ebe930aaa7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311920f0-09fa-4f48-aa62-54f477b46d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "744a8eb0-1faf-490c-a942-0116c2e36684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4d37ee-3cd0-41ba-9888-32dc870beae3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8879a7c1-3520-43c5-b72e-851221a6a42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05873e25-bfba-41c8-a11d-148b99e267de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf319382-cd4f-4f76-b4bc-b0b929294a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c21904b-8dc8-4659-8e18-f1ebf3117eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294d4666-ba4b-4d75-8862-6ffec9d66ea6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a66dbb-eb24-4e25-afab-d00802f79fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c994068d-49fd-4230-b071-9d399f8a4b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0be215e-e742-4953-84dd-3107115095b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63d77e44-51ac-4613-95d6-50b10822b921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4ce2e9-752c-4d25-8b37-b7f7897cc8b5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39c9db3-b8d5-417b-88ed-76149e46e61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c298612e-75c0-4fba-b616-b394aa8bb6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79d030f-d9d6-4bcc-a05c-62b39cf508fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "718672ce-d398-4496-8b7b-627b7a90b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b325f4-1950-4191-99d8-bc71770b98ef",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21fdcdb-2d7f-4521-90a3-27f3aef1643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22eb3c2-e58a-43f5-ad94-079cdcad61c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7785162-0447-46bb-a4e9-594b022a9ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "47ee1e68-b253-4131-87b3-f8cbc4817323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4f75d4-7412-4ac7-8fdc-bbbf558029f7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaff2fe-3064-49ba-a5dd-7844950b6c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5977a9dc-90a7-4d21-a713-b5dcb121dd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90abf0b1-a42a-4529-bb29-9ee28d6d9eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b22f9637-4dbe-4d6f-b97a-93651ea1da6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b106e87d-386b-4251-a890-378941db3970",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ecd3f1-e8ff-4f26-9143-70b35ccb57f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "150a2472-398b-4346-8f3c-6f3c10905bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786c2f0e-4f2c-4e9b-bf77-6c0f95385392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2640f6e6-c683-46bc-9a77-caad0de0e27b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e5ecc93-6442-4e50-9ef8-c8e10dfe2b93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fedace13-dfa1-4a16-9f55-d8ef87b238f9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd4e002-35ea-432a-9763-ba0c80134f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bdc7975-3d26-42bc-a726-a5fb2f97ec32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7f9727-de65-4197-8e31-9a2f744c3521",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a2716d4b-a544-4aec-99f8-723d66b85194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d994ee-c061-4d52-b3e9-9a81764940b2",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c8f0f5-9cbe-4d83-8142-b3062c2e65d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2be9d07-7616-4bfd-b32e-531b16100e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a890a4-68b1-44b4-93c1-e41220c4dfa0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3a892f69-9edf-44e3-84e9-d1c3586a807f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65a99933-0385-40ef-b4c7-a450520d1bf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5f4bbd2-ea0b-4a5c-baf6-7a35a442ddde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d771f597-8244-46ed-82e4-ac07182ceae2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba859091-cfb0-446c-ad5a-706895245d4f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6daf8167-fb95-4cb4-ade7-26bf5d4a8d35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82b71452-ec72-439d-99f2-90cf4936c7e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a8eeb0c1-b4f6-488d-bd90-efff78b0875e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e5710c8-8790-4154-9894-d71311311fe5"
                }
              }
            ]
          },
          {
            "id": "87d3a6de-9b7d-4f26-8bd8-549db42f4f05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f6100e6-b250-4040-b425-b32ab2edb11b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f886f9c-7fb1-44c3-b828-593b3007a12f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e55b432-cf9e-4c01-95be-568ea6818c2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10e6292d-67d6-4ecd-bb3d-89a8c3015af8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bcdee1c-98d7-463b-ac58-7e4135f793d1"
                    }
                  }
                ]
              },
              {
                "id": "aae79f89-7f73-4039-b559-e7795f7ef8e3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d8438b5-f430-4430-9aa6-e671dbdad8c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98f3718b-9067-4d9e-af89-d3b80f84008a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ca2cecc-9f59-46e1-badf-ac7572686296",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b232d8a5-16bc-4f25-b504-e80aee4a7736"
                    }
                  }
                ]
              },
              {
                "id": "21f8b655-0c28-487e-b6ac-591e3d9f04d2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40940b24-22b6-4e6c-9c86-2b7020662dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dce6a15d-c795-4fb5-98f3-fe0e91389e8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d4622fb-8753-4913-8621-60fa607f7e16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4653c2e5-5d2f-41c0-9844-fe5256e402b3"
                    }
                  }
                ]
              },
              {
                "id": "a471c13e-b46f-4ea4-ae46-b0b29a5e7842",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10e1b2ad-ee6d-43c1-b1d1-ab3328bde402",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97779f9b-1d66-4280-8bda-56b04d967fae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8472b357-3ef3-449a-b8ab-f389b723d814",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1f2df4d8-0d5c-4bd5-971a-a3dc79e6bb56"
                    }
                  }
                ]
              },
              {
                "id": "eff11080-605a-40e5-bbe9-3763166dedf2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0da51ce-0e22-4c8e-b8d1-52c9365bb519",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86c669fb-813d-4344-9340-1251bbd48fd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ed7af77-142f-46a1-bae1-9b014c2dae15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fe715f6c-a3fb-47d4-985d-16efd1ab6567"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb5bc544-bcd7-4b78-b3bd-08327ebc7fcb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a25a3c71-cce6-4051-8b72-fc8177c02979"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "683374f4-85cc-455d-bc74-1afecec5e49d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91485549-7bb3-47d9-a05c-c63ff2ef52c6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b113cf4-00e3-46e4-9d67-7d0cf2f0f19f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c9db33d9-ba1b-4d1b-9558-6b76e08e2dbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78012970-b769-41e6-b13c-222ad50e00a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6c3ecea-4746-4ed1-986a-6a0b32aef47a"
            }
          }
        ]
      },
      {
        "id": "bea46b8d-1a12-45f6-b250-22bc145e6aa8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "28f890db-63ca-4294-ae99-d169276901bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "737bd82d-eb46-4c1d-a05e-0058ccea63ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "492e8fdd-8968-4b3e-bc77-86e38c63d862",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d038a82-8fc5-4cde-8d0c-8b0f2f796039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b65ef70-75c7-42c9-9964-4574fb3d9681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1a9490-1a79-47ae-9cab-32e6d2080970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4929434-8f3f-4187-970c-1015c08d8d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03606e09-f87f-4d83-9c42-5ab1e5953633",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63948d6c-1db5-49f5-9276-3f082dc8c7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a06e25-fdb2-4f3e-9faa-feaaa247d799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31436490-e4ae-4df0-b7ac-99ad5aa2bc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af4e6854-4b27-4a10-a012-43ac224f6de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e180d5-3f02-4335-99ee-2c137ca6b3cd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a77d79-d7ce-4f05-8a03-54f9572d2226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc29f11-5e0f-4d07-b19f-8b7df4c1c56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2822756e-d4b5-41da-81a3-fc8f552d6bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb307a47-d5da-4666-8a4f-7d67faa09c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977a1526-94be-4a9e-a355-dc0cc09413b4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b75a2ce-b022-4f4b-91cb-c21681eeec39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2efb2d7-dcef-465e-9012-5a654a9e3aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea9a777-8c40-4a59-8a1d-614300022a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0218ab58-67b1-4d09-8c0f-e0bf2be2ab79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c2a6b0-1809-4836-be14-6c9470b84147",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6435fb-6c3e-4dd3-b756-8527b73ee8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a885c7-db91-465f-a3dc-c444d6ed6560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bc6fa1-eb1e-4f62-95b3-a02f249d73c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70ff500-b101-4f41-82f3-710277c6874f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaafd91-a741-4b8a-9e22-6133f0df92b8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb13003-14ec-4e32-a78c-fb82817b7b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f879b36-85da-496b-82e0-47d4097dfc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b724f6-eb26-4e9f-99cc-24ee879617ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4679571-9e6d-4d57-ab82-976af3fdba7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1eb0c61-eb82-405f-a629-abfb78781ef7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901d7680-cc0a-4ea4-b1e9-6691c8018cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeda1541-bfaa-4255-9d12-2eb0e3d5c6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6b3402-e947-4a75-a870-a9abb87c7894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7baa4b32-74ad-4201-9ed1-f261fda28453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86be6fda-d3ef-4578-9d4e-b908a0d590ff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c17a679-52a8-4c13-9872-bbcd7e6fa864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c07f80-7093-477f-aef3-d2774a71eea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463f9d9e-a2d8-4e50-8eea-fd5ac6050ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ff9e55-7a24-4d08-ba4b-b4bcc2204aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713f4ede-bb36-4a14-a6a7-72188e576d34",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c8eccb-ffd9-4f19-8cc6-79fa8ab33efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cb0990-e5d9-4c4b-af79-5b61a775fc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f35b3fd-859c-4f1a-8053-35ba96aa8aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b670f280-784b-4ee1-9ec4-2d95cd2ade40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9f46a6-5230-49c0-9df8-2fa7864c7284",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80b36f9-06f4-47e3-ae5f-29cf3b82c960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433366eb-a664-4890-9a59-4ed94d76e208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a999e6-3607-4205-85f2-ed9615400029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b84935-1c98-4d97-965e-c241dc7b518a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b28a0dc-d74b-4dea-8f53-cd4dd99018fb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bc3b1a-0b03-4717-b55b-4f5e193641f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17b982d-3771-4da5-9b27-51d85f5ff376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ff8792-8674-4a29-bc85-610f387cc504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfad007-a256-4868-bdd5-353d3bf3a5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94943589-af07-46b5-a057-71a7b66cce9b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a27e2cd-df1c-48dc-bdc0-08408d0da005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39828ef4-7918-4089-833e-a4559270ad8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e9202d-529b-4fa8-ad11-123c482d9203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "609b11cd-4b85-4991-ae7d-26f0d1d6c477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4b6031-af40-4828-bcdb-272310ee0dcc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1f7234-882a-4c13-8320-68b571836552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42653e4-c805-4ff4-aef5-e6a00dd23b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae1402f-c143-414f-9fd5-7bc5b306019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4168b45f-836a-46a1-b723-148bf14730d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3145af2a-df87-4fbe-9abf-60741c8f7836",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a42163-bd00-4a5c-99db-dd4a1d3a6980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341977d9-336d-4294-ab19-9f86e502a6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd5f9c2-ea55-441e-b0bc-2c0a545d8502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44aebad-55c5-4645-bc0b-5c9c6ba9ae2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130ca896-14ef-4e59-8166-c3f1d2cb3b61",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7528bb18-efad-4f32-8f67-e4aada9cf4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62feabf-bda9-453f-ba5a-6270c8d02ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79cb600-52cd-48f0-8e4f-d1a396b3efb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbb80e8-09e0-46d4-afaa-00325aeca1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e4949e-37d0-43ed-9c79-bacd848396a6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6ad824-119e-4793-8663-08c97e6c811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630d79e5-6958-4905-bea5-c54d95d23f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ab8577-3a62-4b08-b04f-71fba0b8a965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "656f789e-0d76-466f-8e2b-635598f64fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b0c183-6a61-424b-ac09-d25ccb4b48b6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f3d08c-6346-4c02-b0bd-8b4d3a56d060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00acfb36-5a59-4f08-81f7-ed62fe7b9923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f51f19a-aaf4-49b9-8ea6-0340c031f7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e71b386-f937-4bd2-9734-04bc8ad56fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29903968-e5bf-4d6e-953d-ce1b0557d703",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b2a22c-6a88-4b4d-ac50-2b4c987cb855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e457741-e8f2-4876-9b96-067efc8de5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd52c764-0e78-426c-a9b8-9658ded4e8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1ab6bf-b6c3-4243-af08-b1b786daa21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1da7a2c-fdd3-47d6-b0af-4eb48a0fd826",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d6f626-46c0-47b0-b9ec-98a491c014dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c766dc8-a9d7-4960-a013-0dde297199e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a8e6b9-7806-42b9-bbe3-24a0e3fc7dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e951c2b2-744b-4698-9a10-cd047adcf47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8608c9d-b6f3-42e1-9dfa-43dc509ff5fc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de11f56-0b9a-408b-8c65-d3b52165e5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be0c4dd-c733-4d22-b9c0-b485c7c4dcd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb76b78-4a65-4fe6-ac4f-2966baaf8e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74cdc40-ea77-4283-a69f-705be51785da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14daabf7-c384-4e6f-9bf2-7504944c7732",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29a3742-508d-43e0-b4ad-b5079c99b1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a678d5c-8636-4bbd-97be-320d9691efca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf00fcf9-ec75-4975-9550-b5540e3c1e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d31bd3a-c159-4b65-b6d5-556e79217260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f733cee-8c1e-494a-a481-01662844dd90",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806864b3-4af2-40f5-9910-27e69c2c6c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd6033b-46a0-43b2-86fe-ecabfbcd92d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f361fd8b-7e63-4c58-90bb-c03fa99348d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2ee922-c17f-437b-abb1-6efb54353871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd76278-74a0-43f2-927a-a0e42886101b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8513c8cd-ac8a-4f6c-9823-8c4fbf71c132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bb4089-5ab5-44fc-9cd9-db8e1de4d27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcb3304-d051-4cb6-b800-6665f8b61e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e557000-b773-4683-9ed2-18c59dcbee1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51477a17-36be-4dbf-bfb9-ee2ecee4b784",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272a5402-060b-4b5d-b1d4-dadfcf25d95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f336c730-e37a-4a1f-b0f7-d80cbc922d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d3e671-d2c4-4c5e-b184-745d55e93316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7534357-a3be-44ca-b57e-3bd2338656c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fc050e-b084-4db5-9241-f75bfbed8b8c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17952f0e-0e6e-40ff-8267-438d87f86683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febdad65-c462-4e1b-a3f3-c78561445e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359b834b-67db-4603-bf67-44c5c47aafd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff63d5a-c742-4277-a637-e23983092e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14260745-3659-4911-8908-39d005eacaa8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c396c-c66b-4a65-8c13-e85871757ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2547b72-4d1f-4ea8-9a32-c74f983cbca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3e64df-7db0-413e-aebd-a342756b481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce30bd44-5c05-48a1-b67a-5cf1f3ea59df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9855215-daf3-4c4c-af19-bc07fd80f90c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a14440e-3b75-488c-a086-6c26609b454b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894b7027-22db-4a65-bf16-5a22bdcc4857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2f4122-d76a-4429-a323-62fa1702fd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c60f6f0-3a1f-4a7f-88ef-c6412805b222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5cb461-e7fa-441f-8114-f5bed29f1e31",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8cd30c-5f31-4711-bf0b-39cc65cc1462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d8c499-d513-42c1-a65f-c738413aa3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3c5847-4b6d-41c9-89c1-30199d5e581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cb51b6-c1bf-40b9-9c30-b6b699803fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03606e01-def4-48d3-be9b-e28c7ac3f10a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5818935-59f0-4d22-9df3-e4b1fe3e55f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9375c0f5-39bf-4b85-b8f5-a11fe7ce73b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a8e7db-c2d0-4879-bed2-1dc9e53290f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edbb499d-12aa-42d1-bdc5-5c9cef1c5a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a135b8f-36d0-4e1c-96d3-59f8d19c95eb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3ac155-0137-4e79-845b-91f6b2c0365b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d27984-68b0-474d-a748-bcb656ce54a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b6e5c-cf84-476e-ac8d-1a4d4b828ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0135e27-fe69-4275-82b6-643feaa35393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9228d0-21c7-41d4-aa16-ea01f9c6cb9a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80619680-ce68-4000-b396-15846ea00158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72db46da-4781-4e71-a9f9-e29a5f65e31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0323dce9-eb6d-4317-bd1b-ecaa87fe7e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa11d5e-c8aa-4731-b93b-2396b1161714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5771f32-616b-4700-9523-cb5ca3466bbf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d449a5-dc13-4de6-94a0-4bf26329b8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863260a2-6ebc-42d4-b4de-11fd462c9e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2b63ac-f81d-4190-ab61-0704548a9309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f0d9b9-d3ef-4cf2-abee-c3353940aa33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f42f65e4-5952-49a2-a200-d97dafe61957",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e1a20e9-8b49-479b-94ae-29cf16294c43",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e920a2f6-c775-4d2e-b882-4dbd2d0f8b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b589daba-95f6-405f-b7cb-242f0bf64c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbba4216-02ef-47f7-8f11-280695ab51e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d2a0cfb-2285-469f-938b-103c43d72995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59655657-96ab-456b-9fa2-36c017b54aaf",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f51f63-85a3-4397-b42e-081d7699c606",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7f91981e-4e76-49df-b222-3ab590382929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfd6442-9272-4abd-8940-fdf726cfdd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ba0f06a-699d-4928-a653-69281de282f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6377ab3-a8f5-4020-9f35-ece4d14cfd8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5748830c-bbd5-49e0-906c-c2a840137ce2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bed0d23-894c-4689-baf9-4db9e2fe8282",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0129e6b-53a9-4c6c-83ac-44f77c6808e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c1d72ea-b3cc-4f2a-b3ee-375e803f202c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50128fff-0af8-4471-b29a-a9d9c89c6664"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74f3aee2-37f5-46a0-9f9e-0d3132243e6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4b8f001-929d-4e89-8e57-d9296c0586c1"
            }
          }
        ]
      },
      {
        "id": "93301901-22aa-4d88-9cbf-1f5a788e2298",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "91d9d337-a982-4778-a571-2a0d684fa8bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "982bf205-8217-4206-bc59-0d5b14aacf82",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86d0cf27-4789-4255-a686-61b4fbe41afe",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6384a504-3c1a-43e3-8497-32a0fee18a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4ff895-808d-4f50-ae63-9b45574ea38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8bf6ed-96f8-4bf8-bba0-3ec932068dc7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32b1f13-dbc7-4f42-ad09-af1375fd4b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9287de-6c2f-406f-978d-e3e0ef60aa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1500cb93-1ad8-4cb3-ae4e-15e786bf53ea",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bbb89f-61fd-49be-9ba6-f6fb8f1d3dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acbce84-c0dc-40b8-89fb-08f885043786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece54dc1-e3b4-4d97-99b7-6671ade8be66",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed7218c-186e-4fcf-85b2-49260ddd075b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b913b14a-7ddd-4d0f-bea3-c0b9883d785f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abb35d8-73dd-42c9-9a9e-99e38a6a949e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5c49fe-a071-4710-8669-4f222faf8c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37be107-c41e-4c64-90b8-cd10a05c2168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc17183-93e6-423b-a81c-c3fc43a19b94",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5855044-95d4-4379-98bd-e0e0b3498d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02580cac-1836-42b9-aa40-f52013560d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9830a4ef-d9a0-4d38-859f-e67323c57690",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635bd7dc-f451-455d-9797-90cae3b3f5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f549ab-9344-4362-ad34-554c56ceab45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0344836-77a6-4077-80e0-957dc0892ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2ed66e-7824-4ea3-86d4-d408a15c53be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a564b3-1609-4ab0-a3e6-1024a7955f63",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d342fd-c964-4044-b952-738f6c2e3f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa2049a3-444a-4021-a5a6-a2db7b724438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfcc89f-ffb3-4071-ba63-cec6cc26a3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0aa3ff-f9c8-49c3-a315-e68fa224c81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4f1e8d-e7cf-4d1e-9e6a-ac40956932c0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950cf332-1d06-4444-b4e3-e0d72f1d49a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e7e76f-7a92-471b-b842-4241226ea4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8711f762-77a1-49ac-b1be-d19fc1f8e648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d855af35-4784-4de7-a8dd-be3a932b311a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bca862-a184-48e7-b61a-86a6a126298f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60be4c3-a67a-4c91-9286-ffeb7bd1d826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5755c01d-e604-459a-a444-e16047e01124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a344fdf-f83b-45d9-8c2d-8a4d741d6989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd55a3b7-75dd-4d51-adfb-67987ceb5f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af54dd22-fe6d-428a-a678-d3dd9ad45f22",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b746d4-cb2f-47f8-b4c4-030f0ed80c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8486f2c5-33c3-44af-bf82-ba91ee94b685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a043b6-18fa-4f49-8bd2-afb8f0137af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aef0dfb-bc26-46cd-9715-a5f87953ee0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2aae27-1e5f-48f9-a96b-127f6253b975",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bbf77d-eb58-4f34-88d3-8e6f97dd3b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2f82d2-0036-4eaa-8d7a-54a175b04552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e297628-d55b-436a-8913-94bcdf9d7e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ced8e64-91d2-4cb3-957d-3fe0d650524e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff456abb-e6ba-4a27-9030-4a6e8ffe982e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd2c4ee-9c04-468e-8a35-97edf0bd6ee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5316291f-70fe-4b89-a48d-881913905279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb25f8a-8a58-4d9c-a2a8-9c4eaf815e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c24ac2-d87a-42d9-85bf-5b0c252c28a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ff1188-b021-4444-81ae-0e4f96dabb57",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd4669c-1f81-4000-961d-3c506ef90533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca24005-f69b-47e2-bfa9-352608131ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5cfaa6-dce7-4641-b165-76833f94e1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023b755b-5990-4b72-8f79-e105324f04f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f052527a-0115-4fc5-817b-3c829a1edbf7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30246b0f-fd35-4b71-8a89-dd50bce064cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d55504d-0f6a-43cf-b5cb-f09893faedcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531124df-90cd-47e1-87fe-c84f01134f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eef2a74-691f-48c2-97ab-66c97f0fa3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee78d756-66c5-4226-a0aa-c2d30ba1c22a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fdc5ac-cff5-48da-8d5f-e9a2b68c0a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8697617-7f0a-4933-b859-a787853211f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698e3efd-e68e-4022-a196-d4556d5e49cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b62765d-af60-487f-8b17-bc4d74c7a247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b629b5-1985-4c8d-8028-017539a8266f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807c5b4a-abac-48ad-be31-6ccffcd1b02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcf5157-26ae-4388-a6d3-88b385cb93fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bffff2-8fd9-42d1-9669-5bca68c77def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b9c7a7-5518-4d06-86ee-4413dd316871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad541b34-c731-4083-b908-2c99c8af6c5e",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c2db18-eb9b-4abd-870d-aab793a2a7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e66eeb-37b3-4f2f-85ce-b263596cf13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b433bc1e-f893-428c-bc23-a72be4b783fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b233582-cd71-4344-b0af-d6db11b6b5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0478efa-7ebf-45bd-b59b-98e67ad38f0e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811eb117-1718-4165-9318-92c59b09a8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa2466b-8931-4dc7-892e-34f5916124b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c839a9-afb1-475a-9094-624eafdd97fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41b5215-23e2-4170-8199-e4c5e53df5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3019e9e0-e8fe-4704-b361-027f4c8d72d7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b02372-59b9-46ac-90f1-346883efecc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf3b272-3afe-41ff-84b9-f989bd4a1448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aad4e36-a1bf-489c-ae72-6b1055c0d00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8a8648-6492-4597-a259-481596951832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca535af-5a8e-47b7-920d-6a604d5da9de",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6d9264-bcb7-493f-99ac-97c0d2658e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3031a224-efc1-4649-a2eb-9d49533955f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf7a1ff-feea-4357-8457-0edf517eb88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038124fe-5c9f-4e15-8ca5-6000fcc5c9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a7e9e6-a4ea-49e9-80f4-abe2d56c2ebb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd81274c-9f33-42ac-94b6-e1afc5358a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfd9bbe-814f-41f5-9e29-dae9cf3a15fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b901ead-2099-4dd1-a9e4-b3508a1d928a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981bf27c-ddd2-45f0-a449-0b16acf03cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e18d7e-2e33-47e3-aa90-89c4f2682abb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe7a559-438d-4936-b2fb-f740834a5ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a38a1d-9d36-4ca6-a81f-4ddae7756be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceeb6bf-ea9e-4e7d-995d-a9891f1a76cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad2e08a-3cac-4ac7-9713-d46285d5d0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ba5e43-49bb-4985-b5ca-e807598f4410",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93706904-ab76-4a59-a67a-efa9366f5446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36467180-cd67-4892-9062-e35ff8348aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3b7607-ac77-49b4-84bf-020bd690561d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d7a734-39c4-4b57-b4b9-d7ead7699c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6ec62d-2eb0-4285-b9e8-b45087755034",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f22640-e38d-449c-a0d6-e4ffd184eb7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b29388-cc33-41f0-8e6f-4dbf4d15cfb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ae343a-d7c7-4ed8-a497-f4fde82cd865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63521b7-23ff-41f0-b210-a0fcccb1a877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07756d05-f554-4e10-a0dd-ec159fa2a1fe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f87e1a9-62fe-4086-bf0d-81287dbf2c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95df3c5-eb16-4017-9db7-3b221c392fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95518ac-9acd-4609-8ed4-bfec2f19372b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c45df9d-5745-48d3-8534-119efd130932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2695f921-371f-4056-8a45-341a5ca4fd12",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00e48e6-1670-49a3-b784-3cea86bac578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f99e37-799e-4960-87bb-d9d20e7a113d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4531146f-cd7b-4a98-9bb6-2a8eb92706af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047d9da1-4fdf-42f8-8436-6a287bb5b3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cdaf59-3e24-4a29-b7fb-c0e21061e479",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b2e974-d6f8-4af2-8840-192597451ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff6dc25-bc58-4921-abfe-510bdebc9ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2068a4-4ca2-4a14-8429-80a7ae895a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d744fd2-2894-4b6f-b4be-ad1561d5a160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bd9db9-8b51-4a89-b074-604b36a7d9c3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462f9403-f7e1-4114-92ea-8e2ad4f36263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bb72cb-74d1-4084-9b2f-52bdcc91d7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6874ab8e-54ba-4a36-bfe7-accdec5bd7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1327d71f-7012-4449-9b77-bdce69dedd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47861a49-5121-48e4-ae0c-2b14876f47bc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd09a24-9696-4e6e-b3cb-f1c72fb8305f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb20435-be30-4414-854f-568a0ffdddc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f6cb9f-e5e5-43fc-a1c9-2ab02d15c1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c89be86-463c-46b3-a2e0-c693475006c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b94d472-cc0b-4306-b517-85bbfc8481ac",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c422f54-a005-4251-af54-47e600bc642e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed29011-0265-43e1-8f15-ac2242c0ad2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c304354-ca26-4181-93b8-a857269a61c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26442471-01df-4dd1-89a0-b0c90996a2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d226063a-57fa-478b-8098-fc2e8f4439e5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f77e494-2f58-4942-b7c7-113bc1689136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f0589a-53e2-48d8-b7fd-e86fbf28b9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607160d1-2343-4504-b717-e9978d2af87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e609aa2-7d9e-4c01-8053-aee57a48b5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56683c66-b0bf-4deb-940a-a5d5de0c8978",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04d9132-4cec-4104-97f6-5a7c93bd4355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b04468-48a3-46bc-bee2-2c1039906edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954a0507-2495-4597-83a4-adf8a90a8709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095de318-118f-4cc5-8369-e5ac4848c503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6d068f-60b9-4349-97cb-c5a85622c80b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cbd490-eb63-427b-b262-a82ab877fa75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4ff79d1-169d-4147-9afa-09cd8288ac19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dcf16f-bfe6-4a7e-b6c1-34de30550103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b015487-bf4a-4f93-bed0-90858a1d2337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb157e9-8346-489b-ac9a-fc6b15387f43",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b57c1d-67f2-4e0a-bb2e-45949ecc820c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f21dd89-eab0-4acb-a924-ac983a8e1403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01030f8c-4cae-47b8-9efb-f112f5403f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7791be32-6f46-4cdd-b578-2bda7068639f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539953b9-cb47-4497-8597-41f9a5c045f3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8f56c5-2bc3-4876-bd9c-80eac5169356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2043ca1-6169-4fbc-b4d7-94d6469f18e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4c1b60-f31b-45eb-a7d7-add245f6d014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34fc8d0-88ef-46b2-8301-20dbf95b76c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547c99fa-3207-4058-90ce-7358d48508c2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00319f53-37fe-4ea0-b5ab-951250d2d21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770af724-055c-422d-9bd4-f094fd8c7d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563c8fff-b9e7-4cd4-95e1-412d67e6dc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7b6250-80f0-4c29-aa1c-c0f4ba67b513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7591c0a5-d232-4a39-ad58-33d61a9471f9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bab6da-7ee3-4f9a-938b-1072213457b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4ce23d-7d0a-4349-800d-2bc88481492f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89516b93-e373-4077-a6c2-a58758686a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab479a9f-7048-42a0-ba36-219d48ff9824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab940bc-1fa7-4600-951f-de788502a9b7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0651be10-d198-4df0-ba01-e0c0f835e433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a815a70e-0c2a-4de9-83c6-aa48a604a11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6c415c-b312-4eae-ac2c-753a7f98f0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64229df-d21c-4115-927a-3b36e7b57ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84fab0a-121f-4230-b8d4-da1f0e97c640",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dec3da-1649-4d1b-8426-a27606f83b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e21b7b6-0a16-4ab4-900c-0049d654b8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca610721-6871-485c-8fd2-179868b56db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd51c1e-6901-4197-b4e5-86da30f7b32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22c8e01-0ab3-41c5-a73f-80075899c136",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e9956e-e31a-4759-ae50-25c061a051be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836030e6-1584-406c-929d-9b67b69e8483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbda174f-a5fc-4d75-a8d4-be2409313d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74e1224-183d-4657-b20f-95dca175ff90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5761060b-ebc1-4815-8c5c-43446d010855",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e420a0-8ad9-44d0-b02b-e52effae9807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c84170-db36-4cc2-8624-69821d247c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2dddbb-e565-4b9f-8712-d49c34d308f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de45e1f-fff7-49fc-bd6f-f9db9aa3155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cb7473-eff7-4e4c-9251-1a3dd0e110ce",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0b5e4c-87a5-4b87-9db4-ad528dabc321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666fedba-9499-4fee-8647-8b9dd3b3b95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1300439-6831-469a-b972-8ccfb66b668c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bbf59a-bdeb-490c-812b-074b934f10bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a338e7-1380-4a26-8a7a-5342f43d758f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06de141-7c81-41bc-8eb4-76eaeb96bc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76103abc-098c-44e5-ab5f-426aea2e8336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5dfd26-10b9-44f1-9e22-32d7d1804bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11144e0b-1e12-462c-8811-bdd285287d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64ccc30-fed8-439b-a018-0b4d75079e29",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8e97fa-4c0e-4fe6-884d-bb89b4719ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891a1bae-8a54-4d7d-975e-b5e5f5491bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413370cd-7e4e-4be7-89ae-cc31359d86dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a65dc3-513c-438c-aa76-629fb0508aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8e8a36-7302-4c8e-935a-07835ac0d534",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bf4b24-4574-4e50-bee1-2d3f6c9af8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44abf426-d7b3-4350-b843-a51a5f70915f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f9e6b1-32fd-4f03-a051-2df56f59b983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e64c68-997a-4c0d-86d1-705ceac585a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae28da5f-f17f-4eb7-945c-6041d8e08cb5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495d4de5-d76a-418c-a145-357b00ddf196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f502790b-aa16-4c17-b893-6a3ebd0a5bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a176e93d-94c4-4b80-9397-5a88cd707f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9b4768-38d1-4a37-9290-95dd46ddcd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43119d6f-d4a3-4a3c-8f22-04dd935c8951",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef2968f-9edf-4db3-974d-a2717db3d8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d426d4-7e18-4346-ac98-536e51ff97b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a296619-dcf6-4878-a035-a762cd7c71f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c9fd16-3b49-4b47-b428-7b7277ffae42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de27743c-bfe9-4d0d-9715-cbc1e03c5520",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e4cc5c-043a-43e4-8832-3902eb933ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bad8c4-1855-4b22-9ca8-7e67525cae55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42651dc9-e0c4-4b46-bceb-59d1a4b5b1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11626eae-df4a-4607-8e86-dfcb18fa9dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540fbe1b-e712-46ae-8c84-71b96db4364d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd6b18f-2e60-488b-84e3-a608ebf96513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5c3c54-6c50-4aa2-a17c-634e6c5eb9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674d45bb-f9d7-4c64-8b98-b889b5dc0d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782eac75-1e4d-45a7-8169-84558d94ab34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2110b5d7-fcd3-48a9-8a3e-3b92b1a9abd8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2a9371-50de-48b8-8bcd-4edf6b57bc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4848ed-1d1a-47d3-920d-05da3171ec48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebf1528-9ef7-4a73-b85d-3c1a7526a30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed40c24-6852-4b79-aff9-a5246d45a96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf12830-ad42-4c04-b95e-c30e1cd2f572",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fbd703-0287-451d-93b7-cde6bfcd5e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c022e31f-962e-4d11-889a-f1e268d96a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78291d98-d827-4b55-abf2-47c61e9cf93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32aab618-d6f9-4f23-90fd-924ba2f0a1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e652af-fcb4-4c4d-bf35-71aeb6a4a029",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76ac81f-a0de-4b9f-8ca3-312059da5a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf0b889-7550-43c7-98cc-020c06a2c9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0fd421-63f3-4754-8f4d-e8ddfb9b5d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910998ff-2bcb-4d51-9850-dfdfedf23ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68baf376-a440-48c3-bd26-c860b11a4dbe",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2a0fa7-324c-42e7-8e97-5035e21ac59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b0112b-b1d3-468e-a670-10f7dbc7781c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c85c0c-4664-4aee-8268-9656c469f980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8303bff2-1d69-41d3-a899-7757c14845ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91591e95-0bb9-4085-bdc2-eb75bb12acb9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f9867-8e7c-4d52-9f2b-1765a9d13bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e13bdd-db7d-4945-9888-215fffcb4d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ae90cc-58fd-4539-b885-de857965be10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25009125-702f-4fc2-91f7-0be47f4c33eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3138a2d6-b499-46b5-b284-caf09483a175",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8940f5c-b2f2-4a37-bf05-8472ae796a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befad2ee-f08b-4772-8d2a-bea8be51bc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7271cc98-2387-40d8-babc-f171fcb6eab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8b808b-873b-416a-b53d-d336c9b98213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0e4a69-7b97-485e-af51-28ffae735e3b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2f4377-5b8b-49f0-bab8-43841b857f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edda890-c609-493f-82c6-7c305ceb7950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a71578-2b1a-4b87-b564-d06d8179d722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e0d67e-9886-47ac-a402-2d8e7065287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8696fcf5-2bba-4fe9-9c7f-296a3b21f5d5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2d6be2-cc5b-474c-8394-0a1bd0fa5dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8af8f1-4459-4898-bfba-fcb7749afbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b67e5fc-3e81-4467-bdc1-4280836c3ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115d0aee-74a0-43c6-8091-3bf62383e2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be740bd-7cc0-41d7-82ee-d9c1b0d2775e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c47da14-595c-4916-b098-208847e40afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3959b073-717a-42d3-815a-df552f319ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4eb478-8789-425e-b76d-c4a21a21d6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca5fea1-723f-46ca-bf5e-035a57c6743a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c0e123-af76-469e-a080-f701b1f6f3eb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bced9e0-4396-44ab-87b8-d5a75b0da7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcc42eb-cb5e-4c35-b513-84c376dbacfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eafc87-f8fe-4b35-a987-52f293eea9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bccf2a0-b483-4373-b5de-249a563b66f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3ec443-b7f6-4fc8-ae8a-4ae315eb759f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd9054f-e614-4800-8113-40808f02a8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04d18d5-cce0-41a6-800c-2f5d81dc8de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae6dd7-a30e-4955-a108-4826a6c49971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b456b3b1-5d24-483d-95ca-9565170d0e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d919d73-7b50-45ee-a37d-a6e99a93b26a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fc1ac0-ac4a-4f50-b46a-0f63124cb609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072d5fb5-a509-49c6-b1fe-e93663a816a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddebb448-15ec-4b1a-96a3-905420e66c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b618ddd4-08f6-4e49-9d43-35c8b45cb824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440deabb-87d0-4c6d-a72f-a0c05e8810bd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211e8801-db4d-4142-be8b-8c1d3645500c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96c3e75-207a-41c3-b7dc-32403206255b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdedc027-6aa9-45d9-bd02-a4ecd73727dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb233f8-9693-470a-b3be-c043d5786786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f884fadd-b6ee-4303-8df8-f853d321d8cd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf684f3c-6f43-4dd6-bf92-b1dcbdf0b3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fcd221-942d-4bfb-853d-694fa9b418ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bd7dad-52bb-4da7-8809-b8e8bd4c9c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d7f212-0075-4fd6-bc97-1c10266fc282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1307a6-e095-4769-aa61-927eb16bd63c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db9c962-8a38-4dfd-85a6-b2cd5d8ffffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ad95c7-5094-4d9d-a87f-87f3686dc046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b786b24-08af-4dd2-a618-211530f97324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d31a67f-0a08-44ae-bc40-357e24388ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b01e7a-a030-48e2-a04d-6f9dace24d89",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dac76b3-7822-4d78-aac9-133290d56971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1416a7-b7e8-4096-9099-cf8dbf7d7c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7156a067-82a4-463e-854f-3ad16ebaa26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e896326-7044-42ac-a033-d690afb3bba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d84443c-9b91-4454-be59-ea9b90079454",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4585a0a6-dcca-407e-a154-47c2d208e8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f04cd98-2d4a-4853-9358-3252f96a2b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342a24df-6ead-4ae7-b462-40042d0590ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2b7764-d549-4e4b-8935-e3844257709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068aa187-c4ea-4da4-bf30-ddfb5db05331",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b296bcc-615f-4d3d-ae64-36869d262453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b824185-26f6-451e-96af-5051a07b88a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770d58c1-f8b5-4ecc-85a1-6687360d79cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2222ef47-d2de-4302-89a8-af987330e602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822ad753-ddd9-4d6d-8e67-f62e04e53302",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11dc15d1-988e-4db9-b692-a348c79f7a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8cdd272-6176-4c36-996e-f424f41cee57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81c6474-59cf-4385-a365-dd77e00279ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ccb1fe-1766-4afa-9d76-a3ba9ebe223e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f84c06-cf95-4616-b091-502af74642da",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa508ac-e6ca-43d4-bf5c-173da666e798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db07f68c-c70d-4aa0-ab68-9fc387d5a770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189d5267-e75b-4cd5-84de-c6516e56571b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ee3626-3dc2-4b04-ba78-885818a56dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88320f31-6b38-4996-9473-133fe994bc8e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd64e3a-074d-4e30-a27a-a3c1f6f8c736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d9ff88-4e08-42a2-8392-e4b2ac0339fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82877eb-d923-40bb-815e-cd68d3c46471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb06f26-65dd-4115-a3f0-97321835fc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20784900-de95-45ae-b9e7-6b6b258af31e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ec2d75-62f2-4b1f-880c-f81c6e7ca2d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc84505a-3f05-4b5c-9b39-14ad7b58fc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47b6b45-4f74-4941-bb96-1581e062cf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63da56b6-e0bd-48a0-a9bd-cf9fdcac2f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb56070c-dcd6-46af-8c3f-fd55d3989548",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a242c286-d09f-4d84-8d87-39eb31e5a567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab348416-6836-4d5a-90e9-86caf2807a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd098af-cc9d-4259-916f-d08791f18225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06dd47a-e138-41fb-9e53-b0264ab81aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c1ed73-6f35-4775-a00a-fee3a367f1f7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065b2311-1646-47aa-bbfa-fd43532cf711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0435cb6a-5de1-43db-a30a-e7c7c761a86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6151ae-2864-4524-9967-ad7aa1b7959a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40c4e6a-f1fc-4c9e-8459-b4d1f892d606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39bf166-6ce7-4cab-8e72-178d708d4812",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cedc62-7c9c-472d-bc6f-dd5a283d9d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b67163-386a-4532-9147-6a8862e28dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0783e4f3-4de9-4e74-911f-368ec67696bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a8ea7f-399d-4722-9898-7911a27540ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2adfc8d-87c0-4041-82bc-cf9191630f4d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b98d2b-60ed-40c6-aeaa-c26bde512357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec52a1ef-e82e-4217-8af2-c0f0f375b4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b665041-6497-4059-9a0e-47d74e55424e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de4a8f2-e3aa-425e-8588-1cb0dcac9088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d92e1fd-e232-4ff8-adaf-ac4d8291528e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd4d353-33b1-420e-bd67-872238aea55e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88cf40e5-eedf-4147-8c43-f2f03d5fd83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa24e91-94b0-40d9-8beb-ab770e63327f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20adccfd-b457-4ef7-ba9f-360c3107d229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182ec5b4-8dce-49d1-b338-0d5005866643",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e364174-caf1-4fe8-a669-79dc55965e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca9139c-dc39-4808-a5d7-f315708d57cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbfb2c2-e6df-451f-8ecf-3fd3eaf890e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b19a8d-3f6c-4266-abd3-efaa4add6fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60b2e95-6899-4e3a-933b-c3a9da6f0731",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436f4f96-56ab-48ce-b06b-fa36309df681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e27c9de-44fa-4869-82da-05e7edacc8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b813e2-b1be-4f9d-a603-26948035106c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c404d1-e13d-4ca4-8f1e-e974c5715193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dbc22d-4db7-41a0-86f6-c9cd1bf6abed",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4e1149-c468-46b8-a828-52dc193b779e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c1f763-48fa-4632-951d-5cf2e46e0533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1afe0e5-5960-4906-9509-06d9b28c2155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5ce260-7219-4bf9-864a-a37729f16251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300973f9-21d4-4b00-bf09-5ca9fd699c6b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fb8024-ce55-4e4f-b91b-e8dfbc8625bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad2b8a4-6fa0-486a-b804-d015b635b8de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ba546c-51dc-4418-9927-7cb36c31713c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8da4c0-a5f7-48ad-8590-04f68e47316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5808d58-40d2-4d93-8e1d-5c59cf19c8ee",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fe2225-c7d6-4f06-9d7a-d4b38652e8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfee858c-338a-4ced-939d-34bfe13fea8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48801744-1ea8-481c-89bb-7e0edec1a996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05276c3f-2394-49a1-a4b1-739c42d71f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cc884e-e01c-4cb8-9eee-29961a22d29f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c693bbb4-455d-48b8-ad7b-5f7ed96bb80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399b4ce2-51bc-44e1-99b3-32defadbcd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bf5f3e-3bc6-4942-beac-bb6896e9c65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4081a6ad-27e0-4b0b-9068-f45a48186d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3830d55-f130-431a-837b-dd33efc86ada",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c87da8c-ffaf-49de-a1d6-c92d5cc5f984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6b4c46-89f8-478a-a00e-d200eeb83128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f65e3-d0a6-4975-b0f6-6bf7f2cd92e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de01a042-7663-42b0-a9df-08d9eee4f1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee954d1-9e3f-45b6-8253-25a3fb5871d5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e02d67-d848-460c-a1e3-baf0a76df2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf3a2df0-5cd3-43fb-a604-e30478144b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06e176c-e50f-47f4-8ece-66aef8271711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9005134a-a78f-4969-8459-af9bad32fcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5455f03-e210-417b-a0f3-5d0e1bc350cd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aca12c6-6462-45bd-99c4-34c5b853fb70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e30b16e-bd20-4b58-932c-28b019f5d73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4649a775-29bd-47c3-8aab-dc90cdcf73d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d77f32d-81c1-4343-9778-b26888b17d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce0679d-d136-4c57-81c0-8ab1cc32ecd2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969e3cea-e56d-4dd4-800c-d1ccdbc137f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d1a9f98-c158-4a74-b990-962f80820e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eb5de4-2867-42e5-98aa-fa0348e97260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae680f0c-7f54-462e-aee9-296f17632d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db32420b-482e-457c-8c1d-283728bf5cf9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9aed05-4fab-493d-b1a2-67bf8fe9f9d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce3a1f9-ab35-4d11-968d-a23432594a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb84f2e7-f4fa-4ddc-b620-61676caee973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f282010-6a71-4fff-9d53-5a3d65b2b8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea31b81-f3e9-40a1-a9b5-bf685a384dc9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010a951e-324f-4707-853a-393f9f02aee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20c6f28-dcdb-49d4-aa68-e8acc7c7b91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820ef543-9d1a-4a77-b5fc-ae82dfbde5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88084d8e-a192-4dea-85dc-fc949f498bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dd4ca9-b594-475c-b447-73d2330d6b05",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a134e817-08dd-4764-ae6c-136cd677c95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f62a54-955f-401c-8eaa-cecd03b6931f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd3999a-e080-4458-9c47-6c36d395e7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac1dbc2-af7b-4830-ba97-74c78a61964f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7691e33f-8236-4962-8b01-56c19a763372",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba8abe3-accb-4686-a292-f990c0f03737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08902c6-e72f-4389-89a2-0b2f2ed8d78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbcc58f-b4d3-4251-86cc-b78e53cb54eb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1763d3-5738-4f1d-8abc-38438934f24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80db784-d410-4d69-a6b0-e6df9581e14b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c70bc5f-2326-4c4d-a03f-1a6473502498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caa9e60a-c928-4e31-9265-edb47c3182ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad77e4b-06d8-4888-9a66-e00087f9e3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7565ed4e-e7ac-47f9-a648-5b27b1a6d4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c167ca4e-2c42-47cd-a9b5-d9790ae4e3f4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84135745-e847-4e86-95d0-c96830efbe80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc14da4-18e0-42be-ad5b-ef1a4ce21ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e1318f-d721-4e52-8cd8-c96ee3c92709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e312f60-27e6-4d6c-9dd7-5bafbe497a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f52b767-cb61-48ff-b1d5-52e78193f1e7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc061f0a-edcb-4672-9b02-ca2dcceca54c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1caf6f4d-d37f-45cf-89f2-c859d81ad155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d139cb-fefa-4334-8c6c-09f9acdddd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff26b149-c901-478d-a38a-8eda85da1376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934e02ef-5f68-487c-a6c8-8061dafa6256",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b36ddb0-49e6-4268-a574-37a6cb0c2d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9acfb9bd-bffa-488c-947a-d201be0951aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13861c4f-a316-412d-a539-bf83b686952f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9ea58a-875c-48f1-b475-5b0ece260e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3730e046-4529-4716-997c-a4ea35af07fd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c87878-2f53-4334-a0a3-86bc653f9408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2587f387-400f-48a6-b680-f46089f6f565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf35644-0bb3-404b-a0bb-49b65114961b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0437be4-9dfd-4b08-98fc-2239b79d1658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3609179f-d0c3-4d3a-8877-6c8ae97f26a0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8d801f-3933-47bf-8e92-e27db57ccce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53bdfcbe-59fa-43b3-8e59-934d06bf962b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14c5998-3a56-4f04-8663-f208d5f8a224",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708df8c6-1789-42ab-9d19-2951244a80a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc43a713-8d53-4818-8d78-c5b70e392f7b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad24709-2947-4c07-ac34-1273924b6e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf1ecc0-36a1-4d28-9ecc-7138fd6ded0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c713914a-81ce-4436-b0fa-caccb3999885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0649bb70-65aa-4401-9786-ccdf45e68985"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cef4aac-956d-41d1-8035-7cb1444b056b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8575401-8954-4dd9-8d86-9e50ce9f7239"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64206ec7-6b53-4e14-80ca-73b6fcd7e6e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5679c44f-4db6-4224-8fa0-22523459af13"
                    }
                  }
                ]
              },
              {
                "id": "e762a9fd-43de-4b86-b1d0-76c95ea8e0b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52227ff4-6508-4080-8019-bdbf9150ee40",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841a156c-f428-4a6d-8cac-da5ecfdd70a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "faf0a9e8-6148-4f7c-877b-b81fbe2f2754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e66bbf-7ac9-46d0-b7ed-c0ffb648f4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29d221b4-0826-40d9-aa7f-0376c430874f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bc40fe-1079-492d-9f3c-f0d0fc148516",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e248ec-8940-441c-b2cb-0e38508fa3b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "049e84d8-b89b-437d-acc9-4d71e2bcfb1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daffa07-88ea-4445-bf24-41c4f42d9b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e131dee-3bf2-48cf-98b7-84b2e7909fe6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81dc63c7-892b-40a8-9307-b1b10acded08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d90dc46b-804b-408a-ad94-b4a664747650"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99917459-77cb-4df2-8209-ae83bd2e0e74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fad72ebb-725d-425e-b443-0852e022ff72"
                    }
                  }
                ]
              },
              {
                "id": "4a64c6dc-b5e8-45ea-91a5-67b289a18761",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "749abdb9-b899-4881-94c2-d0283fb02fb1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b88439c-9620-4163-92bd-3370e7ab52b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dd757c55-27ad-4a01-8499-44f63f350be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb3e386-dbee-4d49-b8af-b98342416026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a112b0-4d21-4da6-ab31-ff9d51c9c6ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f8a8e579-fe43-4d86-a997-2cd1907c8176",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3162c533-afe0-48d0-a685-115540a506af",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a63a5acc-f599-4228-a109-bbb1e17f08df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "05cfe6f5-8e32-4f97-bbbd-65614ee54267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d8a553b-1a3f-4d94-b6a1-033142d601bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f8e9d5b-09f6-4613-98e4-ecd3133a91dd"
                    }
                  }
                ]
              },
              {
                "id": "6919c0db-f84e-45fa-a53d-84a4762b5afb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91136688-6db1-4717-ad05-2df8ef9d0963",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a35ea71c-45bd-4047-a1bf-b6aca71de68d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26d30184-5ca2-4bdf-8947-7c0ed491b5ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16ad1ba3-4106-40b3-b380-2ffa38b672c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a46f701-1a42-4ee1-8e8d-48a2f24894fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "142e2390-e1ab-4375-9ca1-62bc33370147"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de5665a8-8811-4805-9565-aa5a831802cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8a178fb-0f96-4c00-88a0-be930109bc6f"
            }
          }
        ]
      },
      {
        "id": "6e33e124-5a5e-4b0d-8fee-2047ee392a6f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "73a18012-2424-49d4-9ab8-2c74bf6c5ef8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc5b0d44-54de-47cd-b79b-7c69a8d54596",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0bb9969-6679-42d2-9b1f-e6f6eb07b15a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355f967f-f08d-4b6f-8860-bb9e9be273c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d31054e0-dbd3-4b90-9369-93f8842662ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df32a53-7f30-489e-ab16-e4788bc3ee3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1aa0dc1d-7a7f-4b7b-bb28-9bb4bbc6aa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5853db1b-74cc-4429-99ee-41d34475cd09",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660d8922-5110-402e-bc7b-ab8d11adbf65",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c57866d-c087-49ca-bb96-9464e19e9d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a403137-711f-4692-bac9-fbc0243b51aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "177542fd-b3f6-42d8-8074-3a39d8887b7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f4b1122-02bf-4b3a-a3ec-38e0facf825a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "889ee5e0-5c22-4ef9-ab4f-cf229d291dc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "840f3388-2a7a-4389-9fb4-a61e48e75ccc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dfeea4d-4a24-4fb5-a45c-9f7f82ce2b07"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1be3e2d-51f7-4511-9f2a-928b1211a1cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9c2c4454-599f-4d26-a044-2ab7f1176063"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86a3c242-5b8b-4e34-bfff-a098a0993a65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb5ae8a0-afd8-4d22-af25-0af11f0b4148"
            }
          }
        ]
      },
      {
        "id": "51397e6b-b3a9-4076-a5e8-e3e0865d78ca",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8dddb55f-9ddb-4522-9b31-af63939a9591",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61e33e76-a5d3-4fab-ac5a-aea376134507",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56ef4cfe-13ed-46ee-aac8-4373c81dac07",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239b8b40-9165-4b65-8994-abfb153bfbc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6e3ca04-37b7-4769-9254-90df7dca8ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc21fa9-378e-4714-9b25-83a4717b81bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7693df37-00ee-4ea1-ae34-d43dbfe94979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f145683-2d0e-45a8-8b26-8ea2cf294ee9",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3518c96-4a2e-422d-aa76-70bb7d088ded",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2977101d-be84-4677-baa6-845516144357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f699568d-37a0-445d-9387-6ef5d078394d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aea9dd8-8fdf-4478-bc34-3b686c04d227"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e9b7a5f-6c3d-43aa-a46e-cf092b9cedc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4b1a26e-0214-4f97-b544-b4258b8b354f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "256fa288-7186-4f00-b02e-fe6a95ca4aa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a26df0b-23bf-4748-a268-7cfdb1f8fe99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "272dcda6-d187-45cc-bfc0-e06801a57c0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f9005570-1e9a-442b-90d0-c1d30659be82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a90da528-4793-4c63-b305-c241649cb797",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7e73232-e91d-4f17-965b-df84034c2f57"
            }
          }
        ]
      },
      {
        "id": "0b71efef-cb69-4fc1-a65c-6186757bfc7c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d8ba63fe-6bf8-4247-95ed-1871453e2208",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c6461c3-91fd-4482-ad0b-f6632653cf73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e8fb325-0df7-4598-ad82-b66d6a1de690",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2924c6-ebbf-407d-b086-a127258f8238",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4afb5b10-8bef-4c04-822d-3791335316d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4895532d-c71b-47c3-922a-b66859fab104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a21a6a0-49ff-40b3-bb88-7d80991aa3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12691565-d57d-4760-98f5-771af8bc2f98",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36c0d43-b1cb-47fb-8acb-7d8c35124781",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fb5ed7c1-1406-443f-a14d-3ef13a709c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7835968-9700-442b-9145-457ab605cff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3682bea3-6258-4513-a873-3b4be0c4f2c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1727d10a-c2a8-4acb-97ce-94aa9b2327c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36f13e8f-44ee-41cf-ad69-ddc49a0f74b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16a9aeb1-0b39-45ab-95ba-c4c34adea611",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "676c2cfc-e3fd-4907-86ef-16d6e320be41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab53c626-8145-4ea6-8c2e-fa5a26763998",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a80e8969-6c61-4f2d-b07d-df235d85b310"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4b9a7d5-22ef-4c80-92b4-1d333286df60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43611cc8-0d3d-46ae-bdb0-940286fa945d"
            }
          }
        ]
      },
      {
        "id": "a5ed59a2-3c8a-4fdd-b734-8459cde6c169",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdc836ee-e66c-42e2-ab7d-1c9de52cc6bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "343451d9-d85c-4f52-a926-f68a994790ee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "adeda6e1-0e26-43d5-8e6e-30c724aacee4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae4ae927-ad20-4064-9d70-6d7fbd3b9160",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3d08490-757f-44df-b907-60436115214a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 557.8587786259542,
      "responseMin": 12,
      "responseMax": 6962,
      "responseSd": 775.6244216212517,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674175213050,
      "completed": 1674175370310
    },
    "executions": [
      {
        "id": "3a31a4f9-fb76-4101-a304-94a3aaf1af1c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4e28f48c-1390-42f0-b86c-f574c1dee83c",
          "httpRequestId": "4c1eae6d-93f0-4c6b-a2f4-8ac8fd2d5f63"
        },
        "item": {
          "id": "3a31a4f9-fb76-4101-a304-94a3aaf1af1c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "03aed24a-16f6-4a52-a9f0-00c94e4c83c6",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 0
        }
      },
      {
        "id": "971eee28-5add-4f1b-ad10-54f2bd49a6cd",
        "cursor": {
          "ref": "cafc922d-c751-46cd-891f-2c9056eebcc7",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c2a33f74-cd31-42b5-9d50-e9706eb495a5"
        },
        "item": {
          "id": "971eee28-5add-4f1b-ad10-54f2bd49a6cd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d00f8a68-6145-4a55-9c3f-6cef438da172",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "d362aed1-ee0c-41c6-aac1-a60937c3b34b",
        "cursor": {
          "ref": "b841620e-3bfd-4f5b-b8be-62130abe305b",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7ac40d24-61f6-4732-b476-40287ed05a74"
        },
        "item": {
          "id": "d362aed1-ee0c-41c6-aac1-a60937c3b34b",
          "name": "did_json"
        },
        "response": {
          "id": "abf77e33-00e1-4a45-856f-06543b498340",
          "status": "OK",
          "code": 200,
          "responseTime": 762,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70216f39-9adb-4a93-98eb-0a63667d2f1c",
        "cursor": {
          "ref": "d3579b1b-dfa6-4a5b-be70-c3f2200b9c1d",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "551ae6ed-3d97-4257-9759-5f3f5d6c2277"
        },
        "item": {
          "id": "70216f39-9adb-4a93-98eb-0a63667d2f1c",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b330e0f-a746-4012-8d64-23c2827832ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 986,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70216f39-9adb-4a93-98eb-0a63667d2f1c",
        "cursor": {
          "ref": "d3579b1b-dfa6-4a5b-be70-c3f2200b9c1d",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "551ae6ed-3d97-4257-9759-5f3f5d6c2277"
        },
        "item": {
          "id": "70216f39-9adb-4a93-98eb-0a63667d2f1c",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b330e0f-a746-4012-8d64-23c2827832ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 986,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c53292-8b45-464c-a03b-737f2f96d9d2",
        "cursor": {
          "ref": "2d0b62e5-b2eb-4b67-a7fa-f22279c0ca5a",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e5bacce2-11b0-4938-a1d4-05e1c879b495"
        },
        "item": {
          "id": "41c53292-8b45-464c-a03b-737f2f96d9d2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fff9e1e8-e844-4d48-bff5-c82eacb47504",
          "status": "Not Found",
          "code": 404,
          "responseTime": 680,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604157f0-f621-415e-8db4-d15e4a4118e3",
        "cursor": {
          "ref": "daf87a01-807f-4a83-b7a8-2b1582e4774b",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6dc46e20-8407-46c3-8196-80284ea21ee4"
        },
        "item": {
          "id": "604157f0-f621-415e-8db4-d15e4a4118e3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "feabc22a-13d4-4c66-aaab-5bec5c068279",
          "status": "Not Found",
          "code": 404,
          "responseTime": 869,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52b3f65-a208-4ad1-b30b-b4f71e0149d7",
        "cursor": {
          "ref": "d2f0a6b1-0655-473e-81f7-b4103a271e83",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0fcff675-963e-444e-b81e-4718565b9908"
        },
        "item": {
          "id": "c52b3f65-a208-4ad1-b30b-b4f71e0149d7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c8494363-da5b-4aa0-a601-594d4cf3dc4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a894bd76-4b88-4c05-acdc-4608533607b3",
        "cursor": {
          "ref": "b4862ecc-f9be-44cf-81c5-458b7615da97",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "04cd4ada-31b1-49fc-9761-d34dc290ac76"
        },
        "item": {
          "id": "a894bd76-4b88-4c05-acdc-4608533607b3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "60c9f4db-9e57-4fcb-bd9e-de2473ce582c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 622,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a894bd76-4b88-4c05-acdc-4608533607b3",
        "cursor": {
          "ref": "b4862ecc-f9be-44cf-81c5-458b7615da97",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "04cd4ada-31b1-49fc-9761-d34dc290ac76"
        },
        "item": {
          "id": "a894bd76-4b88-4c05-acdc-4608533607b3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "60c9f4db-9e57-4fcb-bd9e-de2473ce582c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 622,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4b188d-30b1-42f8-974b-456c7bc35805",
        "cursor": {
          "ref": "01634a28-f1a9-4181-8a77-52e6e77b9317",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c6363172-2f0c-4388-bf20-5c33e2b3b74e"
        },
        "item": {
          "id": "7e4b188d-30b1-42f8-974b-456c7bc35805",
          "name": "identifiers"
        },
        "response": {
          "id": "5ad6b900-a180-4ebd-a506-4987c5753ae8",
          "status": "OK",
          "code": 200,
          "responseTime": 854,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6b029-2fac-43d5-a867-1e4beaceab47",
        "cursor": {
          "ref": "1d953125-f138-457a-b1e3-9d3732c1620b",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0479c26d-4568-4a47-9bac-b525c184f77c"
        },
        "item": {
          "id": "02b6b029-2fac-43d5-a867-1e4beaceab47",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c96fd64a-5e2c-4d97-8db1-4331c0d4757e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6b029-2fac-43d5-a867-1e4beaceab47",
        "cursor": {
          "ref": "1d953125-f138-457a-b1e3-9d3732c1620b",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0479c26d-4568-4a47-9bac-b525c184f77c"
        },
        "item": {
          "id": "02b6b029-2fac-43d5-a867-1e4beaceab47",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c96fd64a-5e2c-4d97-8db1-4331c0d4757e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3a39f3-9e89-43d8-9e10-03ea9fcdff15",
        "cursor": {
          "ref": "ad607215-a425-4df6-a2cd-7051aae45489",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a14a7946-2507-4914-919b-142ea9a12ce9"
        },
        "item": {
          "id": "de3a39f3-9e89-43d8-9e10-03ea9fcdff15",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f585bb0d-ff0d-4fb2-8aff-621bbc140606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f0b54c-6d77-4e9a-ad9f-e0e07d128c15",
        "cursor": {
          "ref": "4c3a374b-4298-4377-9357-3ae90d8fad20",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "580693d4-1a88-41d6-951f-9cd28ced0f5b"
        },
        "item": {
          "id": "77f0b54c-6d77-4e9a-ad9f-e0e07d128c15",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "2ae3ecaf-8863-4412-93ca-e4ffb5f63e1e",
          "status": "Created",
          "code": 201,
          "responseTime": 2538,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "bc521469-118b-4d6f-a41e-55b9356d9e02",
        "cursor": {
          "ref": "cd753ffc-0bdc-4f7d-97c5-567b26a0fbeb",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b64f522f-b8fd-45f0-8684-7fbd7ac47e13"
        },
        "item": {
          "id": "bc521469-118b-4d6f-a41e-55b9356d9e02",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "da92a3d3-eea7-4664-9ae2-69d1f6ac7845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf02a82-5ad3-4af4-bc45-21e103955ed3",
        "cursor": {
          "ref": "02f00829-399c-451c-bec0-44ea4312e63e",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5946ba6a-954a-4391-ba8b-173b144305a1"
        },
        "item": {
          "id": "6cf02a82-5ad3-4af4-bc45-21e103955ed3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6b7f063f-967c-4ad8-969f-d1964d2b8af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8c290e-d82e-4944-91a3-1efb4e500fe1",
        "cursor": {
          "ref": "80502223-6ba4-440f-a155-b16ce94eed53",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4bb68e50-ac86-4b48-9097-8692f27b996f"
        },
        "item": {
          "id": "4e8c290e-d82e-4944-91a3-1efb4e500fe1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "99ccab57-dfa3-491e-879a-8d79653bb6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3515dab1-0567-416e-ab4b-8bd804d98a74",
        "cursor": {
          "ref": "9ba6ce09-3c9c-4747-9299-c537b687529e",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "141b95da-4d26-43b2-ba7c-472b5b30cdb5"
        },
        "item": {
          "id": "3515dab1-0567-416e-ab4b-8bd804d98a74",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d2d9307a-9c23-4e4b-9a97-68027ac5617c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a559f1c5-e4c9-4407-99ed-d2725098de78",
        "cursor": {
          "ref": "dd3cd4ba-fa2d-432b-85e9-f6caf5b25339",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "23774062-2e01-4a8c-87f4-35985f6fcbb1"
        },
        "item": {
          "id": "a559f1c5-e4c9-4407-99ed-d2725098de78",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "183d5eab-9dfd-4868-90f2-7aad5b686b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9edba32-4d1d-4650-a3b7-6e0f6784f3eb",
        "cursor": {
          "ref": "fde90d63-cfe6-49c2-802e-9d73a8f6c614",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b695db0d-5104-4941-b61c-532b9a4194f9"
        },
        "item": {
          "id": "a9edba32-4d1d-4650-a3b7-6e0f6784f3eb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "53f86091-ed19-4dfc-b0c6-cc7415cd9bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7905b451-823e-4fc5-8be3-384c48c59986",
        "cursor": {
          "ref": "2ebbef7d-b4d7-4956-93a5-77c35e38ec1b",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aca0cf37-95e8-45e4-896c-3a9f71f03e11"
        },
        "item": {
          "id": "7905b451-823e-4fc5-8be3-384c48c59986",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1eee62aa-ef15-4af5-a43c-98b0a8211cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a9b50c-c80c-43f4-a58c-78996fab3963",
        "cursor": {
          "ref": "6bf3b691-3526-43c5-9d86-54f483a68eec",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52f811d1-c0b2-4c60-aa26-e8d0f3687060"
        },
        "item": {
          "id": "87a9b50c-c80c-43f4-a58c-78996fab3963",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "28123315-0e79-4c4b-8fa8-d385ec474162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb114d08-875b-4b91-96b5-0cc1a3e1c04b",
        "cursor": {
          "ref": "8a6683fe-698f-4783-a8e4-96785e135288",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "be85b28a-bc55-4698-b26d-7565dcae9d28"
        },
        "item": {
          "id": "fb114d08-875b-4b91-96b5-0cc1a3e1c04b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3c603d14-ec66-44fc-a48e-89bbc93af89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4f735f-d4c4-4145-861c-6dd74e262ec0",
        "cursor": {
          "ref": "06180969-c8d8-4fb3-bdc0-c928ea912a46",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bc3d780b-9a89-4578-93a5-d5ba242e84eb"
        },
        "item": {
          "id": "ff4f735f-d4c4-4145-861c-6dd74e262ec0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e8861707-c1e1-436d-b220-436213a2b8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01447ba6-59f8-4d37-8578-a172bfdb6e4e",
        "cursor": {
          "ref": "6633657b-cce2-4931-9ad7-4b9e3408db54",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "94d5ba80-661d-44bd-b011-499bed5e30e9"
        },
        "item": {
          "id": "01447ba6-59f8-4d37-8578-a172bfdb6e4e",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "ac3215b4-d668-400c-9758-80a136cb5065",
          "status": "Created",
          "code": 201,
          "responseTime": 4189,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "ced86cf5-8fec-49ee-8bab-a8fff51f385f",
        "cursor": {
          "ref": "2ba1421b-1313-474e-baab-73096cc463ee",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "023e94f6-b3d8-4321-8643-06627c42b789"
        },
        "item": {
          "id": "ced86cf5-8fec-49ee-8bab-a8fff51f385f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1f1f02fb-3cb9-4be8-be01-694f36a49eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90ceb93-11a2-4bdc-a3c2-d4478448ef66",
        "cursor": {
          "ref": "5a9fe8c5-3e5b-447b-b10b-3da245fbf272",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "53fedd30-cfc1-44a8-8b47-3cee633b0063"
        },
        "item": {
          "id": "f90ceb93-11a2-4bdc-a3c2-d4478448ef66",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cc4d52d3-cc36-40f3-a5c2-be21d8996ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce93172e-b0fb-45f2-8a2e-a66209c39ee7",
        "cursor": {
          "ref": "7b693b52-8dfd-4d40-a9cf-9ed77e1de231",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fd082321-d41c-49a2-afed-f7c950caa733"
        },
        "item": {
          "id": "ce93172e-b0fb-45f2-8a2e-a66209c39ee7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4261d100-d23d-4f00-94ad-9d0b70005198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4844db1-5c88-4b0f-ac67-62cd1b3e7720",
        "cursor": {
          "ref": "084e74a4-6a54-4fd8-b0ff-e43311c5f5ff",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f1ba599b-efdd-43f7-ac5b-bd75f4d49fbc"
        },
        "item": {
          "id": "a4844db1-5c88-4b0f-ac67-62cd1b3e7720",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "af2780d6-6d2e-4213-acf6-27cee8b7fb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd20e5c-233c-402f-9f79-c2b0aa4c2218",
        "cursor": {
          "ref": "ced15e2b-c8ca-46e4-94a9-9521627070d9",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e0e3c36e-a649-4590-9100-e8acb39d3b47"
        },
        "item": {
          "id": "0fd20e5c-233c-402f-9f79-c2b0aa4c2218",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b3c47af0-4dcc-47b0-93c2-e36cd8d3992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d25494-1b78-4e71-b4f9-77c7309c088a",
        "cursor": {
          "ref": "6fe04892-2c83-49e9-90e4-d453e5ced00b",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3f3c1f61-53c8-4eb8-ad30-8e65e5ffd783"
        },
        "item": {
          "id": "85d25494-1b78-4e71-b4f9-77c7309c088a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "64e38627-55b0-4682-a085-c81d6d5cba43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171f645f-4b4d-49c4-ab8d-2dc32cb780bd",
        "cursor": {
          "ref": "541b81b4-671d-491e-b58c-567a2f312bf1",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a7bc19e4-93c9-443c-ab66-de7112bb3ad4"
        },
        "item": {
          "id": "171f645f-4b4d-49c4-ab8d-2dc32cb780bd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b23764e7-9c87-4ab4-92b6-ddbd1fc14987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b470347b-03cb-47b3-aa19-2cbfb448da54",
        "cursor": {
          "ref": "92fb5a32-3ae9-4f38-b5f4-b1c6de539501",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f6f5f223-24b9-4aab-9c7e-29c738a06fca"
        },
        "item": {
          "id": "b470347b-03cb-47b3-aa19-2cbfb448da54",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7dab4383-5b4a-4695-980d-edd2bda8b2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c9aa32-0c66-43bf-93df-38efca962987",
        "cursor": {
          "ref": "9c36006f-4333-4625-889b-ce2324b56b32",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "89f3abd7-9974-43e9-950e-c4bf2293319b"
        },
        "item": {
          "id": "f8c9aa32-0c66-43bf-93df-38efca962987",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "64324e79-d6dc-4321-9556-3abafeec8848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc350303-c5cb-4250-8481-2b8e41b004c7",
        "cursor": {
          "ref": "d77e9983-042c-4cf9-a2fe-d8c6b8231669",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3683307c-7a5e-4416-adf5-7097b5f1a23a"
        },
        "item": {
          "id": "bc350303-c5cb-4250-8481-2b8e41b004c7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0bfb9c22-bb4f-4b4f-8b59-e25909180da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1369a3d0-5f85-4fc1-b70f-4cb05196473b",
        "cursor": {
          "ref": "b27534c6-49c3-4cc9-a2d8-f03859e5c922",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c0185bfe-13e2-4cd7-85b0-c2b6a5128338"
        },
        "item": {
          "id": "1369a3d0-5f85-4fc1-b70f-4cb05196473b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "13920fd9-ba61-4a44-9c15-5981ae15a6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06adbad4-2a55-428c-9d55-37c9a816559e",
        "cursor": {
          "ref": "f9f2f1bf-a995-421d-a047-b6f561f631d7",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "248da69f-d363-4c70-a1be-f3f9ad487944"
        },
        "item": {
          "id": "06adbad4-2a55-428c-9d55-37c9a816559e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e99bb241-bf92-4f62-b969-643c1a54f732",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1640,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "2835d2bb-beb7-4c2a-9e6a-2122815fbaf8",
        "cursor": {
          "ref": "0c58b70c-9886-4eef-a485-5c903b5b8e13",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ae250952-65d1-4578-8487-6f5f421ac9c1"
        },
        "item": {
          "id": "2835d2bb-beb7-4c2a-9e6a-2122815fbaf8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0474359b-05f8-4b46-9c10-13b169d383c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde7c551-4785-4b9e-b840-59139e559880",
        "cursor": {
          "ref": "7cb4f7c0-e9c0-441f-a3f2-404ce5ccdace",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8708f338-7480-4336-8e5e-500b2b668e66"
        },
        "item": {
          "id": "dde7c551-4785-4b9e-b840-59139e559880",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a75b34bd-76a5-47de-8463-18fe71439fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130abe92-4e56-4ab0-a9e1-32323f23b4c7",
        "cursor": {
          "ref": "24d3bfff-b82b-47de-9f61-f2a0b2eed5ef",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "be298bae-c7f1-41c2-ad3e-22466f8f798f"
        },
        "item": {
          "id": "130abe92-4e56-4ab0-a9e1-32323f23b4c7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b930363d-2926-4582-b60b-794d01754211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e71e46-d4c0-4ef1-91c7-317d8e091d93",
        "cursor": {
          "ref": "8e5a24de-73cb-46a1-860d-956d91cb79d0",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0926d093-8f9a-4a0f-ba3a-3015fecc800b"
        },
        "item": {
          "id": "12e71e46-d4c0-4ef1-91c7-317d8e091d93",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4f2373ad-8c9e-4393-9cce-d7b90c181265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b09305-f3f3-42ba-9336-f4932c10c21b",
        "cursor": {
          "ref": "4c292ebc-a888-44be-9c17-47c32b6b841b",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7f6491ef-57b5-481f-99f2-b138ba2cd26c"
        },
        "item": {
          "id": "34b09305-f3f3-42ba-9336-f4932c10c21b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "12c638ff-fc9d-4a03-b8dd-69c216e1befe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e74f07-f322-44c5-a763-d354265d0046",
        "cursor": {
          "ref": "b5bfa410-b430-4e75-9936-b03216de50c0",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6245a538-842c-49fd-b6ab-1ab932d4ac42"
        },
        "item": {
          "id": "95e74f07-f322-44c5-a763-d354265d0046",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "09597227-7ce0-4dac-a9f3-6dd52d032c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2ee4ee-e87e-455e-bd15-d962027a905a",
        "cursor": {
          "ref": "ccb38e81-74fc-431b-a305-6e4cba10c3eb",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0fc848ca-7c31-4d69-945a-fd3f48f31ce2"
        },
        "item": {
          "id": "ec2ee4ee-e87e-455e-bd15-d962027a905a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9f9a8c68-77a8-42e8-a55f-3d05b3f59335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aa7994-b8d4-4984-b7ff-4f6d78a9045c",
        "cursor": {
          "ref": "d843f82f-ea54-4ff9-abeb-3471677f669d",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cb8c8c8b-3462-4da5-9379-d74136970d2e"
        },
        "item": {
          "id": "29aa7994-b8d4-4984-b7ff-4f6d78a9045c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "08daca9e-4f58-4cd1-b44e-71ba80b01345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a58214c-dddc-408d-b7d8-b9b4e9b23e5c",
        "cursor": {
          "ref": "8a2e81ae-f504-4326-b807-2b35b0ac963d",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3fe86def-eef9-4105-a23f-5a85e69b61cc"
        },
        "item": {
          "id": "9a58214c-dddc-408d-b7d8-b9b4e9b23e5c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8bf0ed2a-cd88-46ba-9e77-dc68e5b3b0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae82ed9-3d27-46d8-9c76-849cc1c247a9",
        "cursor": {
          "ref": "d2225af2-9858-4acd-b8ce-5573ba96169b",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a519ff05-f98b-428c-a4f8-3a710870b9d9"
        },
        "item": {
          "id": "3ae82ed9-3d27-46d8-9c76-849cc1c247a9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3523c4a9-b1cf-44e2-a8e2-bee272512870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7066cd-5352-4056-b3b3-b963bc205a7b",
        "cursor": {
          "ref": "00f78caf-41c4-404c-b68f-01842c09e2aa",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "02771611-0c88-4fcf-a753-fa8ea16fddeb"
        },
        "item": {
          "id": "5f7066cd-5352-4056-b3b3-b963bc205a7b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ff488b7c-76b2-488f-8b87-18d65fd549c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03186928-3509-4d85-a3d3-851f18255f73",
        "cursor": {
          "ref": "4b92d140-5d78-4707-b00c-de968cc8ad76",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "88e345f0-b72a-44d4-8bcc-7a6892c1aa12"
        },
        "item": {
          "id": "03186928-3509-4d85-a3d3-851f18255f73",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "26cf083d-20ba-4ab9-a28e-dbb41d84743d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 544,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc80adc-4b36-45b7-98d3-dddfa32861b4",
        "cursor": {
          "ref": "aafd0824-1fc6-45d4-87ee-874b8e0bbbcc",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "10b92aa4-cd3d-4bc5-83a6-212337132275"
        },
        "item": {
          "id": "7bc80adc-4b36-45b7-98d3-dddfa32861b4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8a895ae2-6486-463f-b154-9d5b4a26ae4b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 472,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "19e3833b-d2df-4440-9cb8-ac448ac13fe6",
        "cursor": {
          "ref": "100314e4-b2b3-42bd-ae7e-fa123d7c9690",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3a3c8c3d-9e88-4b45-b37e-df32d4cd819e"
        },
        "item": {
          "id": "19e3833b-d2df-4440-9cb8-ac448ac13fe6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29a8cc23-9162-4100-821a-5f96e0fda919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04afd68-bd02-438f-bac8-00b8d4151bff",
        "cursor": {
          "ref": "913be496-f275-4e30-b59c-ce737517067e",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "43a2d015-0b64-4c76-879e-3e39ce2469e5"
        },
        "item": {
          "id": "e04afd68-bd02-438f-bac8-00b8d4151bff",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9f331460-c544-4e15-aee2-856ed1361000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641ec137-59bb-4915-a503-aa107a41e526",
        "cursor": {
          "ref": "c7d70bf3-2103-4cbc-b89f-1953fbe4a010",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ede7703d-f892-4b4a-a1df-4b69f05288fe"
        },
        "item": {
          "id": "641ec137-59bb-4915-a503-aa107a41e526",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ae8f6aec-1643-4f85-894b-9387caca3e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18851fe1-07eb-4f24-8377-a34da44a3e29",
        "cursor": {
          "ref": "d521cc77-e9a1-43cb-817f-2c31f7cbbfda",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a0ac08c2-5821-40f0-9c4b-4dcfda7ddbaf"
        },
        "item": {
          "id": "18851fe1-07eb-4f24-8377-a34da44a3e29",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3bef6d2b-bc93-49e4-a699-4fb5a389419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3713fb7b-ace8-416c-a6c8-19ef6c5c4793",
        "cursor": {
          "ref": "a42953ee-ea22-4886-8e49-d4562912878a",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7c8119d7-bb3f-4c21-a6ae-16758349cfb4"
        },
        "item": {
          "id": "3713fb7b-ace8-416c-a6c8-19ef6c5c4793",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e15f0aaa-45ef-43bb-b272-e020508f17ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5504e2a5-44dc-4b64-bd58-c87e99a696d5",
        "cursor": {
          "ref": "db81a45c-d3a6-4c09-aab8-2989cbcdff2a",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6803b9ee-fe3b-4c91-be52-66828c00c963"
        },
        "item": {
          "id": "5504e2a5-44dc-4b64-bd58-c87e99a696d5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b3f90ff-c78a-4f52-957d-8f25390c8a0e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 552,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33661e54-edff-4a59-8449-96a3d55f75ab",
        "cursor": {
          "ref": "a5400973-e1e9-4368-abdb-c7e4d90e4fe9",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b07cdf08-a2af-4f86-9454-7609dbada96e"
        },
        "item": {
          "id": "33661e54-edff-4a59-8449-96a3d55f75ab",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0e40f7f6-dd0c-44a4-b85f-0c669137b03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4922aa76-0454-4292-a0e1-06213a767940",
        "cursor": {
          "ref": "cce5539b-1a4f-43be-a8d2-a3967aedaa36",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6304f6a6-446e-4b9a-8804-9ded611eb2a1"
        },
        "item": {
          "id": "4922aa76-0454-4292-a0e1-06213a767940",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4ebaf782-8027-4179-b087-951bf3ce8241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8458e3e2-4a37-4805-b137-4c2abea76cdb",
        "cursor": {
          "ref": "3f94f16e-649f-48f7-b87a-c36632b2c3b9",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1f6a05e6-b591-4e58-9d9e-7968f802bade"
        },
        "item": {
          "id": "8458e3e2-4a37-4805-b137-4c2abea76cdb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cc1ec5e9-0320-4ae3-b298-ccb218cbe52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698c2c00-a132-42bf-9094-4f3f1502c75a",
        "cursor": {
          "ref": "85ea5c11-49ec-434f-9268-5b84e3e99118",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5e839a41-4026-42c2-8245-e1168d8f8c35"
        },
        "item": {
          "id": "698c2c00-a132-42bf-9094-4f3f1502c75a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ac5ed40e-d32e-40e6-b5c1-c270618443f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8c9387-7ed8-4a1d-aa9f-96b188843b4a",
        "cursor": {
          "ref": "9a9ee4ab-a4ad-481e-b077-77b594e6bace",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5eb9e215-4053-4c07-8888-6355072c6c0c"
        },
        "item": {
          "id": "ee8c9387-7ed8-4a1d-aa9f-96b188843b4a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8e32d975-2ba4-4a4e-988b-97da2ef36e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e40142-d5e7-4fd8-b68e-689325c08954",
        "cursor": {
          "ref": "a06151e5-00ad-432f-8b8a-9b7906bd2733",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "70de0420-1e60-4e7d-9716-9aa5e7a3bc5b"
        },
        "item": {
          "id": "c0e40142-d5e7-4fd8-b68e-689325c08954",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8e80f8de-7421-44a2-ad9d-be2db46dcb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4451f2d2-4f5b-449c-bede-416c424f423e",
        "cursor": {
          "ref": "76c168c9-f53a-463d-b184-2d0dcc6ce8cc",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0d0866f6-95eb-4caf-96fb-291ee8598e72"
        },
        "item": {
          "id": "4451f2d2-4f5b-449c-bede-416c424f423e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0fcb95f5-1a6d-4f82-aa29-94b00f58c776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e315562f-a83b-4eb7-9381-dab3fe1b0e66",
        "cursor": {
          "ref": "b9ca9b3d-a26e-41c6-b26f-2c47c4de4f49",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "75cf5ee1-76c2-47d3-a5c7-6b0ea3332b15"
        },
        "item": {
          "id": "e315562f-a83b-4eb7-9381-dab3fe1b0e66",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c935317d-e247-4cd1-85c4-b8387821df8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3810c5b4-c5a0-482f-8363-008336ddcd71",
        "cursor": {
          "ref": "4b4f6491-2d72-4221-8fa1-927132bfef08",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b34eac54-709d-419c-b951-046a3616c4e0"
        },
        "item": {
          "id": "3810c5b4-c5a0-482f-8363-008336ddcd71",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7466bb5b-a35c-4b80-96df-936f7362b33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ba7972-18ae-4ed7-a5f6-a82c08f315bf",
        "cursor": {
          "ref": "e812aec5-5249-49f7-a669-82d881ff489f",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a92468b4-07f8-4998-bf48-797cfd15c087"
        },
        "item": {
          "id": "d8ba7972-18ae-4ed7-a5f6-a82c08f315bf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "06a6c643-68fd-4db3-9e17-e0ea2a4c7e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5018e29e-ecdc-4c2b-8a22-b4988b358664",
        "cursor": {
          "ref": "3bc11af3-faa8-4331-98dc-257bd611b879",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "287ac17a-3407-4eba-9138-e11d15999058"
        },
        "item": {
          "id": "5018e29e-ecdc-4c2b-8a22-b4988b358664",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8398c228-cb58-4335-9aee-cfd882b7105c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bbd09c-3149-48da-8d23-42e0a1db9cc1",
        "cursor": {
          "ref": "e065a286-b73f-4616-a428-8cc122b21c7d",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e2e46edb-35a7-4256-8703-bd67194c7d5c"
        },
        "item": {
          "id": "64bbd09c-3149-48da-8d23-42e0a1db9cc1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3d67dec3-8be9-4779-bc8c-8b0ad7ce561b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfabb76-029e-4543-a05f-a4d39bfc2219",
        "cursor": {
          "ref": "0ad7d35e-c17d-492d-8072-f0d3100478fe",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2639de38-a0d8-47c1-be2d-77f9b5c791ae"
        },
        "item": {
          "id": "1cfabb76-029e-4543-a05f-a4d39bfc2219",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "563bfb19-d6d7-4ace-83e9-4148861e64da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b28585-ba2d-4030-93b0-804e5da21277",
        "cursor": {
          "ref": "57c8d034-a01a-4d1b-9dcb-7859a6ef7213",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f36f9401-6bde-4c44-a765-7397605e4e05"
        },
        "item": {
          "id": "41b28585-ba2d-4030-93b0-804e5da21277",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "05cfa728-28ed-4797-8342-44d948511ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e49328e-6874-4024-881a-61c63664e917",
        "cursor": {
          "ref": "75b9ea26-ce57-408d-8088-3dcde04f1a55",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "56119048-2e5d-46aa-bb74-5947bc03963e"
        },
        "item": {
          "id": "1e49328e-6874-4024-881a-61c63664e917",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "10407cd8-f2b2-4da0-9e40-b00228778e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eceb375-7c00-479a-8af2-d50cf6ef5a26",
        "cursor": {
          "ref": "edd4bc0a-5639-49e5-aa6b-de8f7bbfd8d2",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "28c10e85-6d60-49ff-8e24-d305ebbbfa33"
        },
        "item": {
          "id": "3eceb375-7c00-479a-8af2-d50cf6ef5a26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "568a87e1-c5c3-4bf8-994d-1dbbea7ff60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8c148d-37e7-4fb8-b5f2-7e7a8a0431a0",
        "cursor": {
          "ref": "6ab8b133-67b3-470e-860e-28880a2cec1f",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e1add277-6db7-4be6-ae71-e5b958e07c87"
        },
        "item": {
          "id": "3d8c148d-37e7-4fb8-b5f2-7e7a8a0431a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3c509471-ef23-4f11-95e2-c79d9ad2991f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2873160d-a78b-4cb9-95d8-b1dbc4ebdef3",
        "cursor": {
          "ref": "74e1dfd0-6365-4da8-a817-f107c2e6377d",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9e93e656-6477-479f-b04e-ad7e4447c9c8"
        },
        "item": {
          "id": "2873160d-a78b-4cb9-95d8-b1dbc4ebdef3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2ae6c8c0-fed0-4b08-90ed-090a65bff5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de3c768-73c2-4664-ae90-cd6db127b1c9",
        "cursor": {
          "ref": "30ed3312-c92e-4591-8127-ce71fbfa51f0",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "59d1c518-58af-4dfe-9ed7-3f35df280486"
        },
        "item": {
          "id": "4de3c768-73c2-4664-ae90-cd6db127b1c9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "13b7ce13-b5cc-4ef6-b348-161176fdd6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5b8b38-352e-4472-ab90-e253f9d471d9",
        "cursor": {
          "ref": "393669ef-b903-4aa1-86cf-c89562ff933e",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a770527e-79a0-489c-b688-c6cb14a837b7"
        },
        "item": {
          "id": "8f5b8b38-352e-4472-ab90-e253f9d471d9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "352de90b-1ee5-4fa8-af3e-670450f09bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6629ed15-adc5-4470-8420-eec1bf50428f",
        "cursor": {
          "ref": "ad4b7acc-b8e3-47c7-a541-fe2fa3e0c367",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "84a11b3a-4fe8-4359-a5bd-55ae28cfda18"
        },
        "item": {
          "id": "6629ed15-adc5-4470-8420-eec1bf50428f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6443ae91-2320-448f-a1d7-73df779eb91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7b2aea-0cb1-4757-a372-b7d31db7864e",
        "cursor": {
          "ref": "4037c427-ec34-411e-802d-115864a702d4",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3d1c376a-c389-482e-a7cc-ebd622766f71"
        },
        "item": {
          "id": "8c7b2aea-0cb1-4757-a372-b7d31db7864e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bb8265e9-134b-4c90-ad87-07ba0b9592d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0783910c-0def-47bd-a62b-e62dd27b86da",
        "cursor": {
          "ref": "fed608da-5975-4de4-b8bb-7e761e9b7b62",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "993680b2-d9c0-477f-ab2d-f318887e11ba"
        },
        "item": {
          "id": "0783910c-0def-47bd-a62b-e62dd27b86da",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9627b849-320b-45e9-8ebc-0b73e25ffd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84781c9b-bc30-4c48-a1c9-af8da98ee330",
        "cursor": {
          "ref": "ee261220-4976-4c23-878b-c970b6359581",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a94e46da-5a24-451c-84f6-f0600f16ae8f"
        },
        "item": {
          "id": "84781c9b-bc30-4c48-a1c9-af8da98ee330",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2f31c916-a2b6-4c61-a6d6-c5e10a599b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48839623-de45-440e-941e-69a049a66766",
        "cursor": {
          "ref": "96dbd56f-dba6-4167-8369-8d6968105b43",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "10bc0dc7-9dc6-4a24-9eb2-381aea504985"
        },
        "item": {
          "id": "48839623-de45-440e-941e-69a049a66766",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "75b7dbdc-edcf-455c-9d7c-d1f7b15bbb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20249190-913b-48d7-acba-6a95dfb9c2b2",
        "cursor": {
          "ref": "e4fcd1e9-9b8b-4464-9811-59e05f17cedd",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a50f69bf-a2db-4c15-b08d-5224d4e47b85"
        },
        "item": {
          "id": "20249190-913b-48d7-acba-6a95dfb9c2b2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "69e7b0c5-ceb8-4a6a-b3df-deea7e00bad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5396e5-37e4-4526-a0ef-c9364681218a",
        "cursor": {
          "ref": "96a94782-a8c1-48bc-bf8c-e9f9d0ad3c6f",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "70a86d72-c4bf-41d2-a720-54b7f07a4e6b"
        },
        "item": {
          "id": "fb5396e5-37e4-4526-a0ef-c9364681218a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8c8d99e0-246b-4d09-92b1-6c3f9701450c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86511d98-9f8d-4d2c-94e3-73653b75bf49",
        "cursor": {
          "ref": "e835c12e-4832-47ab-9fb9-c6d75144540f",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "98ecdd5b-1da1-4660-ac44-17875d9bd6d5"
        },
        "item": {
          "id": "86511d98-9f8d-4d2c-94e3-73653b75bf49",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "994cf8fc-5bbb-4d00-8527-30b8920fdfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bb05a4-d60e-4567-bdd2-ed621fc0fb23",
        "cursor": {
          "ref": "1c781140-95b8-4af6-ade9-19ca4802a032",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d6584b9c-4bf8-46d7-be01-b89f7bc5aed9"
        },
        "item": {
          "id": "17bb05a4-d60e-4567-bdd2-ed621fc0fb23",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "36ef6b23-c428-455f-a4f0-16ab81c460a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdb10e6-912c-4a16-89b1-d20009f2cc6b",
        "cursor": {
          "ref": "7a9f9214-3421-44ba-8f31-78b246e00065",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09a6b82e-d4f8-47b5-af06-c9a1a360f8d4"
        },
        "item": {
          "id": "0bdb10e6-912c-4a16-89b1-d20009f2cc6b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f64c1112-29ea-4cd1-b763-2e04546f5797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5e40c7-db90-49d8-a26c-d64a9891627e",
        "cursor": {
          "ref": "638f1c51-5dbd-456d-8113-572c8f082b2e",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "577e9dbb-a414-495b-856f-81eded8b46cc"
        },
        "item": {
          "id": "0d5e40c7-db90-49d8-a26c-d64a9891627e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "55f3b10a-001d-455c-85c5-860cfaa7f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d53c7e6-6669-4008-aca4-80b7a47fecfc",
        "cursor": {
          "ref": "4be8f635-d44b-4376-aeea-ebc0e877fee9",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8e0a611d-3f76-4e9b-a9e7-a9c3594b0ec8"
        },
        "item": {
          "id": "9d53c7e6-6669-4008-aca4-80b7a47fecfc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eb9fdc21-a86d-41bb-9f0d-61d3f3007172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e485be-f85a-4311-914d-2c15392b2c56",
        "cursor": {
          "ref": "4dedd749-cc29-420d-9bb4-050d974389fb",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f3b72ac3-d8e5-4791-9af8-dde5d4e15e02"
        },
        "item": {
          "id": "94e485be-f85a-4311-914d-2c15392b2c56",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0fc79fd-8ddd-4cd2-9602-45d6389c16e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693a858a-6488-422f-a728-938db8dbd0c1",
        "cursor": {
          "ref": "b6298d0e-a3cd-4c56-950e-b782e2f4d8c9",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ba2e4f79-d310-4408-90cd-40fbd014d0c3"
        },
        "item": {
          "id": "693a858a-6488-422f-a728-938db8dbd0c1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5909e3b4-3828-496c-a688-58c0fcb813f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862de7b2-0526-4aa3-9f08-82c41487c84a",
        "cursor": {
          "ref": "76d65c21-13ce-40e1-88fb-b428cd5456b3",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7402c6b0-83c1-42c8-aa6d-bd21dcfac5c2"
        },
        "item": {
          "id": "862de7b2-0526-4aa3-9f08-82c41487c84a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7a582840-5e3a-41c0-ad3e-7d862a69193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27107b0f-e3e9-4bc9-9b5c-a5b872e52568",
        "cursor": {
          "ref": "06415b2f-c464-4539-ae03-78a2e26ef531",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b9b950a9-88e2-44fa-a5e6-4dad49141b79"
        },
        "item": {
          "id": "27107b0f-e3e9-4bc9-9b5c-a5b872e52568",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fb0edddf-c783-49d9-91c5-5796dc92e393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e661e1-05bd-415b-a4e8-45c084e05d2e",
        "cursor": {
          "ref": "d2feeb9d-0563-422e-9eb8-4bba75b961bd",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "356e1f51-7bc0-458d-9597-92af1612b93e"
        },
        "item": {
          "id": "02e661e1-05bd-415b-a4e8-45c084e05d2e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "355e9194-484d-4010-91f9-16eb25bef80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a048c6be-bb2e-435e-b6a9-06492d8aaafe",
        "cursor": {
          "ref": "3926d930-b4b0-45cf-a32d-0e6082bf3812",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0fd323b3-cf89-4dde-93e3-2ca7204f8094"
        },
        "item": {
          "id": "a048c6be-bb2e-435e-b6a9-06492d8aaafe",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f14353ea-2d92-481a-9054-2e9950ea346f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec181ce5-b7dd-47b7-a377-f5a48ab5d36d",
        "cursor": {
          "ref": "c0213564-3426-4b29-b36f-5ef236c37bd7",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6fca5d3d-a2d5-4668-9644-680c1efc82aa"
        },
        "item": {
          "id": "ec181ce5-b7dd-47b7-a377-f5a48ab5d36d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8e0bce2c-b55f-4448-92f1-0d5317e45621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd801258-8d81-486d-9bed-4528feacb684",
        "cursor": {
          "ref": "0fb0190f-c8a9-44a6-b677-ad18f490cc91",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a3c652c9-fc11-49dd-b4ae-bd2b9ca51872"
        },
        "item": {
          "id": "cd801258-8d81-486d-9bed-4528feacb684",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b1ad0490-f871-47de-b767-74f2e579a8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb175a2-db1e-466e-8cfd-74ef59b6d1d4",
        "cursor": {
          "ref": "5e787b5c-ed4b-48d0-9326-487ccab0e23b",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "37125adf-aca7-4c82-b9fb-fba4b903d727"
        },
        "item": {
          "id": "3cb175a2-db1e-466e-8cfd-74ef59b6d1d4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "020d9b26-8b21-4951-80ec-b55ca2a5421d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccd3954-6094-469f-b407-39b2d25abc0e",
        "cursor": {
          "ref": "69730298-8970-4a02-91ea-b9514447c935",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e031f14d-9b93-44ea-99d4-ceba6558aa83"
        },
        "item": {
          "id": "eccd3954-6094-469f-b407-39b2d25abc0e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c37b890c-3019-4c8f-a784-89ec7f9d54e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e146c9-958d-411a-8de1-4a02b98fb9b3",
        "cursor": {
          "ref": "3fa53c34-47a1-4358-8984-13f68855495d",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e645bc93-9707-4b65-8ac2-eba379e2145e"
        },
        "item": {
          "id": "82e146c9-958d-411a-8de1-4a02b98fb9b3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6553378d-d5d0-4ead-97dc-5ee0dfb39a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4d37ee-3cd0-41ba-9888-32dc870beae3",
        "cursor": {
          "ref": "9e266494-d22c-4bda-8291-517ef1cc9ed1",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6029398c-d014-413b-ab13-d880bf8d243e"
        },
        "item": {
          "id": "8e4d37ee-3cd0-41ba-9888-32dc870beae3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "708792dd-d2cf-48b4-bdf3-46c235fb164b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294d4666-ba4b-4d75-8862-6ffec9d66ea6",
        "cursor": {
          "ref": "4ce2caa5-06ae-4d21-9474-11d6d73b02b3",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "af49baf3-110c-4b3b-b51d-1045da37c3bf"
        },
        "item": {
          "id": "294d4666-ba4b-4d75-8862-6ffec9d66ea6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "73ee4729-030a-40fc-9c78-d45976b24936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4ce2e9-752c-4d25-8b37-b7f7897cc8b5",
        "cursor": {
          "ref": "bc020164-c9b2-41b4-bfad-3e0b1736d5d5",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5fb39cae-0869-4b16-aa7a-b2b865014ee5"
        },
        "item": {
          "id": "bf4ce2e9-752c-4d25-8b37-b7f7897cc8b5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0493d03b-6998-4b1c-b9a1-c385781c05d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b325f4-1950-4191-99d8-bc71770b98ef",
        "cursor": {
          "ref": "5797bc41-c32e-4f73-b2bc-12664cc577a0",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eefbd800-73f3-474e-9403-15f3750c46cb"
        },
        "item": {
          "id": "a0b325f4-1950-4191-99d8-bc71770b98ef",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "47c2e770-a267-4fde-b4ad-b7481e6b53be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4f75d4-7412-4ac7-8fdc-bbbf558029f7",
        "cursor": {
          "ref": "6dffdb0e-b0fe-445d-b6fd-438ed11e100c",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2f79aefe-61db-444b-bac6-3ebff0f8ae68"
        },
        "item": {
          "id": "cd4f75d4-7412-4ac7-8fdc-bbbf558029f7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0aa0c975-23cd-4bae-a0ed-cb68d02024dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b106e87d-386b-4251-a890-378941db3970",
        "cursor": {
          "ref": "4da25aad-b89e-450d-bddd-c0d0588c57f1",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0c640853-da4e-4c60-abcb-9698cc8abdfd"
        },
        "item": {
          "id": "b106e87d-386b-4251-a890-378941db3970",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a36d92aa-84ff-4e68-9fa9-822fb8dd20a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedace13-dfa1-4a16-9f55-d8ef87b238f9",
        "cursor": {
          "ref": "251431a8-0892-462d-b12d-7da370084ea9",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "307109a7-338e-4f0b-8848-75805120baa3"
        },
        "item": {
          "id": "fedace13-dfa1-4a16-9f55-d8ef87b238f9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3c3f3afb-fa69-499f-9dff-3d8b6c95a923",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d994ee-c061-4d52-b3e9-9a81764940b2",
        "cursor": {
          "ref": "a9fd94ce-d3bc-417a-8b07-4411c975d687",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f848904b-8af7-4d13-bfa2-226fe8533e58"
        },
        "item": {
          "id": "f1d994ee-c061-4d52-b3e9-9a81764940b2",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0f0166b2-0817-4b3b-9f3e-4e28a46149e0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 496,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6100e6-b250-4040-b425-b32ab2edb11b",
        "cursor": {
          "ref": "4fc654b0-234e-419b-a16e-11c5d8cc1f4e",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "291e9cd6-19ea-43ac-b5d7-80013ff725ea"
        },
        "item": {
          "id": "4f6100e6-b250-4040-b425-b32ab2edb11b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "809c9cb1-25d5-43df-a0f8-10025d0654fc",
          "status": "Created",
          "code": 201,
          "responseTime": 4727,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "aae79f89-7f73-4039-b559-e7795f7ef8e3",
        "cursor": {
          "ref": "bbc441d8-4cd5-45ba-bb00-03828168d8de",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8875b40b-0598-4f83-b13d-99b0e85ba5f5"
        },
        "item": {
          "id": "aae79f89-7f73-4039-b559-e7795f7ef8e3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f69bdf0b-2421-4ebb-89b5-4507387ca28d",
          "status": "Created",
          "code": 201,
          "responseTime": 6962,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "21f8b655-0c28-487e-b6ac-591e3d9f04d2",
        "cursor": {
          "ref": "04f6f672-c3d6-4ad2-83c9-7b14d246355a",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3073c78f-2110-4b80-ad97-d16204e23084"
        },
        "item": {
          "id": "21f8b655-0c28-487e-b6ac-591e3d9f04d2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "688d173f-f13e-4039-b19a-8dc67240fad6",
          "status": "Created",
          "code": 201,
          "responseTime": 5478,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "a471c13e-b46f-4ea4-ae46-b0b29a5e7842",
        "cursor": {
          "ref": "cd097522-b8b6-426e-bc42-c3707fbaabb3",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "91ca4b4f-bf63-406e-82e0-cb11b459bb1d"
        },
        "item": {
          "id": "a471c13e-b46f-4ea4-ae46-b0b29a5e7842",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "411c954f-4488-420f-8bd1-528014ea04ba",
          "status": "Created",
          "code": 201,
          "responseTime": 4426,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "eff11080-605a-40e5-bbe9-3763166dedf2",
        "cursor": {
          "ref": "d06af94e-8204-4616-8343-5de2902973d3",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dd2a200b-792f-4dc3-a6d2-a180caf6636a"
        },
        "item": {
          "id": "eff11080-605a-40e5-bbe9-3763166dedf2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e6f073e2-c6bd-45a1-aad1-a5efe48c06ac",
          "status": "Created",
          "code": 201,
          "responseTime": 5683,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "492e8fdd-8968-4b3e-bc77-86e38c63d862",
        "cursor": {
          "ref": "c146466a-4d38-4f15-8363-f5905a105844",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "07399036-9540-44f0-aa2f-015a255811c3"
        },
        "item": {
          "id": "492e8fdd-8968-4b3e-bc77-86e38c63d862",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec40a282-21c2-4002-b9c9-ac6f217d9a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492e8fdd-8968-4b3e-bc77-86e38c63d862",
        "cursor": {
          "ref": "c146466a-4d38-4f15-8363-f5905a105844",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "07399036-9540-44f0-aa2f-015a255811c3"
        },
        "item": {
          "id": "492e8fdd-8968-4b3e-bc77-86e38c63d862",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec40a282-21c2-4002-b9c9-ac6f217d9a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03606e09-f87f-4d83-9c42-5ab1e5953633",
        "cursor": {
          "ref": "faf13e54-24f7-4051-9b4a-0fa0dff3d817",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0cbb890b-a7fa-4ec7-92f2-f95ce570f0b1"
        },
        "item": {
          "id": "03606e09-f87f-4d83-9c42-5ab1e5953633",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3541283a-7f99-4114-b3a9-368da4be6bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e180d5-3f02-4335-99ee-2c137ca6b3cd",
        "cursor": {
          "ref": "a95f8b4a-4a49-43e6-be65-4d1b573cfc79",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "db90cf0f-7036-4871-b7e9-37ecef0e4dd7"
        },
        "item": {
          "id": "73e180d5-3f02-4335-99ee-2c137ca6b3cd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f31101ad-1623-404f-a634-3b5c097051d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977a1526-94be-4a9e-a355-dc0cc09413b4",
        "cursor": {
          "ref": "d4677fe4-a7ae-4013-be0b-c52999c12588",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eb4a13ec-715d-48dd-a2bf-cb7f1371331b"
        },
        "item": {
          "id": "977a1526-94be-4a9e-a355-dc0cc09413b4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bdfe5fde-a0fb-43dd-9175-1954d9f3946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c2a6b0-1809-4836-be14-6c9470b84147",
        "cursor": {
          "ref": "12d810dc-2e6b-4413-b513-b85323efe0f3",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b8a7985-cacf-4457-bd3f-3fd1446de5b3"
        },
        "item": {
          "id": "a0c2a6b0-1809-4836-be14-6c9470b84147",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e40c81b8-8480-4ae7-b230-6e1fd3c25ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaafd91-a741-4b8a-9e22-6133f0df92b8",
        "cursor": {
          "ref": "7d598648-189d-4e7f-9d20-f996c47060fd",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "175ceee2-cb63-4e5d-b91f-d929051e0760"
        },
        "item": {
          "id": "dbaafd91-a741-4b8a-9e22-6133f0df92b8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a07c48a0-e346-4044-add6-1584457ca27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1eb0c61-eb82-405f-a629-abfb78781ef7",
        "cursor": {
          "ref": "d42a4a48-83a7-4f6b-b8a4-31329b84da35",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2e123752-e4fd-4f6b-8a62-8af85459cade"
        },
        "item": {
          "id": "f1eb0c61-eb82-405f-a629-abfb78781ef7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ef4baa71-c2b2-4276-8630-f2762eeeb704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86be6fda-d3ef-4578-9d4e-b908a0d590ff",
        "cursor": {
          "ref": "305c0833-1742-4381-a4ce-28c3418758a6",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0898679f-e14b-48d3-8bba-b0d426688e92"
        },
        "item": {
          "id": "86be6fda-d3ef-4578-9d4e-b908a0d590ff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b24fe00c-34f0-4249-9825-1d55ed37d37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713f4ede-bb36-4a14-a6a7-72188e576d34",
        "cursor": {
          "ref": "97ca55b7-79cd-4eae-a3d2-b265c43adf48",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a9f66b3f-99fb-4d51-b2b4-bbb7ebd3ac1d"
        },
        "item": {
          "id": "713f4ede-bb36-4a14-a6a7-72188e576d34",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a01b943c-e172-43b1-ad18-39952e6917aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9f46a6-5230-49c0-9df8-2fa7864c7284",
        "cursor": {
          "ref": "4f2c6f88-3551-4737-8f99-5c372f23e0db",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c8a80182-259e-4ddc-999f-e65d2147b14f"
        },
        "item": {
          "id": "6d9f46a6-5230-49c0-9df8-2fa7864c7284",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "21cdd603-fa91-490f-ab1d-a0ede7233b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b28a0dc-d74b-4dea-8f53-cd4dd99018fb",
        "cursor": {
          "ref": "db5e8357-13bf-4673-ae76-b7a86f23f2c9",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eb424a45-98af-437c-8cde-b1b1ada2d4ea"
        },
        "item": {
          "id": "6b28a0dc-d74b-4dea-8f53-cd4dd99018fb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68d88f97-f3ce-42c2-b0c8-7cdc21e36401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94943589-af07-46b5-a057-71a7b66cce9b",
        "cursor": {
          "ref": "1e2e47f4-5a73-46f1-8020-ebc36495ce2c",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4eb19ec7-1f64-4bb5-ae27-ec52747d3fae"
        },
        "item": {
          "id": "94943589-af07-46b5-a057-71a7b66cce9b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7a3dace8-6090-4166-bc88-e347912efa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4b6031-af40-4828-bcdb-272310ee0dcc",
        "cursor": {
          "ref": "9e608021-5264-4e3b-85dc-da73fec58883",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ee22762c-586f-4ed7-beee-807f24619428"
        },
        "item": {
          "id": "6c4b6031-af40-4828-bcdb-272310ee0dcc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55a27902-1f74-484b-9e18-f91a4486d4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3145af2a-df87-4fbe-9abf-60741c8f7836",
        "cursor": {
          "ref": "5faf7a8b-883a-4348-925d-704028652de5",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e3c01961-beda-4a99-bf1a-4f5e6a81e947"
        },
        "item": {
          "id": "3145af2a-df87-4fbe-9abf-60741c8f7836",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "804a3b27-b0c0-41d0-9dc4-9293d6b4947a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130ca896-14ef-4e59-8166-c3f1d2cb3b61",
        "cursor": {
          "ref": "0162eaf4-7959-4a22-8772-90b655d47ff6",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c7399c09-af26-4079-a12b-b277d7ca8978"
        },
        "item": {
          "id": "130ca896-14ef-4e59-8166-c3f1d2cb3b61",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c2c8fefe-09e9-4ada-847f-738a7a72fca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e4949e-37d0-43ed-9c79-bacd848396a6",
        "cursor": {
          "ref": "dbb9750d-9e67-4b00-bb87-459ea27e9996",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "067d3c45-d2e6-4139-9d8b-6ce3057c8c70"
        },
        "item": {
          "id": "36e4949e-37d0-43ed-9c79-bacd848396a6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cacd60b8-a68a-4d79-a185-234394454cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b0c183-6a61-424b-ac09-d25ccb4b48b6",
        "cursor": {
          "ref": "3827b710-14fe-4b62-80e2-e1aca7bea2f5",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ac471a49-0f6f-44c5-8f7f-c89f7b21a17f"
        },
        "item": {
          "id": "81b0c183-6a61-424b-ac09-d25ccb4b48b6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5e149b51-07df-4bbf-b452-a19759d3754a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29903968-e5bf-4d6e-953d-ce1b0557d703",
        "cursor": {
          "ref": "aac02b9c-ce66-4552-8c8e-e36770281f18",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "54c7a9ae-4f77-4a8c-a481-f4e943cddb6c"
        },
        "item": {
          "id": "29903968-e5bf-4d6e-953d-ce1b0557d703",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3ff201d0-0dea-48ba-9d1f-22ae9e8334b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1da7a2c-fdd3-47d6-b0af-4eb48a0fd826",
        "cursor": {
          "ref": "d0a6967d-6461-4100-b091-e834bee06b25",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d57d5067-d550-4c07-a72d-f8194f356a88"
        },
        "item": {
          "id": "a1da7a2c-fdd3-47d6-b0af-4eb48a0fd826",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "529e4b66-034a-46d7-83b2-c44dba7f7b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8608c9d-b6f3-42e1-9dfa-43dc509ff5fc",
        "cursor": {
          "ref": "6970823c-0c11-476c-855f-1454781aa54c",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "48084550-828a-4adb-8b75-da71f968fe0c"
        },
        "item": {
          "id": "b8608c9d-b6f3-42e1-9dfa-43dc509ff5fc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6fe68677-4a67-432a-9c9a-c3a75ad4744d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14daabf7-c384-4e6f-9bf2-7504944c7732",
        "cursor": {
          "ref": "ac450349-fc0d-47be-9021-e2d808d5eb4e",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0d4d6740-6429-498a-94c3-51c79d8b650f"
        },
        "item": {
          "id": "14daabf7-c384-4e6f-9bf2-7504944c7732",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "94e7f4f5-4d53-42ca-bcd2-399f2343058a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f733cee-8c1e-494a-a481-01662844dd90",
        "cursor": {
          "ref": "61c663ff-75ae-4c5d-ba0a-0e028eb5193b",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "87e90a05-e209-4ae9-9bed-954d0f29fecb"
        },
        "item": {
          "id": "0f733cee-8c1e-494a-a481-01662844dd90",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "37b58e11-730b-49d8-94c4-83a4beab8d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd76278-74a0-43f2-927a-a0e42886101b",
        "cursor": {
          "ref": "34f20c78-d9f9-4be0-91f6-c590967419a9",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cd7d3883-63b7-4a4e-b3fa-307b85d4d010"
        },
        "item": {
          "id": "acd76278-74a0-43f2-927a-a0e42886101b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "40f0bcbd-cb01-45ab-841d-aac2cea97ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51477a17-36be-4dbf-bfb9-ee2ecee4b784",
        "cursor": {
          "ref": "9073d8f6-18b2-4729-bd1f-c95f0c3ef477",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "626fdfa0-98a8-41b7-b118-fd6d2fc4bb86"
        },
        "item": {
          "id": "51477a17-36be-4dbf-bfb9-ee2ecee4b784",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b44c6fb-838a-4f77-821b-75ee94a0e5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fc050e-b084-4db5-9241-f75bfbed8b8c",
        "cursor": {
          "ref": "e82a1eb5-02d1-46c1-ba14-a866fc60ea44",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d08e346a-2f71-4cfa-9d76-b9e2d4bb39a4"
        },
        "item": {
          "id": "d5fc050e-b084-4db5-9241-f75bfbed8b8c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b3166af9-7f0e-4065-8724-d76e531fdc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14260745-3659-4911-8908-39d005eacaa8",
        "cursor": {
          "ref": "9062edc2-0333-457b-ad2d-dc816efc4862",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "66b1408b-f1ef-4e9a-a80e-732143d7df05"
        },
        "item": {
          "id": "14260745-3659-4911-8908-39d005eacaa8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5c12f767-619c-4525-9c01-7fccd8b7abb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9855215-daf3-4c4c-af19-bc07fd80f90c",
        "cursor": {
          "ref": "1d05ef6d-f085-4b49-a1c7-0af471c7dc1d",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d6ec5735-e8cf-4823-b986-4fb70f5785d3"
        },
        "item": {
          "id": "b9855215-daf3-4c4c-af19-bc07fd80f90c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "734574fd-5f34-4c93-9ee4-7f2ea59e1f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5cb461-e7fa-441f-8114-f5bed29f1e31",
        "cursor": {
          "ref": "38b79077-0ec1-4bc5-bfa0-1b7997b774d9",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "473e4c23-4fd7-4016-aa49-5b47d8779865"
        },
        "item": {
          "id": "8c5cb461-e7fa-441f-8114-f5bed29f1e31",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "443d8a9f-4fa7-4272-962f-1c85524d7ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03606e01-def4-48d3-be9b-e28c7ac3f10a",
        "cursor": {
          "ref": "a7e17b34-739c-4301-9221-03a1ded29640",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "21af4177-600c-4e86-b9aa-4252dc0901b4"
        },
        "item": {
          "id": "03606e01-def4-48d3-be9b-e28c7ac3f10a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "32edd9db-c1e1-4964-bf10-3c97a23fb156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a135b8f-36d0-4e1c-96d3-59f8d19c95eb",
        "cursor": {
          "ref": "798d715d-c6de-4aa0-bbed-b3b1ba5e4ba0",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d576fa04-9906-4f6c-9726-c8c193c1763d"
        },
        "item": {
          "id": "8a135b8f-36d0-4e1c-96d3-59f8d19c95eb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a2d9c1b-dcbd-4aa4-bca2-ee70bcc53bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9228d0-21c7-41d4-aa16-ea01f9c6cb9a",
        "cursor": {
          "ref": "4e44c6d1-effb-459c-b115-ab8799ba0492",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "73d5357d-d9c9-4b7d-896f-32200517352e"
        },
        "item": {
          "id": "ca9228d0-21c7-41d4-aa16-ea01f9c6cb9a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "efeee51b-6232-41d7-a032-8072b71be7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5771f32-616b-4700-9523-cb5ca3466bbf",
        "cursor": {
          "ref": "312dd106-8d94-455d-8c16-8e407f5de3f0",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "78c6453b-2c80-474c-b20a-9fc8dce65021"
        },
        "item": {
          "id": "b5771f32-616b-4700-9523-cb5ca3466bbf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6a2658e2-51d3-43db-a38b-1d93c38f7ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1a20e9-8b49-479b-94ae-29cf16294c43",
        "cursor": {
          "ref": "1b483f64-3d9f-4566-9a9e-54595be1f9c4",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e0f65470-c77d-46de-9f31-5de6e46f7007"
        },
        "item": {
          "id": "8e1a20e9-8b49-479b-94ae-29cf16294c43",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "da4c7377-9b31-489f-b402-3cd2d80dff96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59655657-96ab-456b-9fa2-36c017b54aaf",
        "cursor": {
          "ref": "961e9580-e875-4fef-b894-755f92a2dcae",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3a32409b-e614-4b4a-b3f9-6ac08e717351"
        },
        "item": {
          "id": "59655657-96ab-456b-9fa2-36c017b54aaf",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "30527d93-816a-4cb7-b163-b58ad29a985f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d0cf27-4789-4255-a686-61b4fbe41afe",
        "cursor": {
          "ref": "9809180c-7b04-48eb-9663-f43a90dee525",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fcc50801-94ba-486c-b9de-a010eaaff323"
        },
        "item": {
          "id": "86d0cf27-4789-4255-a686-61b4fbe41afe",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cb8e9271-f40e-440e-a0ef-dfb25dab2906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d0cf27-4789-4255-a686-61b4fbe41afe",
        "cursor": {
          "ref": "9809180c-7b04-48eb-9663-f43a90dee525",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fcc50801-94ba-486c-b9de-a010eaaff323"
        },
        "item": {
          "id": "86d0cf27-4789-4255-a686-61b4fbe41afe",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cb8e9271-f40e-440e-a0ef-dfb25dab2906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8bf6ed-96f8-4bf8-bba0-3ec932068dc7",
        "cursor": {
          "ref": "9e026d7d-9f3d-47bc-b9f5-fff6abf54f57",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1da8832e-02ec-4524-9bd7-c349525336c6"
        },
        "item": {
          "id": "4d8bf6ed-96f8-4bf8-bba0-3ec932068dc7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "18b015fd-4634-4332-b22a-f28abcc7b9be",
          "status": "OK",
          "code": 200,
          "responseTime": 475,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "1500cb93-1ad8-4cb3-ae4e-15e786bf53ea",
        "cursor": {
          "ref": "40e26f78-b788-41a9-a275-ad1b9df8c7d8",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "03946292-03cc-434f-95b4-83983f415891"
        },
        "item": {
          "id": "1500cb93-1ad8-4cb3-ae4e-15e786bf53ea",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fd35738c-e079-46cd-8d3e-3d7b420b6a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece54dc1-e3b4-4d97-99b7-6671ade8be66",
        "cursor": {
          "ref": "f5e99d5b-6f07-4f73-8d59-c702f940e09c",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3f7a08d9-0ee0-46a1-8275-f7bc07444265"
        },
        "item": {
          "id": "ece54dc1-e3b4-4d97-99b7-6671ade8be66",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2227e1c3-1222-4e16-8038-0f1612bbac1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abb35d8-73dd-42c9-9a9e-99e38a6a949e",
        "cursor": {
          "ref": "b24bb030-cf98-4279-a5fe-3429dfa83fd9",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1b7e60df-6c2f-4acd-b53b-06fdfb7b5af0"
        },
        "item": {
          "id": "6abb35d8-73dd-42c9-9a9e-99e38a6a949e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8857fbb3-f096-4c81-905c-26f647e37c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc17183-93e6-423b-a81c-c3fc43a19b94",
        "cursor": {
          "ref": "98cf820b-e86e-49e2-b5e2-f60f80056b3f",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6d09eaa6-df4c-4e1b-8a2f-aec6ba986f36"
        },
        "item": {
          "id": "acc17183-93e6-423b-a81c-c3fc43a19b94",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7ec8f851-664a-42fb-8014-f28346ed0489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9830a4ef-d9a0-4d38-859f-e67323c57690",
        "cursor": {
          "ref": "83e92c3f-0044-41f9-86c1-b3ba82c646ab",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7c511040-6937-4b3f-baa4-b5aeeb386796"
        },
        "item": {
          "id": "9830a4ef-d9a0-4d38-859f-e67323c57690",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "456f6c98-254a-4b0e-859c-d2978b752249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a564b3-1609-4ab0-a3e6-1024a7955f63",
        "cursor": {
          "ref": "f71b9a2d-236f-45c9-b3f6-c7586b7639f4",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1fdb7b5a-a3fd-4ae0-b6cb-a8cb87deeefb"
        },
        "item": {
          "id": "65a564b3-1609-4ab0-a3e6-1024a7955f63",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4005606b-b960-4cc8-90c8-25ff030220d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4f1e8d-e7cf-4d1e-9e6a-ac40956932c0",
        "cursor": {
          "ref": "fbf366bc-f589-4064-b7e4-b90bcc9f585a",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "35efc234-7832-4c8f-8a13-07d7ad44a84c"
        },
        "item": {
          "id": "cd4f1e8d-e7cf-4d1e-9e6a-ac40956932c0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f6001de9-b105-41d8-8141-2a942cf69c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bca862-a184-48e7-b61a-86a6a126298f",
        "cursor": {
          "ref": "d338a854-3eff-423a-aa06-2d3e59e5260d",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "29cdb8f6-428e-47ed-9fb1-b14855cf5b74"
        },
        "item": {
          "id": "a6bca862-a184-48e7-b61a-86a6a126298f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a6b70791-11cd-4184-8a0c-c2312ccca6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af54dd22-fe6d-428a-a678-d3dd9ad45f22",
        "cursor": {
          "ref": "80e70c78-4cdd-436b-9ded-a6649540332b",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "896e9e38-5454-458a-8ca0-35173cb3b02d"
        },
        "item": {
          "id": "af54dd22-fe6d-428a-a678-d3dd9ad45f22",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "643c656a-b793-47b2-9a09-76173c05b42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2aae27-1e5f-48f9-a96b-127f6253b975",
        "cursor": {
          "ref": "2a7beafb-fd7c-4b2b-b4cc-5990b2f76e33",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2d0cfdf2-36f4-4926-99f8-7ef034a8d9fb"
        },
        "item": {
          "id": "bb2aae27-1e5f-48f9-a96b-127f6253b975",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f8f95b5-df37-4d0c-8801-f3c6f218d3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff456abb-e6ba-4a27-9030-4a6e8ffe982e",
        "cursor": {
          "ref": "342f6db5-e5ef-4163-aeeb-d83face314bb",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "753af367-55ab-4d2e-8b8a-642bd42b6853"
        },
        "item": {
          "id": "ff456abb-e6ba-4a27-9030-4a6e8ffe982e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d5065eaf-734b-42a2-b02d-33ad24163aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ff1188-b021-4444-81ae-0e4f96dabb57",
        "cursor": {
          "ref": "b33d5bc4-3bd2-4680-b3b0-c740d93b7509",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1a006dc1-8d11-4300-b873-a1920971bf91"
        },
        "item": {
          "id": "d2ff1188-b021-4444-81ae-0e4f96dabb57",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a1594943-ceb5-4a2b-8cb1-f716498fa844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f052527a-0115-4fc5-817b-3c829a1edbf7",
        "cursor": {
          "ref": "3d64541a-587f-46c1-89fe-df1146c22f39",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5b300598-dca7-4e4e-b50a-15621655d95d"
        },
        "item": {
          "id": "f052527a-0115-4fc5-817b-3c829a1edbf7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7ee68e16-5cfb-49b4-b9e8-c58c06fedca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee78d756-66c5-4226-a0aa-c2d30ba1c22a",
        "cursor": {
          "ref": "879bd0e0-b694-4ca4-bb04-125db0024df5",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a7a4d4fc-cc14-4ca8-9043-0482d0295d2b"
        },
        "item": {
          "id": "ee78d756-66c5-4226-a0aa-c2d30ba1c22a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d70be96c-27f1-4d9c-93b5-aefaa88efd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b629b5-1985-4c8d-8028-017539a8266f",
        "cursor": {
          "ref": "bbd0c15d-219a-4f62-b72d-bd84ed92df12",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2761c48d-0088-4a25-9589-c2519c9c9bc9"
        },
        "item": {
          "id": "c4b629b5-1985-4c8d-8028-017539a8266f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "760c5f96-ee60-4eaa-a1c0-642e28e420aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad541b34-c731-4083-b908-2c99c8af6c5e",
        "cursor": {
          "ref": "bb3d9663-3895-450c-8218-828db7c81af4",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "077e9ada-c117-4053-b5b8-d2f0a23f45f2"
        },
        "item": {
          "id": "ad541b34-c731-4083-b908-2c99c8af6c5e",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "7a4c105e-e065-46cc-83b0-f981bd77774d",
          "status": "OK",
          "code": 200,
          "responseTime": 2078,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "c0478efa-7ebf-45bd-b59b-98e67ad38f0e",
        "cursor": {
          "ref": "af01e230-efe2-48ee-a8b6-d1f294da3b5d",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3cc12b34-ef6a-4719-9c3c-639200bee3e9"
        },
        "item": {
          "id": "c0478efa-7ebf-45bd-b59b-98e67ad38f0e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bc76e164-64a4-4ee4-b318-c8cac51cb1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3019e9e0-e8fe-4704-b361-027f4c8d72d7",
        "cursor": {
          "ref": "141eed53-26f6-4704-880b-c2fa23028be9",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d472f627-cfb7-4ee3-bef8-2897642efecf"
        },
        "item": {
          "id": "3019e9e0-e8fe-4704-b361-027f4c8d72d7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5fee1e30-2d16-4939-9cd5-97d34329764d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca535af-5a8e-47b7-920d-6a604d5da9de",
        "cursor": {
          "ref": "a571ac55-9d93-4f34-bfb3-96199e083d6d",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f0f35655-88ff-4f2b-b2e6-450410b546dd"
        },
        "item": {
          "id": "4ca535af-5a8e-47b7-920d-6a604d5da9de",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b65b7ec1-24b5-48c8-a3d2-e43369652341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a7e9e6-a4ea-49e9-80f4-abe2d56c2ebb",
        "cursor": {
          "ref": "24f63fff-8526-45ba-9abd-caca58725a35",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fc2cd503-bcbb-4c0f-85bd-7f328056dcbc"
        },
        "item": {
          "id": "a0a7e9e6-a4ea-49e9-80f4-abe2d56c2ebb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0076ebfd-360f-43c4-961d-6d4400a46977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e18d7e-2e33-47e3-aa90-89c4f2682abb",
        "cursor": {
          "ref": "5675eb87-c1d8-4d37-9f5a-12122decb4a4",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4ac290df-a738-460d-9ee7-73bd52057da6"
        },
        "item": {
          "id": "11e18d7e-2e33-47e3-aa90-89c4f2682abb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6d4166aa-b29c-4977-abc2-16e899be1168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ba5e43-49bb-4985-b5ca-e807598f4410",
        "cursor": {
          "ref": "3151b874-7202-4f2e-9e1d-ba6099970c63",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7f3d3dac-b6a4-431c-8b38-c27d25072371"
        },
        "item": {
          "id": "f9ba5e43-49bb-4985-b5ca-e807598f4410",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c554dcab-67a3-43db-b183-06d62676195d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6ec62d-2eb0-4285-b9e8-b45087755034",
        "cursor": {
          "ref": "11196a66-9ed0-4ede-a85c-7d216cf8fb67",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f3f2e26a-70ef-4c84-8074-3ef48cc86c78"
        },
        "item": {
          "id": "fa6ec62d-2eb0-4285-b9e8-b45087755034",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8ff37418-fb41-4714-b168-b3b0ade8c962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07756d05-f554-4e10-a0dd-ec159fa2a1fe",
        "cursor": {
          "ref": "0671bc83-427b-4fde-8782-6b116cf81b8b",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "27532230-23cd-4d42-b92c-dc73780fd983"
        },
        "item": {
          "id": "07756d05-f554-4e10-a0dd-ec159fa2a1fe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2521df2-197c-448d-a237-986771f9d414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2695f921-371f-4056-8a45-341a5ca4fd12",
        "cursor": {
          "ref": "7e9136ef-e9d6-4e17-8e2d-872d1bf0d660",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "48e18939-85b9-42c3-9845-cb30e3b49935"
        },
        "item": {
          "id": "2695f921-371f-4056-8a45-341a5ca4fd12",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7f82edd4-aa25-4cda-ac49-22524e4a0d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cdaf59-3e24-4a29-b7fb-c0e21061e479",
        "cursor": {
          "ref": "6578790f-e586-457c-8cf2-bfced1a3dcdc",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "11ee00b2-2fc5-464b-88c1-6626bf5923f2"
        },
        "item": {
          "id": "32cdaf59-3e24-4a29-b7fb-c0e21061e479",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e3993dd5-1cfb-450e-890f-ac064b6e13c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bd9db9-8b51-4a89-b074-604b36a7d9c3",
        "cursor": {
          "ref": "9a0c6f03-ed9b-4646-844e-73e5c098f62a",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "99b58e6b-1651-467f-bc7c-efea008e6f4e"
        },
        "item": {
          "id": "67bd9db9-8b51-4a89-b074-604b36a7d9c3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "188e8e8a-d5bb-4374-9ff2-5215055cbb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47861a49-5121-48e4-ae0c-2b14876f47bc",
        "cursor": {
          "ref": "29c4058f-beab-41cf-af8a-870e8b59da2d",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5842a439-8e5d-4cf0-a8c0-5b1a943e16c0"
        },
        "item": {
          "id": "47861a49-5121-48e4-ae0c-2b14876f47bc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "49e786cf-fb73-42a8-b74c-f1eb5080c847",
          "status": "OK",
          "code": 200,
          "responseTime": 255,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "2b94d472-cc0b-4306-b517-85bbfc8481ac",
        "cursor": {
          "ref": "32e6cc94-5407-468d-8e80-9aeb337365d3",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "698a3444-4ec7-4b35-a1ed-06e0f124b299"
        },
        "item": {
          "id": "2b94d472-cc0b-4306-b517-85bbfc8481ac",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eca514cc-9390-4892-abd3-f4333ad0729a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d226063a-57fa-478b-8098-fc2e8f4439e5",
        "cursor": {
          "ref": "fc29245f-d452-4bdd-a102-c8ad41272d4f",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d52d7acb-a6ce-47a2-ab88-1593dbe61560"
        },
        "item": {
          "id": "d226063a-57fa-478b-8098-fc2e8f4439e5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "37322ba0-096b-4b4d-b34f-f8c814e7a757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56683c66-b0bf-4deb-940a-a5d5de0c8978",
        "cursor": {
          "ref": "a1d0f865-1292-4042-a3bb-c2cf4be02226",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "86ba8cf6-10a0-4011-8fff-61d95651db34"
        },
        "item": {
          "id": "56683c66-b0bf-4deb-940a-a5d5de0c8978",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f7fb6ba4-9297-44dd-82b6-342a01ad1989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6d068f-60b9-4349-97cb-c5a85622c80b",
        "cursor": {
          "ref": "6ea588e0-d62d-4d06-a84c-34d2cd8011ec",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c7c2e9f4-3c4d-4551-9e68-9a1d2c1debe9"
        },
        "item": {
          "id": "4b6d068f-60b9-4349-97cb-c5a85622c80b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8e45cfd5-9763-4a27-bbb7-a47312d3ea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb157e9-8346-489b-ac9a-fc6b15387f43",
        "cursor": {
          "ref": "ff65be95-0644-4fd6-aca2-0157b5d45ce7",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dca3a2cc-38a9-401b-ad40-e7ec76ae82fb"
        },
        "item": {
          "id": "5cb157e9-8346-489b-ac9a-fc6b15387f43",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "31eebd02-a108-4b36-adc5-bc2cd06d5e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539953b9-cb47-4497-8597-41f9a5c045f3",
        "cursor": {
          "ref": "3856ddb8-09a6-42c7-acc5-f46bd9a86635",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d77a014b-0a68-4e38-935e-64bf39054c20"
        },
        "item": {
          "id": "539953b9-cb47-4497-8597-41f9a5c045f3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4c51d0c2-559e-49b4-bace-745ff41671f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547c99fa-3207-4058-90ce-7358d48508c2",
        "cursor": {
          "ref": "19b8ebbd-c98a-4293-ae1a-889c596ee04f",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7650ef62-ed20-4469-98c6-da5c5f41ccf6"
        },
        "item": {
          "id": "547c99fa-3207-4058-90ce-7358d48508c2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7d272ec9-bc12-4e56-aaa6-4b8cf57d0765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7591c0a5-d232-4a39-ad58-33d61a9471f9",
        "cursor": {
          "ref": "9d52883d-61b1-40da-b955-4117d7def9ca",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "44ac32a4-07a7-48bc-816c-ece23d62aa47"
        },
        "item": {
          "id": "7591c0a5-d232-4a39-ad58-33d61a9471f9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0e89c11d-d7b3-4124-a60a-be85ead62041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab940bc-1fa7-4600-951f-de788502a9b7",
        "cursor": {
          "ref": "26c46605-95b7-4fcd-960a-71a9dd3ac53a",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "929745b1-1f6a-40ee-82ed-a1dfd74fbc21"
        },
        "item": {
          "id": "7ab940bc-1fa7-4600-951f-de788502a9b7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "022671da-24ed-49b3-96e4-0db37cf49b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84fab0a-121f-4230-b8d4-da1f0e97c640",
        "cursor": {
          "ref": "9042454f-4894-41be-8f26-a6408670ef04",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "85499f6a-1b38-4d79-90e3-94079cb621af"
        },
        "item": {
          "id": "b84fab0a-121f-4230-b8d4-da1f0e97c640",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9cdb92b2-938c-4900-8da0-6fd03b57e7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22c8e01-0ab3-41c5-a73f-80075899c136",
        "cursor": {
          "ref": "1e78b3c1-70ac-4314-aa5a-30f1076b9d07",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bb1aca5a-31e8-4251-bdb4-8d89a2c543f4"
        },
        "item": {
          "id": "c22c8e01-0ab3-41c5-a73f-80075899c136",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9a9f1160-2a60-48c6-b34f-f59c216af251",
          "status": "OK",
          "code": 200,
          "responseTime": 262,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "5761060b-ebc1-4815-8c5c-43446d010855",
        "cursor": {
          "ref": "e9fd9137-eeb2-480f-aa95-20280c12cf90",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2fb447c5-dde3-45f7-a9db-2491608304a7"
        },
        "item": {
          "id": "5761060b-ebc1-4815-8c5c-43446d010855",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "052469e6-a203-46e6-878a-07f099fef70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cb7473-eff7-4e4c-9251-1a3dd0e110ce",
        "cursor": {
          "ref": "2f58fa05-f94c-428b-a248-54eaf5b29841",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2687eab0-c633-4ac8-96d7-740a66cabf24"
        },
        "item": {
          "id": "d4cb7473-eff7-4e4c-9251-1a3dd0e110ce",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "597f2851-159a-4bb9-89af-f5d8e9a9d3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a338e7-1380-4a26-8a7a-5342f43d758f",
        "cursor": {
          "ref": "14986b5b-5aa5-4cad-9be6-2670625c88b1",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5aad492d-eaf2-4d35-906c-143073c18844"
        },
        "item": {
          "id": "24a338e7-1380-4a26-8a7a-5342f43d758f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "876e45b7-8f99-4712-a56c-8757e3c997c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64ccc30-fed8-439b-a018-0b4d75079e29",
        "cursor": {
          "ref": "0584d42d-608d-4989-b845-057dd849e813",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cac7f676-b7b7-4e95-85f3-3ebe540ac5e6"
        },
        "item": {
          "id": "c64ccc30-fed8-439b-a018-0b4d75079e29",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e8cc8205-2ac3-4eec-be56-c7c834dfcd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8e8a36-7302-4c8e-935a-07835ac0d534",
        "cursor": {
          "ref": "3da09435-03c1-4f8d-8cad-97eb3de4e15f",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "731846e0-cf78-4c8b-969b-cfb75240963f"
        },
        "item": {
          "id": "ef8e8a36-7302-4c8e-935a-07835ac0d534",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "37a0d466-6f35-44f0-881e-18b09b2b73be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae28da5f-f17f-4eb7-945c-6041d8e08cb5",
        "cursor": {
          "ref": "738ad055-1bdc-4a98-a11b-c1860dc6ade3",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bea6a2d8-24cf-4da8-a2e6-5c89cd79a18b"
        },
        "item": {
          "id": "ae28da5f-f17f-4eb7-945c-6041d8e08cb5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "76f791d4-7e88-4daf-8ec0-48a511c82af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43119d6f-d4a3-4a3c-8f22-04dd935c8951",
        "cursor": {
          "ref": "e2431dd6-5466-4363-899a-e5fe68817a5f",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dd0d0ce3-cd4e-419e-990f-3fe07e5ada7b"
        },
        "item": {
          "id": "43119d6f-d4a3-4a3c-8f22-04dd935c8951",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "678c5f0a-fc75-4c12-a8cf-1c9bd4175b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de27743c-bfe9-4d0d-9715-cbc1e03c5520",
        "cursor": {
          "ref": "213bfb3c-1212-4589-b7f4-23d5bece6f26",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "36544560-cd11-4948-ab70-14316c602e6e"
        },
        "item": {
          "id": "de27743c-bfe9-4d0d-9715-cbc1e03c5520",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8a10c4a0-94c7-4383-b5a7-3f73418c17bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540fbe1b-e712-46ae-8c84-71b96db4364d",
        "cursor": {
          "ref": "b1ef2b25-637b-4226-8756-0ec00455bb95",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2d9c8d05-1c14-4997-9882-c84bce035e82"
        },
        "item": {
          "id": "540fbe1b-e712-46ae-8c84-71b96db4364d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "72baa112-f6ba-4d48-8783-ca9c634add16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2110b5d7-fcd3-48a9-8a3e-3b92b1a9abd8",
        "cursor": {
          "ref": "e51dc22d-f400-4604-bc79-919ff9a37abf",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ec58edd6-c4f3-41e4-a2b8-00f38b831193"
        },
        "item": {
          "id": "2110b5d7-fcd3-48a9-8a3e-3b92b1a9abd8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "550ca3da-76f7-4f6b-ae2c-9f010d8ed14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf12830-ad42-4c04-b95e-c30e1cd2f572",
        "cursor": {
          "ref": "83f471e8-f5f6-4f0e-81c1-3d24b64fd8fa",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "98640867-70ea-4298-8fa5-daa02deb85f6"
        },
        "item": {
          "id": "2cf12830-ad42-4c04-b95e-c30e1cd2f572",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "24f15aa5-22db-4139-ab95-35ee6aba7890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e652af-fcb4-4c4d-bf35-71aeb6a4a029",
        "cursor": {
          "ref": "87572dce-e21f-486a-8486-877966a49e55",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7be51e4e-e3a8-4ad2-902f-87b0596d9459"
        },
        "item": {
          "id": "b2e652af-fcb4-4c4d-bf35-71aeb6a4a029",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c17cbd9b-a906-414c-8853-9a0000011e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68baf376-a440-48c3-bd26-c860b11a4dbe",
        "cursor": {
          "ref": "78d602d8-802c-4152-856e-b881f2440f8b",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "417dc8b3-61ef-4a56-af2d-e3349e406e7f"
        },
        "item": {
          "id": "68baf376-a440-48c3-bd26-c860b11a4dbe",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "63285ba6-7ab0-483a-af5f-cf51565d3f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91591e95-0bb9-4085-bdc2-eb75bb12acb9",
        "cursor": {
          "ref": "cc17a40b-aaaf-4ae5-91a3-9b0d1f2490a3",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7a0a7b6f-797c-4d5d-a4b3-5f32d350ddb5"
        },
        "item": {
          "id": "91591e95-0bb9-4085-bdc2-eb75bb12acb9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "47224dd8-5cdb-46f3-9618-83eb7c92d73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3138a2d6-b499-46b5-b284-caf09483a175",
        "cursor": {
          "ref": "a835ba36-b8b8-4925-b707-a3fe7512ff8f",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2f5adb0c-921b-432c-a377-a8013909e65f"
        },
        "item": {
          "id": "3138a2d6-b499-46b5-b284-caf09483a175",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bb7a8cef-82df-4c17-8149-47b7fb52a068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0e4a69-7b97-485e-af51-28ffae735e3b",
        "cursor": {
          "ref": "adb4d59e-ebc3-45c0-a8cf-b8a9b5cd125d",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8da44cc2-c11e-4823-8ae6-f308c5342aee"
        },
        "item": {
          "id": "4a0e4a69-7b97-485e-af51-28ffae735e3b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "86fe38f5-88d7-47b1-a1b1-73640419f712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8696fcf5-2bba-4fe9-9c7f-296a3b21f5d5",
        "cursor": {
          "ref": "b902e163-486e-4641-8fb1-676509cd5053",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7c783004-680d-4c64-98ff-2103aae0e8b9"
        },
        "item": {
          "id": "8696fcf5-2bba-4fe9-9c7f-296a3b21f5d5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "32f575ba-d243-4077-9be1-7edc5c8cc3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be740bd-7cc0-41d7-82ee-d9c1b0d2775e",
        "cursor": {
          "ref": "19b77209-ecce-4b1d-8d79-7a770d5dc30c",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3338480c-6f79-488c-b3ce-21e6d1adda2a"
        },
        "item": {
          "id": "9be740bd-7cc0-41d7-82ee-d9c1b0d2775e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e95f68b0-33db-4c54-8adb-3f26581dd065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c0e123-af76-469e-a080-f701b1f6f3eb",
        "cursor": {
          "ref": "b9dfa797-a7e9-4421-9885-f2d768f17952",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "80640bfb-9f11-415c-bfad-962f3eb4f49d"
        },
        "item": {
          "id": "43c0e123-af76-469e-a080-f701b1f6f3eb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f34546c0-9529-4236-8a0f-6b007441192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3ec443-b7f6-4fc8-ae8a-4ae315eb759f",
        "cursor": {
          "ref": "1a350f35-e92b-4ceb-b6aa-5a919c67a0c0",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b424adf0-23e3-4bbc-83e1-a68c4d18cd3c"
        },
        "item": {
          "id": "de3ec443-b7f6-4fc8-ae8a-4ae315eb759f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b443494a-de93-4d16-a78a-10e705b403b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d919d73-7b50-45ee-a37d-a6e99a93b26a",
        "cursor": {
          "ref": "256d13af-3740-44c4-999d-07809ad9ed13",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "df2e828e-8453-4731-92bc-16e790be7163"
        },
        "item": {
          "id": "2d919d73-7b50-45ee-a37d-a6e99a93b26a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f37bf4e3-8f1f-4664-82d8-581fb4c1d80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440deabb-87d0-4c6d-a72f-a0c05e8810bd",
        "cursor": {
          "ref": "6fa58c52-4f86-48bf-b92f-0249ba7785af",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "88469470-0d9f-4231-99ea-ab5e4daa6fc7"
        },
        "item": {
          "id": "440deabb-87d0-4c6d-a72f-a0c05e8810bd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6087536f-a203-4479-895d-c23a0cef61ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f884fadd-b6ee-4303-8df8-f853d321d8cd",
        "cursor": {
          "ref": "f217e526-5a93-4244-b65c-6c79ebd2092c",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "13879c11-7ad8-4e0f-b554-af29f99bca6d"
        },
        "item": {
          "id": "f884fadd-b6ee-4303-8df8-f853d321d8cd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c8cf480c-fd63-4ece-b102-c865c5757fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1307a6-e095-4769-aa61-927eb16bd63c",
        "cursor": {
          "ref": "a5f86b72-0879-46c7-9c47-d59e066aaf1a",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c0129b5a-aaee-4ce0-9742-f52a9ef614c4"
        },
        "item": {
          "id": "1a1307a6-e095-4769-aa61-927eb16bd63c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "352cd1f7-0a1c-4689-8c14-d5be99c7a7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b01e7a-a030-48e2-a04d-6f9dace24d89",
        "cursor": {
          "ref": "15928bb7-3c9c-43fd-9250-f16837d2b398",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "091f9d8c-e8a9-4417-840c-99335a0b9d40"
        },
        "item": {
          "id": "a8b01e7a-a030-48e2-a04d-6f9dace24d89",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7843d31e-9963-4bda-bbef-01c4d84a7059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d84443c-9b91-4454-be59-ea9b90079454",
        "cursor": {
          "ref": "e03a3d39-bbb4-46dd-86e0-f759dab5e569",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5791995c-fbd5-419d-ae40-da74feb4f68d"
        },
        "item": {
          "id": "4d84443c-9b91-4454-be59-ea9b90079454",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1b1e14ee-6f64-4749-8a62-145d1030511f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068aa187-c4ea-4da4-bf30-ddfb5db05331",
        "cursor": {
          "ref": "537545b8-92bf-49e9-9c4e-0d25b986569b",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c20721ec-78f8-4046-a504-c1bfada91d62"
        },
        "item": {
          "id": "068aa187-c4ea-4da4-bf30-ddfb5db05331",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5b0b0949-e47e-4caf-81c4-6bf5a8a6944b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822ad753-ddd9-4d6d-8e67-f62e04e53302",
        "cursor": {
          "ref": "20f8068c-a5b5-495d-8c5a-e0ec3a33f783",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4470a58a-04ca-451e-a1f0-7378aff6e955"
        },
        "item": {
          "id": "822ad753-ddd9-4d6d-8e67-f62e04e53302",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "703e003b-0c98-42f6-8b7d-c7716048663b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f84c06-cf95-4616-b091-502af74642da",
        "cursor": {
          "ref": "ff5a85ab-c653-4b8f-a662-5ec951cd6c86",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "102d092f-4629-48eb-8ece-d91fb7e6e20d"
        },
        "item": {
          "id": "79f84c06-cf95-4616-b091-502af74642da",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "80b864da-f04a-46a5-948d-e186a66f10b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88320f31-6b38-4996-9473-133fe994bc8e",
        "cursor": {
          "ref": "c97b1cb6-1eeb-4e2f-90f7-54c6f41275de",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "42454dc0-8733-4422-a421-706ba6e53448"
        },
        "item": {
          "id": "88320f31-6b38-4996-9473-133fe994bc8e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c1b0ba72-42a2-4f5b-a2a9-b57f9c7c591f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20784900-de95-45ae-b9e7-6b6b258af31e",
        "cursor": {
          "ref": "ffcf9d97-392a-4a7b-a062-6904ee7a7529",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cfcf8460-fa34-4649-99ea-b00bb5706add"
        },
        "item": {
          "id": "20784900-de95-45ae-b9e7-6b6b258af31e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "32bc19a5-d35e-4858-8485-1af65ed87308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb56070c-dcd6-46af-8c3f-fd55d3989548",
        "cursor": {
          "ref": "9fcc8ec9-23c0-447c-990f-c609be52f8fc",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b7f541d8-5c79-4269-b9af-f0c8f02133f2"
        },
        "item": {
          "id": "bb56070c-dcd6-46af-8c3f-fd55d3989548",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fac872c1-c160-45f4-8f44-51d4a5f5ea3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c1ed73-6f35-4775-a00a-fee3a367f1f7",
        "cursor": {
          "ref": "fe73ef4a-a47c-4243-81f9-cc3ed6607044",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ed788cdd-5289-47e6-9570-aad001624096"
        },
        "item": {
          "id": "51c1ed73-6f35-4775-a00a-fee3a367f1f7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1747c4bc-06dd-44f4-a3fe-1a352e9f4e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39bf166-6ce7-4cab-8e72-178d708d4812",
        "cursor": {
          "ref": "f279d3c8-2490-4074-9b72-6d249acb011f",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ef5ad694-20b9-4dd9-998f-048af4e7856d"
        },
        "item": {
          "id": "c39bf166-6ce7-4cab-8e72-178d708d4812",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "735f59fe-e0a0-411a-bd41-af8502d2960a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2adfc8d-87c0-4041-82bc-cf9191630f4d",
        "cursor": {
          "ref": "f2477d94-36a4-4759-a938-52249f7cb4f4",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6b208b1a-bd48-4a63-b413-da7647b6378f"
        },
        "item": {
          "id": "f2adfc8d-87c0-4041-82bc-cf9191630f4d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "14f915dc-5b53-4e58-8365-33af1c66dc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d92e1fd-e232-4ff8-adaf-ac4d8291528e",
        "cursor": {
          "ref": "1208ea48-8a14-4189-89e0-61adc98e691a",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "88fa8f4e-1165-4292-8b96-05dc2170cf7e"
        },
        "item": {
          "id": "1d92e1fd-e232-4ff8-adaf-ac4d8291528e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "55ec44e3-d76b-4a0b-b650-52274e8c454a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182ec5b4-8dce-49d1-b338-0d5005866643",
        "cursor": {
          "ref": "9c7f1c61-a31e-4535-a7ac-90b19a8aee2c",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6f0e218a-d249-489e-b1d7-b259a934a1a9"
        },
        "item": {
          "id": "182ec5b4-8dce-49d1-b338-0d5005866643",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "050bd8ee-937b-408f-92f9-debd44ef3f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60b2e95-6899-4e3a-933b-c3a9da6f0731",
        "cursor": {
          "ref": "fa183bd4-2304-40e3-9838-67a54b1b519b",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "342e5c82-8c66-41a2-8e5b-3156e71e8241"
        },
        "item": {
          "id": "a60b2e95-6899-4e3a-933b-c3a9da6f0731",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2fa62e6b-d8db-4099-9955-ff58cef71a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dbc22d-4db7-41a0-86f6-c9cd1bf6abed",
        "cursor": {
          "ref": "6db7f7d6-4a33-4b45-ae8f-424ceabab508",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "19a4980b-d4bb-4044-8b86-39c0dd576d15"
        },
        "item": {
          "id": "22dbc22d-4db7-41a0-86f6-c9cd1bf6abed",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9ddae799-7bd6-4d12-93a9-ffe5277019ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300973f9-21d4-4b00-bf09-5ca9fd699c6b",
        "cursor": {
          "ref": "8a4e3a80-d4ea-4b90-ae49-4e59d1a7d0a8",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "95784077-8c67-45df-a8e0-46306c5bae5a"
        },
        "item": {
          "id": "300973f9-21d4-4b00-bf09-5ca9fd699c6b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7cf0a6e7-fbe1-4286-beb5-b38a95a22da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5808d58-40d2-4d93-8e1d-5c59cf19c8ee",
        "cursor": {
          "ref": "fa580c1b-88ac-4476-9950-824ea8a8560e",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6794a0d4-3775-4e1f-ac80-99e5fc614fd3"
        },
        "item": {
          "id": "a5808d58-40d2-4d93-8e1d-5c59cf19c8ee",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "38b75b80-7239-4dd3-a179-6bf030a87a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cc884e-e01c-4cb8-9eee-29961a22d29f",
        "cursor": {
          "ref": "b35bc0de-ec2e-4570-94d6-c0c9fd37079c",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "65de4ff1-9868-4ede-829f-929bfcdaa040"
        },
        "item": {
          "id": "a1cc884e-e01c-4cb8-9eee-29961a22d29f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "26ed04b4-6911-4c76-95d8-f9400f50e261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3830d55-f130-431a-837b-dd33efc86ada",
        "cursor": {
          "ref": "2f589fb3-eea9-43ae-9995-b5a2396c3473",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "507dbfab-ada7-4d4b-a1fb-598235085ef6"
        },
        "item": {
          "id": "a3830d55-f130-431a-837b-dd33efc86ada",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "62817235-48df-4266-ab13-e077f3e7f3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee954d1-9e3f-45b6-8253-25a3fb5871d5",
        "cursor": {
          "ref": "03eed91e-06b6-46a3-af00-3eeeb04afaa6",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "75220e12-9842-4bfb-aea3-da13953308b9"
        },
        "item": {
          "id": "5ee954d1-9e3f-45b6-8253-25a3fb5871d5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "85bed31c-ea79-474e-bea8-1861725e2417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5455f03-e210-417b-a0f3-5d0e1bc350cd",
        "cursor": {
          "ref": "6c093cd7-2d7c-4b70-992d-af1216fa9a98",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "df6c9bd6-414b-482e-abee-88ab0973f9bd"
        },
        "item": {
          "id": "d5455f03-e210-417b-a0f3-5d0e1bc350cd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b36ba4b-73f0-495d-845b-db9fc0deecf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce0679d-d136-4c57-81c0-8ab1cc32ecd2",
        "cursor": {
          "ref": "cf8d85be-5bb6-48bb-8f27-93a4abb149ee",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5469602e-6673-45ea-a287-a479e9ae332b"
        },
        "item": {
          "id": "2ce0679d-d136-4c57-81c0-8ab1cc32ecd2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "57e65453-504e-40ba-bfd1-d36c7bdd1f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db32420b-482e-457c-8c1d-283728bf5cf9",
        "cursor": {
          "ref": "2f6339bb-e155-4844-a3fd-78d5fec629ec",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "32ea4c75-a15f-4421-b107-7010933e574c"
        },
        "item": {
          "id": "db32420b-482e-457c-8c1d-283728bf5cf9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9dae4508-91b0-42c5-a8c6-f0375b64b072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea31b81-f3e9-40a1-a9b5-bf685a384dc9",
        "cursor": {
          "ref": "b4f0f8e0-8d7b-44e8-857a-402d53bdf49f",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a833a182-8ffd-4fb0-9e5d-795cbd20f2b4"
        },
        "item": {
          "id": "6ea31b81-f3e9-40a1-a9b5-bf685a384dc9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8d1d0909-0e99-4a39-9f4d-af45e71f4ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dd4ca9-b594-475c-b447-73d2330d6b05",
        "cursor": {
          "ref": "8b6d2ad8-2bc4-4c7a-983d-9bf0dd0525fe",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "05a0f5e1-35bd-4bb1-a7f8-9357103ead95"
        },
        "item": {
          "id": "c1dd4ca9-b594-475c-b447-73d2330d6b05",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "51f8fc9a-5496-4259-a781-a7b2aaddf8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7691e33f-8236-4962-8b01-56c19a763372",
        "cursor": {
          "ref": "1c05733e-da2d-4c18-898d-73b6afd33bde",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "67781547-94c5-44ac-bcc9-9292e8e0850d"
        },
        "item": {
          "id": "7691e33f-8236-4962-8b01-56c19a763372",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bae1a8c1-2da4-4ed9-b843-2ed977158fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80db784-d410-4d69-a6b0-e6df9581e14b",
        "cursor": {
          "ref": "6e76cf65-9bd3-40da-9db5-e6599ff4cb11",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c2267dd6-f9ff-4e51-93ca-d54caf9693b9"
        },
        "item": {
          "id": "b80db784-d410-4d69-a6b0-e6df9581e14b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d326a6d9-5058-4fdb-8ef3-cde5b6f3bafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c167ca4e-2c42-47cd-a9b5-d9790ae4e3f4",
        "cursor": {
          "ref": "3347b0e9-7dd4-4084-8841-0e341effb386",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "98d9c8aa-b17f-4a9e-a33b-5aca3518406f"
        },
        "item": {
          "id": "c167ca4e-2c42-47cd-a9b5-d9790ae4e3f4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e89944e0-a2a4-4377-bdd2-01db2c19f7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f52b767-cb61-48ff-b1d5-52e78193f1e7",
        "cursor": {
          "ref": "26f35f07-4fd5-44c4-a4a9-708c3525f1cf",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e3f3a340-2268-424b-a871-fbddcdd740b4"
        },
        "item": {
          "id": "9f52b767-cb61-48ff-b1d5-52e78193f1e7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "97a2816d-b0ec-41ab-9e10-fec840c03cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934e02ef-5f68-487c-a6c8-8061dafa6256",
        "cursor": {
          "ref": "3480122a-01e8-4bf4-93bb-18b4b5b63029",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "37e3a33c-ae01-42db-b9c7-2a409f6a11ae"
        },
        "item": {
          "id": "934e02ef-5f68-487c-a6c8-8061dafa6256",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c1fa41bf-beee-4f6f-9647-0fbe25610f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3730e046-4529-4716-997c-a4ea35af07fd",
        "cursor": {
          "ref": "f9c8470a-35e6-40a6-9e4f-d47d05638ad9",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fcaf8d7d-c144-4dbc-be40-f2afebb114d6"
        },
        "item": {
          "id": "3730e046-4529-4716-997c-a4ea35af07fd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dfc5f718-a575-45b3-b62e-00d20b2dadcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3609179f-d0c3-4d3a-8877-6c8ae97f26a0",
        "cursor": {
          "ref": "9bfc9cba-7989-406e-a46d-179193874919",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f4c8b1df-f6fb-40a0-a571-d107194f195d"
        },
        "item": {
          "id": "3609179f-d0c3-4d3a-8877-6c8ae97f26a0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c574127f-9e15-41b0-8700-514a788691f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc43a713-8d53-4818-8d78-c5b70e392f7b",
        "cursor": {
          "ref": "0935af59-b902-4406-b04e-3210c26d56cc",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c59773f1-73de-4a38-b0ab-4e5cffc6bd1c"
        },
        "item": {
          "id": "fc43a713-8d53-4818-8d78-c5b70e392f7b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b596fc30-3df2-4ebe-9d0e-c5854c311815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52227ff4-6508-4080-8019-bdbf9150ee40",
        "cursor": {
          "ref": "842f804e-9b16-4f04-9b23-1abbe4933540",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b33f0eeb-0f01-4c5f-a59d-8f03f6879f37"
        },
        "item": {
          "id": "52227ff4-6508-4080-8019-bdbf9150ee40",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ebec1704-e51b-47a1-8c33-754392f7a238",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bc40fe-1079-492d-9f3c-f0d0fc148516",
        "cursor": {
          "ref": "0d1ef1f1-87ab-4d0c-b6aa-20960f08e305",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f5b4c862-2105-450a-85bf-1723c6db4eb1"
        },
        "item": {
          "id": "b5bc40fe-1079-492d-9f3c-f0d0fc148516",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d495a9bf-91d5-4c4c-9b59-c7275e0507e3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 256,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749abdb9-b899-4881-94c2-d0283fb02fb1",
        "cursor": {
          "ref": "2276f534-ef86-468f-bec0-7eed1c642ae5",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "871d2fb2-0e53-4b9e-978d-f211cc038c84"
        },
        "item": {
          "id": "749abdb9-b899-4881-94c2-d0283fb02fb1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a68fa8f-b231-4b65-b27a-d58a0cc3f37c",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3162c533-afe0-48d0-a685-115540a506af",
        "cursor": {
          "ref": "f5451b5c-cc52-481e-a1ee-ffa5e95e56e5",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "857940ee-4c0d-43a9-9d49-38008a08fbf9"
        },
        "item": {
          "id": "3162c533-afe0-48d0-a685-115540a506af",
          "name": "credentials_verify"
        },
        "response": {
          "id": "edbf3ad7-e6ae-4dd2-b1bb-0cedde641e81",
          "status": "OK",
          "code": 200,
          "responseTime": 1727,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6919c0db-f84e-45fa-a53d-84a4762b5afb",
        "cursor": {
          "ref": "d18142bf-9918-4cae-845d-60afb760526d",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "224144e2-f2fb-42bc-81b8-b17bbde6d1a7"
        },
        "item": {
          "id": "6919c0db-f84e-45fa-a53d-84a4762b5afb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9ae04095-70fe-4b67-b986-488c13aad18c",
          "status": "OK",
          "code": 200,
          "responseTime": 1748,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bb9969-6679-42d2-9b1f-e6f6eb07b15a",
        "cursor": {
          "ref": "4f21b341-26f9-4cec-8b49-a3516cd28e2b",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3a8bd554-bfcc-4d38-a27d-bb2e45d475fa"
        },
        "item": {
          "id": "f0bb9969-6679-42d2-9b1f-e6f6eb07b15a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fed3852f-28d4-4e62-aa1e-dc849d91f2db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bb9969-6679-42d2-9b1f-e6f6eb07b15a",
        "cursor": {
          "ref": "4f21b341-26f9-4cec-8b49-a3516cd28e2b",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3a8bd554-bfcc-4d38-a27d-bb2e45d475fa"
        },
        "item": {
          "id": "f0bb9969-6679-42d2-9b1f-e6f6eb07b15a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fed3852f-28d4-4e62-aa1e-dc849d91f2db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bb9969-6679-42d2-9b1f-e6f6eb07b15a",
        "cursor": {
          "ref": "4f21b341-26f9-4cec-8b49-a3516cd28e2b",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3a8bd554-bfcc-4d38-a27d-bb2e45d475fa"
        },
        "item": {
          "id": "f0bb9969-6679-42d2-9b1f-e6f6eb07b15a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fed3852f-28d4-4e62-aa1e-dc849d91f2db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5853db1b-74cc-4429-99ee-41d34475cd09",
        "cursor": {
          "ref": "abc3f5d9-108a-4ea2-81fc-1b4f8ef3ff95",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "93e438ae-e8d1-441b-8451-ac426c880ec2"
        },
        "item": {
          "id": "5853db1b-74cc-4429-99ee-41d34475cd09",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a2b282cb-f690-4635-a1f6-c44ade721913",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 256,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ef4cfe-13ed-46ee-aac8-4373c81dac07",
        "cursor": {
          "ref": "110377b6-beff-4a4f-9bac-5c1dcf5ae930",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a20058e2-0c2d-4fbb-b5c3-70c56737b0c1"
        },
        "item": {
          "id": "56ef4cfe-13ed-46ee-aac8-4373c81dac07",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d9f2e9db-6957-4403-b76c-6e6999988ed3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ef4cfe-13ed-46ee-aac8-4373c81dac07",
        "cursor": {
          "ref": "110377b6-beff-4a4f-9bac-5c1dcf5ae930",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a20058e2-0c2d-4fbb-b5c3-70c56737b0c1"
        },
        "item": {
          "id": "56ef4cfe-13ed-46ee-aac8-4373c81dac07",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d9f2e9db-6957-4403-b76c-6e6999988ed3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f145683-2d0e-45a8-8b26-8ea2cf294ee9",
        "cursor": {
          "ref": "c7bc4445-479c-414d-9bfa-6c82d02ad1a1",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8b382998-58ef-4208-8f41-2f2949387f60"
        },
        "item": {
          "id": "3f145683-2d0e-45a8-8b26-8ea2cf294ee9",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "57c5863a-e903-441c-9229-955846b895e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8fb325-0df7-4598-ad82-b66d6a1de690",
        "cursor": {
          "ref": "20af1fef-7dfe-478a-a119-892abb7f8124",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6d83c628-6ef9-42ae-ae3d-00cd826c5474"
        },
        "item": {
          "id": "5e8fb325-0df7-4598-ad82-b66d6a1de690",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ce4c5651-3b98-4111-8465-f8ac6826761e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8fb325-0df7-4598-ad82-b66d6a1de690",
        "cursor": {
          "ref": "20af1fef-7dfe-478a-a119-892abb7f8124",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6d83c628-6ef9-42ae-ae3d-00cd826c5474"
        },
        "item": {
          "id": "5e8fb325-0df7-4598-ad82-b66d6a1de690",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ce4c5651-3b98-4111-8465-f8ac6826761e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12691565-d57d-4760-98f5-771af8bc2f98",
        "cursor": {
          "ref": "eadfe6d2-1656-4aa1-9151-8cdd3ef65a8f",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a35b6b04-c3ce-4092-8295-688276c83842"
        },
        "item": {
          "id": "12691565-d57d-4760-98f5-771af8bc2f98",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "2aec562e-af27-48a5-9dd5-db9ba3eeba3b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 484,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}