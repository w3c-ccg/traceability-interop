{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "22ca4e64-84fe-440b-a071-8a91f7412ae3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7378d5a2-3e56-45c2-b451-d663f8db9776",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80f226e5-1fb8-4b43-a570-2f7d93db77de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f0268411-cb4d-4315-a728-6c5648a67849"
                }
              }
            ]
          },
          {
            "id": "d71291ef-7e4c-4d10-966d-9000d5ed22b7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f824a50-10bd-43ae-bf20-cbfede0504ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c56ce315-be18-4099-9efc-da8257f29552"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0d1124e8-df8d-46b6-ae88-427475bc4728",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4d4407d2-7d48-4b9b-93d2-c60da03f251a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "95ecbe50-2016-4080-bd3b-e3ae8d4e9852",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f0c5c4d-53c7-4c63-a0b5-8d9db2e45e07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6856a49-5ac1-419e-9016-5af723805a0a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33b41d4a-6894-4c00-9516-8c5c906d26aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3da03b5b-1c54-494a-bda4-d1b85c5252c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "621b8c40-b26e-48a4-8080-7af289a456a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e931dcde-704f-4256-ae0c-5b223b8ea791"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d318192-f03f-4063-9062-4573997d2a75",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09bc3401-a243-4a11-b68c-b63e61adf4d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a53c196-f254-4a72-83de-5adbadde17f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e144f78-5b54-44d1-80fb-74a172e42473"
            }
          }
        ]
      },
      {
        "id": "cddb8a20-bbbb-4251-a97b-c45d24e2bf9a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b160bf1b-c7b9-44f2-8a32-be7f9d16d692",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4db9e346-bc24-4305-aec7-803e970e6fa3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab799ee4-40d4-460d-b934-bf593ef4b6eb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86333200-c530-44f5-9fda-13c9a9d10475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "894238ed-52f8-45e4-beee-459ac801289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eece3b05-faba-47d5-a0eb-12af835fbe16",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e379b-572b-4131-8411-1144a1535e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "318bbba2-15a0-4693-8a78-480b0b1f7a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca81bfc-142b-4c33-92b0-1c5e30640009",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6f93c9-eb69-4660-87bb-951f1980889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c5a968a-7a21-4b32-9cad-80dbeaf65ed5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ef566cc-9fe4-47d5-81ce-92ff8117e925",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a710850-87cf-4d7d-ad6f-d9ef33a1cdc9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c020185-0b51-48fb-a9ff-8774f9df8561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b39fefb7-4528-4694-a7ab-4922e341b043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7285db-cf0b-47ae-aa1d-121c31dc0dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6a6be4-1af5-4880-8d26-de985036cb78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "02087319-5b1c-4348-85c4-25ef999ab1da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3800066-5f24-43c5-a0b3-a95650e91420",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7db93388-e076-49a1-9705-1937ed4e4e0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fa5488c8-174c-471f-a60b-e3e2618c75ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "040d285b-7c79-4994-b896-415e1fbae5da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "13fa13b2-950d-4a39-aa5d-1f56c35fd2ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7b185f3-5e05-44f0-9868-1a793fff7e33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2152147-06c7-4a75-9497-453b0c0fbaa8"
            }
          }
        ]
      },
      {
        "id": "f5b48dae-4927-42be-9b43-a4a0b076d5a6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9341c86c-9172-434a-8257-b6db2e738520",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f448a0c-c0cc-4506-8068-1b4487b98573",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c37125df-34b2-4300-8b83-ce00aadcaa41",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6590e7b5-c342-4f18-bee9-5ab4e692ff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5b9da1-cdc7-40a3-8178-fc25ed18e7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8554f9a7-10f3-4b8d-b382-a76c4e8cbcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "626b091e-e1d0-44ab-9596-465f5b0b0653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973c3200-8b6b-4907-a9f5-daa3e9d2d365",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca78bd5-6f85-44ec-bd7f-62cb428b8858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b73608-ef8f-4637-9db9-eba5326de63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1183d9-3e66-4d61-a7e9-269c146f35c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f6d203c-0220-47cf-be43-b1b1652d2dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141d5245-e33b-43cd-8388-1c5789bb12fb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3165e38a-d3ee-4386-a74b-4c022d518c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ac7f2b-e770-419a-852a-df062534a00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb9f940-2992-445e-b325-ef6595e2ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfcf59f5-2ec5-4578-a2c4-f682fe441c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3c040b-c923-4169-a300-35b060579aff",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f624c452-9abe-4b57-8f83-c71d1380a0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7928207-84b2-4fec-89b0-e1ab30cc5e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b908d7-6166-492a-ae19-9dc1b43b224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8553f452-ecbb-436e-a5fe-8707c08a3d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1d76a5-8781-4eea-889f-f257f629cc6c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655ec436-c5e6-4704-a558-c743b5d3018e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d53a19c-709d-4517-91f3-2ccf68112556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afff8c3a-94c6-4756-9470-3642e387b646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2876e97e-60ec-45ca-8506-f8f90e68f1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f2deeb-7d7f-4def-aaae-cecf9e7771ae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e9222e-87fa-4dea-8e7f-a5a786559c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8390e915-f12c-475c-b4d3-369d942d9d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2765e76-8983-4402-ac8b-6a32c9582747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "517dda6a-a6af-4628-93d4-af56bb3e4794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c4820e-9491-4086-baea-9d84dba2d7ff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4cc551-4030-422c-930e-15a3fe28f6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675223aa-2e66-4f3e-b5c0-b38551fd2622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6a3efd-3933-4531-bbef-f5d7b8ec8e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ca8cc0c-9bcd-41df-849f-d5a31da548f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a73987-c5f6-4e16-9100-29dffa8f748b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56a78e0-0a02-4dab-a233-4f2e64f6c86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7fe73f8-b94e-4973-961a-5f15d59f5898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4eaee30-69bd-48f8-a786-c48ff01f9ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40300081-42e2-4888-b886-656bd30cedc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49007f22-e0b7-470e-a0f7-f8b3ff16d3d8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6576a0b5-dffe-4b70-9bde-e87da5d7e1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4794c2-d186-4796-bdf3-04b23f04218c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299fef77-092f-464b-a68d-b9ef2304b902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7ea30e2-ecc1-442a-9590-184e13c3b39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a147a8e7-6f5e-4343-8db6-1a554ed77f62",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53935ccd-e08a-49b9-87eb-832726d4cfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7442149b-f5c4-42b8-bd6c-cbee63b777ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79571450-767e-4b3b-a9cc-e59e962c3f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b57863b7-e047-4073-87d1-6e8526a4d046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfb3148-2b6f-4dde-9b59-8b6fc8ecd346",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa82df3f-95c8-495e-96b9-946ac27b6636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3476c980-86d3-46d3-9470-3f3cb6d540d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3cf643-37a7-4bb4-af07-5ff74d2ab57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e83d98f8-a506-411f-9596-79ff607b3529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37262df-0679-43db-90df-2da6eccefb5c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01515ae0-605d-42e4-b510-c8277551c6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6cb331-995c-4096-8a23-6987a9ee400f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5945cf37-26cf-459e-8b70-a264ba95574a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4628954d-b7aa-410c-986a-85475a7fcd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccda86d-db79-4c14-a482-2b077cf4ff65",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14433a4-c9cf-4f11-b344-43571d32c440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff7da31-1e3e-49da-babd-d9aa27f0645a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51fce92-2e6c-4175-a47a-db020a21c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96361b4a-6079-4f56-b86a-3c1a092d98fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db506cf-7917-4a1b-9880-0604c555a050",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eece136b-cc6a-4629-bfe9-b6d23f5f590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f55a413-e0ae-4b29-a14e-f7baa06b486b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55684746-a793-4768-8bb8-c4702923d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0526152-f91e-4295-8ca2-b696377d9d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef3b43a-0d6c-43ee-8ee2-7c4dfc8419b3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf22a2c-0e4d-4000-9664-91635cb37935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e366bf66-efbd-476a-94b4-7169552db2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e318f4-ee85-461b-a2f2-07b4ae2a8196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98f4f6bb-0258-4f9b-9b99-7734e910fdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cd54bd-305c-4812-847d-bfdf3e818fe1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084db4db-9fda-465c-a21b-09e527b26978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fd153c-bfcc-47c2-bf7a-48edf5b5b6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a6d69f-0359-4e21-bc6c-107f5945252d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d54d737-3c8c-4065-8957-77a7fe3ccf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161af3d4-c964-48b5-839f-3085035404b1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b9c36c-c7bd-4cc3-9d7b-76474243760b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec223a91-3cc2-4c9b-9918-1e8ffaa33dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f0f058-43b0-4e74-b0da-7726a8f2a457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93dedaa6-2c9b-4fa6-94ad-ac67ab2ba8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750fddbe-2918-42e7-a2b0-d790ceedcd4b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996b0bc-4049-467a-afaf-8514fa8fc1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a09d85-949c-4766-9ff3-fed1a72cb4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d74897a-7349-486b-b07a-057086a6dc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "346c13d1-6168-4097-8722-45da196c6f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd660d32-ab0c-4d51-8039-e2844c4bae2d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7414c93-a301-4d21-a465-986e56ec735b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ee7966-2af8-4fd1-a8c5-bfb6ba44df4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1226464c-6167-458f-93f6-18df9a4572a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "055ed229-0533-4cdf-a8b6-19a1c7eedc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b702b6-0dc9-46a4-832f-0231b876e61f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022d896a-9340-41f1-993b-a1285fc40a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb59921d-cd27-4d8c-9b0a-d9a9767bfc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1104908c-422a-44c6-b1ed-67dab40d55b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0619b5fb-7a18-44e4-bcf5-c7c80c75870e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff3dacd-3d6c-473a-b69f-1d69583cc60d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe8f508-3535-4d57-8a6c-7361a7f53063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe47978d-6603-4758-8963-9567c73a97b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8983efac-659b-446d-99ea-c64fdf569fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1daca2db-1df8-4b34-ada3-fa865e60a0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9535d0d3-fbb8-48b7-a0f8-adf79ca8f0e1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c32d7ef-c742-4cec-8c9f-1926fd6ca936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eac5d09-a642-4a3f-afcc-dc155c62bcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0d4eca-7534-44b3-aa72-20abbaac57a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35be8cc9-9d9b-4aec-9482-1222f8bab310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5128a0-5412-489a-be32-76f927286ffb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de247aac-e244-44cd-98b7-fd4f735cbac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1501f40-a9be-41dc-92d0-1878d8d99850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d927066-8ec6-4f27-9717-33c11aa75678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdb11ae-2b6a-4715-866d-441934a9d69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57985e92-fa8e-4b40-a65d-3016d7c0d776",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2446584-2fd2-4a40-a685-08ffa2d9dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f779aa-97ca-4841-b08b-ecdf38d28831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54968882-4c34-4142-831b-9e6663e11b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d40a0e-5616-4f02-af5e-e78c25cb46ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8a9ac7-46ca-43ba-ae29-946bf289c687",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15e0cc3-f3d2-4187-85d8-9fc3c8de6999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43bd7d6-2e30-4ab7-ba11-ca96bdb12e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd8c26d-2e9c-44fc-8999-97fb97240df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c16f27-78c7-47f0-9432-035618f278b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130760ca-248d-4674-9df4-bcf31e9adffa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf16f771-29cd-4e61-bace-479a3d522ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99dc943-b58c-4359-9ff5-af1af5d198d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdb2618-5f21-4e94-b7b5-93b7d1c411a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f97759-036d-44c3-9bd1-c07e2c4f9320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc28be6-3ebb-4255-bc52-66dd49a89cd1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b832e009-8b56-4e34-be33-7238b7777e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc33da8-bf84-4af4-a04b-164df1fa37fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0127cd4-3f50-43bb-b9ed-fb9e62db22e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e93a4e-b81f-4f91-86d0-5a1087e31aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1cd907-f323-40a6-81f1-f5d984e6de87",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c764e7ee-d5f1-45c2-8d3c-9d4c65fb18fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9dcd6c-d6c6-41e4-97e5-ee825009aa8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf76e31c-b2b6-456e-9e63-75e9992a7d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "714a253b-95c9-4293-a99a-53aeb16934bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34224a3-6e4e-4aa4-ad60-61850c7f23e7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b752d74-763b-4408-be3e-93aa58f49beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe2f3f1-45b7-402c-91ef-eafa93f56d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400797ad-087e-4be9-bf56-1d44fc2ba6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a3b031-0990-4352-968a-366d46188252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a809da72-677f-4ef9-a2c6-b13feb4a2ce5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c409f0d-477e-4ab3-a139-86953d5d7db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993c4a47-c807-46b2-a5d5-023e4dccb1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a5a05b-37b2-426b-abc8-30834edc7ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db17c4c-e705-4c45-ba58-1b117570c38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85523833-4fdc-4eb2-8e80-2b5183bacb46",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bd0c70-8d11-456c-b99e-65cfebcd1ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad790595-4472-48b2-9a41-bfd6976a7ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32b6ba1-2ffa-47fa-8994-b4caad4fd478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b18424a-d382-4b84-9340-3480ffba76be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd75ec1b-784e-4c61-bda2-636e7f2322f5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db80f75-3350-4131-9e54-0188835ec675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac112dc0-bdae-4367-b3d3-d6e6870dceac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca61e9ac-dec8-40e7-ae51-b8171caa88f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "470c0a37-219b-462c-8f0e-d8f5609505ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c400cf49-f5a8-42cc-b151-5cdec1f3fd56",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca28286-b5a5-48b0-99c4-daf3effa5a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497cfb1f-f465-487e-a22c-425d5853218b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f4557d-2916-42b8-ac0d-e045f15df9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "427993b0-8de2-4b8a-9517-89b780ab1027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28d359d-b4ac-4fca-8172-996cc02cc2d8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce257c2d-ebb5-44da-a8f2-a4aea9db266e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c0181a-1fdb-4fbd-a6cf-d8deea26ad8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c056cb8-714c-403c-bfb5-fc6daa4f3c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f596a9-1123-49b7-8410-5bb8d5f992ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef7ef65-1d89-419d-b786-c87d93d76770",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f318af17-02a4-4561-8eb1-32e85d433ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587a423e-6331-4253-be61-0aa0292a8672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0e560e-352f-48a0-85b5-fc393053ab91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3171ce-9027-4bbb-b11c-760dee0d44be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf294ea-3aa7-445a-ba06-61bc0b9fd55a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c4a2a-f5d5-4e2f-9214-b225bf163a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72fb5427-bdc6-444f-aa09-d39dc60047fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79676f02-60b7-4f81-a0d7-ab3a346589b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ec03f7-3a1b-4430-99c8-b4a0f123b423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c56121-43a0-4476-9217-1814077c894c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d843e35-40db-4bec-a695-876a1b5098c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737748e9-d8bb-4501-835d-44dbe6005082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7e4902-709d-4e20-b697-9d5091bd292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c818fc4c-1db9-4f0b-818a-1a8499bc9308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f8ad62-e274-4910-b2da-5785f1f73ba2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50eb1e36-b0ce-4194-81bc-96f84972f851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399cec1e-8a40-4b5b-ac26-7712a0673544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3380e322-a445-444d-bf10-7d37ac04550b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "deb76e05-c061-44c5-852d-8e452d39c292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadc482b-b92c-4cc6-bb7d-ce15694c29dc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b8471e-5eba-4e27-bf9c-41a9fd8e54af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18efaab8-aff0-485e-b1d4-d3b4f92f0fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077787ef-5888-408d-a97a-96f13955ef24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d40281e8-ea2e-47d2-8be9-fe5b0915244f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556dda91-24a1-4324-afc5-b994ce36ed2d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65793241-a48c-4c99-8238-721162ae3d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effdc22f-834e-4179-8e4f-ff17065967be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d451d4-996a-4ae5-8d08-4d0ff2ad5466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95918ef9-b98f-4d0b-9f2e-6ae21b024654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae94540-57e3-44a6-861f-1cce50c57918",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cd0982-4b9f-4e91-8d6d-bb25b35f8f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cceb36ea-c458-4f10-b6ac-4bd9f2b4322e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef30ddf-2e3e-44d9-9673-f9f39e7dd6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "070c1445-d57c-4a7a-873c-161d7a1debf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ff60f0-1933-4982-a3d0-f8249d51d914",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cdb869-5202-4bdf-a942-3a8d4bfcf976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01960b1-2d50-4db5-82ac-d45908544fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63b6aa2-1e81-48b5-923f-6f8550ee662a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "650410e7-caac-415b-8c93-7be0992090b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e574e3b4-7346-4a6a-931d-3fe40e7a10b1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c5970d-a77d-4d01-aca9-777f4e5b2a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdb22f8-f1d5-49d8-861c-3c23b05c6f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d6375e-73c0-41c9-87be-c2ea481959f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc79cc4-4f34-4add-9d70-2afe75d8affc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c8b2d4-3182-4c0e-a975-e865b48aae1f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12221dc3-9d8e-446c-b756-ba5538620130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28d02bc-9e10-4bc1-8cdd-4261f79ad8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a3678b-bb80-45ba-bebc-00d656de61fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d78d2c-d0a0-40f0-9a9c-881e19796fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dab70cb-bd06-4e09-ba49-aede8191ef66",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742c4ab7-cb63-425c-a8fc-10c07624a906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62ff49b-76e9-44f3-a29a-76013a4e5c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84642e48-9c4d-4517-8c7f-e89f44e70bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d73c70f6-2217-41c5-be80-283dd078d05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e532d030-9a64-4ca9-99fd-648779544062",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9a18f9-e281-465b-ae99-a7ed3fc66b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0436107-06dd-47f5-91e3-1fd98954a715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc12c1b-1221-4cf4-a271-81102650bacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a83e4d2-9a45-4652-b367-bf189efdb8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b0135-6589-42e1-8e27-728f3a0bc0ac",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd2d8bf-6cfb-4ea5-98d4-227eef0766c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644d1c2d-c555-4846-936a-1d93d32d499d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc229c0-988c-4fd0-865b-703e0e13e697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "483cfe5c-abcf-4fa8-941d-3369ebbe0a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95204901-844a-4945-8597-48d60a2911e7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136a2738-6cce-40cb-9ace-75a9f261e4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fe0de1-6053-47d0-8f56-6c9a7f45698d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4475cb-1175-4d38-93c0-2761e2bbe388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37844267-8c86-483a-a37c-8a02dde6ec09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba614b33-3340-4aba-97b9-8838a098cec0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a71fee-7d0f-4233-bc84-fd70a8394af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a67045-989b-4060-9686-9215e2470cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bb32be-c974-454f-99aa-23aebf7d4132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15811ba3-e2fd-4486-acaf-92cda67533a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9910599-bd0a-4566-9696-bf035e8361d3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e379c8b-8b9c-48f4-916a-8820ca415eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc67eda3-242c-4eb7-add1-de7117e6f591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d139f2a-8c73-416d-8581-c0bbace989f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d275dd61-7f5b-4d88-a777-ee7fc6190bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844fa162-ef78-4069-9fae-718bda90a078",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660e5895-73a5-4eab-aaa8-6cf777d0de98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0845d3c9-ed16-4a74-86ca-e9c501386ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a53527f-fdee-47c5-9227-5fdab884838f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce06889-3260-4595-9ebc-3bb231e0db9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8969ea9-140b-4466-bce9-73db182d496d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdfc9bf-6531-46e2-a739-257c12ff643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b743f9db-7d6e-4c0a-860c-3d3e260838d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0eb846-2b16-4309-b630-b7194e5d0f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "961ae555-b791-441a-b00a-4cb18d505e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d50b2ae-adae-432b-b52d-d97b56989bd3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1fe230-2eb0-4d78-bef2-924b8914cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04f0a98-2a25-40b9-9770-7d1e54c600f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939ff679-369d-4719-b6de-60cd878ba818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d8e5c8-948b-4fd1-b822-481b87a6d751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efcad51-388d-4d30-b77e-e9a7a2f8c8e6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5ca3a5-4703-44b5-82a5-f016e07598cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552a55ad-938f-4f6a-a954-5740794aa152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f5d67b-e1b9-4f4a-80ea-950b70365362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "254e1b03-1e2f-4430-8c90-bdb45f9c76db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55fa9e7-8111-43a7-96be-42d6b523d030",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcbde6a-ed2e-4609-8bad-5c3297431d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30240b98-3605-4575-943a-290d85ab1355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663df775-8559-44bf-bb4c-382e26a8b513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b934573-3f6c-40c8-a7fd-d6dbe3aae335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a709bb3-7214-4892-a37c-341327694f96",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30c0ff4-3a54-4059-9675-e2b73c6f2576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36668280-6d50-447a-940e-6b03dfec4acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64be58b8-f78f-4262-ae16-bfa406b23384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "72ba890f-b2b6-4951-9b60-5bae04b7f497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7b1c16-2b7f-4e84-aee0-d32a297539f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b324c433-335d-4c4e-bfd3-ca91ab572290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016affef-536f-46b6-916a-bd03d5364573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9023e3b-06f7-43fe-b451-ebe1db460d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "221f06fb-1c9d-40de-b275-d34138eecb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2e560c-9be1-45e7-9476-414ba3806f1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f016de6-9428-4b4c-906d-0ea50817e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce9cb3d-3761-4279-b84d-23e2bf2032aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453c5bfe-ce3e-4e04-86dd-e1bab6a2b25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "11d02c8c-8a7d-4f4c-b17a-316be2c0991c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845f4af5-8d9b-4699-a6ed-8ac51c13e350",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8346de1-6478-4a3b-b467-81e61daafe2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c7f6a6-765f-4b62-bfcd-8a07cfacca80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c051eb0-489f-4437-9878-982d6fce56c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "da0ebdc0-1757-489c-b99c-d6776f4ee2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e9c090-0864-4588-9c23-d77b626c4f18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a56c682-b3bd-43d7-ba4f-a754148a7bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2eede9-3ce0-4f8c-9308-8a6ce11e4554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2e1242-2b0b-490f-a142-871f9cd13708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc9d699-b626-480f-bf2c-6bc760f8a4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4968eb82-7c71-4c0b-93f9-39687ddb0c5a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96532c29-d629-495d-a9e5-261309a15a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef433d8e-ce90-4d0d-ba84-c201bbbf1a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a077d869-833a-4dfe-b4dc-cc2bf6aa2f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e4722e-3b41-411f-929d-448d486efac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f932fa-6c68-48d2-84e4-6c6169891e0e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32adb81b-7fd9-4bee-b8ff-b4775b6fce43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc883cd5-8905-4f57-823b-0e74c55d7ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca05fd2-c327-423c-aa84-b09e4f722225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac4aa50-a863-4024-bfc9-4406ec47b12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94cb20e-f2fb-4270-b408-27fd67549f92",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aa61ae-2770-480f-a85e-3515d02f307e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648235dc-ac14-4e30-9012-f70e97cd47d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953e5a12-7797-4b59-b01f-b0e5256764c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c848e7e-246e-46f8-b246-3faed0fbac95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e023dcc6-f3f1-40e8-9956-a2c962b6f8ad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f48c5c6-9c30-4818-8b30-ab95b77ebc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcf4847-20c0-4917-bfc4-aeedb2fcd6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8354fd-501b-4476-85a1-4f44769769f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1d11f5-5583-45a6-92e9-837b88f75bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2734ad0e-e05d-41b3-8a2a-ba7f9c566d91",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996936d9-5829-4b24-baad-1d9e319a3801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3826a1fc-eba3-4fa4-8595-12583f038de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6767de48-222c-425c-953a-745fdeb8e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9296ebde-c041-4c5a-8dff-786eb9eef149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d02d830-bcef-4ce3-bf6c-730cfd7ff5ad",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135e61bc-ef14-42d9-bbb5-8f54467cedf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f58e0d-f4f6-4320-8c97-4464ed5f27ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b935f478-72c1-4fe5-bfa8-518de0e66134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "811954e3-b851-416e-9b88-7c1c0e4d9e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2586585c-2463-4454-9602-93533d997a15",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f414e0-9e93-409e-9784-e9096932a575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7d4177-af55-4210-ad22-7f1fe26e92c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fadeae2-c9f6-42b1-b34b-48af03fe694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e397feb-59c4-41f9-88c0-fab67bff132b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af0ea9d-f1a0-492c-92bf-0e42441cdc6a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eef0c2-59c9-4d6c-bff2-80f6301cde82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951d1ca3-82fe-4c9c-a186-942b4c994694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20af16d9-ff02-4afb-b0f6-a749a9ca96c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba182cf-afba-4b9e-9d11-0740be4e5ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5e0f08-3d2b-4772-84a3-2dca3d6bebf7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89b29be-e6bf-483f-bf8a-742e8081855f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1e12ce-7798-499f-8964-fd98ab78b569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07767b9e-c7a6-45ee-a74d-a778fbf83050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adcccc6-993c-4522-90fb-fd8ce7f1b08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd510e1-36af-4aa3-b730-45422f5d6b4a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f3df64-0e0b-40df-a7af-b32dddea2310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a8a493-fcdf-472e-b33a-b32707268a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fdca47-a07e-4519-95d8-520650aabaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2817ae8-bf31-421c-9324-71b939734ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1986446-b9cd-43f3-b40c-f980a3c50a1d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f369fa85-a255-4a4b-973e-fe6a31c0fb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5bf2a4-4349-4075-b871-dadb61f3e03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e0b39a-7350-4ec2-a7a2-5e20c7d4d0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d972bb50-4c0f-422a-82dd-415bdef576b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596a3fb3-3bae-42cf-adef-4e3a7748385c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29159284-dc54-446a-84f9-85a497d774cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f441eb91-22d8-4a2a-b451-8bd61def35ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc20e61-a2e2-4c56-b099-cde465757067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c578487-6896-459c-b4b3-4d82b85dadf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22c27ae-dbd4-4aa1-a08c-d2a8cd9c49a4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5780d1c-2a6e-45cc-a322-da15acd43747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed21db37-6513-4cca-bb81-d040cd5486f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be586ff-bff1-47f0-bccc-e82375272688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97a3ab32-9b59-41c5-aa3e-22f16029c1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b348706-deb0-4686-9780-9ea01baa342f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66d6a9c-46f3-4df6-8342-e17697daf0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc0e1c2-199d-46f6-8f97-17d8e63702c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340cbc73-e51e-47b6-8956-2f49b44b6c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e51a1c9b-dafc-4229-ada3-ed820ad2da41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b36eb0-6db8-41be-abdc-b8a8a1eb4800",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45058dca-fd5e-45de-a9cb-7d80b74b53bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c089a6-a1bc-4364-b657-17daf5a3f905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f790703-3a1b-495c-8001-bc48a7f90358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c42b5fac-7fd8-46b0-82e8-fc3abe7a0176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4c5aeb-3b22-4f6e-9714-2d9cafc61a0a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69242b63-92d8-49e1-b704-caea0f78a804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f3ca70-04c9-448c-9f63-3b40f0042f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62791a2e-9018-402d-9c93-ac5ee67c8d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c693e499-7bf3-4212-8685-0336c4821d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7403cd-99d9-4add-8881-66add9700ef5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319a36d6-ede2-45e5-8d94-a5102c36bbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b587653-f1b5-494b-a317-3c8f4d8dcb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a8032c-b24d-459f-9cbf-b3f4adb26efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aed5282-aafc-4617-9e42-5a889a527063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829ec410-1b35-47e3-9304-ce450423a684",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d24fff-b627-457c-a926-b11c4aa928fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a9df6e-445e-4310-bf60-823931acb9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a59fc7-3a01-4b54-8464-17b579f51c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1650fbd-5fc4-4589-abea-6e1e25128435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b127701-bea8-4549-8036-1e9ad27995ab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d81e4a9-1474-49a3-8697-6d8adf912c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2558c7f0-8b2f-4ed7-8cdb-a7b0356942d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8937f0f-cba9-467c-913d-1e828dafb07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19db9f23-8747-4050-8863-7cf9aeae8c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e03c74-bf05-46b2-b6c1-90014f18c57a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2615fddd-b15d-44d6-a364-d6a1b482d490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d377244-ec29-45e4-a5c3-cf5f90109f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df7f45e-e022-43cc-adce-0a472f42bbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55c0f507-1848-40a1-ace6-f8873d3a9551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22d628f-c6a0-4e2a-b8e7-fdabaccd44d4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e36cdd-480e-48ca-ba1b-efe629b338c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e9ffb3-9c8a-410a-8b50-c78b04a5b3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e85e85-4546-4e6a-bce0-f8d57b75d8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7842c28-d6d3-45be-ab23-6d6d917483df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7269b7-2445-480e-b895-064520ea9248",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c4f3af-548f-4015-b527-2037a723f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ae3876-dc34-4eac-84e0-b0b1b422ee64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac17fe6-377e-4f28-b720-0223ae655deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be5a1d73-aedd-4477-835a-8f0a0dba7bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79254e3-3457-4dd7-871c-190552bfaac0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ec0f4f-7daf-47de-b833-cea95ca91844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6825146-4620-4c6d-8d9c-5c4ae6399162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99c426d-0c44-4974-9ba7-75bc4e86cb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b88a0d-db7f-42e7-9dce-c766be6d7cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be3502a-a228-4d8a-a2ae-6ba3fb7a6099",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa98802e-c45c-4cde-a4ca-89c1e5dd228a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fbec78-7b39-4b7c-8446-a9e606f40020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec393cf2-7121-4275-8ddb-94230a7e0781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af1e6ac-ad32-443a-9a02-1cdccb8f3ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5385894e-d9c2-49ff-a9e1-165f37b67f78",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03691a54-515d-41af-a88a-01e98574402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe3298e-5e8f-4fdc-af23-b08134d3fd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251aea24-ae95-456c-9c4c-ad8d6978db07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb20173-2aff-45b8-ab53-77e384b2edb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ae0e82-867a-43a5-80f1-6656464bca87",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ac191c-6541-40e0-a5f4-3c5fc4e2a708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7876f56e-e220-4f14-97b2-16c55ac05124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470d9451-61db-4f0d-893c-e93602668f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c357556-2e13-4a5f-82f2-8a5cfa891424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc5ddc2-360e-4714-929c-92e31cd26ed1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2717766-8d67-49d2-bed2-a6c4457da3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0880946-d166-4c99-8fe8-33ee40454965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0d82e2-2c04-4582-96ee-de1e6e06315a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8fa76d-39c7-49d4-bece-07df2346d941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca7b694-7652-45ef-a97b-a18e7158d2da",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f9c10a-fa95-4832-85c3-fa97bd225b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d573f635-ee1e-4eba-bf64-c1df3512afc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25004026-c457-4bd7-86ab-e61a8ca0df30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f89680f-6ddd-4584-ad47-738826f8aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2011dbda-c5ff-4b47-b011-63431a949f7c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e035123-9fa4-4f82-9806-c641ad614547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed76496-7468-41a2-8fda-9fb83310f492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35958ba-5360-4380-8e2c-ba7ed555d731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b36f42-5e1a-4be6-91e5-242b9fc1d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf59425-274e-4693-9e2c-019a1875900e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2afdfb-0065-4a80-9d27-114d2d24b6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6c8e4a-3590-42be-b02c-151c1aa8ca35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01857439-12b9-4467-bfe2-14689511c1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1d589c-d3e7-4f59-8a9a-51bdc29079ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7d17c4-7177-40df-82e0-a1ede948610c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e47e45-ba77-4686-89db-337d661f5eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00947fe7-69e8-4b46-9d1b-34d7e74292f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bb985c-eff2-44f8-b8f2-e18492e1254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8946180-6003-41d6-a1e9-64dac9350712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3d5549-f4e0-41a9-b301-f1a45bce97b7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17eb817f-b4e9-4174-8a47-aabae619d5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "24141918-b89f-4e73-a140-857ea028a816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca02e4a-87ac-4fbb-9f56-9c4a29342e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d4fcd8-38b4-4fa5-ab92-7d1f790bd79a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5b787b9-e429-4f8f-9d18-9bd0f29a8810",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84e1791e-e632-4c1a-a78b-918371d0f45e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376ee9e2-3620-40fa-8c59-a713b7b6bce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "468ffbcf-d686-48a6-ae08-58d1841dda76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed284b3-bfc8-4f45-b9e1-3fea8056a121",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "777916ec-ef69-4d5b-a67f-ed8cef937f3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "575be70c-3317-4c92-8f8a-24860a21b73b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4196ca36-cf35-42f6-ba73-142a200e0584"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "773da3da-0585-4b44-afdc-ce17a7673495",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e53510cb-50a7-4ad9-ad07-055a60ce04a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ee80b6b-88e1-410a-bea1-a759f56ec057",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7cbb518f-1d6d-49a3-9801-9d985183b4eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c85974a0-f70f-4a8c-8595-116dd83d84ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "575ed837-9ea3-480a-9749-3edea5ed1c53"
                }
              }
            ]
          },
          {
            "id": "7c0d500d-1a70-491b-b1f1-6b54e07addd0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0df789ce-2db7-4d26-9721-76bc379fca8b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "32fb26f0-a173-46e0-b084-ba0b3f0b4abc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da30b0c-4ede-4ff8-8ae2-ef23dd4a57a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7c9c5e14-a620-47bc-b7f3-cdbd403e20e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e89072f-6e95-4398-9625-e381d393d76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6bfb27-3021-4b29-b532-347b4e0d0461"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2cc497c-8918-46d4-afd3-14dcc35e804f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b22d233-46ff-4ee9-93c3-3d09b77ab6e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "334412f6-d301-4a1d-a149-238629fd2b3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e43fb10-a4b4-4a34-a7a5-e747c8f198c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a952da56-b392-4900-947d-0926011239f5"
                    }
                  }
                ]
              },
              {
                "id": "02d0199d-c3e7-40d9-9af6-e68936418001",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fec795c-19f3-4a69-8e92-5ad8281a8252",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39beb925-268a-4074-8cf3-4cfcc3a0d93e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa407bdb-cfca-4429-bfed-1991ed66c2b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cacfe310-0eca-45e9-a3e2-f74210c122ef"
                    }
                  }
                ]
              },
              {
                "id": "5d04b920-cc20-4874-bac0-1208f705105e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "651a48db-8c04-44d7-91e4-88e07818d5b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8751643e-e89c-44b7-a006-9aebebe5d3ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0aebca2-e7c5-456d-b2e6-adabf2db0b79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "014c3295-9392-4d2c-9875-3546e83d17d8"
                    }
                  }
                ]
              },
              {
                "id": "ac1fabb5-8e2f-41b1-9cbd-f40fde0b7400",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73eba991-56bf-4544-aef9-35bc423b9e71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dc26f55-019f-468f-9095-d6b1c1c1006a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22544fe3-21e6-43dd-9f11-aae60874b871",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "20086cc4-436c-4e5a-a00a-5fe8cef11a43"
                    }
                  }
                ]
              },
              {
                "id": "33a10dd6-70b6-4bcc-ab89-5f4c97f6fd5a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c14637ac-8196-44ea-b8b3-f9e11b26a805",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "843c795d-33c4-40e3-b76b-5a5bd63cdad7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "271c624c-53d8-4c6a-b447-0a53531a2463",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "348c14fb-a4f3-4adc-8a2c-39fecd27c750"
                    }
                  }
                ]
              },
              {
                "id": "a47c08d7-d854-4e47-9a34-9069a8f03951",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff9ff010-5abc-4f4a-acf3-a925af1c6d43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b0664e8-4931-4551-92a0-a3f727511537"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c86a122-96f1-4d9b-aec4-e6e832aca3c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c85239c1-41b7-43cc-b9c3-7d9339b74127"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d2c5770-faa3-4c43-a24e-7b85b9005743",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95fd00f4-5bf6-42b1-b83e-3e1ed48cab00"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "895f4310-58e1-4cae-8161-d601959197f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64372e69-21d0-453c-a90e-8fc7f4751a15"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "626ded62-e4ad-4fc3-9821-33ceeb7c6bfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5dad19ef-6c9a-49c9-ba71-df00aa2ea47e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f70dbd87-ce45-4a7e-8915-531423676960",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d4c21d2-fda3-45e5-8089-ed8afa504172"
            }
          }
        ]
      },
      {
        "id": "e44c1c65-9a31-4988-9900-4bc850132496",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4ad37326-ebca-4845-bf3e-66821a36f480",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99f09d20-c17d-4222-8455-5e63fecfcc1f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a80d86b-8f8e-4dd6-abef-eb442b863d7d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c428fa9f-f2b8-4c8b-accc-b8afa264978d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558075f5-459a-4320-80b9-3f333fdfe657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4b3cdf-7913-4bd6-8371-f77445914134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "229f6751-1e6d-44b2-bd44-9f4c11bc4ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da066c8f-a21b-410f-88c1-844fd5993f64",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afc9e3d-82df-40d0-941b-a203832c36f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fe02f3-1b99-4d78-9509-e6668e0a7ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d75d30-363b-462f-a801-f045233c30e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c91fa0f-301a-441b-9f01-997b01b9d5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4540988-0c1f-45ad-b58e-ea3d24ad7252",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b82a34-7fdf-422a-a91c-6f8bb37feb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a090f1-164c-4a71-a79d-3030e9a16dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df233360-5687-461d-bc92-8f07a60e9535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "873af1f2-1e8e-4358-ac0e-2ead0cc77f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9176c4a7-f0ca-4255-98b0-1076ffe51271",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848feca4-a177-4b39-9a41-ac85dec97ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a51176-020e-426a-ade3-1f70f66e4303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e8f46c-1c29-4531-9e48-6f19cfe2edb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c11b33-5c67-4927-ba22-65fc0b0067e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dc310b-3d4b-457d-8642-56c13e68df86",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6029b64-3864-4ba1-93c2-a6b2819639a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700be24e-4b2e-46ca-8b4a-c5f9c20ed5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805cc636-9918-409d-b92c-3089f991107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec84842-04c1-40c6-8bf8-a0dc0025224f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc752749-ff34-4ec9-8306-de5b82d7ecea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170e2c65-d1b8-41e0-a385-f0451b89ff74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fd3a15-c8d8-4cd6-9026-5a7fff979a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2523aece-503a-4d22-8e3b-f84bb4e6e5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae22612e-ba07-44b1-b30a-1ec32ea319d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08164e9a-df63-4234-afa9-ac1d3bfd45f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f3bab5-d6e1-4e40-a0c8-306d5cc507dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ce4949-8e58-49e8-bbd6-0e3445e60c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728b858f-996a-49ce-9418-1ab1781f18ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6479c6f4-d9ee-4f16-b9d8-5d92406e2785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2533d7-696b-4bbe-8077-db361f3f508d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa453b77-7a99-48a1-ac80-4cf2e48be744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a8117b-c1cc-4db5-97a4-30d84db79db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a0d6ef-9e2b-426c-87f4-5ff35b887315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "273b54c6-4a5d-4245-9735-970a98eca30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca9671d-40c0-4dcf-b740-89f6ec5c9b94",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88237d30-3375-45d0-b517-d169379fd21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0050136-dd73-42c3-b63b-937b7a726301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717b6325-e404-4191-9f1a-19169d7942f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7ba11f-6d03-40a1-b414-48d8b6cd6a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0c98f5-b6b2-48ab-82cc-786477f00e66",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65ff9cf-6418-4adb-9927-9991dbfe3891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3d25f0-e213-4c8f-b01d-863ef6c31eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ca9ca9-f1a8-4143-9585-78866da5f085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9547abc6-7654-4d49-8932-cc61b3eb2a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98843ed5-4728-4b1b-8d5e-1f17941de548",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9197ae06-6b7f-4ad6-9ab2-742617e19518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca917a5e-9ed6-4bfc-986c-f58707b97ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d15e7a-2800-497d-a5aa-62fdb95af6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "70309176-b0c7-4c44-885f-9e745f3a82c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd65436-6c5a-4391-976a-0825940b148d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6004b64b-86db-43fa-b803-ff4d66734967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d5f916-35fa-416e-97bf-94b011fe6abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fa41c6-33a7-4b04-9604-23f6e5e7e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e7b091-54ff-45c6-9f04-c077bd2bb435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf28ae3c-8ae8-4002-989d-cbdb136a2840",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a443c75d-dcf8-476f-b4ae-9e163cb3559f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de90618-daa9-4b5d-aa6a-db413ac126d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcc66aa-897f-48ab-9e9c-f5ff54b8f0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92eb34bd-c040-4d99-b9d5-22c2172e9e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0aeba5-c689-4626-8f4b-a41d369a2129",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f5696-0c51-49f9-aa4a-61c957c55f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad5da14-63d0-4dcb-9c48-146a3cbd5390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05767f8f-805c-4cb2-8ff8-496a3f479c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "115c3e12-f8fa-4af9-bb90-5caba7f15d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a82ad0-9052-46fb-a3bb-f225460984dc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6450621-73a6-4d65-a494-582d27eb0864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e092ffd5-e13b-4cea-a82e-7938cce730b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbb0692-0b13-4ba8-9414-54d1988b1c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "deef454e-9f26-41d6-bfe7-aa2c810a44c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cace225a-863e-448c-8c0b-713b212c60e8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79810de-cd47-468b-b58b-08391c677ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d310da-2d22-47fc-a53f-c55ae3b4cedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e46c504-fd7e-4a1f-92a0-c2d59a7ac3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "94419e79-c6b7-4c3a-9e35-a125e75bb049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0a27b2-3bfb-4885-9c3a-23b5f6d0e6e9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ba82a4-3eea-4666-9596-9647a8d1c440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a902402f-c467-4c03-a84f-503fd18032d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf77d94-0a93-46ec-a2eb-541fff65f6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc825a9-d650-4c2a-89c7-72a8f1efc976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b463c8d4-ac18-474b-931f-ba4ec33bef38",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5cbe76-738f-4aed-a3a8-5250ec51cc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506dd8a4-4b89-41b0-920e-5075e240f030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f11250-0232-4900-b574-7915025dfc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c6874b-ae22-4aed-bdff-a5669ed4c270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8771be81-7de5-405e-be04-7e19a5a811ca",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3983bb15-3d71-415a-9d73-726a20db73ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5499cd-dbc9-4205-a596-327981622f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46b1813-3290-4f39-ac39-c2f682f20810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e58edcc-c005-498e-accb-e84dc91eed54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaedfef4-2e1d-4af3-b488-9ff5975fe0ea",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24248ff2-9cdc-490e-a5ec-2fc63b84aa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4effc6c2-9fee-4854-99a5-0fab09577fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9be6ea-2d6e-4bc4-8b64-120abe27de26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7018556-cd65-4124-86b2-589bd879796a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe108aa-9d1e-40d8-ad71-bebcec368583",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c786880-8d2c-4fbb-9a7e-b97456e235f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c487e968-f281-4aa0-845f-c49a10cae1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f1d29f-0a73-40a6-a795-27d9c60d0741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc8d3d8-9762-47bf-b0e1-792a0cbd25f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7a9279-ed59-4ad3-9874-041dd0b80387",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d503851-db63-4134-b4d9-bd62c34cbcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64487732-8820-4790-bc12-980a98ced598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e66a1a-8b42-4ea8-8952-4fc15b13b348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d6d8d7-ca76-4a2e-b3d9-302ca8e383fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3620ffbd-653c-40ca-b731-3d495de7fc1b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e042546d-b350-4316-b97b-c9424063f20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3718601-ac01-49c0-9dbb-cc7c057ad235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1676b7e6-6d39-4fc2-9392-dc94208e272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a253644d-c265-4db6-b2b6-335efe202257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5056de7-b5bb-4048-ac42-ef985ae0da66",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59840c54-f217-483d-8396-53a5dd0cca90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213dda2d-3c25-4263-8e39-7cbaaa7e250b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7a23c6-a4de-481e-a521-ba4c6d9b3bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d085c8d-368c-4c2e-abc1-86041a71ddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037f013d-1842-4e44-8132-109127cb12bf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bfd990-34e8-40d8-bace-d83dc7b0f6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e000421-0b85-4759-9ab2-8f12dd8619ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3615afdd-a22e-4909-950e-61b4d403114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "320fdf73-27fb-4c77-a312-f5fdf984bbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9184aca-b9c1-4e32-bf27-cd754687e69a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3243c792-21c8-4783-8c9f-50adb90d8e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce7c289-498e-4642-b90c-4e3fa46950db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdf1e5f-dda3-4207-957d-91646e22fc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fca07ac-a46c-445d-9a5a-739519b703ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5636704-1199-4c85-b84d-81e7b9cef33f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198121fa-2bb7-4e02-80cc-ba9e57c7fc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c59fd8e-7f31-48de-a835-ddfc41bdc357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c2153-74ef-49c1-a2eb-c89cdcbb8c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0422ce1f-133e-44e9-82aa-0464e9f58035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28783243-584e-4687-a691-ecb8ead24d5f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2286391d-408c-4589-8536-49b8d6e864c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea68126c-b62c-43c6-a208-605a6dc8d14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0d2e5d-9bb3-4e64-a941-73e798d1715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4957bf9f-cf4e-4072-9c60-b6cbb20d6543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e20859-eab5-4817-b154-a8468e19a9a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69875231-ec76-4599-82be-49fe51684b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83338b31-392a-4e44-9f22-906ec57f5b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f35ae5e-f735-4597-9935-47507e8e9f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "539f338d-c536-42f0-a45d-aa1a99e10a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c327d2-8463-40bb-82a4-91f0c367dc24",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1387ce-c04d-4bd7-872e-83ec952a61b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00ad0c2-bdec-4fea-8ada-9fd7470ff204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6240a5cc-ca17-4d84-9376-dd931777baf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "635b3351-fa55-4027-88ca-d037d7897247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689d03c1-4cd9-47ca-ad3c-ffd8ef08f9a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e22fb48-b9cc-467e-811f-f77a6b0a732c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad13afa-a4e6-46d4-bdbf-ce73c8c95ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acde18d8-3d94-446e-a526-8c7b18d23e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "724ff537-346a-44cc-809a-db9ba5e33f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fb94da-6f56-421d-a912-a57a7e830d64",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c3ecae-0024-4c4a-9256-140a4a4c9f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09be99b6-b353-423f-9eb1-0293de87125e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec6711e-4da7-4863-bdff-029b7e3610ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9a9886-c60d-40cc-b1e7-3bd76e5f9955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c559b2c2-1641-4fae-9ed5-ff87ff957ef5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b423717-bd3c-4717-b4f1-d7960425362a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff43d5ec-ea58-4013-b148-5b57763acaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed73c20-9e3d-4016-94a4-091c2588d338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "908b138f-356f-4e2b-9a43-4c3d720f16b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d513f3-529d-40c3-ac33-331e23c3ca5f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584e7f27-8d8a-47f8-a7a8-a91bb3006324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7515c32e-b62f-4b2d-86d5-21fa83bd632c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817b014e-f642-450a-b86d-b0e2172923d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56608481-4d46-4109-a969-e383f59e4683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d465a7-2806-4a9f-9784-deae6e8051b1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281dac2e-5634-4f35-ba9d-c4bcc7ef8902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e82a297-0eaa-4636-98dd-0ad02603ac1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cf525a-8385-4e31-a218-aa1cc8059128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2014ac-d6b7-49ab-9973-d5448b4fd4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b4b4c3-9b08-44c8-ae29-73bbbbd3cd73",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c90d29-fbff-4d17-b199-aed98f7d3402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d86586-ee13-4578-9f2b-7b734725d962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a837d229-8c4f-494e-bfe3-7a690c643b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b93529-ffe9-4d15-bf66-f0f3405ed2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72da519d-01df-4bde-8e84-605a71af5381",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17b311c-751c-4550-94ab-221160968e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bf343a-801e-4076-9567-5b7ee705e708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa661d-dd08-47f1-b758-734a513c5c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "469e0ca4-e65a-40b5-bd89-28e4ab6cc2d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d02cb77-27cc-4256-b043-9d9d90198373",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ff41c3c-a908-496a-aa90-2b0a83002218",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d1f60b-d1b7-4a29-b6b9-8024154cbfb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0be7ce39-5334-45aa-8228-cfbf054a352a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768d71e3-3de5-4c0f-a8a9-a15ea5582f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52999dee-4403-4f50-9caa-2c148cbcecb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e84f0b64-d34d-4eef-a280-a7d95ea65198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4ca662a-ad4e-4bd0-8eb4-c45ef7199bc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fccdf8b7-d63d-484f-9cbd-0a5ccf828ba7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c322df93-f71f-4144-8d9d-bbaa983f5196"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04004389-9366-4aa1-8d01-e6bdd091c98b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6d264261-cef6-4bf6-aa54-739de5a971a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "715bfd74-51e8-4a93-b325-314fbcaf0ad2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b33648b-7cfb-40f8-a655-596bac91818b"
            }
          }
        ]
      },
      {
        "id": "4ba18519-a547-44ec-bb17-5cf82b743120",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc18284d-416e-4e59-9b64-5d1caacff0c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaf6098a-0448-4d1c-8cd3-0b1a28e2251d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5851363-ab22-48a6-adfe-baa1b0063218",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d40f01e-9ca2-4295-90a1-d4aae24c5d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0394dce2-43db-477f-ae99-7a9e8a50086b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd7d219-96b7-4f6c-bcad-2c76d1317135",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0069fd-1688-460a-87c8-eedf98f1ad78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbc9673-4b2c-41cc-be50-185ad4591751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e94ad2-b890-4753-98f8-bde2ce874076",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7713f19-1d8f-40b8-9cc1-799be3e41f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98e7b8c-0042-4ff8-95c9-c24ede0dd370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac711fc9-3813-4954-bc88-72a00433822e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a652679-71d0-47c2-880d-42bda0988b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886e51d1-5886-4dc3-928f-213f820706fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871ce7bf-26b7-4092-a12a-5b44e2b851a8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf847509-a907-4b28-936d-5cc87666c597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff19916d-d9bb-4673-b1c2-57afe34cd3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d0b424-19f5-47dc-8a9f-64662301de66",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcff8cc-4383-4647-9773-e491ceefe3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80e1dde-c6ee-4461-acde-6853ad154655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b869f9-8e5f-46eb-9059-06fa18488cfb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44006ead-26d8-4e7c-8bf7-0303f41afee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bc3fa4-910c-4a9b-bd58-a25bb83f823f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df7f5a2-9a8c-4a45-a902-78526562e461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bd78a8-3cff-4538-ae1f-544560a6f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6521e3-23c2-4ef8-a030-44dd85692437",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a3ab24-002c-43b4-8695-672c84d6fbbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c49848fb-c333-4bf3-8d4c-cc85adb8fad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a8d8db-ae68-4dc3-bdf9-268fb835e27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f3a6bd-ff5c-4736-8902-e42ef25bc823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08022601-8743-44b8-9fdd-c65674915ea6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c298a8-a337-4513-a9d9-57f6ab90b8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dbca005-2851-4506-9382-68fd5ea45105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92ba9ab-d1b5-42a3-a3a4-47859b2ebee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7a443a-c1cb-4459-92dc-5ad586c07c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f4f73d-c623-49ce-aac5-985a5bda16a3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c973fb3-3040-4711-a393-05c918ea475a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0063870f-f9a1-4c15-be2d-1c330b941fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dd6fe0-1d0a-40bc-9193-1bef6c68202b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c577395b-5772-4bce-be81-216fba0b2279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cac9e5b-0a8c-4550-b4b7-dc09775d598b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458190db-bd6f-455a-b69e-8fe7c8fcb4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172bf701-e476-45db-9068-cac236a8e688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec912fd-59c8-47f9-81e4-320ce2973dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a10743-24a0-418f-a126-141edfd1ddc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9be662-75ce-4612-ac48-883459bb0d7b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423a8e68-8d34-4227-ac00-1d3eff649062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886342e9-4735-4ae3-a758-538335f7ef2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ca8a3c-593a-4c7c-a4d3-dc21963d51f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0048aad1-b6c9-445a-a83c-8c7d2aefc533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d794c71-133f-4f95-bfb5-56b28a034a0b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149ad2fc-096d-4a1e-b0f2-75dc46470a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f9aea4-256b-4714-a993-285200ceba24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1aab4d-a8e4-44f0-8ba8-ac4369f737db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c062a828-69df-4dd3-b199-62340e9a8f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15ddd6c-f712-4325-afaa-382c3cd3a587",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb2bea2-f18c-4957-8041-908a17439b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d0080b9-be16-47d7-8f81-1bb5243c5b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f97fca-8459-4fd2-b716-b207e7f6d8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fb5def-f68c-43b9-8071-6bf83b39dba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e177cd30-20c5-4da6-9832-58fc5f4fac3d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba76f4d5-ebc7-431c-84a9-f8e5cc3d8a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda4318d-4d07-4b1b-803b-a18eef94547c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198ebd91-90e0-4d8c-9de0-10836fcb3c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1b9f27-de3b-4261-baa0-d0e2f3c274ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3812509-3de4-45c4-b636-5be71ea331c4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d2c430-e3a7-41c3-bc00-7efaefa7cd7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f916b4a-7049-45de-8bac-195af918a8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f6148-a05b-4288-8bf6-289be420e973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dc3641-ca41-48b1-aee6-eecd5bc5c3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3de2ff-7bf5-404a-9e44-197905e8f96d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9644523f-91e9-4704-93fe-b4fda4ff8e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0479a91c-3b8a-4bc8-b0b0-96e6d0964ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03b21ae-f4d0-40bd-b6bd-ab21a6d5441b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58b6ca5-fbc9-4d55-900e-478380308843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb305d3-1c81-403c-aee2-a2f7d0596490",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb99da8-bf5f-4c8a-a6cf-15c714b40c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addb34dd-12a8-40be-99ca-0de21c6dc824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a0000e-a529-43ce-ae75-215ee6ffaa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b080d4a8-7201-4f88-8900-7720943389d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70019fcd-a465-4f42-a2cb-a9eed756a261",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a93d9af-276d-4637-87e3-efaf3d0af48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dde26d5-a98c-4f27-8a6a-c3ae6d7505fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a224355-8512-4761-92be-5be1aced7b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b698adfd-7dc1-4944-b8f1-01cb446963fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e97454c-a408-4f81-84eb-e9e81c760503",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa4d161-2847-4816-88ae-df32405b669c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac8ef91-d46f-4e43-919e-bce680d363d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d3b7d-79ea-42ce-8bfb-4635e2e031bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42e78b1-b937-45a6-a3f0-0c8489533e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62487aac-e0eb-4487-bef7-254dcbfa3fa0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597a6be7-008f-495a-9252-f70a15b2352b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ea0552-0cf2-4c93-88c5-204e171197dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122376ed-7b4f-46cd-b01f-2b54cc9842e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3acc543-35e5-4282-88a6-cdba189b4ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4837b05a-7623-41e9-9cf9-fa60e0424618",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1430c816-15ec-4408-8deb-84d62e9a404a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb81bbfe-178a-4566-8352-4b7ccdcb8256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffda7780-b659-47d5-bcd7-163247161c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ab4e1a-dc83-4115-a3a0-4213b2a42911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2663c1-332e-4966-93fe-09df66031aad",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f398db-d219-4354-be10-03eeb6d5c9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6391cd25-f5b8-4206-a1a4-ae37dfb7c22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f87ef8-1745-4ee7-a0ff-769b8916035b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbb4640-d9f5-4c49-b66c-8f0056f2ce8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929a43d7-f251-4079-8ebe-b570ba167087",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23307da-417a-49b8-a3a6-f582a45f7545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f32cff-9ce8-47f0-b2d9-35d931411918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bcef32-ed7a-4722-b824-2366245e5fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66077d8-f5b3-436e-8870-0a3833a91340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b11c6e-6614-465b-b232-8e91211e1c6d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9252e2-316b-4b77-8349-29b6aa53e510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a3a2ed-a6f1-44ef-9b8f-6fbbb7c7f466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fed9656-36f0-40ed-a63a-492e2f259921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef2f425-0ae6-4fc9-9be1-4b7a5d4b2774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721d2524-d068-4978-bee3-7ec711b8aead",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78328320-cc23-41b2-8791-8292a6958299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a644b3-ef23-4092-ae5a-17a12cb5c27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b34d50-b8c6-4391-944a-13a2e2cf954d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f482ba7-4f67-4f2f-85eb-2cfdb7b2e353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acec9452-28c2-40ed-bc83-31116b3bfda0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e9ba5f-53e0-423b-9fa5-ca4a99c75f55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d83272b3-3e6e-4d8c-b827-36c9a2c2f86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13354b4-f9a8-491f-9e88-307df0c4b5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57346850-1efd-423f-90f7-6380627f90ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddf8a9e-a62d-4c88-a877-1593d5c89b49",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c561d6f-d3cb-4518-9ca0-3447121038bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f60c83f-3e94-4ae2-b552-a5677167f896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3a31bc-f5c6-4bdf-b470-f9ac16a58435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b728d80-c460-4b54-9228-6adb9c43778d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ace39ca-8170-436b-a187-92ed403c3256",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141fc2a0-a29a-4731-914b-35c5f9432d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c988ea8f-7783-4857-8c75-277965637094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91404dc7-0876-49fc-993c-60f37007c63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47839226-706a-4665-84d9-c20d5c2bb9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb0c50b-8db8-4b55-bab5-733cae85c211",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97d4a19-b2fc-42c5-a3c6-2a9f58d70031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd84921-9c37-4653-bcdc-f894841fc8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b74dbd-88c6-49c3-b967-ef88a2270b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec16f472-8c2f-4fb0-a50c-4a1931c8a5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cc6ccd-8125-4e40-a869-fb88d9f21a1c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d624fdd3-edd4-403a-9183-57ae3c64da1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f7dca2-a2fe-4ce7-a00f-a9cf4f3d3504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fa1132-9a4a-402d-9637-84efa6a3f4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b75e32-7107-4661-90d5-f615cc02fb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6008c7f-3d06-4259-ba58-3e87f0561759",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bed5d99-46d8-4d41-a59c-81c561cc4f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3274fafd-aa10-4cc8-8f30-6d3d64ced141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0098cd3b-ee6b-4eb8-b5e8-6a392e3aa5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109fc9c7-f956-4258-b47f-9d036488dc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd2aa28-8242-4a50-a527-e292f1d15132",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac204a0-8294-4f0e-a99e-ed4b02083479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1fd9d9-1048-4ee2-b74d-daf8730dac6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c5be9d-7588-4a30-b27c-42e96cb9ea8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d773e8-5923-404d-b7ed-c984a355d2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be48f2de-cd20-4c84-b1ef-a1c7115bbc90",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743233d2-ed03-4b71-9c6c-dd5f03177537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "644c0e39-0c54-4acd-bbf1-ce4dacb11310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f07bee2-a300-41c1-ac37-5a95fdde2f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c496b4-99cc-4bdf-9431-46501d21f31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5b781f-2b40-4374-8cc8-6eb481626f54",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941fdb0c-0989-4bda-85c6-361a85485427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85709a56-01c0-49be-8e19-2e214f55c941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af27256-87e5-4869-a34b-0befadfeba73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7ffd47-5d55-4c6b-b151-f1ed18099dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2b86c7-ca4b-405a-8bbc-14e88daed121",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1355b02-0710-4906-952e-1921ae4faf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb2caec-aa48-4356-8eba-43226ce050b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826f540a-c38f-4d68-aa07-555b731ad713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f210c2de-ba3a-42d0-b646-90f4b5492418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22d906b-b820-4fcf-81f1-68b77d3cc563",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4778e1-234b-4a3a-aae6-f6460b7ad0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4639abd3-ac89-42b3-9235-d1c48cd2bffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d00587f-ada1-44e8-9c74-309a3455c311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37406939-c84e-4de2-b4b0-856c757c0575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfce23d9-c7ed-4e62-9058-873c94952a83",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ebcd8e-438a-4757-837d-7ee2c85298da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39048bcc-48fa-4306-b4dd-22f878b78ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b53fe6-8f2a-4bbb-8988-d896c58483b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901b06e7-9233-46b1-bfcb-6499f8969979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6575cf78-38af-4af8-aa6f-5dc1451ec399",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a452f247-85b4-429a-a324-53425d5d43bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a2786c-1cd1-42ec-9e7a-413f9aa06c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3563b524-55d7-4e32-9efb-9dbf62cb100d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba05735-055c-4fa8-8438-0e7bee4f9888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eded1faa-f5f9-4845-bb10-5ccfc02eba5b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b44bab-a01a-4b87-8b6a-e7ec5375d236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f72950-ffb2-4a36-9142-e2dbd6f4fc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e86f08e-05e1-49ba-a7c7-70652bbea7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f782194-ed74-4091-ab89-8b2998c2ccac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69a5225-304d-4d2f-8d48-8b289eb91e3f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bb6797-bc1c-4f2d-8cf7-825ea4d3c0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a9e3e7-efd1-405b-b658-a19f6ea0bf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d5785c-04d4-40dc-b6ac-c45dea68a0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65370dab-922c-4763-b254-e364ce102ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712e30dd-76b2-464d-b706-5ea58fcb665b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf29320e-e8d5-472b-b842-2b3ebf321eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e4364a-193e-497c-b415-d17e05de7981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d46376-8718-4b45-bd97-91ab9ec589f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f155361-b7db-4934-b4f2-cc9e629021ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75abe57e-8ccd-4def-bcb7-a8412051a531",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb539792-9865-4963-9a99-f8e4257e9469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92191f51-70b8-4ce2-a267-4e96b3500bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2036af-5b33-4c9c-8670-bd18cca3e6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fefb87d-f68d-4faa-b2e9-c039fcdca415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3dec03-c4f5-48a3-bdce-633ab8b73e52",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ed584e-699b-4f92-b7b3-3076037a64f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71259ef9-91fb-4454-a0ee-c3ff153c7b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985a6466-29a0-4e19-ad18-44b969840d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f888406-b3c1-42bd-87cd-2f18d0cac4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085d727d-b9d9-4d05-9fcf-d4d47e70d157",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d5e066-3fa0-461f-bc8d-3055d6142767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688c32a2-cb59-400e-a073-7d7d4430cabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ab6d2c-cb65-4b7d-bdd6-cf68a3000b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6835a8e-8d44-47fa-82a9-04f4567d3e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bf503a-d00e-4a3b-99b8-03ec254fe7c4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35bd06b-4829-479b-aa53-ee0a33b317d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c458646e-50af-49c3-97b1-667853eafb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a185d37-47ca-497f-8a88-5168da51deda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65456c7e-4549-4bab-83b2-8a45fb4a7154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26751d8f-7ae5-4c07-9147-7abf5148a8f2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620deba6-966d-4e04-a5bf-c1addb49aa05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016807f5-2ff6-4e33-a70c-e35f48a704dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a15b67e-ea59-40c1-aa0c-7d29b2e761bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d9e0a0-9410-49da-abfe-f8caf0f63af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b292eee3-d9a4-47cd-aaeb-529bf20da5cf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e0d253-f59e-4e61-83e6-a0b3450f5cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65521c4-84a4-472e-9cb1-2a3fd4902f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e960dca0-1360-4430-9e39-21a0d3b87bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79956bf9-2087-48ce-805e-b4074336a815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9f04b5-e6b6-427e-ae0c-42e2bc4e2955",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25e45c2-68a2-445f-979e-f7f37922aed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a63761-fc50-4f47-a9ea-65fa3a1e7677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acce2b9-c866-4883-a159-7a6d43149f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b180402-7094-4cda-ac58-3bfcd6ff99bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83dd4e1-9ae9-47f8-9b97-0beadd9e787a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53304eb-2704-4f22-88c3-178df1344e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2172e47-34ad-45b2-b8bb-387fde4a35ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4ca7c8-3f81-467d-800d-4801cf0e4f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901b0c9b-cfd5-4e01-a577-4c76f72e1464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd397867-8212-46b5-b4ec-128af065991b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0f7ef2-b805-4363-820e-be5cbb0d337d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a98ed97-cdb3-401d-9672-c50a402c050e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5f748d-6933-4bc8-b2fa-5cb3ee96b4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e6fc37-9ff2-4ca8-8d6f-0c670bbf663f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4e9756-c946-4ea2-a343-f1cfe1032ea5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d311eae-8b3d-4d34-97bb-028ed16aad57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee8cef2-9be3-4c83-a8b0-8aa1a65cc42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84328b8a-dc0c-4167-9497-e08654215685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2892e0-b7c2-4ffc-ab48-85591939918f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbbff83-92a2-4d5f-9fb5-2498cd24ef10",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238e780e-ff9b-495e-b02b-7349f2cef203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d363fd6-a3d6-4b3a-8a29-b065cc53ba54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81848e9c-f272-43e5-ba63-7ea9f01eefb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735ae06a-ff9a-4fc7-92dd-beb0edbdcdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26249ff6-63d4-4736-8a52-35cfd4be73c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4279f191-8e19-41cf-bc05-fb778b9e17c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c332a5-b4a1-40e0-8dda-1a85881a4312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d90cd81-7d67-44e1-a5b5-96e8882564e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0115879b-319e-40d8-896f-950aadb05e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797208f3-4880-44e1-9338-992d44f6a0d7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de578fd4-7164-4eb5-9428-cec0cd416773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006dccdd-3ec8-46f5-b2aa-6c794df6c51e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084a3956-9a3c-4ee0-a1f8-d6c575e4955b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c56e32-93c0-46d0-a95f-936191799da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd8cd13-c872-477b-bb73-3dc6ffba341d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255f89a1-2d43-4019-8823-492993e958be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2981a1e5-d98b-40ab-927b-0f29e5d3de51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd54ad9-87a9-4f11-8204-fb959d82e5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e913de84-4c4b-4047-832f-00d9ec9c4a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f73a4e-6b25-4bed-ba40-76770b71fcc2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a406ac02-f6a3-4b0e-94e7-3021d68ebdb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c42f3f-6e6e-423b-b0ad-0a6ae40f0523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f192a86f-161e-4bc8-bf09-cfc0c1eb336d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052b29e3-4525-4002-bace-85839b76fbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc4d126-6d09-4a60-8076-5609c2e793ed",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8b6b5e-6a73-42d3-856a-68d35983dd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ac5694-7f1d-40d9-a169-ce5f04a0ed85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86107336-2e12-424c-8495-76fad0ba9f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fb686a-ee1a-4ec3-ba2d-f7faf1d37906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56203f12-05ae-4756-b9c2-f7c6fe637fa9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c19ddc8-9ce3-449f-aa5e-f5a34d78d4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3759d0-4b17-4077-b2da-fafa6e0b41c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670fdc3e-688d-48f1-a1f6-aaf5547589bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87096887-ab1f-4164-bb10-e5b320b9c8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660fa743-1ebb-48d8-bb1c-9e7cda57b117",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a1bc9a-ed93-4911-a444-c8f33c0f512d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f5073b-2e34-4a8f-a312-e864910161d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718fb984-1c03-460f-90de-2260c32f8aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c488f71-d7ce-4a45-9481-2be10b73eb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3021710-dc12-4460-8bc3-a4a3dab1de23",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87e96fa-3eb1-49d3-8ec1-40ed983d4fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47795bf0-65c2-486d-acf8-a67793ee4af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50e7b48-af46-48b6-8ca2-a024dc01608c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4b3ce0-36e6-4c16-941f-a6e70735a21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dac3e0-2707-4d27-bfad-0000c76acf7f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac52eb7-5b61-4292-b82d-b983c720bb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fde5e7-90f6-43f9-bdc9-05d62639374f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4860fe72-f704-45d6-aba3-5671a507f03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67be784-a967-4c6a-a3a6-a321b5603243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd5b857-7489-4fdf-8078-2f42d7b1e758",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbb4687-f143-4373-a500-c066fdbb53bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21a1ff3-dfa4-48ba-b80a-c94f87041bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba0e691-0340-4251-8675-0af953167cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41067821-728c-48e7-b0b0-8e508959abac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117a5e81-c29a-442a-9577-19e27fb35f2b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca117d-7c24-45ea-8a25-8df1ed2e8aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c97ac3-a76f-466f-8645-d93ac9553b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a0b136-a0b3-4a88-8a48-9a5e697f3d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990f7354-1d60-45b1-b3e3-85fff7116420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bcd9b1-1468-40b7-8b00-f70a8e23b3f9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87e14c1-8a47-42eb-9be8-7be8fd4d88d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e60648-7edd-42f7-8484-d5cbf90f3ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8c3bb3-f7a8-4ae9-be7b-c4432cb151ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ec53a1-a06d-4555-b976-fde0ebcf0cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9d182a-44ac-4a82-9cb3-da1e0bb67ec4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c141538-12e5-47e7-9c26-8787a7f0e526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53a8493-0781-4bbd-975c-378c37d96cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e91770-607c-4d2b-bf47-933ddf373fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145a0a55-8b01-4af8-b707-7da5f1d2ed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff466ec-d49a-430f-9671-aa5b91e6daf2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b45b49-7849-4c5b-9637-fd5981a4fbb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b92b326-6a8e-4147-b4b0-6e99519c56ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71d0237-f6f6-47f6-877d-39a4db705603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f672d3b7-b1af-42ff-8791-2f1b301c930e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1619c7c0-2a00-4abb-b5b0-6e699dfd233e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b817835f-5220-4792-9816-a850ec890e0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2541b797-69fe-4af4-9b4c-361138aedff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2588fc-9558-4a6a-900c-92008bc88198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dc17e8-eaa0-4c47-9022-0d716b65b3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaa0686-4bc9-4526-8b27-4afcbf27cca9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b322c1-6010-423a-8de1-e96f11ede603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13d868a4-6719-4650-9f7a-5cbc46cb9e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69165558-8311-4a62-8b1c-bc773a8377f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea64a847-8ba0-49b7-a85f-2741527c1bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0991348-09cf-4339-a7bc-bb570c6b4618",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1768c859-da8a-4aec-88da-64cbba3f65e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4671743f-9f19-40c1-8f30-7d998e18d981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb311e2-07b6-4fe1-a7a6-c18e2336abb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90231d4-9674-485f-8d35-4d1af0ef42d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66385633-0e91-47e5-9fa2-43d5bc675e96",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f01a73-5501-45b8-a9f4-89cbb6c5abdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7649411-9276-4c02-919a-3f7617903cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27438c74-f6d7-4529-9a5c-5cddcfe32d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad46c755-0a41-42a4-858a-a104d73097aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fc2dfc-e0f4-4514-8e9b-58253a4774cd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d06158-71e9-441e-925f-b7338eba7b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afba5d4-b0a8-4ad6-88da-88fae598f582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de10ed2-5f83-496f-9612-309d59e1c332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33a9dee-b043-46ae-9065-199d47a9be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256c886a-417b-4152-8d47-5f8f722b4ae0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad57673-242d-42e3-88b4-53c0cd472d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a27cc248-c164-4c13-90ad-4e5387cd4282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c703c87-00a6-4956-96db-d3956d962a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f047b7c-a109-4c50-8abf-5c485f68afcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bf0426-4d56-4922-8cd2-2a06678e1c43",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7986d40-0ea6-41df-902e-2fd359f65a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bfd75ee-eab8-480b-aca7-9f8439d4c83c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dc4f1a-0642-4482-abd6-d2a0d83fe4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc5e504-755b-40a4-a8a8-d699197d0473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a12861e-0335-4d09-821e-28b9038e9e10",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b7666e-f104-44a5-b380-5a67ae778388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd68dfa5-a96a-4a51-99a9-bb62895c9251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd318f0b-2448-4853-9e5d-26354a93bb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28bc927-d015-45be-8e1d-5dafa3d9f33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50527900-10a1-45f5-926a-858536660782",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a8448c-a32c-4ba5-9075-cb803a812a15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8abddcb6-f954-4e6c-87fd-87e69ae65acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911d123-9568-43b9-a1ba-e7f4552a8ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2672212e-ae1e-42f4-ba87-94558125c916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7de805-dc22-443f-8bb1-879b26915c26",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c495483d-f6bf-442a-9d4d-5b169af86c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b33147d2-a11c-4ef1-b977-222bc94d1a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e10357-9c3e-4f24-8da4-360a36643b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e70a5b7-6651-4025-8f24-80ad480721bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de448e4e-a39b-4b0b-b314-3e00320a0816",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f275d7-7f38-4f2c-80bd-81503adc2a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d18c634-e7e2-4839-85dd-8f155bb33a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecb7ef2-3e7d-46b8-964d-f6d2176d6fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f48c07-8dca-4cbd-ba3a-3a93cd0e0094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85740eac-ec7b-4b09-be8e-be199faf0c33",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2ef796-1e1a-4eaa-805d-de4b6c58fdc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862ce809-d5fd-4826-9aad-76a612cae3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a6695c-1ef7-4658-87a6-09dd8c5a4ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551618e4-a35c-41c3-8245-7ae8f5dad226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50ed2af-b3da-4ffc-9471-b4cc585ae585",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14e6efd-b31c-43c9-aec4-6b237dfaf50e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ca41ac-eca0-48fa-9e77-8223894eecdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d358454-af18-45a8-8313-842d8971f165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bffb0f2-fc34-47d8-b890-00a43a9d73c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eec14b0-6b07-4f6a-88ba-3e0ee9d8355b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6f2be9-6723-4c4a-b6a7-0990d39a9708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6d1b402-eff1-4047-8c80-68e65228735d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4197f9-7e9b-4bd0-a37b-40caa58ed9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1188d09a-db70-4792-8445-a3cbc0670d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6b8e88-3b47-4b40-817e-548c92b89165",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7903de-c7a8-4c6d-bd51-5fa782d655af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2679b688-eaf9-4444-abdd-161fa6122cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa09f62e-41ef-4310-bd4e-a4f4fe092f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab962f60-7d26-4978-a7aa-955b66dc12e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1a8f42-9343-45c6-afea-b597cee87a31",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c920b57-0aa2-4871-b994-770442d315ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf6e481-3628-449a-bf72-fb6a5e07e89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1afe73-8278-4b3a-96e6-98491809e524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de8f66f-4682-45f0-b88e-d658ecfdc6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56f4a29-c668-49bc-852d-8b1b463c161b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62ab83c-5340-4d47-9591-2894dc55a5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29a01fd-7da6-4b2d-ba9e-8ca26f0ce3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606df072-19d7-487f-827e-fc966a7133e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0c886c-67cf-44bc-a85d-ae2a5df84315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7977d96c-6937-45de-89e0-4e7bbfc48988",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883f3551-5bc4-4e8b-abe5-f91a73029301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d685ae2-b39c-4487-a7eb-58a9bd4cc6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d97365-9d5f-4440-84c2-aa1b28a7ba0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a5e1df-a9d6-4160-afeb-2f229c86c2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bf25e5-ae7d-45f6-ba96-e3ceaf457401",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29ae848-d432-4823-92ed-528b64b8bc59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541f1a61-4da3-4a11-b139-f7214aec4d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a20361-8373-4ce7-ba83-5cfcbff6fc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20e26a4-f611-402e-b67c-5cf2f678879e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6061b448-c289-49fc-8696-ed5e9b777ae8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfad70d0-b1a8-44d0-9fc4-66bdc6d8682f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79738838-8ff2-426a-8e4d-7d95ace973f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d075895-0e3c-4adf-a208-97dd5280f5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12656222-9249-4a04-a619-e3f3f6ef8744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4893e3fe-7b99-4d62-8f7a-a8daf0996a6f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e076f24b-cd19-4bef-bd91-c8ce1ca37c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04848cd9-122e-465a-95e7-5336631a8906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9ede87-13ac-4109-aba8-4337f289c0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe349b9-3445-4b8d-aa68-b0470731205e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36b0abf-a7d7-4379-9974-95339c0dbea7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf9ca70-7072-4cf5-b704-9bb0d7b4afb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c39bbe7-d1e7-4649-aef2-da600c4bcafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08afd91b-3414-4d2c-906d-f52fb228bc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781ea0c0-4162-4d77-a6f1-f48c2cfe34d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d383601-3a55-4884-96b3-fdf6abf8c3bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61157910-69b4-4f90-8d94-3d025f179163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a22902-2ad6-4550-afb1-2d147d061127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8df811-6b91-47bf-ad6a-49b90b473962",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb283e2-758f-40fd-8da4-4713c3a11504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2929e805-4998-405c-8740-7844aa4652a6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87131c7b-289b-4898-89e9-0fb6e37c373a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e27c43-15c0-46f0-9053-b0a025ef5096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c899068a-6bd0-4ba5-81dc-ef27f7972d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef878f83-c9b8-4661-a8ab-b4692b38621b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe732657-df12-430e-839e-a3c1fa457379",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10824cb5-27a8-4875-8db4-d81a880fa76e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d20f7aa-763a-4802-aeaa-bad7140b1340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed308835-8df0-4696-b2e3-a3277774790d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1531edb3-213d-48db-a3e5-795ab7458048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348821ad-e61e-478e-91cc-9a5839fbebdf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d620b7c-d571-4770-b17e-637a577582aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b9d25fb-af9d-4cf5-b367-f5f8b45db7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97595968-a381-4bf7-b50c-e5fd7bb0ecc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3c899f-7e9d-40ef-abb0-1d3d88082195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38bf0c3-b3ec-421c-a7db-fe74a875b66d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb4c8b1-3848-41ae-a1f2-42d05be7ba76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13edb075-b641-4541-a821-99937bc07224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86e7b8e-b882-4edc-861a-b6fb59e7edb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e442a23c-e7bc-4630-876b-fe02fedf478a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d95e03e-ef1b-4d2a-b717-f03ce40484c7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae229e2-158a-433d-b753-8bf3680d28bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14541adb-8504-4e13-a987-a450b46b33fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96362cdb-644d-45d8-9732-23fd38874079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2b5255-2e96-4347-b42a-5fcf7d71d6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c4bb78-b2fc-4d42-b39f-18756dfd2eee",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8967898-54cc-4dbf-bd39-af7fc178d031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "837e5460-7b93-419c-951e-9585afa48a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d962c179-3670-48d8-bb77-aa3840b099b9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac9c1fe-e493-4c23-8a5a-c60012e67cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925574ea-0de6-456f-9a34-265edebef00d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27ac45e-dc54-4d48-a0e3-9b731ab95364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb0b3c2-54b5-4739-8dc2-6c5f1cb40068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f8f04c-9ef5-4191-a322-63817d7df2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3cb05d-510a-42d2-9034-28da5f8108e3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0475128f-bd4d-4796-a2d2-a49e93f7ff3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ca0dbb1-69f4-45cf-a4d9-85371680e2ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb929eea-2c15-4dab-a9e6-8ca300d4434a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5be3a86-8a58-4177-83ae-4064e4ed7921"
                    }
                  }
                ]
              },
              {
                "id": "071b5667-fc5b-48ac-95e7-3e2361d6a26e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ab27d7c-3999-4673-8abd-134a6a55473a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a30acd-9b83-4aa6-b06c-8fbabe8b42cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "64d1b19c-20af-403c-a574-71e398e1cff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f739a-4938-49d6-bd44-829d9ed00bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6526f5a1-8555-4abb-87ee-112ff37b532b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06491dfa-6935-4042-b6d7-3e58886bedf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5436b427-bc18-4b0d-b4c3-3ebbfda64ed4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6061e28d-8a22-4e97-9560-309366f7cfd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38787d19-bbdc-47be-b2db-2dfb20c87fa5"
                    }
                  }
                ]
              },
              {
                "id": "d8bcf47d-0a3d-4f25-b98f-211377598ea5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fa75f447-8231-49a1-ba78-aeb2f7facd09",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14915898-903b-428f-80c0-a79901bedf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4559cc44-a3db-4ae3-8f88-f2dbe47d2191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4889ed4e-88da-4277-a6a1-d14116f832c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2194cf1f-bd4d-48f1-aa9b-0226136e69c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b219ca36-4503-4dc1-9f23-1196846139fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33e0b3df-fd72-4a42-bca0-bbb27a3cd2c9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "152a90e5-72dc-4d95-a9e9-1719713a40a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "293c0b58-a90f-4dda-9f00-cca1d101ddc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82a8cc3d-c0f9-4612-9b3a-217d9f43dca2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa0a7724-913b-40e1-b217-373a9a9c5dab"
                    }
                  }
                ]
              },
              {
                "id": "f8bd1224-5627-4462-9b29-69018bcf462e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91bc4ede-19a1-44af-bf02-80be495a0bb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4776560-96c5-4086-97fc-67c60b9e175b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "640521e9-bfe3-4f30-b94f-cb3a93ee713f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f48e936c-8850-4c4c-bf7d-8b7522e2cdad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09b4d545-3f77-49aa-944a-c8b550246b5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "28065410-7d2d-4ec0-8a13-8181ba51aaad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91be3119-1ea1-4afb-af7f-b93b281e3f8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c93664a1-7fa4-4517-8598-549012f011c4"
            }
          }
        ]
      },
      {
        "id": "7bb2009d-d74e-4ee5-bb08-30c78ad027be",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ccb91596-9b59-41b3-ac38-f9cb18f55927",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7afb7ce-bec4-40d3-bb85-fd6b115a3740",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8e04419-18db-49d0-b933-3416bbd23cb5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885e0b54-d80e-4e42-9c10-f628d212dfa8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a45d8e9a-9c35-4033-baca-cffff4625a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f16f033-2f78-4d7b-b39d-bfbe62af5613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6627302f-6b0f-4cf1-a1ae-fbb0c0472a66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56c979a8-658a-49d9-b770-feb0256fbe74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb6f1f81-8749-45f2-88ce-536b07250291"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeb8e948-109e-4665-a099-51c2c6504c13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "261ca76d-a2df-4572-9c15-ef3502d4ec11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0ad8002-a194-42c0-a930-b23ad30675e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "71b6cb5c-7422-4acf-bd62-9b9f13dda306"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e16f34a-c00b-4517-9dda-34e016d750b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20ca6800-ba41-4417-94eb-b7fb983249bc"
            }
          }
        ]
      },
      {
        "id": "2506948c-c039-40b1-9d5e-426bd7cf933c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b5e31a96-a036-47b4-ac62-3644e0d459e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54c1aff0-585d-4c5a-9972-9f3e8849408f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "109243bf-0440-4bb3-a7ef-43afef030077",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a8f272-9bdf-4a64-b5bf-9082dee7188a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0f743ae-98c9-469b-9476-0d4d7fc1ffe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6d018c-09e0-4340-a7eb-91657b1bcbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a331c1d-c24a-4744-9d94-88af47050a57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c4872a6-d3ab-48f6-b476-8ef30a615194",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce5cf288-8c37-4a98-b8eb-7aadf79514af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2a030bd-f668-4b4f-971b-925ee66848af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc8eaee3-587b-4318-9af5-e9d820a5604d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac5feec7-91d0-43ba-9a0a-bee0dfd5d98c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94f41202-b3ce-46b6-9381-a8aaa50f26f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4add8370-9702-46bf-a831-c05eb472a215",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ad76a72-b02d-4ce3-9b32-16eb89a2982b"
            }
          }
        ]
      },
      {
        "id": "033915e1-8b83-4d68-8fe5-6dce8f75e7ea",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ed65e502-bd0a-4265-9015-4b4372529d9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2922e94-ea07-473f-adff-52a1a845d625",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af32e57c-0d74-4b52-9814-2007d8f426b1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ac97aa-3c35-4940-bda7-3df3c811200c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ed604fe-3adc-4657-8a80-188d7dc36c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636a5b92-56a6-4112-9aee-4edecec5b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdff2e70-61ec-4904-97ba-c38606dd7c03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f46a6d29-47d7-447e-8ecd-60f0e1ee7c5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06f2d8cc-ccd7-4ec3-b01c-31a3581e79da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e97a452-4a8e-46cd-a936-8673b2091fd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c0f8876-e669-4dba-9642-1f152b757ce3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0d65c3f-ae3e-4c4a-873a-bfa1870400d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66fcaed5-f606-4efe-b225-17e2c74fc0fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83825a4c-d28c-4f92-b148-4b806c162706",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "427c37fa-f21a-423b-a215-346662e341b1"
            }
          }
        ]
      },
      {
        "id": "ce058594-0836-4aaa-9fbe-b0371d4f3e28",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d8b0582-c785-4d1b-bec0-96bac35cc324",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3afee1c7-589e-4de6-a10a-40ab2dfa6d6d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bc83970a-f4ac-4d87-8e92-2c508ceb49a9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5da6e3ea-c092-45d2-b65d-25ffc848e7eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e787027-011c-4256-814f-03287536dc4a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 77.61111111111114,
      "responseMin": 3,
      "responseMax": 7022,
      "responseSd": 511.89551222109657,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712882126335,
      "completed": 1712882154306
    },
    "executions": [
      {
        "id": "7378d5a2-3e56-45c2-b451-d663f8db9776",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "89d08a74-3e06-40b5-af45-b832882df85a",
          "httpRequestId": "3141ecda-17c8-457a-a2c2-95aca74aede4"
        },
        "item": {
          "id": "7378d5a2-3e56-45c2-b451-d663f8db9776",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a23c48d1-6b7b-429f-b04b-910039083698",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "d71291ef-7e4c-4d10-966d-9000d5ed22b7",
        "cursor": {
          "ref": "5a91f9f6-0c7a-4e00-aa3e-1a51f0515c5e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7bd2af84-3c45-4d54-b225-63aba661540b"
        },
        "item": {
          "id": "d71291ef-7e4c-4d10-966d-9000d5ed22b7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "61a4b173-452f-4374-9a4d-0e9084a7f08a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "95ecbe50-2016-4080-bd3b-e3ae8d4e9852",
        "cursor": {
          "ref": "2020ab0b-9518-4c60-8a2d-3aba846fb4cd",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2afb5a7b-ef71-4a6e-b80d-1172049c7c5a"
        },
        "item": {
          "id": "95ecbe50-2016-4080-bd3b-e3ae8d4e9852",
          "name": "did_json"
        },
        "response": {
          "id": "4601580e-6207-4cd0-911b-aa1c5708942e",
          "status": "OK",
          "code": 200,
          "responseTime": 302,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab799ee4-40d4-460d-b934-bf593ef4b6eb",
        "cursor": {
          "ref": "6ddab697-085b-4681-9e30-afac1ed66570",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ca2569d-ffa1-4a1f-869a-126352a7e482"
        },
        "item": {
          "id": "ab799ee4-40d4-460d-b934-bf593ef4b6eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "d39409cc-31cb-465b-a482-38c3d1dadd5d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 305,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab799ee4-40d4-460d-b934-bf593ef4b6eb",
        "cursor": {
          "ref": "6ddab697-085b-4681-9e30-afac1ed66570",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ca2569d-ffa1-4a1f-869a-126352a7e482"
        },
        "item": {
          "id": "ab799ee4-40d4-460d-b934-bf593ef4b6eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "d39409cc-31cb-465b-a482-38c3d1dadd5d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 305,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eece3b05-faba-47d5-a0eb-12af835fbe16",
        "cursor": {
          "ref": "ad2218a0-52ca-4bb8-b7d0-6e8ec07a3819",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1f7f55ca-f8d6-480b-86f3-0eddff38a8af"
        },
        "item": {
          "id": "eece3b05-faba-47d5-a0eb-12af835fbe16",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f7adbe32-e662-47df-8fbf-264b23cd55e1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca81bfc-142b-4c33-92b0-1c5e30640009",
        "cursor": {
          "ref": "dfbc5b32-3ddf-4f70-9a89-975c01e11753",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c7831e4f-8ff3-438f-a245-685912ee798c"
        },
        "item": {
          "id": "3ca81bfc-142b-4c33-92b0-1c5e30640009",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f5147576-cf31-43ff-b639-9e22a5f3593f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 18,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a710850-87cf-4d7d-ad6f-d9ef33a1cdc9",
        "cursor": {
          "ref": "0f4816cb-6354-4e1e-93c1-e76f0fe6b4f9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0501c8f6-ba1a-43e5-9fbe-b12ea1bd78fe"
        },
        "item": {
          "id": "6a710850-87cf-4d7d-ad6f-d9ef33a1cdc9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "29ac59b4-8e85-4f5d-b0f3-2045c1ee0606",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3800066-5f24-43c5-a0b3-a95650e91420",
        "cursor": {
          "ref": "bf22e971-6718-48cf-b9d5-d42109f8d495",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4a966716-2df5-4290-a69d-15b326852976"
        },
        "item": {
          "id": "b3800066-5f24-43c5-a0b3-a95650e91420",
          "name": "identifiers"
        },
        "response": {
          "id": "e84605c1-d85b-40cf-88b6-de70547a3eed",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37125df-34b2-4300-8b83-ce00aadcaa41",
        "cursor": {
          "ref": "ba28df80-e102-4756-88ec-5c17b13af52b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "771811fb-e9c8-43cf-9310-6aff52dbba1d"
        },
        "item": {
          "id": "c37125df-34b2-4300-8b83-ce00aadcaa41",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0efae579-2eec-4722-86a9-1bf48da253fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973c3200-8b6b-4907-a9f5-daa3e9d2d365",
        "cursor": {
          "ref": "57d9caba-6a16-4202-a404-1540b18e3040",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b21c2b07-e1b7-41fb-971a-110ba20212a5"
        },
        "item": {
          "id": "973c3200-8b6b-4907-a9f5-daa3e9d2d365",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "188e8a15-4ea0-4bc3-80b9-a8e3ce8bfa86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141d5245-e33b-43cd-8388-1c5789bb12fb",
        "cursor": {
          "ref": "f51349d1-96cb-4a6a-8d06-ade73fcf17dc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "35ffbe47-023a-4137-9003-320cdd2a56f4"
        },
        "item": {
          "id": "141d5245-e33b-43cd-8388-1c5789bb12fb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "eb79e68a-d2b6-4690-8410-17f14cac8419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3c040b-c923-4169-a300-35b060579aff",
        "cursor": {
          "ref": "dc041f3f-accb-49e7-bae5-6cf51c25e740",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "11f6c98e-0b33-48f5-9cd1-38d78b273ff4"
        },
        "item": {
          "id": "3b3c040b-c923-4169-a300-35b060579aff",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9f84df62-cfd8-4626-b1c3-b1a5a4fc47e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1d76a5-8781-4eea-889f-f257f629cc6c",
        "cursor": {
          "ref": "0db98901-3ef6-448a-a892-132da44635ff",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f7dcddee-3690-4c82-9eb3-0884fa8417e0"
        },
        "item": {
          "id": "ef1d76a5-8781-4eea-889f-f257f629cc6c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e1f0b57f-d1eb-40cb-8962-a60bccb9e1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f2deeb-7d7f-4def-aaae-cecf9e7771ae",
        "cursor": {
          "ref": "d06ec026-7547-426e-bd3f-9c390d8958cb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aacda821-921b-4d57-9c3c-9577c0928e20"
        },
        "item": {
          "id": "c4f2deeb-7d7f-4def-aaae-cecf9e7771ae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9b0944b9-f9a4-405b-92ff-32edb7deda83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c4820e-9491-4086-baea-9d84dba2d7ff",
        "cursor": {
          "ref": "b8e1f262-4d09-43e8-99d8-bc291e46cbc7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "99f284e5-70c0-42f6-a23b-4bf878243441"
        },
        "item": {
          "id": "27c4820e-9491-4086-baea-9d84dba2d7ff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5cd27d70-5f5c-4df1-aff9-340ec114e5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a73987-c5f6-4e16-9100-29dffa8f748b",
        "cursor": {
          "ref": "4e792c05-3b9a-4a5f-87e2-97db99b82ea9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "80bae161-5e2c-479e-a72b-042be73bb155"
        },
        "item": {
          "id": "e7a73987-c5f6-4e16-9100-29dffa8f748b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1093dde7-65e3-43f2-9526-ad45dea77247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49007f22-e0b7-470e-a0f7-f8b3ff16d3d8",
        "cursor": {
          "ref": "b9048fde-44e1-44b0-98df-d13e40adb5ad",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a0628b6f-226f-48f6-bd82-fc0980b05216"
        },
        "item": {
          "id": "49007f22-e0b7-470e-a0f7-f8b3ff16d3d8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "02ddc530-c56a-49c7-b2db-393b55b4eaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a147a8e7-6f5e-4343-8db6-1a554ed77f62",
        "cursor": {
          "ref": "dc445a0a-9b9a-4c34-8260-60ac06fb245a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "80643eae-3963-47b5-a277-2433a0ed778e"
        },
        "item": {
          "id": "a147a8e7-6f5e-4343-8db6-1a554ed77f62",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4aad112a-d52d-4d63-bc6a-fed10f1132e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfb3148-2b6f-4dde-9b59-8b6fc8ecd346",
        "cursor": {
          "ref": "08f48159-1585-41d4-bb99-ad8cb081dc2a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fc343a7a-0446-489d-8d1d-2127132626e8"
        },
        "item": {
          "id": "6dfb3148-2b6f-4dde-9b59-8b6fc8ecd346",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7898fbd4-17de-4779-970a-8eedf97d55f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37262df-0679-43db-90df-2da6eccefb5c",
        "cursor": {
          "ref": "9fd1588a-1872-46cb-b5d0-601a6aa79405",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b4a53a07-dca8-480f-a0b6-33947478e2f1"
        },
        "item": {
          "id": "a37262df-0679-43db-90df-2da6eccefb5c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b74e4bde-168e-4941-9fe2-4374fa4c618d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccda86d-db79-4c14-a482-2b077cf4ff65",
        "cursor": {
          "ref": "22c019fe-ba71-41a0-9f14-bf0b7cec1ce9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "63a4bd8e-bfaa-447f-bc5d-78317ced897e"
        },
        "item": {
          "id": "bccda86d-db79-4c14-a482-2b077cf4ff65",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "44672768-286b-4b42-a158-d22a6c5b496e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db506cf-7917-4a1b-9880-0604c555a050",
        "cursor": {
          "ref": "b99395af-ce76-4616-b798-ff3c9df76f5f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "491d72b8-3095-41f6-8a12-adaa3456579a"
        },
        "item": {
          "id": "1db506cf-7917-4a1b-9880-0604c555a050",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ba4389ec-786a-41d3-a674-8bc3cdf718dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef3b43a-0d6c-43ee-8ee2-7c4dfc8419b3",
        "cursor": {
          "ref": "2153e954-42c5-4cf2-bb11-e9d3c3549205",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "64af25a3-e296-472d-9f89-cecc59c2e392"
        },
        "item": {
          "id": "cef3b43a-0d6c-43ee-8ee2-7c4dfc8419b3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "656929b1-7f80-41e3-9bbf-77a95781e6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cd54bd-305c-4812-847d-bfdf3e818fe1",
        "cursor": {
          "ref": "4fc13643-7066-4568-9c80-2ca8ba572b16",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "86d8307b-42c2-49d9-a831-7350a5528d1c"
        },
        "item": {
          "id": "84cd54bd-305c-4812-847d-bfdf3e818fe1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "894db8b7-fe01-4b5e-984a-e96f773c59c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161af3d4-c964-48b5-839f-3085035404b1",
        "cursor": {
          "ref": "3ffe144f-a2cb-4815-b758-634bc2a953bf",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6480a571-3c18-49c1-82aa-1015fee02687"
        },
        "item": {
          "id": "161af3d4-c964-48b5-839f-3085035404b1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7bcb7e34-69cf-4ef6-8acf-6fdfa5814cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750fddbe-2918-42e7-a2b0-d790ceedcd4b",
        "cursor": {
          "ref": "1bd3362d-0711-4804-b039-4bef906f9c39",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0c9de92c-d575-4a62-88da-109ee13366bb"
        },
        "item": {
          "id": "750fddbe-2918-42e7-a2b0-d790ceedcd4b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "412d38e1-0d0c-468f-9a2a-74968fbd0778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd660d32-ab0c-4d51-8039-e2844c4bae2d",
        "cursor": {
          "ref": "d206ca84-cad8-4b98-953d-88b9b0a9aff0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "083bd9a3-ff32-4e67-9fc3-4a093ccd674e"
        },
        "item": {
          "id": "bd660d32-ab0c-4d51-8039-e2844c4bae2d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c0e0a176-02aa-49ca-9c67-60a24a9397bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b702b6-0dc9-46a4-832f-0231b876e61f",
        "cursor": {
          "ref": "8be0f56e-05e2-4432-ad17-a70a44a189f8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "15e4afa3-dcfe-4546-8bfd-d9b7ff18ff26"
        },
        "item": {
          "id": "c7b702b6-0dc9-46a4-832f-0231b876e61f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8de2f435-6329-459a-ae30-586f9d4976aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff3dacd-3d6c-473a-b69f-1d69583cc60d",
        "cursor": {
          "ref": "d5d639db-63fa-46f6-bc56-c61e53d0f45e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "efd158c1-eb00-4a59-b515-de870df06c41"
        },
        "item": {
          "id": "eff3dacd-3d6c-473a-b69f-1d69583cc60d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "08ceb2b6-4dee-4683-b3a3-b42e4ebe73d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9535d0d3-fbb8-48b7-a0f8-adf79ca8f0e1",
        "cursor": {
          "ref": "4c53a37a-e0c2-46b5-9148-edc71f8826a7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4dd3eddd-d505-4d9f-aaf2-275d196ad78e"
        },
        "item": {
          "id": "9535d0d3-fbb8-48b7-a0f8-adf79ca8f0e1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "327b76d7-7d8b-44e8-a19b-f56605fb83f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5128a0-5412-489a-be32-76f927286ffb",
        "cursor": {
          "ref": "0428ccb7-a7ae-4b73-8485-6af454c56a9e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bf83bfae-b792-41d4-a55b-974c217b0c57"
        },
        "item": {
          "id": "fd5128a0-5412-489a-be32-76f927286ffb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dfa444a8-61c9-44b4-9cc2-0dc66ff22806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57985e92-fa8e-4b40-a65d-3016d7c0d776",
        "cursor": {
          "ref": "98bf0920-2184-42c5-b6bb-6f747520e78f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e96dbc1f-2371-4491-8968-41b9798c04fe"
        },
        "item": {
          "id": "57985e92-fa8e-4b40-a65d-3016d7c0d776",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5e4ac170-9282-44c2-8565-ecbec899a1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8a9ac7-46ca-43ba-ae29-946bf289c687",
        "cursor": {
          "ref": "aa0c213c-f28f-40e3-b076-b0fbce5b3982",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e9899d14-cb87-42a8-ac54-ae2ccc4d9d1b"
        },
        "item": {
          "id": "dd8a9ac7-46ca-43ba-ae29-946bf289c687",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bf1e1e56-f64d-4a3c-80cc-3e3d53bc8acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130760ca-248d-4674-9df4-bcf31e9adffa",
        "cursor": {
          "ref": "cd0d43de-c896-403f-a0fe-a5592473f7fd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cda2b3fc-f9ed-4946-8fd8-e912546fc9d2"
        },
        "item": {
          "id": "130760ca-248d-4674-9df4-bcf31e9adffa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "da734412-4228-405e-89d0-276ec8d942ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc28be6-3ebb-4255-bc52-66dd49a89cd1",
        "cursor": {
          "ref": "90be6dfc-b140-4cd7-a49c-530e2995978e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f7f6d2ce-ef46-4ac3-914e-d563d047b8ec"
        },
        "item": {
          "id": "ecc28be6-3ebb-4255-bc52-66dd49a89cd1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "30339a09-55b9-4f20-bab8-ba3b1434a692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1cd907-f323-40a6-81f1-f5d984e6de87",
        "cursor": {
          "ref": "a431ff5a-759a-46ed-8633-86a730a6c006",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1a2a346e-7658-4646-9b38-675b08440d42"
        },
        "item": {
          "id": "0c1cd907-f323-40a6-81f1-f5d984e6de87",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9fd84f83-e510-4749-a446-ac3d757d89a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34224a3-6e4e-4aa4-ad60-61850c7f23e7",
        "cursor": {
          "ref": "a5fa8dc1-b66f-45e8-9c3d-7135450221fa",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a7fba994-cd0c-4d6e-8340-da43391f28ba"
        },
        "item": {
          "id": "b34224a3-6e4e-4aa4-ad60-61850c7f23e7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "421888b6-e612-43db-9b09-43b0b16e7835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a809da72-677f-4ef9-a2c6-b13feb4a2ce5",
        "cursor": {
          "ref": "f585c316-d1c9-434d-b111-d98f4944b1b5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d24b0211-cec0-443f-bf08-e27feec6219f"
        },
        "item": {
          "id": "a809da72-677f-4ef9-a2c6-b13feb4a2ce5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5233dac3-2801-47b2-8a4c-13f268adfc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85523833-4fdc-4eb2-8e80-2b5183bacb46",
        "cursor": {
          "ref": "027a17d3-a2b7-412f-887b-92fffc248d20",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1637a0ef-05d6-4fa0-9d3c-e47b8b4c29ea"
        },
        "item": {
          "id": "85523833-4fdc-4eb2-8e80-2b5183bacb46",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dbac0cf2-54ca-423d-92f6-1242a8dcc29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd75ec1b-784e-4c61-bda2-636e7f2322f5",
        "cursor": {
          "ref": "b49ef17f-1ef9-4816-a94a-2bcb3b67f340",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2347da02-780b-4e84-a07f-19adb80c466c"
        },
        "item": {
          "id": "cd75ec1b-784e-4c61-bda2-636e7f2322f5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f65a2480-0ae3-412b-be9f-d65a06186768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c400cf49-f5a8-42cc-b151-5cdec1f3fd56",
        "cursor": {
          "ref": "7ce2d998-8a0c-4ccc-9caf-fb4badf70a7f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ace99107-74bb-47a3-9600-243449293998"
        },
        "item": {
          "id": "c400cf49-f5a8-42cc-b151-5cdec1f3fd56",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "83fcb95e-a9f2-47c0-8ea9-0e629f128aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28d359d-b4ac-4fca-8172-996cc02cc2d8",
        "cursor": {
          "ref": "e272ed27-5b13-47df-b9db-3690b8e04482",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3e462c33-6eae-4d20-aec4-d0e17ccaed38"
        },
        "item": {
          "id": "a28d359d-b4ac-4fca-8172-996cc02cc2d8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8a778760-60fb-40e4-87a4-8294888ff538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef7ef65-1d89-419d-b786-c87d93d76770",
        "cursor": {
          "ref": "acf7bb5d-b727-4c62-9cc9-9c6c6eb4838c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8fdb8381-733e-4650-ba49-139454ef834d"
        },
        "item": {
          "id": "fef7ef65-1d89-419d-b786-c87d93d76770",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5c471419-e038-487f-9c98-8fec19cad653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf294ea-3aa7-445a-ba06-61bc0b9fd55a",
        "cursor": {
          "ref": "f5d3ee17-6b6f-42cd-a25e-e63a24f98753",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "21697973-00d5-48e7-b1e7-eec1a4708e8e"
        },
        "item": {
          "id": "6cf294ea-3aa7-445a-ba06-61bc0b9fd55a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "75451c7f-aed2-484e-8df7-479f688e2448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c56121-43a0-4476-9217-1814077c894c",
        "cursor": {
          "ref": "33c0d9c6-1011-4ec8-8dcf-36027a5ac08f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a626e5ec-5e79-4bde-a1f2-7f89cee3361a"
        },
        "item": {
          "id": "d9c56121-43a0-4476-9217-1814077c894c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "47d9eb1d-1300-4caa-81c0-e54de822269a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f8ad62-e274-4910-b2da-5785f1f73ba2",
        "cursor": {
          "ref": "7242e545-1d04-4b81-b6b3-22973b6d6906",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d368d7bd-8115-45e5-b75d-484ddfe98193"
        },
        "item": {
          "id": "39f8ad62-e274-4910-b2da-5785f1f73ba2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "653a3ea1-eef9-410d-a724-41ce4db8d686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadc482b-b92c-4cc6-bb7d-ce15694c29dc",
        "cursor": {
          "ref": "7d0c0708-b64c-4107-a31d-c186a2b639c0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9e14bf0d-9d07-4a5b-8ed1-f0b3fbbaa918"
        },
        "item": {
          "id": "cadc482b-b92c-4cc6-bb7d-ce15694c29dc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1a9926b4-de86-4cf1-be2d-a12fa723c2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556dda91-24a1-4324-afc5-b994ce36ed2d",
        "cursor": {
          "ref": "c3539f01-747c-45cd-85cc-ee3215055fa7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f51f38fc-f489-4503-aa4c-8b1694d74eed"
        },
        "item": {
          "id": "556dda91-24a1-4324-afc5-b994ce36ed2d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3b4f69b6-712d-4fe0-940c-132f479b031b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae94540-57e3-44a6-861f-1cce50c57918",
        "cursor": {
          "ref": "7afd0325-9038-48a8-a9e8-a8a6dd15e1be",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "202f4cb8-29e6-4886-b844-f22b845399c5"
        },
        "item": {
          "id": "1ae94540-57e3-44a6-861f-1cce50c57918",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9da98e69-c222-47f6-afa4-9ced25b7213b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ff60f0-1933-4982-a3d0-f8249d51d914",
        "cursor": {
          "ref": "3459f7ce-e1b9-4951-ba6b-2e920ab49550",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ba2fc00b-7644-46cd-9b05-f9657b9b0305"
        },
        "item": {
          "id": "b3ff60f0-1933-4982-a3d0-f8249d51d914",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "94ff9cb8-e472-405e-a000-015ab2b0c390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e574e3b4-7346-4a6a-931d-3fe40e7a10b1",
        "cursor": {
          "ref": "39e932dc-871c-4443-8397-c68ebdab41f8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b83e558a-0bae-4fd0-b349-49e952444c00"
        },
        "item": {
          "id": "e574e3b4-7346-4a6a-931d-3fe40e7a10b1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e63540c6-28c1-44a6-a28b-f80d2d585fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c8b2d4-3182-4c0e-a975-e865b48aae1f",
        "cursor": {
          "ref": "b5fa94d2-3a5b-416e-a25b-61e07c99a897",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bb836223-f152-4b5a-92cc-fbdcf816038e"
        },
        "item": {
          "id": "10c8b2d4-3182-4c0e-a975-e865b48aae1f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "35aeb168-4002-4d62-bafe-043e962c3963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dab70cb-bd06-4e09-ba49-aede8191ef66",
        "cursor": {
          "ref": "ae6e9cb8-8fc7-4627-b2dd-4bbc01df4c34",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0033548b-0085-4dcf-8bec-7a32ec865bf7"
        },
        "item": {
          "id": "9dab70cb-bd06-4e09-ba49-aede8191ef66",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f8805857-3082-485c-9129-eb06de7cbdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e532d030-9a64-4ca9-99fd-648779544062",
        "cursor": {
          "ref": "bc935b7c-cd32-4901-8181-57f252e55afe",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2400e790-0b4a-441f-9d82-827054e38022"
        },
        "item": {
          "id": "e532d030-9a64-4ca9-99fd-648779544062",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b8e88bc0-f2ef-4c4f-b798-05283ba37f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b0135-6589-42e1-8e27-728f3a0bc0ac",
        "cursor": {
          "ref": "9218d332-2004-4c14-b521-5a76590e17f7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7df5ecb7-69da-4b74-9485-247f3d9d03e1"
        },
        "item": {
          "id": "498b0135-6589-42e1-8e27-728f3a0bc0ac",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b1efe3dc-2860-465b-bbb5-79df545d0608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95204901-844a-4945-8597-48d60a2911e7",
        "cursor": {
          "ref": "8137edac-a956-4584-bfa5-58cd296c07c3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f793e31b-108d-44de-8f74-d3913db2d611"
        },
        "item": {
          "id": "95204901-844a-4945-8597-48d60a2911e7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "80d78bab-1ea1-476c-916e-f6488cfad231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba614b33-3340-4aba-97b9-8838a098cec0",
        "cursor": {
          "ref": "979e2bb8-d98e-4254-ad0b-b56c237f4efb",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dcf942f4-fef2-46b6-9e08-ebc111d7ea35"
        },
        "item": {
          "id": "ba614b33-3340-4aba-97b9-8838a098cec0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6c04241-48ab-4d62-9712-a9216a238e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9910599-bd0a-4566-9696-bf035e8361d3",
        "cursor": {
          "ref": "982db012-7205-473c-9e4c-cbb79a88a2b4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e358f14d-5fe6-4641-ab95-348cbf72fdb2"
        },
        "item": {
          "id": "d9910599-bd0a-4566-9696-bf035e8361d3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1ca8c3b8-00ed-4451-a077-fa32ba54a873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844fa162-ef78-4069-9fae-718bda90a078",
        "cursor": {
          "ref": "5acffd8a-bc60-435b-9ede-03e37ffbd030",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d063a2ad-2905-4f09-beef-efe7e73894b2"
        },
        "item": {
          "id": "844fa162-ef78-4069-9fae-718bda90a078",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8bc50516-8e37-46d5-bfd7-89ad4f5d2e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8969ea9-140b-4466-bce9-73db182d496d",
        "cursor": {
          "ref": "87274c55-bd0c-4db4-86d0-f3b1d5844fb9",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "70649dde-36c2-4761-bc1d-b373004ea47f"
        },
        "item": {
          "id": "c8969ea9-140b-4466-bce9-73db182d496d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "69b83c21-4e04-4570-9b63-ab415cb7ac81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d50b2ae-adae-432b-b52d-d97b56989bd3",
        "cursor": {
          "ref": "5e5ca2ca-a3c3-42b5-9f45-ead615917eeb",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "88e8f9c5-d09c-44de-9334-9292f5bb4451"
        },
        "item": {
          "id": "2d50b2ae-adae-432b-b52d-d97b56989bd3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8ca00dae-65b7-40e9-af7b-11b835c09737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efcad51-388d-4d30-b77e-e9a7a2f8c8e6",
        "cursor": {
          "ref": "3af7a51c-948a-4aa0-9017-118b08525b27",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b6c5228e-43e2-48a5-a7b1-25ee32d38740"
        },
        "item": {
          "id": "7efcad51-388d-4d30-b77e-e9a7a2f8c8e6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "947e0d34-3c19-4b43-95e9-9be8dae256c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55fa9e7-8111-43a7-96be-42d6b523d030",
        "cursor": {
          "ref": "6a0434c8-595c-4f93-abb2-942d46d68623",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4e7b5272-6135-4d51-abfd-99a5284e3bc2"
        },
        "item": {
          "id": "d55fa9e7-8111-43a7-96be-42d6b523d030",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a0f792c8-546a-42ef-a0de-e6575f6f3c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a709bb3-7214-4892-a37c-341327694f96",
        "cursor": {
          "ref": "9b5c32a4-5698-46c3-9f09-b53933efb277",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "36bf788f-6fc6-4947-84f0-08b259e21954"
        },
        "item": {
          "id": "6a709bb3-7214-4892-a37c-341327694f96",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "df12e512-0ab0-439c-a543-63838a0c3a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7b1c16-2b7f-4e84-aee0-d32a297539f5",
        "cursor": {
          "ref": "00387c2f-c9f5-4dd1-96ed-1c253eac8e92",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "eeedeb85-6e8f-445c-8187-cc8ffdef6b95"
        },
        "item": {
          "id": "8a7b1c16-2b7f-4e84-aee0-d32a297539f5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0d9647bd-338c-4052-9cab-6836259e07d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2e560c-9be1-45e7-9476-414ba3806f1b",
        "cursor": {
          "ref": "2a20b21d-435c-4be4-8838-ea05a2787342",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "61900d92-b97f-49da-90a2-b220896f079f"
        },
        "item": {
          "id": "3e2e560c-9be1-45e7-9476-414ba3806f1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f285bbb6-be3f-46c7-a3ac-382aed5e9c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845f4af5-8d9b-4699-a6ed-8ac51c13e350",
        "cursor": {
          "ref": "f77382a7-74e1-4104-9681-2fa71653fa7d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9b1135e7-3172-410d-bbe5-5c0227d3c21f"
        },
        "item": {
          "id": "845f4af5-8d9b-4699-a6ed-8ac51c13e350",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3a6b3f94-082f-40fa-8ea4-cc11356a3929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e9c090-0864-4588-9c23-d77b626c4f18",
        "cursor": {
          "ref": "4972b52d-9ff6-4018-a341-5b536c90b3f9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "439ec64f-bcf4-486f-991f-9e4953911393"
        },
        "item": {
          "id": "16e9c090-0864-4588-9c23-d77b626c4f18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aac8c0b6-89e7-4226-8333-fb4ee1778cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4968eb82-7c71-4c0b-93f9-39687ddb0c5a",
        "cursor": {
          "ref": "d33625e0-3398-4784-b37b-80e1c3565435",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e78d76ac-b12c-41e0-8430-1170dfd6a2e4"
        },
        "item": {
          "id": "4968eb82-7c71-4c0b-93f9-39687ddb0c5a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ab654c1-9152-4299-9a73-6bae175851ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f932fa-6c68-48d2-84e4-6c6169891e0e",
        "cursor": {
          "ref": "36b55be4-051f-4d22-bb87-1bff2bbda16e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9fcc5f93-cb71-4240-a1f1-dfcb4a2b4622"
        },
        "item": {
          "id": "f9f932fa-6c68-48d2-84e4-6c6169891e0e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "453d12bd-c753-4855-803d-e13cd814b752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94cb20e-f2fb-4270-b408-27fd67549f92",
        "cursor": {
          "ref": "cbadaebb-3765-4735-bcbd-7b6a577aa83a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f02aa45c-b638-49ef-9f76-4fae2cafa0e8"
        },
        "item": {
          "id": "f94cb20e-f2fb-4270-b408-27fd67549f92",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "089687e1-c277-49de-ab33-b4193e69af0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e023dcc6-f3f1-40e8-9956-a2c962b6f8ad",
        "cursor": {
          "ref": "edee170c-4e33-4274-90de-45ed65f2bbdb",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "83c52fb6-a797-49f9-98c1-c4ca197e326d"
        },
        "item": {
          "id": "e023dcc6-f3f1-40e8-9956-a2c962b6f8ad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "56ce2e09-6736-4e5e-ac32-bda74fc86888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2734ad0e-e05d-41b3-8a2a-ba7f9c566d91",
        "cursor": {
          "ref": "b6d97a1e-833c-40b9-a796-23303cc71042",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d2128d1f-e4ce-4ac0-89c7-13ae1ac963a1"
        },
        "item": {
          "id": "2734ad0e-e05d-41b3-8a2a-ba7f9c566d91",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9e03c1e6-92b0-4c41-bce2-0bd601ad1e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d02d830-bcef-4ce3-bf6c-730cfd7ff5ad",
        "cursor": {
          "ref": "dbb44135-b95a-4d19-b6fd-8af675d96e00",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ce1dfe8e-2f55-45e0-8d4d-e24c7baf92d4"
        },
        "item": {
          "id": "2d02d830-bcef-4ce3-bf6c-730cfd7ff5ad",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "681de988-0a9a-4ea1-8562-48b5f41b6060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2586585c-2463-4454-9602-93533d997a15",
        "cursor": {
          "ref": "6bf46402-0d20-4af3-926b-5b388cd4ee89",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5083a5b3-a611-4b67-91f6-3b0539f50bce"
        },
        "item": {
          "id": "2586585c-2463-4454-9602-93533d997a15",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bf6e16e9-9feb-4e76-aed2-ffb3c8a60337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af0ea9d-f1a0-492c-92bf-0e42441cdc6a",
        "cursor": {
          "ref": "1e7d5ed0-31f4-439f-9e1d-10f70d257110",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b58cb8df-d054-45c2-9ec9-9387f8a14c66"
        },
        "item": {
          "id": "5af0ea9d-f1a0-492c-92bf-0e42441cdc6a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "97ebd357-a22a-4819-97a4-743c7b0a9980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5e0f08-3d2b-4772-84a3-2dca3d6bebf7",
        "cursor": {
          "ref": "5c8dfa0e-95ac-45cd-893b-529efa94e579",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "54b7b15a-866d-42fb-be19-bcf805c052ba"
        },
        "item": {
          "id": "7b5e0f08-3d2b-4772-84a3-2dca3d6bebf7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1de7ecc5-1a71-466e-b96c-064aa6f4e68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd510e1-36af-4aa3-b730-45422f5d6b4a",
        "cursor": {
          "ref": "8946ea4d-62b2-4521-9aae-cbba77ba45a5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7de3b3d1-0a62-4e0c-9269-29b019713cb7"
        },
        "item": {
          "id": "1dd510e1-36af-4aa3-b730-45422f5d6b4a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dbe9bc01-87d9-4755-97c2-14ddd113a404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1986446-b9cd-43f3-b40c-f980a3c50a1d",
        "cursor": {
          "ref": "b4652d28-3d69-4944-9930-16cf70556ebc",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "898c0ab9-4ec7-4833-b52f-ecf7331b55d1"
        },
        "item": {
          "id": "e1986446-b9cd-43f3-b40c-f980a3c50a1d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "363386c9-7218-4f85-aaee-7e8dd88a345c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596a3fb3-3bae-42cf-adef-4e3a7748385c",
        "cursor": {
          "ref": "8e2ddbbb-af58-4a85-aaff-b891943c0ad0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "38d55b6b-fc2e-4ce5-8a39-9be18142cada"
        },
        "item": {
          "id": "596a3fb3-3bae-42cf-adef-4e3a7748385c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a683ad2b-82d4-4dc3-8589-5dc2c853af0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22c27ae-dbd4-4aa1-a08c-d2a8cd9c49a4",
        "cursor": {
          "ref": "3d2a215b-3ea8-4d9a-a57e-301773ebacb3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7ef6de76-3681-432c-b4a0-fb71c3b312f5"
        },
        "item": {
          "id": "e22c27ae-dbd4-4aa1-a08c-d2a8cd9c49a4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cfd3ef99-5f49-4c10-88a2-6ed63102864d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b348706-deb0-4686-9780-9ea01baa342f",
        "cursor": {
          "ref": "81b240d5-93f4-42a7-b649-1a7f0f95d79d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bf2aaccc-a262-4ff7-baea-c21cad9516d3"
        },
        "item": {
          "id": "3b348706-deb0-4686-9780-9ea01baa342f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8b9f23e0-e7ef-462b-86a7-b38254d1449c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b36eb0-6db8-41be-abdc-b8a8a1eb4800",
        "cursor": {
          "ref": "19185072-ffa7-43da-89c9-21520cece323",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b1af04ce-fcb4-45a0-a85f-13ee840238c2"
        },
        "item": {
          "id": "e1b36eb0-6db8-41be-abdc-b8a8a1eb4800",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2a5f567d-a6ed-4c80-a4cb-05a6df626cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4c5aeb-3b22-4f6e-9714-2d9cafc61a0a",
        "cursor": {
          "ref": "e2d4af14-0afc-482a-9f80-af843aca2cf3",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cbfdddfd-7aa1-474b-857c-f52364e7270f"
        },
        "item": {
          "id": "ea4c5aeb-3b22-4f6e-9714-2d9cafc61a0a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b594ddc6-4a4f-4157-afcc-716bb4611561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7403cd-99d9-4add-8881-66add9700ef5",
        "cursor": {
          "ref": "b10f3c7a-af10-4c23-a218-7c001e8c4767",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0f9782db-413d-426c-8a45-05d2cdc41c1d"
        },
        "item": {
          "id": "4b7403cd-99d9-4add-8881-66add9700ef5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6b00539-575a-4e2d-ae38-4b2f64b7ee6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829ec410-1b35-47e3-9304-ce450423a684",
        "cursor": {
          "ref": "35fb2b86-2189-4389-a5a7-b0711b781eee",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "323de721-348f-4dcf-9f87-8b0da902a0fb"
        },
        "item": {
          "id": "829ec410-1b35-47e3-9304-ce450423a684",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b53d06cb-e040-4dca-9627-0f9e170c87f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b127701-bea8-4549-8036-1e9ad27995ab",
        "cursor": {
          "ref": "b0c656bf-b8a0-4bde-b88f-0a0d9acf52e2",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a319f1d1-f313-4ba7-a571-746f9de41c74"
        },
        "item": {
          "id": "8b127701-bea8-4549-8036-1e9ad27995ab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9810434f-fa10-425f-86c2-0df74aa2ed8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e03c74-bf05-46b2-b6c1-90014f18c57a",
        "cursor": {
          "ref": "68fecb78-425a-42de-b57f-d0bee2c238c6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6face5c4-932c-4f61-a04a-986318801423"
        },
        "item": {
          "id": "c1e03c74-bf05-46b2-b6c1-90014f18c57a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "03f1189e-c618-415e-a148-7154deb7f611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22d628f-c6a0-4e2a-b8e7-fdabaccd44d4",
        "cursor": {
          "ref": "1fb3c22d-e519-4d7d-bbc0-cfb081d5e6e3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "addde10b-9588-40ff-af16-53ccc48096d0"
        },
        "item": {
          "id": "a22d628f-c6a0-4e2a-b8e7-fdabaccd44d4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9efe7958-ef47-4784-9a99-b5ee588b434c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7269b7-2445-480e-b895-064520ea9248",
        "cursor": {
          "ref": "37715ac8-7d0a-41de-be14-7678c3203bb5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "83574496-6b02-4422-84ed-6f10d00c87e5"
        },
        "item": {
          "id": "6f7269b7-2445-480e-b895-064520ea9248",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e5311653-5c35-485b-a1be-0c482bbd172c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79254e3-3457-4dd7-871c-190552bfaac0",
        "cursor": {
          "ref": "41d12111-c4fc-4738-ac65-1e4a5a478f94",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a8f2e643-6db7-4d6c-b9e4-a3ceaefc3b09"
        },
        "item": {
          "id": "d79254e3-3457-4dd7-871c-190552bfaac0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eec1285d-9f53-405d-aa05-e59fd7c0aae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be3502a-a228-4d8a-a2ae-6ba3fb7a6099",
        "cursor": {
          "ref": "89e2d19d-95f1-48d8-ae83-988825a41b8f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "72fbf2fc-e325-4751-b4a8-4923ebbb86de"
        },
        "item": {
          "id": "3be3502a-a228-4d8a-a2ae-6ba3fb7a6099",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7d9cf5d1-22f3-4900-8c2a-cc5864c78122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5385894e-d9c2-49ff-a9e1-165f37b67f78",
        "cursor": {
          "ref": "75eb8788-92d6-4f9d-a2b4-86b30739a766",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "98d5f4c7-d473-4aac-a290-f050dfd95668"
        },
        "item": {
          "id": "5385894e-d9c2-49ff-a9e1-165f37b67f78",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6f06298f-264b-433a-922a-6110f4197ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ae0e82-867a-43a5-80f1-6656464bca87",
        "cursor": {
          "ref": "ee9e223d-0f6b-40ff-a015-01510aa70384",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "82f41a06-0198-47b8-8cc9-dbaa9055c4a9"
        },
        "item": {
          "id": "77ae0e82-867a-43a5-80f1-6656464bca87",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "38620eae-8f7e-4739-8004-2c322638cf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc5ddc2-360e-4714-929c-92e31cd26ed1",
        "cursor": {
          "ref": "850eac37-f3d4-4674-8ed7-bb0e089cf27d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d23810a7-4fda-4e51-8310-88eddfd9feaa"
        },
        "item": {
          "id": "5fc5ddc2-360e-4714-929c-92e31cd26ed1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c91b6ff4-3848-459e-92d1-f93e11574327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca7b694-7652-45ef-a97b-a18e7158d2da",
        "cursor": {
          "ref": "5c4175ea-a647-4f0b-89a4-98de72e665ca",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "48aa8d89-e650-4cf5-a352-11ad9426bd35"
        },
        "item": {
          "id": "8ca7b694-7652-45ef-a97b-a18e7158d2da",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "784ceb28-d5c5-4257-8476-c33b2943300c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2011dbda-c5ff-4b47-b011-63431a949f7c",
        "cursor": {
          "ref": "ec471176-a860-4635-b01a-5e46970bc96a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f859cc75-ae68-4959-8664-ae53e12de984"
        },
        "item": {
          "id": "2011dbda-c5ff-4b47-b011-63431a949f7c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b315d953-6ea9-4701-88c3-0a59a8d3d1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf59425-274e-4693-9e2c-019a1875900e",
        "cursor": {
          "ref": "1227f1cd-e716-408f-9d05-e886cdf54196",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "51c6882f-d8d8-48f6-a1f3-5d3c13770e79"
        },
        "item": {
          "id": "daf59425-274e-4693-9e2c-019a1875900e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f3cbb109-10a8-4fc2-8362-00646d171036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7d17c4-7177-40df-82e0-a1ede948610c",
        "cursor": {
          "ref": "8bd4f47c-8d25-4f49-84be-00a56deb0c98",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5fda0a1c-7e09-41e9-aeba-25e45be77607"
        },
        "item": {
          "id": "4c7d17c4-7177-40df-82e0-a1ede948610c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3e5b488d-5864-485a-965c-1bac84ca8fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3d5549-f4e0-41a9-b301-f1a45bce97b7",
        "cursor": {
          "ref": "46f2c77d-6d34-47c4-bd37-8ddcdb5646b6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "35a3e230-50fd-4a2b-b986-095d834896b0"
        },
        "item": {
          "id": "1c3d5549-f4e0-41a9-b301-f1a45bce97b7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c0e0dcf3-3111-49ac-b6a9-7c8e57ddcaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e1791e-e632-4c1a-a78b-918371d0f45e",
        "cursor": {
          "ref": "907ab52a-15f6-4288-8358-7eb2ce1ac0e7",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ac20f7a2-4d77-4826-8dc7-2c930adcc72d"
        },
        "item": {
          "id": "84e1791e-e632-4c1a-a78b-918371d0f45e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b87f8feb-8d08-4097-a26b-b0f495c4e30e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fb26f0-a173-46e0-b084-ba0b3f0b4abc",
        "cursor": {
          "ref": "9d5ee68d-1526-4ac7-a5a6-6edf1dc5d49e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5c801888-6692-412c-8e3e-61877ea6a28d"
        },
        "item": {
          "id": "32fb26f0-a173-46e0-b084-ba0b3f0b4abc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2c632606-6490-40d7-a880-963c0ad7da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a2cc497c-8918-46d4-afd3-14dcc35e804f",
        "cursor": {
          "ref": "3fd9f430-104e-48d6-b811-f46f6b484bb2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "643ab9c3-bc0c-4ff3-a9ab-66f6ecb3ed91"
        },
        "item": {
          "id": "a2cc497c-8918-46d4-afd3-14dcc35e804f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ec17f0ca-67bb-4aff-bb4a-d846829d8cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "02d0199d-c3e7-40d9-9af6-e68936418001",
        "cursor": {
          "ref": "7746b6db-1327-4556-8b89-8889617a9c02",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d770051b-5186-4908-b5df-6c22f3101984"
        },
        "item": {
          "id": "02d0199d-c3e7-40d9-9af6-e68936418001",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1052a9fd-0a84-45ef-93ed-8179bce1861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5d04b920-cc20-4874-bac0-1208f705105e",
        "cursor": {
          "ref": "92b50c18-15db-4b9a-85b6-ee1ed0dc1443",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "55836612-2573-4b26-bc93-a076f931c3ff"
        },
        "item": {
          "id": "5d04b920-cc20-4874-bac0-1208f705105e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "519b8636-f0eb-427f-8437-85d78457e653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ac1fabb5-8e2f-41b1-9cbd-f40fde0b7400",
        "cursor": {
          "ref": "373090eb-178c-497c-9b9a-1eb2f3451d12",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0da71a56-4157-44f4-80ed-fd31609e6a38"
        },
        "item": {
          "id": "ac1fabb5-8e2f-41b1-9cbd-f40fde0b7400",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "333e1737-1396-4a17-a9a3-4b7fa505127b",
          "status": "Created",
          "code": 201,
          "responseTime": 7022,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a10dd6-70b6-4bcc-ab89-5f4c97f6fd5a",
        "cursor": {
          "ref": "8519f8d5-b0a1-451a-b9df-b29f507e9cb1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "22059e03-560e-4e96-9997-be9c8c726e97"
        },
        "item": {
          "id": "33a10dd6-70b6-4bcc-ab89-5f4c97f6fd5a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b9655882-fee2-4963-9bed-df4e6605038f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a47c08d7-d854-4e47-9a34-9069a8f03951",
        "cursor": {
          "ref": "f6407652-5285-4fb0-9685-ffbe2a0ae5dc",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d3c5e99b-55c4-48ea-bde8-04658ba62753"
        },
        "item": {
          "id": "a47c08d7-d854-4e47-9a34-9069a8f03951",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "77062749-db10-4cf1-873b-7db822f54094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7a80d86b-8f8e-4dd6-abef-eb442b863d7d",
        "cursor": {
          "ref": "bc7d7cca-aaee-453d-900f-068d0c53e392",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "edf2c3b2-d8c4-418b-a27c-c4f0e3e2ff07"
        },
        "item": {
          "id": "7a80d86b-8f8e-4dd6-abef-eb442b863d7d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7ac2b27e-644f-460f-8f70-da27058263bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da066c8f-a21b-410f-88c1-844fd5993f64",
        "cursor": {
          "ref": "da4f9925-27b3-423d-8da0-ac7664add546",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a8a6dde9-402d-4a94-af32-44e090605f0f"
        },
        "item": {
          "id": "da066c8f-a21b-410f-88c1-844fd5993f64",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "00153f38-f6a5-48c6-8c43-0569535dd542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4540988-0c1f-45ad-b58e-ea3d24ad7252",
        "cursor": {
          "ref": "a15f466c-e609-4d51-b755-917ec1df0d0f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "97ab5d22-4354-4c1e-945c-5bd768b1b7f2"
        },
        "item": {
          "id": "c4540988-0c1f-45ad-b58e-ea3d24ad7252",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5bb30c7d-3485-48ba-9950-99f78b42677e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9176c4a7-f0ca-4255-98b0-1076ffe51271",
        "cursor": {
          "ref": "b5568e30-1325-4afa-8da3-95eaff2c3a80",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5eb19a58-4f5a-4d1b-9794-07b9a90f5d2a"
        },
        "item": {
          "id": "9176c4a7-f0ca-4255-98b0-1076ffe51271",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f831873a-3cff-4765-9c43-0c29a7bc49d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dc310b-3d4b-457d-8642-56c13e68df86",
        "cursor": {
          "ref": "e0a2b31f-4918-4ac1-a722-8a44ee9aa9cc",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e9e83293-3d8f-4953-84de-6ba938a516a2"
        },
        "item": {
          "id": "93dc310b-3d4b-457d-8642-56c13e68df86",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7837894b-b6ef-4f03-bb8d-c47f7159d5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc752749-ff34-4ec9-8306-de5b82d7ecea",
        "cursor": {
          "ref": "9b245047-d8f2-49e2-8197-3604b50c8ebe",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "19609232-cac1-4116-958e-f389ab4d9f6f"
        },
        "item": {
          "id": "bc752749-ff34-4ec9-8306-de5b82d7ecea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0992c23e-ecf1-4604-abf3-abd21ef30bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08164e9a-df63-4234-afa9-ac1d3bfd45f9",
        "cursor": {
          "ref": "cb558f0e-fbd3-4e01-a7b9-8ce308ab3651",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "30afd0f0-af6b-47ee-8a45-d98516636bd4"
        },
        "item": {
          "id": "08164e9a-df63-4234-afa9-ac1d3bfd45f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dd00f022-1c9d-49a7-bcfc-70f5d7374e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2533d7-696b-4bbe-8077-db361f3f508d",
        "cursor": {
          "ref": "9a29603e-93b5-45d8-8075-8093da917f42",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "06da8e2f-e3ee-4124-84ba-6bd2145a1f3a"
        },
        "item": {
          "id": "4e2533d7-696b-4bbe-8077-db361f3f508d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0475f3d0-8977-49fd-beae-1ec018fb3897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca9671d-40c0-4dcf-b740-89f6ec5c9b94",
        "cursor": {
          "ref": "db95ac7b-1065-4452-adb3-5b2aa0bd53b5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d20b844f-771e-4fc1-a421-43e463241ee0"
        },
        "item": {
          "id": "6ca9671d-40c0-4dcf-b740-89f6ec5c9b94",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "50df2473-5d79-4b85-84e7-8595f92478e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0c98f5-b6b2-48ab-82cc-786477f00e66",
        "cursor": {
          "ref": "eaa04e7f-74ee-4136-a570-c1b86a610f2e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2e5597f2-7e13-496a-96be-290b4e77ad5c"
        },
        "item": {
          "id": "5d0c98f5-b6b2-48ab-82cc-786477f00e66",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f90e6c85-b855-4bbb-9df6-d56d7ddc5db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98843ed5-4728-4b1b-8d5e-1f17941de548",
        "cursor": {
          "ref": "e04515e5-0907-4ed0-97c1-4e83991c90fe",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "98efea6b-a7e8-466a-920a-76c7646d3056"
        },
        "item": {
          "id": "98843ed5-4728-4b1b-8d5e-1f17941de548",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "feb61af5-5271-4f0a-b003-0155d8d5fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd65436-6c5a-4391-976a-0825940b148d",
        "cursor": {
          "ref": "9b1b8000-49de-4837-adb2-2e0a8f00ef07",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "29bed723-7a04-4543-9f05-8ed98e772266"
        },
        "item": {
          "id": "1dd65436-6c5a-4391-976a-0825940b148d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "89f3f425-f13b-4c12-bb42-34841778340e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf28ae3c-8ae8-4002-989d-cbdb136a2840",
        "cursor": {
          "ref": "e25e3dbe-ee24-4085-83d1-5f02678280ac",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2ea6f795-47fd-4f8d-a11b-83143d0845bf"
        },
        "item": {
          "id": "cf28ae3c-8ae8-4002-989d-cbdb136a2840",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "06f101f2-0e3d-4612-8fdc-587adae17518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0aeba5-c689-4626-8f4b-a41d369a2129",
        "cursor": {
          "ref": "748fdff1-fe60-44ba-b6ca-d9e358b94f75",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4e94687a-8f06-44e2-b285-49fce193a153"
        },
        "item": {
          "id": "ae0aeba5-c689-4626-8f4b-a41d369a2129",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fab6b240-1d24-4976-a754-dec957a5116f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a82ad0-9052-46fb-a3bb-f225460984dc",
        "cursor": {
          "ref": "35e243ba-a028-4d53-8f25-9dc2ffb1b2d7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fd50da56-2096-4953-9c47-b7635e9efb5a"
        },
        "item": {
          "id": "e9a82ad0-9052-46fb-a3bb-f225460984dc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b7e62c47-07ab-43f7-9e72-2c8a35567260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cace225a-863e-448c-8c0b-713b212c60e8",
        "cursor": {
          "ref": "d6777d7e-3e04-44bf-9420-83be4952f263",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4e36fb09-906f-4a0c-ad79-0cf350f8fc09"
        },
        "item": {
          "id": "cace225a-863e-448c-8c0b-713b212c60e8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b9dd947-064a-4b5b-89e1-b2d9319351fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0a27b2-3bfb-4885-9c3a-23b5f6d0e6e9",
        "cursor": {
          "ref": "1285d5bc-8769-4b9c-8888-a7860932ac16",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d995b9c8-40ee-4817-8e0d-00a3081c4836"
        },
        "item": {
          "id": "7f0a27b2-3bfb-4885-9c3a-23b5f6d0e6e9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d14eb55a-dd0d-4106-8157-953455638d36",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b463c8d4-ac18-474b-931f-ba4ec33bef38",
        "cursor": {
          "ref": "63071e58-61ba-4e39-a60e-7f8a2a129011",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "544b2fe8-b0e6-451f-87b9-28ea52a9fd31"
        },
        "item": {
          "id": "b463c8d4-ac18-474b-931f-ba4ec33bef38",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e4c15d2-3fe7-4c69-8421-f6750c6e2686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8771be81-7de5-405e-be04-7e19a5a811ca",
        "cursor": {
          "ref": "db930426-620e-41bc-80ae-e78d3f8ef6fe",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d868fd30-f786-4ac9-bbd9-b3d04678e70a"
        },
        "item": {
          "id": "8771be81-7de5-405e-be04-7e19a5a811ca",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6ea8b702-3c28-4f09-9a8c-c38e2b2c77b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaedfef4-2e1d-4af3-b488-9ff5975fe0ea",
        "cursor": {
          "ref": "20f6ec7f-ed67-459c-9c56-f8094d83597e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "035b9442-4623-410a-9ffd-15a3388b3177"
        },
        "item": {
          "id": "eaedfef4-2e1d-4af3-b488-9ff5975fe0ea",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "50fc1631-bd4f-409d-a235-9e7337a05e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe108aa-9d1e-40d8-ad71-bebcec368583",
        "cursor": {
          "ref": "1a9c18ee-6847-46fb-9389-624f5e9b24a2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a24eb8ef-52bf-470d-881a-49e2d76a86f0"
        },
        "item": {
          "id": "cbe108aa-9d1e-40d8-ad71-bebcec368583",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "876b0bd8-57af-4099-ba39-d21a50a17382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7a9279-ed59-4ad3-9874-041dd0b80387",
        "cursor": {
          "ref": "19aed46e-7d98-4ab2-add5-e3884ce6bfcc",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f7d838c6-3238-4f81-93ea-1c00fa6baa16"
        },
        "item": {
          "id": "8c7a9279-ed59-4ad3-9874-041dd0b80387",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5885f1c5-0cc6-4503-9688-047c91a43162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3620ffbd-653c-40ca-b731-3d495de7fc1b",
        "cursor": {
          "ref": "6d3e320e-f2e9-4e7c-aaed-bf306c8450a0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7efac0d2-9eb4-4d7c-96d0-3effd5b00fdc"
        },
        "item": {
          "id": "3620ffbd-653c-40ca-b731-3d495de7fc1b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "61f95404-0332-4de9-b245-6308f4b4997e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5056de7-b5bb-4048-ac42-ef985ae0da66",
        "cursor": {
          "ref": "61eb9762-0f97-43af-a9d9-dc902e4e37f8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3adaa069-2e74-43c1-8a28-fc3e4258ea41"
        },
        "item": {
          "id": "b5056de7-b5bb-4048-ac42-ef985ae0da66",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1fb042cc-7c9b-4cba-bae3-60abc35fc2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037f013d-1842-4e44-8132-109127cb12bf",
        "cursor": {
          "ref": "76053357-9aaf-40d6-9b65-593b6d03a538",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c8c58790-63c9-49ca-8740-05b665fa5280"
        },
        "item": {
          "id": "037f013d-1842-4e44-8132-109127cb12bf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "16c71703-ffd3-4f1c-9a53-33608bdde83b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b9184aca-b9c1-4e32-bf27-cd754687e69a",
        "cursor": {
          "ref": "d519ee4a-9249-4746-8694-4086f5398927",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a6958302-bbcc-479f-8481-a1f8638ad3e2"
        },
        "item": {
          "id": "b9184aca-b9c1-4e32-bf27-cd754687e69a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ff5ecc1d-7205-4988-aeec-9981be8ba2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5636704-1199-4c85-b84d-81e7b9cef33f",
        "cursor": {
          "ref": "5658822d-1995-4724-ae0e-b7df565d63ff",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cc3d9684-a845-4bc8-9edc-68a2fda3e6a6"
        },
        "item": {
          "id": "e5636704-1199-4c85-b84d-81e7b9cef33f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7fa86c87-d3bd-4322-b04c-f0131f0b9144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28783243-584e-4687-a691-ecb8ead24d5f",
        "cursor": {
          "ref": "761e435c-40aa-4e2c-9922-d3aa29f309c8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "958808ff-e90c-452d-8233-55dc4de88c7d"
        },
        "item": {
          "id": "28783243-584e-4687-a691-ecb8ead24d5f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bc205d2c-570e-49e9-aec4-5bc4595bf242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e20859-eab5-4817-b154-a8468e19a9a1",
        "cursor": {
          "ref": "066a953d-cb40-43cd-8b04-1739acf8f8dc",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "901ec762-9f97-4f5c-808f-e592b3ea1d8f"
        },
        "item": {
          "id": "32e20859-eab5-4817-b154-a8468e19a9a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2d3a3a50-37f1-4fe0-9177-08a2ccd7df9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c327d2-8463-40bb-82a4-91f0c367dc24",
        "cursor": {
          "ref": "8c11fcde-ee0a-4107-8950-fb728e525801",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dba38398-06d4-490b-bdd1-e4ac847537cb"
        },
        "item": {
          "id": "45c327d2-8463-40bb-82a4-91f0c367dc24",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c1b76d5b-4984-4be6-995f-2123f56171be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689d03c1-4cd9-47ca-ad3c-ffd8ef08f9a1",
        "cursor": {
          "ref": "86aaa4a8-e057-4d4f-99f2-9aa565855f45",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fac403f0-deb3-486b-a4b7-715cf1352ce3"
        },
        "item": {
          "id": "689d03c1-4cd9-47ca-ad3c-ffd8ef08f9a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3a96e556-42b7-4081-944e-c584d07d24c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fb94da-6f56-421d-a912-a57a7e830d64",
        "cursor": {
          "ref": "bbf28901-340a-4433-86dd-75875cc06a3a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "52fe377b-0873-48f5-999f-faf7e2f87678"
        },
        "item": {
          "id": "65fb94da-6f56-421d-a912-a57a7e830d64",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ae968b28-0bad-41af-afed-2d0c3fdc6443",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c559b2c2-1641-4fae-9ed5-ff87ff957ef5",
        "cursor": {
          "ref": "b0dadf74-d546-4b45-a0a5-19e7e629f9b7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "18e14c24-e7d7-48a0-bca5-2d3bfccbb985"
        },
        "item": {
          "id": "c559b2c2-1641-4fae-9ed5-ff87ff957ef5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cb94d1b2-6ee2-4af4-b9bd-0100b247858d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "43d513f3-529d-40c3-ac33-331e23c3ca5f",
        "cursor": {
          "ref": "da31a8cb-1944-4d42-8f9a-6b7fd118fcf1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1bf08411-1cbb-4466-9a6f-b07d435ed4a4"
        },
        "item": {
          "id": "43d513f3-529d-40c3-ac33-331e23c3ca5f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "08c4978b-6c11-4c80-ae53-ecc90585c41e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "88d465a7-2806-4a9f-9784-deae6e8051b1",
        "cursor": {
          "ref": "9c35e525-d0e2-4b32-bb52-ab2f054f3b8e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6036302b-74cc-476f-aa9d-e1a31ca1c5ab"
        },
        "item": {
          "id": "88d465a7-2806-4a9f-9784-deae6e8051b1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c669095b-25f6-4e01-adcb-6f508a9460e1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "a1b4b4c3-9b08-44c8-ae29-73bbbbd3cd73",
        "cursor": {
          "ref": "1fea6f29-7ccb-4547-add8-93df95e5df47",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "21908b1b-b2da-446a-9e76-4b62aeaab242"
        },
        "item": {
          "id": "a1b4b4c3-9b08-44c8-ae29-73bbbbd3cd73",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b5ada4cf-1678-4345-966a-101b52611aaa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "72da519d-01df-4bde-8e84-605a71af5381",
        "cursor": {
          "ref": "d68191d5-466f-4b73-a089-6a832c9bf252",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fa99be6c-138e-4181-9fba-fd636a03fa55"
        },
        "item": {
          "id": "72da519d-01df-4bde-8e84-605a71af5381",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9d0595c5-19c4-4cbb-935f-a8f4ad3ad17c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5ff41c3c-a908-496a-aa90-2b0a83002218",
        "cursor": {
          "ref": "99b78650-c374-4d53-a156-669d7c20e917",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "23ec02b0-55d3-4114-b5c1-57721bf01662"
        },
        "item": {
          "id": "5ff41c3c-a908-496a-aa90-2b0a83002218",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "90a619a7-538b-4112-8eb0-0d56bc85ddc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5851363-ab22-48a6-adfe-baa1b0063218",
        "cursor": {
          "ref": "1c09c149-2b66-4dd4-8c38-6b9d160d5013",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ae3774c3-d55d-4ec5-aebf-5e4f0326bcfb"
        },
        "item": {
          "id": "f5851363-ab22-48a6-adfe-baa1b0063218",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3cdc20d9-59f1-4a20-be82-f9de1b506835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd7d219-96b7-4f6c-bcad-2c76d1317135",
        "cursor": {
          "ref": "851a272e-71ec-4fe6-9d0e-2d024ed313b2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e03d4bef-5d41-453a-8f09-a67f05c9072c"
        },
        "item": {
          "id": "bcd7d219-96b7-4f6c-bcad-2c76d1317135",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "15e2908f-47e6-4726-8087-d9e0691a07be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e94ad2-b890-4753-98f8-bde2ce874076",
        "cursor": {
          "ref": "602c96fe-edfa-4ed8-b3ed-23dbe9344436",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6e66c229-017e-4192-83eb-cec16ead5006"
        },
        "item": {
          "id": "89e94ad2-b890-4753-98f8-bde2ce874076",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9e20bdcd-0b5a-445e-9767-38d75c8f56c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac711fc9-3813-4954-bc88-72a00433822e",
        "cursor": {
          "ref": "42871655-8d73-4ffc-9e6c-96fddf53aea3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3f3379d1-fbae-4f1d-b757-9459fe5c9dc5"
        },
        "item": {
          "id": "ac711fc9-3813-4954-bc88-72a00433822e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5508fc56-0a62-4eb5-8114-ff0553a45e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871ce7bf-26b7-4092-a12a-5b44e2b851a8",
        "cursor": {
          "ref": "2476988b-4bd5-4d12-b713-4694b4c47773",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "14d93fc2-62f8-4fe4-b983-494f09016f17"
        },
        "item": {
          "id": "871ce7bf-26b7-4092-a12a-5b44e2b851a8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a2c3f5b9-c2f9-439b-93e6-8735d60f9c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d0b424-19f5-47dc-8a9f-64662301de66",
        "cursor": {
          "ref": "79f766d3-535a-47cc-a46e-108eddbf83f9",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6658e35c-e257-481a-b336-dd5beb6dc573"
        },
        "item": {
          "id": "94d0b424-19f5-47dc-8a9f-64662301de66",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d4de6ae8-ecf9-4588-ba85-52e292168960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b869f9-8e5f-46eb-9059-06fa18488cfb",
        "cursor": {
          "ref": "aae7045e-6e51-41b6-a246-bdb6dd7bd072",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a17db0f3-3459-447b-9b9e-4a82eadeeb97"
        },
        "item": {
          "id": "f8b869f9-8e5f-46eb-9059-06fa18488cfb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "118910e6-4ccd-4756-9865-c2d3f7090057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6521e3-23c2-4ef8-a030-44dd85692437",
        "cursor": {
          "ref": "19dee08a-287a-4e7b-bce1-039fb24d2cba",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "00ebc78c-3f7f-46f0-bc3c-c0561d791ba3"
        },
        "item": {
          "id": "bf6521e3-23c2-4ef8-a030-44dd85692437",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "398c6063-ee46-41dd-8486-8e431488fafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08022601-8743-44b8-9fdd-c65674915ea6",
        "cursor": {
          "ref": "5f64d5ad-1902-464c-a3b5-36eae74b668b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6e4d5783-7d37-4dfe-9f22-25a324e0e6d4"
        },
        "item": {
          "id": "08022601-8743-44b8-9fdd-c65674915ea6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7a5f240d-d7d3-49cd-b88c-7c95d61f4b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f4f73d-c623-49ce-aac5-985a5bda16a3",
        "cursor": {
          "ref": "116edf5c-633d-48d4-9c65-a716374e05c2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8c005597-776a-4234-9d04-e973c7059da8"
        },
        "item": {
          "id": "98f4f73d-c623-49ce-aac5-985a5bda16a3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b97a1a57-2f4a-4a69-83e1-f16dd6e1703a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cac9e5b-0a8c-4550-b4b7-dc09775d598b",
        "cursor": {
          "ref": "0e438c21-7f8b-483e-8fe3-088c91945e5b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8b793371-1af4-438d-a4d0-974f8f70b5be"
        },
        "item": {
          "id": "2cac9e5b-0a8c-4550-b4b7-dc09775d598b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5a56b151-d294-4868-b308-ae17c19e7cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9be662-75ce-4612-ac48-883459bb0d7b",
        "cursor": {
          "ref": "934783e6-f1f4-4190-a6f8-324680f18bc3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e0bac537-69b3-4471-bfd1-4ac6c2f3b7b2"
        },
        "item": {
          "id": "3e9be662-75ce-4612-ac48-883459bb0d7b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "972d389d-c01e-42f3-8822-e0d455afc285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d794c71-133f-4f95-bfb5-56b28a034a0b",
        "cursor": {
          "ref": "60e049f3-4d53-486e-9576-b33b008881bf",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "08248414-41b6-4f10-9f15-6ee9dbf8b4ba"
        },
        "item": {
          "id": "2d794c71-133f-4f95-bfb5-56b28a034a0b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "91960366-1dcb-4fb3-9288-61cf20ec7849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15ddd6c-f712-4325-afaa-382c3cd3a587",
        "cursor": {
          "ref": "7dee3d0e-341f-427e-8315-242a893fc433",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9da29385-b989-4b21-a716-d7de78dfff02"
        },
        "item": {
          "id": "f15ddd6c-f712-4325-afaa-382c3cd3a587",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0b91f755-e6f4-41ce-b71a-7774010e1242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e177cd30-20c5-4da6-9832-58fc5f4fac3d",
        "cursor": {
          "ref": "d87c0964-e788-461d-b1d1-7b9708a21d04",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2405b346-94e8-4360-a9ed-fbe8cae3a106"
        },
        "item": {
          "id": "e177cd30-20c5-4da6-9832-58fc5f4fac3d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7b58610d-6b86-45f6-872e-daaf306cb379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3812509-3de4-45c4-b636-5be71ea331c4",
        "cursor": {
          "ref": "d0c77516-cb21-4e87-9b95-cad017903b7c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0e1c8d27-a192-46ba-9b6f-6e6ec7ea3bd7"
        },
        "item": {
          "id": "a3812509-3de4-45c4-b636-5be71ea331c4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c58f8f1a-db82-441f-9758-55d2507b03df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3de2ff-7bf5-404a-9e44-197905e8f96d",
        "cursor": {
          "ref": "1a11c0a9-258f-4847-8403-63e70461c5e4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2e74bc40-a233-4f63-bfc6-c1a4e1dd550d"
        },
        "item": {
          "id": "5e3de2ff-7bf5-404a-9e44-197905e8f96d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9c243946-3dda-4810-af6e-5c537eed00f1",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "5fb305d3-1c81-403c-aee2-a2f7d0596490",
        "cursor": {
          "ref": "0d605497-572a-403b-8f27-910b5ec2cd50",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "81e2335b-6a67-4469-8b7f-53c749e09256"
        },
        "item": {
          "id": "5fb305d3-1c81-403c-aee2-a2f7d0596490",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "235784dd-fdae-49ef-a81a-9e8e97d021dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70019fcd-a465-4f42-a2cb-a9eed756a261",
        "cursor": {
          "ref": "140d91b9-c845-477e-aca0-16ab2db3c603",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c6d53fb9-2f32-4deb-ab8b-18880e012b7f"
        },
        "item": {
          "id": "70019fcd-a465-4f42-a2cb-a9eed756a261",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "71d58964-0665-45b3-b559-1db34d15eb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e97454c-a408-4f81-84eb-e9e81c760503",
        "cursor": {
          "ref": "c4bbe8d9-4dd3-4f0b-ac13-c71b403c5370",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e0dc12f4-3bd0-40f8-ba4f-93f873d3301c"
        },
        "item": {
          "id": "1e97454c-a408-4f81-84eb-e9e81c760503",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a2b201ec-34b2-4a04-b09d-52f2fe4d73e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62487aac-e0eb-4487-bef7-254dcbfa3fa0",
        "cursor": {
          "ref": "853544d3-c3bd-4e9e-b1ff-b8a29f776ebb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "41f43482-7268-46fa-9106-a6fa166643e1"
        },
        "item": {
          "id": "62487aac-e0eb-4487-bef7-254dcbfa3fa0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e2498345-99c1-4d2e-8af4-9abe94f5fe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4837b05a-7623-41e9-9cf9-fa60e0424618",
        "cursor": {
          "ref": "6e4207d6-ac9f-4649-aabe-840b3c819408",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "56c9eb80-5482-464e-9003-e0c9e936e4fe"
        },
        "item": {
          "id": "4837b05a-7623-41e9-9cf9-fa60e0424618",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ff7bbbd7-bbc3-4cef-bf4d-9b714fa5625e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2663c1-332e-4966-93fe-09df66031aad",
        "cursor": {
          "ref": "f9f86b97-69b8-43fa-ae77-9d2fab3152b3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3ef7746d-0cc0-47b6-af28-1ace6e239d36"
        },
        "item": {
          "id": "1f2663c1-332e-4966-93fe-09df66031aad",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "91b810a6-468c-4676-ac28-dd8276083c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929a43d7-f251-4079-8ebe-b570ba167087",
        "cursor": {
          "ref": "08dc188b-0f8b-4bea-8a48-e9a093ce56a4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5c7819ea-b05c-4a23-bdf4-c4abb1784bdc"
        },
        "item": {
          "id": "929a43d7-f251-4079-8ebe-b570ba167087",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c9b8402c-ddf3-490c-9ed1-5338cd35fa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b11c6e-6614-465b-b232-8e91211e1c6d",
        "cursor": {
          "ref": "fec7cee4-a272-4ad2-a394-badcfa5918d6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "274284b4-fc01-4684-8b8e-d63e98955361"
        },
        "item": {
          "id": "60b11c6e-6614-465b-b232-8e91211e1c6d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d7349714-a827-4139-882d-78ba3ecf8271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721d2524-d068-4978-bee3-7ec711b8aead",
        "cursor": {
          "ref": "7ca9455f-6ed1-4ec4-9ebb-74c5f5655d77",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8a7ecf26-7c60-439e-8b03-f4102cc397b9"
        },
        "item": {
          "id": "721d2524-d068-4978-bee3-7ec711b8aead",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "22041cb0-84b6-4811-b7eb-52ed4983a43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acec9452-28c2-40ed-bc83-31116b3bfda0",
        "cursor": {
          "ref": "534ea23e-dd99-4f68-a871-ec9cce534cc4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "81922c03-a096-4224-ad92-01c985a7ee3c"
        },
        "item": {
          "id": "acec9452-28c2-40ed-bc83-31116b3bfda0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "72c1d2b3-f954-4e46-88ae-5bb64126b997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddf8a9e-a62d-4c88-a877-1593d5c89b49",
        "cursor": {
          "ref": "a4823ca1-9c28-43d2-b924-8e1be9bdd2c0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cbbd6ee5-f4fa-4af5-84d7-3de2feb93426"
        },
        "item": {
          "id": "0ddf8a9e-a62d-4c88-a877-1593d5c89b49",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e2db82c7-530f-483d-9da0-84593ec8d26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ace39ca-8170-436b-a187-92ed403c3256",
        "cursor": {
          "ref": "adabcd16-9df5-4c42-9efd-a404ac3d9439",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "80afc33a-db6c-44e7-8e6a-547678fd84e9"
        },
        "item": {
          "id": "3ace39ca-8170-436b-a187-92ed403c3256",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "93b428d1-2319-4833-8ec4-3375386d6c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb0c50b-8db8-4b55-bab5-733cae85c211",
        "cursor": {
          "ref": "59969ac1-047b-42fc-8942-4ded36350e92",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "644b0162-67f4-4975-bfb1-0e2eb7eb97ae"
        },
        "item": {
          "id": "8cb0c50b-8db8-4b55-bab5-733cae85c211",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "06716286-4577-4e80-8700-e8c55b3f8b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cc6ccd-8125-4e40-a869-fb88d9f21a1c",
        "cursor": {
          "ref": "45b6c5ba-dde5-4224-a376-737fb438f3a2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e31a6145-e493-460e-b194-115eee35a0da"
        },
        "item": {
          "id": "98cc6ccd-8125-4e40-a869-fb88d9f21a1c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7c102472-f490-41ab-9501-3627ad1da1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6008c7f-3d06-4259-ba58-3e87f0561759",
        "cursor": {
          "ref": "b8bc23b3-fcd2-4781-9f62-114e3c22065e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "eba28866-863c-48d4-a366-9a6a8c61d3b1"
        },
        "item": {
          "id": "d6008c7f-3d06-4259-ba58-3e87f0561759",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6dd4285f-fc4a-49c4-bb33-2e4df8085d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd2aa28-8242-4a50-a527-e292f1d15132",
        "cursor": {
          "ref": "ce8db4d5-0d09-4fdd-a145-4f8f97f5bcd8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "afaba313-208e-4e3e-90e7-996c50644ca5"
        },
        "item": {
          "id": "fdd2aa28-8242-4a50-a527-e292f1d15132",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2234814e-5914-416c-b089-40e1e8558edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be48f2de-cd20-4c84-b1ef-a1c7115bbc90",
        "cursor": {
          "ref": "077c1911-0ff5-4d32-a4c3-3805f3aa8cff",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ef4464d6-574b-402a-8a6e-ba86372c257b"
        },
        "item": {
          "id": "be48f2de-cd20-4c84-b1ef-a1c7115bbc90",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "aeeb348f-3478-4a9d-a43c-cc8ec19962af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5b781f-2b40-4374-8cc8-6eb481626f54",
        "cursor": {
          "ref": "06c11970-cdaa-469a-8811-8efe86b1bfe1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "947b2e66-42e7-4524-b37d-7cbd568c8440"
        },
        "item": {
          "id": "2e5b781f-2b40-4374-8cc8-6eb481626f54",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d5a39f29-5d18-48bc-894a-4c6d29184539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2b86c7-ca4b-405a-8bbc-14e88daed121",
        "cursor": {
          "ref": "8c23963b-6f0c-4950-9359-34be0ad61b2c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1103fc00-b705-4a11-970e-7e9368824376"
        },
        "item": {
          "id": "df2b86c7-ca4b-405a-8bbc-14e88daed121",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fe865b9c-fa2d-4266-82ac-d20bb7c9cd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22d906b-b820-4fcf-81f1-68b77d3cc563",
        "cursor": {
          "ref": "792b3ec5-1f60-4f0a-8227-10696048655f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b8775458-f285-4dc3-ab57-4dd243fb2af0"
        },
        "item": {
          "id": "c22d906b-b820-4fcf-81f1-68b77d3cc563",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "86ee7b9f-c001-483a-909a-685724d94f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfce23d9-c7ed-4e62-9058-873c94952a83",
        "cursor": {
          "ref": "cff9aed7-1e2f-4018-88d9-936d1152ace2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8ef3c120-95df-445f-8ff0-5ea4c0296495"
        },
        "item": {
          "id": "dfce23d9-c7ed-4e62-9058-873c94952a83",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "633af809-6b45-4b40-9676-24b078c8bb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6575cf78-38af-4af8-aa6f-5dc1451ec399",
        "cursor": {
          "ref": "64854a5e-3e1f-41e7-91a6-f29f8cf84305",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "69f93557-9254-473f-9a7a-669ba847240a"
        },
        "item": {
          "id": "6575cf78-38af-4af8-aa6f-5dc1451ec399",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8f2e1c9-ee92-42ae-b703-4d68f9a6d673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eded1faa-f5f9-4845-bb10-5ccfc02eba5b",
        "cursor": {
          "ref": "ecf03cb0-10f8-4300-944b-c3e8187427ca",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "297b3f6d-c85a-4654-9b30-573037e784e5"
        },
        "item": {
          "id": "eded1faa-f5f9-4845-bb10-5ccfc02eba5b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "72887cae-085c-4f0a-88a7-09a7269e4d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69a5225-304d-4d2f-8d48-8b289eb91e3f",
        "cursor": {
          "ref": "ed771776-0847-4921-8fe5-ac553792953f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6ccd1e03-e8b0-45fb-a9c5-3833a5303c3b"
        },
        "item": {
          "id": "f69a5225-304d-4d2f-8d48-8b289eb91e3f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8b65f382-d6e0-4aa8-8e8a-4bb8647683c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712e30dd-76b2-464d-b706-5ea58fcb665b",
        "cursor": {
          "ref": "f792ed59-69a2-4634-b4eb-c16fc9f4c328",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2cc30796-77d3-42d0-8483-b926c2308533"
        },
        "item": {
          "id": "712e30dd-76b2-464d-b706-5ea58fcb665b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e5e38055-6003-4673-9e99-dbd4b548384c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75abe57e-8ccd-4def-bcb7-a8412051a531",
        "cursor": {
          "ref": "def18269-b0ed-4087-9c45-ba541972cc92",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d4986add-769a-403c-9c85-d561b8cb0963"
        },
        "item": {
          "id": "75abe57e-8ccd-4def-bcb7-a8412051a531",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9f0295e4-ace8-487f-9b16-f733354cd86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3dec03-c4f5-48a3-bdce-633ab8b73e52",
        "cursor": {
          "ref": "10e066d6-fd69-497e-ac57-1c10e32a579f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a929358b-a07f-4faf-b6c5-2dc9c7568334"
        },
        "item": {
          "id": "4d3dec03-c4f5-48a3-bdce-633ab8b73e52",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "932ef8c7-19db-461e-9069-cf096f7335a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085d727d-b9d9-4d05-9fcf-d4d47e70d157",
        "cursor": {
          "ref": "9081325f-45c2-466f-b2e1-c42a2a878b4e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "af022076-a352-4eac-b8d8-877935a78851"
        },
        "item": {
          "id": "085d727d-b9d9-4d05-9fcf-d4d47e70d157",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "896f23ea-f583-42e8-9e9f-65294f22626e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bf503a-d00e-4a3b-99b8-03ec254fe7c4",
        "cursor": {
          "ref": "1cb607d8-c168-451f-8fd1-1c9e096b63d7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "26ccdacd-950f-4032-b60d-cfc3e94a34f1"
        },
        "item": {
          "id": "88bf503a-d00e-4a3b-99b8-03ec254fe7c4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e3592dbb-3abd-41df-879b-3acba1c69a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26751d8f-7ae5-4c07-9147-7abf5148a8f2",
        "cursor": {
          "ref": "eff3c197-b270-46ed-b9e1-2a4d9fe114d2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2a96286c-fbb7-4b81-a5a2-7f5d1fd37b78"
        },
        "item": {
          "id": "26751d8f-7ae5-4c07-9147-7abf5148a8f2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "99026fad-5b75-48ac-8ee7-57df4d8acd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b292eee3-d9a4-47cd-aaeb-529bf20da5cf",
        "cursor": {
          "ref": "0fc2de7b-a7e3-41b6-93ed-b674c261f745",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0bbdb545-4350-4a5f-8f07-58fa2917fa24"
        },
        "item": {
          "id": "b292eee3-d9a4-47cd-aaeb-529bf20da5cf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "03ccadc9-5b75-4d67-9dc8-ea3581e8064b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9f04b5-e6b6-427e-ae0c-42e2bc4e2955",
        "cursor": {
          "ref": "00b2da46-765f-4bb8-90a2-94c338356c96",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f6517e7-30c9-4763-a407-3f837370496c"
        },
        "item": {
          "id": "ff9f04b5-e6b6-427e-ae0c-42e2bc4e2955",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bb5fd2b1-b12c-4960-b10a-d8d1407df8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83dd4e1-9ae9-47f8-9b97-0beadd9e787a",
        "cursor": {
          "ref": "2fd45699-d12a-4404-bc2c-5f32fb2d5059",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6339f417-27cd-42df-8901-00e3f53c7367"
        },
        "item": {
          "id": "c83dd4e1-9ae9-47f8-9b97-0beadd9e787a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b8bd472b-9d16-43d4-a4a5-f729afea17d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd397867-8212-46b5-b4ec-128af065991b",
        "cursor": {
          "ref": "6d9e5cb0-348a-4461-a6f5-7d629aa67e1e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f02f3e67-9a62-4360-92bf-e70970497cfa"
        },
        "item": {
          "id": "dd397867-8212-46b5-b4ec-128af065991b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b94e8566-0f14-4bbd-8d2b-d7710829cce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4e9756-c946-4ea2-a343-f1cfe1032ea5",
        "cursor": {
          "ref": "9f907905-4d6f-4ad0-8a7f-301d46a39484",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6db5710a-fe9f-40fe-b64a-546646c874de"
        },
        "item": {
          "id": "be4e9756-c946-4ea2-a343-f1cfe1032ea5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "442e3dde-63bb-4d66-8dc2-59d6ca5a957d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbbff83-92a2-4d5f-9fb5-2498cd24ef10",
        "cursor": {
          "ref": "c0c76944-574c-4ab5-b842-034c7d2a88a7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b79f6557-2b2b-45dd-9839-193d2d706600"
        },
        "item": {
          "id": "8dbbff83-92a2-4d5f-9fb5-2498cd24ef10",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "79731cb1-d569-4193-a41e-5505820a6a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26249ff6-63d4-4736-8a52-35cfd4be73c9",
        "cursor": {
          "ref": "de21f633-15ad-4c71-b28a-ae44e31d01db",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3bb68417-fff5-4c2f-8efe-10c416f09d15"
        },
        "item": {
          "id": "26249ff6-63d4-4736-8a52-35cfd4be73c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e6653813-715d-4929-8cd5-4639219288f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797208f3-4880-44e1-9338-992d44f6a0d7",
        "cursor": {
          "ref": "08201064-d7a8-4fec-acc1-1c60aabf0b65",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "95136c97-3d7c-4e24-a442-33ae050096cb"
        },
        "item": {
          "id": "797208f3-4880-44e1-9338-992d44f6a0d7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "373abde7-57f5-40cf-a2b1-b8c389f69aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd8cd13-c872-477b-bb73-3dc6ffba341d",
        "cursor": {
          "ref": "b89d57ad-19b6-4ddc-b13b-ea5f3e4cb0e3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e367bdb8-b6f9-4a87-bac2-75ed2e5374a2"
        },
        "item": {
          "id": "afd8cd13-c872-477b-bb73-3dc6ffba341d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1834d968-88bd-4703-9b2d-fcd2e71a297d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f73a4e-6b25-4bed-ba40-76770b71fcc2",
        "cursor": {
          "ref": "5fd62635-73ce-472c-ad08-66b8cf626148",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5ef14d8e-a9b2-4732-bdae-432a3ab82c7e"
        },
        "item": {
          "id": "d2f73a4e-6b25-4bed-ba40-76770b71fcc2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1d092355-7a08-4106-aa69-5ebc26839157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc4d126-6d09-4a60-8076-5609c2e793ed",
        "cursor": {
          "ref": "f218ff8a-9af3-4ca6-8f0f-3ef5fc110b94",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a96aae8f-b01c-4494-9382-8bc33bf03deb"
        },
        "item": {
          "id": "adc4d126-6d09-4a60-8076-5609c2e793ed",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7ed5bd68-e464-4498-8607-be94559f4832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56203f12-05ae-4756-b9c2-f7c6fe637fa9",
        "cursor": {
          "ref": "6470819e-5171-4b1c-981b-2404e72df2b3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f4780f16-ee5a-488d-a9ab-37a832eeb918"
        },
        "item": {
          "id": "56203f12-05ae-4756-b9c2-f7c6fe637fa9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "134d8e1e-1573-427a-8580-9193da7befcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660fa743-1ebb-48d8-bb1c-9e7cda57b117",
        "cursor": {
          "ref": "ff247b88-f093-483e-ba33-4f98c023e00b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2dc0a74d-fdbf-41b1-b4c8-c96ca75f32e3"
        },
        "item": {
          "id": "660fa743-1ebb-48d8-bb1c-9e7cda57b117",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "378eb71b-a3aa-4913-ab1b-3b4388c004d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3021710-dc12-4460-8bc3-a4a3dab1de23",
        "cursor": {
          "ref": "bda56b72-088b-49a5-a9cd-b22f2be3e0f3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "544c60f6-fd1f-44d2-b86b-690dd506aacc"
        },
        "item": {
          "id": "c3021710-dc12-4460-8bc3-a4a3dab1de23",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "daa40c44-477e-4e3e-bda4-36e805b9de79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dac3e0-2707-4d27-bfad-0000c76acf7f",
        "cursor": {
          "ref": "b968f06c-3dcd-4398-8acc-b786f6e6e5e5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "743af2d1-9f19-4b69-8d63-2ed7499b91e2"
        },
        "item": {
          "id": "73dac3e0-2707-4d27-bfad-0000c76acf7f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7c4a802b-81cc-42ea-92ad-7f4738db0e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd5b857-7489-4fdf-8078-2f42d7b1e758",
        "cursor": {
          "ref": "b8b49f01-94d4-479a-bcfa-e13322512dd9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b2c312b6-c38b-4152-b9f3-cc040935fe5a"
        },
        "item": {
          "id": "9dd5b857-7489-4fdf-8078-2f42d7b1e758",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ad35f6f1-fd4e-4268-af70-d921163a6d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117a5e81-c29a-442a-9577-19e27fb35f2b",
        "cursor": {
          "ref": "42dbcee2-c7ea-437c-b537-4e0947cb140e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f9b1e0dc-26aa-49ef-956d-39654d5d64fb"
        },
        "item": {
          "id": "117a5e81-c29a-442a-9577-19e27fb35f2b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "347e593c-a723-41a1-977e-e3a4f68c5bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bcd9b1-1468-40b7-8b00-f70a8e23b3f9",
        "cursor": {
          "ref": "cfa3ceb7-f3ba-44a7-91fc-53c2d92e9969",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "04ad3f4f-c02b-4816-843a-acbacd54eff1"
        },
        "item": {
          "id": "f1bcd9b1-1468-40b7-8b00-f70a8e23b3f9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e7bb64ac-5894-49c6-bb9f-6fc33f058e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9d182a-44ac-4a82-9cb3-da1e0bb67ec4",
        "cursor": {
          "ref": "dc98f548-8df0-4f68-8a43-b25f3bf80e61",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9f4cdf16-fe78-4820-9742-2c2cd4db59f5"
        },
        "item": {
          "id": "8d9d182a-44ac-4a82-9cb3-da1e0bb67ec4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e353ef27-a57d-4c49-bff7-d5f36cbf3e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff466ec-d49a-430f-9671-aa5b91e6daf2",
        "cursor": {
          "ref": "efe72fbb-0fc5-4b35-bbb8-569612664761",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "df4bf9ac-c471-4560-9717-1bfdf58fb8ff"
        },
        "item": {
          "id": "0ff466ec-d49a-430f-9671-aa5b91e6daf2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "73fd6bf7-afaa-49de-89d2-a8129b67fbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1619c7c0-2a00-4abb-b5b0-6e699dfd233e",
        "cursor": {
          "ref": "5ae71d28-9d62-407a-ac12-826314058271",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "297d827c-1205-40d1-9ab7-3a6ba0c2098c"
        },
        "item": {
          "id": "1619c7c0-2a00-4abb-b5b0-6e699dfd233e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "452847f5-9513-48e9-b1fb-c38d8a0df9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaa0686-4bc9-4526-8b27-4afcbf27cca9",
        "cursor": {
          "ref": "ec0b8e16-ab5a-4f75-998f-84f5345cea4a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9cb8fc3b-1d13-43aa-87b7-c952fefe4cbe"
        },
        "item": {
          "id": "afaa0686-4bc9-4526-8b27-4afcbf27cca9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "46504efe-f7c7-4135-957f-1b05735cd8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0991348-09cf-4339-a7bc-bb570c6b4618",
        "cursor": {
          "ref": "31dcdad3-a160-49e8-ba74-e48b39d1eb4d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "22ec3c8a-7508-4e86-b7f6-db901297710d"
        },
        "item": {
          "id": "c0991348-09cf-4339-a7bc-bb570c6b4618",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c2116a5e-29e8-4862-a952-f9319d10ca70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66385633-0e91-47e5-9fa2-43d5bc675e96",
        "cursor": {
          "ref": "d426856c-8bf6-43e9-bdfa-4c8d4f97430a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "00cb68d4-ce9d-4284-ab81-33db5b3ce9a0"
        },
        "item": {
          "id": "66385633-0e91-47e5-9fa2-43d5bc675e96",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9a35db52-89fd-4746-9346-ec0563083e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fc2dfc-e0f4-4514-8e9b-58253a4774cd",
        "cursor": {
          "ref": "0ca0fabc-1f71-40af-a86f-827b1d0340ec",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8fbaeedd-77b0-4a9b-ad3d-93ba4cc8b4b8"
        },
        "item": {
          "id": "88fc2dfc-e0f4-4514-8e9b-58253a4774cd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f72b3745-3325-40c0-977d-7c4a1f5229f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256c886a-417b-4152-8d47-5f8f722b4ae0",
        "cursor": {
          "ref": "a46f9507-07bc-42b0-963d-0f73bdb88d9d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c94e5e0b-2796-4120-882f-0984eb10e9b8"
        },
        "item": {
          "id": "256c886a-417b-4152-8d47-5f8f722b4ae0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c7aa2387-f951-4809-b2ed-82619a497dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bf0426-4d56-4922-8cd2-2a06678e1c43",
        "cursor": {
          "ref": "2c0a12b7-9fd2-4c09-8b88-aaefb8f654e0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "90bf530a-dc1f-4ba8-9792-3f50fdfff435"
        },
        "item": {
          "id": "a1bf0426-4d56-4922-8cd2-2a06678e1c43",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c686f2ed-b662-4624-96dc-2db2c826cd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a12861e-0335-4d09-821e-28b9038e9e10",
        "cursor": {
          "ref": "003e5755-6c9e-42bd-b934-5b93ce7fbcd0",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e0211aa1-507c-4af4-b15d-0ca1d25506c4"
        },
        "item": {
          "id": "4a12861e-0335-4d09-821e-28b9038e9e10",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c53b2a7f-2c11-446c-9e55-6e18e05ffc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50527900-10a1-45f5-926a-858536660782",
        "cursor": {
          "ref": "7013fe46-e3a0-4174-92cc-8f2e4382fc82",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "51964205-b6c3-43ba-aba2-80bb5934595a"
        },
        "item": {
          "id": "50527900-10a1-45f5-926a-858536660782",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0002c67c-ac1f-4017-a113-62c2ab61b900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7de805-dc22-443f-8bb1-879b26915c26",
        "cursor": {
          "ref": "38c9047b-2bd7-4821-8db2-1fb939bf86fc",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "25f28a51-1986-49d2-82e8-465d4da1b215"
        },
        "item": {
          "id": "cf7de805-dc22-443f-8bb1-879b26915c26",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "49382481-f601-42b1-b2de-4ea8a77c1d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de448e4e-a39b-4b0b-b314-3e00320a0816",
        "cursor": {
          "ref": "39b389a7-d971-4f89-9173-cc43c1dfa0aa",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5757e423-ad69-4131-919b-e33a3fdcf785"
        },
        "item": {
          "id": "de448e4e-a39b-4b0b-b314-3e00320a0816",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ce425e33-c60c-4d4a-831c-6cafce6b2703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85740eac-ec7b-4b09-be8e-be199faf0c33",
        "cursor": {
          "ref": "8d8d89c0-56c1-4244-aebf-6c7f15c78401",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f6f78c56-f579-47f3-915f-80e0ff4b19ca"
        },
        "item": {
          "id": "85740eac-ec7b-4b09-be8e-be199faf0c33",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b96a7201-2a3c-46c9-b516-e8ced0154705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50ed2af-b3da-4ffc-9471-b4cc585ae585",
        "cursor": {
          "ref": "8b55a5e1-4b7d-4bd3-a9fe-bbf36d0af447",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f35eb704-641d-481b-8764-e8a94a4181ea"
        },
        "item": {
          "id": "c50ed2af-b3da-4ffc-9471-b4cc585ae585",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e7a0af2b-8956-44b7-90ec-eb98d5dec03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eec14b0-6b07-4f6a-88ba-3e0ee9d8355b",
        "cursor": {
          "ref": "4522a9ee-7314-4e21-8eef-c6becc8d246c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5baf6105-453d-42c5-9fb7-714de5034d47"
        },
        "item": {
          "id": "4eec14b0-6b07-4f6a-88ba-3e0ee9d8355b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "125b22f2-d2cb-431e-8ff4-314ededc4908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6b8e88-3b47-4b40-817e-548c92b89165",
        "cursor": {
          "ref": "a0ebac92-f581-48fc-9bb8-e2aac3d94b5e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e2e4305c-739a-4528-85c6-4d09e1cd7eed"
        },
        "item": {
          "id": "df6b8e88-3b47-4b40-817e-548c92b89165",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8aaaab57-9728-40ec-ae38-0fd0cd58334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1a8f42-9343-45c6-afea-b597cee87a31",
        "cursor": {
          "ref": "9132e0c0-f591-4ea0-afcb-2414848082df",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "05b6b7d3-364d-48c7-bbcd-752620942517"
        },
        "item": {
          "id": "ed1a8f42-9343-45c6-afea-b597cee87a31",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00ea9968-9b3f-4d7e-888a-fb931a66676c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56f4a29-c668-49bc-852d-8b1b463c161b",
        "cursor": {
          "ref": "7a310240-7a84-4621-a99d-37fd260e635a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0145a630-9797-4a21-afac-6fd9edaca935"
        },
        "item": {
          "id": "b56f4a29-c668-49bc-852d-8b1b463c161b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "00423d7a-9efb-4e10-b299-10431c34a221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7977d96c-6937-45de-89e0-4e7bbfc48988",
        "cursor": {
          "ref": "3044ab29-a67b-493b-827f-39bfd5d02738",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "43593b63-75ee-43ef-92bb-3de9fc7f7618"
        },
        "item": {
          "id": "7977d96c-6937-45de-89e0-4e7bbfc48988",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "92e37c1d-699a-43ca-bd7f-7cc774f89436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bf25e5-ae7d-45f6-ba96-e3ceaf457401",
        "cursor": {
          "ref": "5d8e23a0-f152-4ec1-a821-b0e27edbd136",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4306de29-7730-4050-9653-1183c081e330"
        },
        "item": {
          "id": "24bf25e5-ae7d-45f6-ba96-e3ceaf457401",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "75e88fc1-e8b6-4f5a-aec8-a2d0293c7b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6061b448-c289-49fc-8696-ed5e9b777ae8",
        "cursor": {
          "ref": "d378675c-845f-4c14-8ae6-50c485a06366",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "259821d1-f4cb-4a77-9b32-e5522ccb0a9f"
        },
        "item": {
          "id": "6061b448-c289-49fc-8696-ed5e9b777ae8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f21a47b8-1f7c-41a6-b880-ca17f67795ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4893e3fe-7b99-4d62-8f7a-a8daf0996a6f",
        "cursor": {
          "ref": "423509bf-dc63-46ce-a159-5fb1dcb9b419",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d736775e-ad86-41a0-9eef-6dbe3450e4ad"
        },
        "item": {
          "id": "4893e3fe-7b99-4d62-8f7a-a8daf0996a6f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "49ba11b2-e8fe-4a00-a2f2-abaab44031ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36b0abf-a7d7-4379-9974-95339c0dbea7",
        "cursor": {
          "ref": "edba362d-8078-4e48-9514-05fd6b4c598f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fa58d2e7-879d-420d-9f41-036d511ddaa3"
        },
        "item": {
          "id": "c36b0abf-a7d7-4379-9974-95339c0dbea7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "faa77fc0-f66c-4767-8a66-48f03ed887f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d383601-3a55-4884-96b3-fdf6abf8c3bb",
        "cursor": {
          "ref": "03aa3c78-fed1-41d1-8172-8b424b2a0f6e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d86e2a7a-452e-48eb-9113-30dea333afed"
        },
        "item": {
          "id": "1d383601-3a55-4884-96b3-fdf6abf8c3bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6175428d-fe77-436c-9142-8263d9eff043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2929e805-4998-405c-8740-7844aa4652a6",
        "cursor": {
          "ref": "3d8161ee-e207-44a9-a137-2ffb4abcc044",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "26071e88-3151-4ce4-979b-5659e6b52fc9"
        },
        "item": {
          "id": "2929e805-4998-405c-8740-7844aa4652a6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c8490044-d3d3-4fdd-8d73-55757366cd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe732657-df12-430e-839e-a3c1fa457379",
        "cursor": {
          "ref": "cf2fee65-9fd3-4465-b2ef-47947639604e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "da17ebf0-49bf-4bd1-9370-f21ff3e5c2e1"
        },
        "item": {
          "id": "fe732657-df12-430e-839e-a3c1fa457379",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "668bf2e0-3e7e-4ed7-bcc3-054e9fa26377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348821ad-e61e-478e-91cc-9a5839fbebdf",
        "cursor": {
          "ref": "1656ec36-338d-43c1-b6f7-c8041ec0ac92",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cc7c567f-bd66-4947-8a0b-52dbe6bd5be0"
        },
        "item": {
          "id": "348821ad-e61e-478e-91cc-9a5839fbebdf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a81a633c-89b6-4f56-b349-25e38aa7b2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38bf0c3-b3ec-421c-a7db-fe74a875b66d",
        "cursor": {
          "ref": "4f727f28-c59e-4217-8ac2-460d104a0dfa",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2e630c2a-04fb-4b06-8162-72c7f584dac3"
        },
        "item": {
          "id": "b38bf0c3-b3ec-421c-a7db-fe74a875b66d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0ebbd1d9-dd1d-4960-818b-814d56a7e155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d95e03e-ef1b-4d2a-b717-f03ce40484c7",
        "cursor": {
          "ref": "ea4654e1-6965-4df0-8276-d882322e97b8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ebf0a1c3-f811-46f8-b805-82150e8fbf0e"
        },
        "item": {
          "id": "0d95e03e-ef1b-4d2a-b717-f03ce40484c7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7b5eaf25-9a55-4177-b354-a513a2fb2bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c4bb78-b2fc-4d42-b39f-18756dfd2eee",
        "cursor": {
          "ref": "3bff64b9-4125-4f61-a891-e9b7d00704b9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c880c371-c132-481e-bf31-5f0c6dcb605d"
        },
        "item": {
          "id": "f8c4bb78-b2fc-4d42-b39f-18756dfd2eee",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "48245c77-b318-4f54-bbb3-f40230d66f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925574ea-0de6-456f-9a34-265edebef00d",
        "cursor": {
          "ref": "081aba19-d8df-4062-ad52-17b2e8a108c1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "29dc0f43-1d51-4aa9-be69-f31246d345da"
        },
        "item": {
          "id": "925574ea-0de6-456f-9a34-265edebef00d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1f07c984-2215-493f-ac86-ce4aa747a42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab27d7c-3999-4673-8abd-134a6a55473a",
        "cursor": {
          "ref": "4ae0b453-fddf-45af-8eb9-cf06fdce6a25",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "420ad63b-7404-419c-869a-12f403258f2b"
        },
        "item": {
          "id": "5ab27d7c-3999-4673-8abd-134a6a55473a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "73bee2ea-6017-443b-8a6b-406843ee42fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa75f447-8231-49a1-ba78-aeb2f7facd09",
        "cursor": {
          "ref": "9aeacd60-25a5-4392-a6ff-b1f0dd23737c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d4349ece-1a20-4ebf-a725-8a483eb7475c"
        },
        "item": {
          "id": "fa75f447-8231-49a1-ba78-aeb2f7facd09",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a49018fc-c998-4ca2-b9cd-d02363709934",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e0b3df-fd72-4a42-bca0-bbb27a3cd2c9",
        "cursor": {
          "ref": "0d381a14-fe86-479b-b7cc-06f56a186865",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a2ca2475-3cea-4b2e-bc13-28f0108b8b55"
        },
        "item": {
          "id": "33e0b3df-fd72-4a42-bca0-bbb27a3cd2c9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "77035c9d-b517-4668-af28-bef1984ed76c",
          "status": "OK",
          "code": 200,
          "responseTime": 2507,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bd1224-5627-4462-9b29-69018bcf462e",
        "cursor": {
          "ref": "0b9cc3d0-ec7a-4f06-9046-a0aec4f3290b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "80a86753-b859-474e-aca7-dc0cdda101e4"
        },
        "item": {
          "id": "f8bd1224-5627-4462-9b29-69018bcf462e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8a98636a-cc74-411b-bda4-845bc4959508",
          "status": "OK",
          "code": 200,
          "responseTime": 2979,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e04419-18db-49d0-b933-3416bbd23cb5",
        "cursor": {
          "ref": "4e55df84-4606-43f3-b2e9-aadc731cef9c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05714e8f-17af-404a-83c0-6e82fc88246f"
        },
        "item": {
          "id": "a8e04419-18db-49d0-b933-3416bbd23cb5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f962d153-9bc2-4c9b-9a38-735a9f697f74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e04419-18db-49d0-b933-3416bbd23cb5",
        "cursor": {
          "ref": "4e55df84-4606-43f3-b2e9-aadc731cef9c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05714e8f-17af-404a-83c0-6e82fc88246f"
        },
        "item": {
          "id": "a8e04419-18db-49d0-b933-3416bbd23cb5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f962d153-9bc2-4c9b-9a38-735a9f697f74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109243bf-0440-4bb3-a7ef-43afef030077",
        "cursor": {
          "ref": "79745260-b4d7-4fa3-b9d0-cb872ed5722a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2350a4ff-77bb-4707-9988-fa800f2740d9"
        },
        "item": {
          "id": "109243bf-0440-4bb3-a7ef-43afef030077",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d442fdf-81c2-443f-8417-ffaf80a2b5ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af32e57c-0d74-4b52-9814-2007d8f426b1",
        "cursor": {
          "ref": "eb1aeb9f-0590-4227-8323-3fb189d3701e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e9feaf2c-7bf4-4920-aa4c-2e05df5d1634"
        },
        "item": {
          "id": "af32e57c-0d74-4b52-9814-2007d8f426b1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "631d674b-aefc-443c-9dc3-50b7d566258f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}