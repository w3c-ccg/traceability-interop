{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "361f29db-5691-4bdd-a1bb-65089b60ee51",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9bbb61ed-cf1c-4507-aaed-3ae562c91086",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2072fd03-b20f-4cad-a781-e9f7727ed0b9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2cfc34cb-658c-493e-8755-61414f275e4c"
                }
              }
            ]
          },
          {
            "id": "28021b01-fda6-43f3-a535-e74a32504c7e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69720cfc-89b3-4355-8139-d995a118d047",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8aa76594-26cf-49ce-83aa-e7617e34a64d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6ccd9947-a694-4860-92e0-c6109e03eaf0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "219cc5c9-68c3-4e25-9138-a3d648d9ceac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b9f06b6-6071-4835-a3b9-7179b237ac8b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7805e173-024d-40cc-af78-a7c16de94a38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88d8375c-434b-46d2-95fc-387248d83580"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49c5afd9-2ae2-4301-9c6b-2f090e577e30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ca54ddc-b10f-42ee-a03a-71befa9550f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "523aec59-64d6-46fb-9f23-fb493f2543c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34908190-0c98-4697-87ca-6c0b5409a653"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "814066cd-b81f-4251-832f-66cebe9a1981",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "01e20d98-3d5f-48df-8691-fa7e4fcf1bb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "338d5453-9013-43d3-a067-6a9af22ccfa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4572407-33ad-429c-ae4a-30113fa9b5bd"
            }
          }
        ]
      },
      {
        "id": "84ee23b4-7883-453f-82c8-f06ea10db1fb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ed229c12-4ea6-4e54-a617-0fa04bd07b3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ece5398e-25fc-4ca1-8d94-93a0e057aff5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7dbb6181-25d5-4fff-818d-799851dbddea",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985aa753-4409-406e-8f8f-b64476817ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61df8ab4-b86e-47eb-af80-58f00c57e8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d51052-639a-4a23-a9bb-0b0137b39266",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05216d0c-1120-4411-a196-3fca30e9584c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9214561d-522b-4827-8434-3a6e285b1846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fdb939-5bf8-42c8-98a3-4b0a750822d3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c87dbf9-367f-4edf-bcb8-6faf67675b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e97e6a90-8217-4051-8a6b-5628c6740c1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c4b6171-c6e4-4e83-a1e4-e7a6b03c6281",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75a0bc68-cae1-417b-b9fc-e5fe38823fe1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbdaf78-2d45-4f77-8abc-cdd82e6d4ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39fcc8a0-8af7-47f3-a87d-9ce9bf340d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34920945-4679-473d-9f18-6d03342181c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a22db40-f98b-4caa-ad0f-9cca7b5ecb50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "69725ce0-b71c-4730-9858-90c8b921158d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66811a7a-3f59-435f-9aec-a718a4e8f1c3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd607428-7f33-4f76-b37a-33a0318cda4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "99a0fdcf-b0e8-4b88-a064-91c2b41b02b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "852dc66c-660b-481e-8737-69d045087041",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "67c16591-9989-4133-985c-02f223b81ee7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32752c0b-bb4d-4702-b8e4-c2c9132dab8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dde066d-a9a2-4741-adf8-3aeb13f8facc"
            }
          }
        ]
      },
      {
        "id": "476c1fcc-7b2b-49b8-9536-532210f52ae0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "59efac3b-837a-4366-8abf-9f51620b4e90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67d278fa-39f8-4fa1-b015-db98132f3741",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6d9eb77a-b687-48a2-b6e3-81012b86d9e1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8f4637-3d5e-4ff3-bee4-feff883ea66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e453c3c-2825-4a5d-9d23-dd4bd409f904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdeafa3-b90f-4c0a-a708-c509c461e453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35143339-8bdf-48ec-ab4f-0d7d5e05409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2639e22-181c-41c7-b879-9b6d47978aeb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39ef74b-a6c2-4a54-ac2e-8e7e89541e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfd986b-3282-4e83-b4a5-d4bc653c5c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c2d260-0ca6-4490-8df8-3498afbe76a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cc4de29-8b98-4030-a1f2-4042509f4132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2e9ba3-06fa-43c4-a0c2-b20a63ced3e0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c82ba2-bde4-4a49-bdc2-a0ebb59313a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78145899-124e-4257-8b83-ecd4d883ab69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5081373c-b93d-483f-8ad2-9f5ee9dc4497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55a80ead-a154-471f-b192-85b9014a7f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086f5fab-bd09-4da0-9fd9-36b17c18a7db",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0567bc-6f7d-461a-828b-2d3b548bd860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f64c3b-3bbf-44a6-81e8-570eda518616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f3ce1f-9ebc-4b9c-b6ec-2c991a558923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e42faa70-92b9-4249-9063-503a36e22616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe383b4b-46ba-48e8-903a-f70a31f7ffd5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa320c4-d314-47b1-8228-2969d7eb83f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0eb0250-5ad3-499a-a2ef-fe6f1869e88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6399c5-0c21-4039-8cd5-3fd81c65fbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "369360eb-8b4d-4b07-a796-d9191df480a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3454846-9223-4ec5-a600-e988f99ae7f7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051a079d-0bc0-46e1-94b6-a420abcd7eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b64de73-9507-4ed3-aea1-462c28121cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff074005-0829-41db-b77a-d2cbfbcd3559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e81422e1-6885-43e6-bfde-ed8049708c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb48ab9-ede8-4814-a393-2ad20c2d6c30",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b686b5c-2128-4029-860c-39f5b055e558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a003872-f98a-4837-8f95-e40dba319880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edafdcca-19e6-4314-8c44-d58ff2fe5e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6b309ba-063f-479f-bb3a-d7b7288e05e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ac336d-5b81-40a2-8bda-e67dd3b63b1e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d24db59-efd2-4cad-9ae4-30e7154bc9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba7613f-cf31-4550-86f8-0141e2a978ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118aeb38-cf94-4c3b-b5bd-fd838a4e82ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "730c8a9f-55a1-4449-8946-0cbe5f726ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361ab347-9d18-4f7c-8675-156ccfa492ea",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2959e6a4-59fe-416c-9e1b-0192ef3ef981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ddd32f-85c4-49db-ae88-720488c71e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0214f341-e64d-4243-a2ea-914947c83996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2874d1d1-5d64-4911-8957-2fa0626fcc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b08fc7-ea93-4e16-ad0a-712cc6c4c537",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f33f6b6-4345-4362-b0d8-54b65db44313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82b69cf-762a-4e82-90d9-1d10f3fabb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bb203f-8aa0-4142-a665-fe5af9900bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5bd0b4e-ba09-4da9-ab93-c36d7b7d07f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0652a4e1-c4c1-4e20-af64-4c5cb2f202e6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75838c80-66ae-474e-aad9-95fe64166acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17c4c67-eb63-437b-b8a1-6b7238d73fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdeadd6c-b075-4376-82c3-212a76b7b563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0760e228-a2ed-4fe7-8ff7-00df52605391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e57bb39-3725-4796-ab74-5f3c4d2ed6f3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbbe2da-ae09-4fe2-880e-349fcc946245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b1a435-587a-4fee-b4bd-e1321befb268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026a0130-e915-49b3-85bd-50aae2fac890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb78f707-3fbc-4bdb-bea9-315f71735361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e651fd6d-90d3-404b-a5c2-12cc9a0d43f3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4086fd3d-1c68-4cf0-b7a4-1827fc76d7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855930e7-9cbe-452b-87d2-7df90efbd78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcafe9d-ccb6-444b-a399-d643a019f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bee137b4-cf22-4ed4-81e3-063a6a01751e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b614daf2-975f-45a4-ab24-1c643645e620",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2931c9c-2697-4e5d-af2c-782163721118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2488ce1b-a50d-4cfa-8cd9-f87e7da1e33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae9868b-0fc4-4487-bb41-d4b98ef81fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d4b8bc3-8e57-40ea-aed0-a99e3fa0ce24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a87686-bc21-4cd4-9b57-abb2ddc894ff",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c17d4af-c914-46cd-8c6f-9e2772e2608d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f27ba5-0ca4-4fba-8b22-7478367e2750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496a3f30-33d6-4ddc-8b63-f6021382762b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80febe9e-db30-4b92-8ae3-a4f1dcfd6d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f973ee0-7da1-4eff-b63e-4edf990656f6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68744fa-e6f4-4f6d-9811-160cabd0503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5f0a2c-0f94-4ba3-bc5f-b7d56228a3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1f3d7e-33a2-4d08-9414-5e030dc564e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dac2fe4-9f12-4176-960c-74441d7873f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea05b3a-bf01-4554-8b34-304312e2bbb2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6791220-0eae-4a7d-a881-d78c6e6b56b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914aecd4-389b-41dd-b3d3-668c67bcbd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac6d24d-b1ef-4eb2-8eb5-3c2e70b70544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e00527c0-b2af-4e0a-9e88-05ff50e17543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04390ad9-1286-4f80-a62d-fe8384fa3b34",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c910a2b-0d26-46dc-9b17-8b996f839015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5310163-48c4-4ab3-bd50-73b4dd70a693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a20f987-8b70-4e38-8540-e2ea0d8a4aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad39e75-dc04-4e0c-af0c-5f9724f6819e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3060aaf8-3fdc-4b3c-8c1b-386fc22b3e19",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e10da8b-e0fa-4d4f-abec-550024495382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409bd2f1-7623-49ec-995f-1f27e4a23ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452f0343-536d-43c8-a626-c2b5c05a495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1fcff8-747a-43e1-a01c-f23f016fdb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b60880-9633-4670-b0c8-a857cf0e745d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c16062-04e4-48b2-bd1a-ffb0afb80185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f425ba3-6058-4c30-b0a5-d03b448dcee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c7f6c5-23b1-4c95-82a9-7145d37f0d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "352aebdd-7180-426d-93f9-b52a4bf7e307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cd60f7-b20c-49d5-9c75-d2e01a6c3bba",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef4e141-0567-4994-95f0-d17ce96677df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948b7f6c-d003-4176-bf94-31f94afb3fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f53b23-81d8-41c2-96cc-9d5c9cda5349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced36459-094c-4ca4-b9dc-d9c72a699d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00c46ae-edf5-4f36-8a3c-0f1bfdd26a1e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79f9eac-ba5a-4afa-90e0-ca0c65a1f9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a524d25c-b194-456a-b599-a0e2cadc7c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e79d202-69c7-498b-8e3b-baa09a71aef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "880e0ec5-0990-47c5-a605-cc1e073e56aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4ef538-0c4f-4086-9606-081c8adcd543",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420d8e74-e2fc-430a-aa65-c840125a854f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38255de5-b9bd-4566-80d9-3fd6f4f9cd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ddeb43-1fa3-4cc5-aece-beaad2bc7cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d787132-2732-4173-a38c-4d0674570583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036fe001-6da6-4b8f-81bc-0b96a029c692",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22821a12-9d1a-466d-a8bc-83f670d36f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebeb4538-3c07-4028-a89b-69c47874de65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bc9310-5023-4afb-b75c-06ef82b16e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "acbe4986-534b-455e-8049-65e1c900c7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc0cd02-1484-4a67-90b2-1f1335dcbc67",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a07c69-5db0-4676-99ca-b42dd59f79d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f1fc02-2ee0-4850-a8ed-941fc21a2da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc8d4e6-e466-4e0d-8e47-7b6f676416b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ab5811-ad12-4ee4-ba1c-02a0e1b1d654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f16c3f0-aec7-46cb-8ed1-d7699da1478a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08722207-6858-4576-9b75-b4f71c715e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cbf333-25c3-4251-acce-5892d593ded6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4458f0c-d2f8-483f-ab73-708574934938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ff8e17-5a4e-45c9-8cb3-632310272ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e72590-2469-4e18-99f9-ae8a976d7f1a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848f2f4f-c73a-4d21-a75c-e2226a758b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160d97ef-c488-41c4-98e3-0a10f7104d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd25740-33fb-4d40-bfab-d0a0be7b9a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a774b5c8-a8d5-4cb3-9d37-60df36a102a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49ad2ab-fc31-42d4-ae1c-1b498874dfbc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa6fde7-edc5-4aec-a555-1b2a23bca078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2313fd6-c65d-48eb-9b4d-a60d242536d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f48e13-1f69-4fea-a3fb-6b9c1df94c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af80a84-7116-4e82-a1ef-52b6f4212400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9050511d-ccb1-4788-94fb-1ce2a99ff6e7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5982f-c94c-49d2-87b4-701fc3e6ec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9bc066-57ab-430a-ac8e-a8cef825ad47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421c2425-19bf-477c-a745-b2a77960fc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54d9086-2a17-4759-8ef1-4b5227b1b7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f70d759-8d32-49c9-a6ad-455b7e3aa25a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b06d4f0-8fec-48b3-9fac-c563c8ab9137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70826c79-30db-4cc1-9ff9-6a2889307173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17681092-af0d-4aeb-9481-7d81b82c9368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7334749e-5779-42be-9ee2-506c7888581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec91073-d8fc-418d-9ed8-3d91712da699",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ecda35-831a-4790-bdd2-659ef867c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d877cba8-9b8d-41c1-a4d1-ba7f31ac6b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f696d5-e14f-4ad7-8e7d-c9d8f6089c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb05db9-b833-4f1f-a7b8-e1bee7ef0452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f3ca45-08c0-486c-a58a-4e0bda4fa62a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad883a8-e3bc-4c06-b14c-676de0926479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1a6399-e28d-452f-a083-142439b7e5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02bb936-9e93-46fa-bb4d-376991e01b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b81101f4-9c66-4e51-905f-bb8344b4026c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b99dba-6185-4050-8b6f-9ac6bdb7e475",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d884d-d898-4b74-b578-b14f6050da8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4708024c-0ad3-40f7-9835-a3f06bab38c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f652b3-44c1-4c44-990f-482af5822fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6ed7ae-1b85-4191-90a6-2c7a060bfc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd9c3a9-ccf4-4235-9ffb-34a62b195b1b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9a5fb1-8881-4ddd-ac80-4a742df83153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3ed700-477d-4166-b03a-9a135968f0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad6177d-5cf1-4604-920e-ab9cd0f5668b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ffa130-e244-404d-adad-92c23fa8a7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e46ef2e-0676-40d8-a8ba-61b58714d123",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37115912-a92d-4d5c-8ee1-f6321467f43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caa9905-80c0-461f-8dd8-1a3f25d97c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d5ba64-53cd-449c-b066-913e90668f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab7577c-bf54-446d-a8b1-0a10685cdd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaae541-2691-4e5c-b773-46c8e3f05414",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3aa49d9-163a-4782-b3a7-3c9d2f29e83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bbea9bd-be6f-4cf3-bc04-d665f14ff239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b965f565-be70-4256-8929-b695a83c4709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdce3fc-8cbb-4dba-bb52-b83d1e9ed118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fec954f-82bf-4871-a88f-f189882161b9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93267052-e140-4b5a-bb6b-6a6426473acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2cbc4b-3212-439f-a82e-cab1ef21e4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d676187-b26c-4b5b-8e8d-20edfb77d706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05486e31-c9ed-47cd-8897-d738cf61a902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc98ee98-fe7a-4bb8-8c89-24d10578fbbc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423a428a-39c5-4696-bbec-470823720cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef03ac04-4ea5-43db-a338-82fab105c1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1864030f-9041-4bd5-9c1e-f5670c171b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c22b9628-fec0-4146-b19c-682fc78950e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c283b4-4d4b-4ba6-bb40-506ec9c369c8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba2953f-9d7d-45e5-b0df-d834bf0cb38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4e9e7c-87d0-478b-a964-e39cebb81ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5931d96b-b2d7-48ee-b07f-f94daebe2d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa23c47-249d-4202-9127-168119b5a1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdd5807-8b4e-4dee-b8c4-8939361c8822",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724250cf-b4ca-4942-a463-b5fea660594b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a1a127-ce9e-4d5e-a69f-8dfc6b0938a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f97270-a29c-4188-8008-eddca3392c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3038722a-5c0d-4e63-9feb-3fdc8ff505b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335b7d04-e29c-4575-83b9-4df356e2b0e5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542c97de-762a-4759-a688-e3c89ae9c6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1851e7a8-1f7b-4e48-9a14-b5e8ad0d90c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf82ded-bbd6-4f1e-bfb0-463a2622b0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9d870b-6e59-4c6e-9bf0-6ddf499b2080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe503085-78d7-45be-9ede-1340ecee327f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423f7bd3-6dc9-4b66-b005-ca14247b45d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b229c916-eb30-4462-b298-a370c46e58d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3493a6-8676-48bc-9673-e1d48ff312ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a81889a4-c1b5-4fce-bb8b-d22a3b282fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91ae464-6896-46ac-ae91-c2f8014072f8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5574c9a-da51-43b5-bc42-049d34deb552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39a60f3-4286-480e-9463-3d7e91abc082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a12c114-0ff4-491a-87c9-a3abbfe624c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e75b9b-2cc8-4a46-9d79-5461c8fa375e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be59301a-e2b9-45d8-980b-08a61f3fb50d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fd0a6c-eb7b-4d6d-80dc-4395fd954d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79edf65e-24e2-4e35-ae16-d2f3f460dcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70736f48-f03d-4efb-935f-820136460c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf71e4f-c271-47aa-87fa-50e5710d37ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bbe3f7-0171-4131-8104-6d9b89312367",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c82561f-bb05-46f9-b16b-de8e365dead8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c59b9b-9b11-4b89-821d-d8887222af33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0644e627-f31a-4ee2-9a44-ff6897878513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6468d3d5-4f86-4388-ada6-d513bb669684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96e3007-aff2-4db6-8477-2aa01aef45ab",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69e0bc2-bf83-4b52-b409-6d274dc15c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7317cc6f-66a4-48bc-8f52-f8a1b95079c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacad802-d33d-43b0-8f89-35b6a9f20139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43fffb4e-d425-4c63-a23f-8a22b4b81f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4467928-da8f-417a-b72d-2de9ad78733c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ece37a-d3d3-4b53-94b0-b7eecfc6cb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f54556-e54f-4e1b-86c2-d275b14011e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba85797-5fca-458a-978a-40482789fee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06fc01b-51ad-4f3c-8c4a-76a762aabef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63af8ec3-315d-4d14-ac7f-6ade6b67557c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cded015-3030-4f21-a174-af8a0a69738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7523e77-626d-48dc-85bb-2a525e0cd520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b58268a-38ba-442e-8b98-bbb2a6bbe807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "713fb8b2-e9da-40fa-a71d-47bf7959842d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc21f68-edd1-4b10-9394-9f49cbae0021",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957e424b-b46b-4cf1-bb7c-0df38e489da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb24f66f-14c5-46f4-8366-8ba36b77c6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1961f2-2229-4a83-8d45-8b3cee2fdbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0acc7c48-ed4c-4b66-a069-78bbf11becfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08f003e-69d9-4eea-ad58-72c5f4bc3e06",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5ae0cc-1530-4012-9cdb-bf790b30a191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6ee7fd-9897-4876-8d80-3111a505d2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f167785a-c902-49d6-ac8d-067b6673e425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab29bd7d-b510-46f9-bc2f-2fc94131a718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6880be7-f1fc-4159-b008-ddb1dbe52cd2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2598af50-2d40-4bf2-b390-7db4948569a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a6dcc6-8717-4b96-a7cc-ffaee169edbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50c85f1-d992-4c78-96fe-e07a2373a601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63ef3ba-8b14-4ad4-a8a0-6c7ed93494e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5829a7-eba0-4503-b1b1-b0fa6fca92c0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a89f8ac-2948-428b-bd86-3d5e0f98024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f82e4d3-3508-46e8-8439-e7be7009f4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d4b989-5592-4a52-8b58-87a216a2cc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8208461-6231-451a-b598-562f2ec6203c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cb7c73-472f-4897-b2c0-26e767657fa0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414f2065-8791-42cd-907a-63744b79a18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fb5e2d-fc9f-4f5a-95f1-118a90988c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1c1b12-758b-4800-ba5b-3ad61927710b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9972c7c1-8fe9-439b-84b7-0fc7cf25c6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22bd722-b606-4461-b0b9-265c0beebbcb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d97245-e0f2-4c74-938f-131e276ad804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd322c7-2ed5-42f1-836f-df72efa722c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c36978-9dcd-4aae-b034-f468d2c6a728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "419545b7-6b51-426e-93b9-7d318efa880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bf99dd-387c-46be-b125-c58ff6257040",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f5284-e3d0-4e17-82a8-e77cf6b92364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6c2701-3a58-4a3b-8c19-db726b32a598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8a3993-052f-440d-89c5-51c7eda3a2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "839fdd20-6fae-4b75-8d6d-ceb48289be92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77dc5ef-f5db-475e-9f3f-6a40234ef03f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfc9932-f054-4ba2-8af3-7f475137efb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3736ded6-2321-49e5-bfa8-bb8134365a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ea97fc-4f7d-4959-b9ba-1fcfed977f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcc3bac-0100-44e2-ac73-6a7056884c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c89ed13-7779-4a99-acf1-5531ea5d0c6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2dde76-795e-4e2b-808c-9f381afe8790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d79706-8fab-4b8a-af66-6ca667fbf620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e849b14-b3ed-43cd-acb4-a4e3cb4f679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca2b1f1-e6e3-496d-904b-ca1a1ede1035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa571a59-8580-497d-9273-74095a646886",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65704bf3-c2bd-466d-b08c-ab5a4e079980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb4d281-df5c-4937-9c62-e7cd54b76a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6f1864-912a-4740-8b56-5f32f3c336c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "05a80ccc-9108-4a63-bd97-0f094ef7ed50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abf3edc-5746-4b1b-82f8-4455009e4e1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d5808-f4ca-4290-8bd8-3d955816c6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078aa662-38ee-4ee0-b4a7-8a1ceb663428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e151e916-0e92-4532-9147-eafae965c790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "76006742-da86-473c-9d5c-e3e1e95ea51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ea1ed8-b08f-43e5-841b-649ad11483a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78153a0a-e2e5-407a-ad68-688e8bbff547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e938dc-6185-4079-9791-572629bbd611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae5ea6d-f4a9-4767-bcdf-7a8d03074318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "442e76a3-280f-4009-9c67-fed67da7fa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c091dfef-e83c-448b-be4f-070de4bed1d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400ccc7e-1d3b-45d5-9ba7-bbf69dc1161d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a20fe6d-b9ff-4c6b-a6ba-786ae2c598d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1614f74-448c-4787-87a4-011b5d4caa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7346a60f-5688-4d99-8464-70122b6c930b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fd92d6-bee2-46c8-833b-f1850e5f0624",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6914dc48-5894-45bd-9dd2-65d4c6a73893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de28e6b-1bc6-4440-a051-1d173303e9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33efaf6f-9316-428e-855f-686a854179cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de21153-acae-42d9-9c4f-d13aa0690941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6206a4f-5bf9-47bd-92a9-df6c4408026e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a55389f-b95c-4f8f-9491-8315d16d29ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9062863a-65f5-49ee-a072-9558faaecb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4dc4a2-252f-401a-9745-7c5b4f8aca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e096ea4-902c-43a1-b892-aef600cc640d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56da422-6c1b-46c5-a7ec-7f6e077c7086",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528adea2-a68a-4a85-9de0-db366dc128c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13be2680-aaec-48f8-8ad4-3f6eca59a4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66627c8-3b06-4c3e-9f56-5ee2aed0dd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "979598ef-cf7c-4c7c-a944-43d73cc1013d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ae1029-6714-476c-98e5-bb1b7e74aefb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fbefc0-f36d-4a09-9021-270b713947f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ca94b4-c0a5-43f8-b338-f1c06c20e5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0deee81-7813-4850-8cb3-731390b34479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0fe789-73ef-40b2-b5e1-d9d6d071af11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb60104d-118c-4f57-9b71-bface4cc6df6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e282b11f-0fc4-4ea6-af49-faefdd9a827d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4005654a-a043-4024-aaca-e1ffd6205726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7fa6a9-aa66-40f2-830e-e051682c7b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c423023-5616-49af-9e79-07ae92efd0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cf3e0d-49e3-4329-a909-04eb3c262d8b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af355e4-7498-4380-8a0a-3f8df01f2e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4230c68c-4237-4393-9b40-8086864e9e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077c8a8f-bece-4d2c-8d92-ef038077a1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be9a0e0e-9249-4335-b3fc-32e0bf8d3d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679dcf91-1281-422a-a792-e835d4013be3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f5290-f1c1-420b-a04f-76b97a9f76a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2003fee2-831a-4633-840f-8948492f2258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d54b98-2c57-41ca-8c5d-ef44f7661ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "47525829-6be4-4e52-accc-241207c0bd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86e0cea-9084-49a6-b0bb-48000d78a59b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4efca07-c607-4dda-b9e4-c47514fd419c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b56459d-502f-494a-9d46-6a049dab3ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0f273c-4a62-43a9-8142-884f8253986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca2a770-e30c-4e23-aea7-3277189409b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9434dd-77f0-4789-9f60-31ba3abb44e8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20774c2-53f8-4f84-adda-879fa1b7a628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296f72a0-3127-4d46-859d-593459ac8198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a880b44-99cf-445e-8a87-791f566375ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8210a942-1f14-4cb0-be57-ec6d785eafa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba6aaaf-3310-47ff-bebf-a5770e17a6f8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa0ad97-a41b-4721-87d8-8fa1fb9d3444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0680002c-edf0-423d-afdd-550efeb89419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7a601f-c85e-4b9c-a623-548161e6e53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f55a63ce-d343-40fa-9272-7589d63dc6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844439a6-6d30-4130-9a8b-43e4d5d5cfe3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d81072-bbac-426f-bf35-9998eabf23f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9372890e-7993-4370-a2c9-a25c9cdd3c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8875f92a-a160-41d7-b2dd-fe52e78bff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1de643-db35-4211-9a5c-b2c6c1883f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cc5ff5-7d8e-4026-9fff-eb6a07bf9218",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bda18a-80f1-4119-892e-eb7944012f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d99646-3de9-478b-a639-1d3ac01a395a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff9cbd0-2d62-4b7b-9e9f-c6561f476e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6a932e-b581-42bc-ba5f-081f3dd3c063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16982df1-3a7b-4ddd-b3c6-0672e6efe880",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f574fe-c9ad-4b54-abf2-ce2ecf7b71d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9efeb2c-73a8-4a1d-a377-12237517609b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1d9fad-803b-45fc-98a4-749a4a6eafc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15a8679a-bb0e-495d-8332-882e290caa9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e595468c-5b70-41a0-8d43-a35a30a1cb6a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7571d753-b5b1-45e0-9f9a-b16aabe150ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb87049-664c-4073-9a05-f3f33385b838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310e1b67-ed0f-4fd6-9f9b-472eed042f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2872522c-e884-4185-ab64-050b72baaa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0213701b-e4fc-4b6b-ae36-05d4c899c70a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4581ebf9-1da7-4b88-83af-0511681d9b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ee9d9d-b4cd-4520-9df6-70657a39daaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06cab15-d2ad-4275-a8e7-955ece8c40cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74337405-f940-4efb-ae76-32ceac84df1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7005cc44-aa7a-457e-8002-4b62359d2a95",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cbb444-3858-4e46-9e2e-db16679e0bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49363feb-32ea-46b0-939c-171db7e58161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff285ba3-80c7-497d-a8d1-4a0b59e50f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "661ba749-3a59-40f2-9a28-4512e13b39ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b08bcb-8fb4-4a82-82b1-76d31f027744",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c04da-5cc0-4a22-8561-f35640ee6338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a5fe73-c096-4d49-b66e-bf840ce0d632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bd0341-6318-47de-a598-4c0a2e63ae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef3e498-6c3d-4ba4-967a-ea42a64b6411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0afb70-aab9-46fc-8012-b6219392fcd7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846a8dfa-d718-4407-be4e-cd4d8deb2c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8f1f75-eb1f-48c9-b122-a78acac0ffb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810e21f9-f009-42f2-9b5c-c764d90be7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73379bd-4b9b-4772-b92a-a7a4f08438b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c8fe3d-c869-467b-aa04-8e420b92ad03",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4452325f-3ecc-48bc-9a51-485107dbd500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa02bb9d-daba-46cc-b72e-81a486f1b750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ee4daa-44e7-4747-9119-7aa83c3797da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bf6c54-4e76-4365-9237-c191b01573e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba366b6-4a36-4049-8205-3c6e5d6f5504",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d906300-9960-4a5b-9324-624114b6cf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d584d8ce-ca9a-442f-bfaf-981b5e66cacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34718210-1f44-4765-9e1f-36b76eed312a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f585d5-3a4c-49a4-8955-ba959e79fac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b145f7-2ce8-42a0-94b3-1a900a900215",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebecfa73-4397-4750-aa1d-6012387f2156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6df09c-096c-42e7-ace9-9fc0db7d775b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa29287d-1d9a-4445-8f1b-cf36f9710529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc691863-1458-479e-ac71-4f4575ee3655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d8bd37-a67c-4704-b32c-6dcd4e7510c6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf6f5d9-0af4-4b22-9cac-3034f5aacb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d9121f-510c-4e4e-a5a2-6ea08f4e9fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dcdc6e-43da-40b4-8bc4-7b3a80d27f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e34b443-50d1-4c7a-998b-e92832288c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4f4541-d0c5-4f89-9551-46888bfa2f5c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bae0be-9057-46f9-80db-3a5c31d48350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b652444-6c6a-4958-8516-9dc5e0abbbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eb04e0-01b7-4dde-a6a9-4d10b4270842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20f0772-24dc-400a-b5d4-9b48763d95b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829a9258-f338-4f99-941d-1df04ecae434",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf31c35-9884-4ecd-9b91-c30e1f361dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79088e15-c5b7-43e5-b548-bb00c89a05a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99529314-eddc-454a-be18-306f301c5f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf45a43-4ea2-41b6-a9f6-e7b60a071e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1122d5a-99ec-4f67-b502-5483bd28242a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74fca3d-a30c-4063-944c-93323de7f87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6924b416-9d71-4acf-9607-4ea10ad6e6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a8e99e-5028-4866-91d3-ca0892254521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "553d880f-3b18-478d-ac17-100f07043676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8e7e16-c4cb-481a-b529-52eef0059a3e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879664a3-f02c-4abb-908f-ce53d7a143fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620077f2-5611-4af2-ae82-f8cc9bb741de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed3e54c-b09d-414f-9d8a-5c21994a0ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77185321-1b0a-49df-8c4e-b5f444d7ed6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbe3233-afa5-4ace-9585-363276c0a33b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82186171-459b-445a-bb4e-a0f4500d0870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1daa74bb-eee7-4cfe-a46e-9bf759c460cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8234849d-416a-4c4d-b61a-bf3e282380c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bb9404-cf67-4e24-8ba2-a6869820e3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9753ed17-c2db-4b26-a764-613399274fdb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a53d2cd-436c-437f-bf9c-497231329e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e0cee4-295f-4118-ab9a-cb1db2121be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7387b6-df36-4816-a77e-0fdce906fdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6e6141-cf20-49a8-ab5d-e930ec4ef0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c901a702-52ba-44d2-a7f7-08d80c363fe3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dd838d-48c6-41b3-aaa4-d46fe5aa8484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa128e63-6360-42cb-a912-b125fa7e8507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a02713-4b7c-45f2-b1a7-6a9f2c0bdcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a80e04b-509f-4047-8b2e-d203c0285977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2b7683-6a4a-496d-a4cc-a214ba2f9cb9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c61105-0b5d-4ed8-a6ea-2dd18f333d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03022c7-b8e4-4aa1-9188-8f251f09559c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fde745d-0057-4cb5-aa9d-9ccb79d407a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1785773-df65-4c73-a597-e1222dc50d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06641de-841e-44d8-b550-7d375719a43b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81db1690-3730-4f36-90c6-6f0c2071be0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ad588848-8471-4c55-ab0f-2fb20220088c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb9e337-1f45-49d9-95e1-3ac2f06f4f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "306cea1a-5b47-4354-a561-4624730bdf29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94b0a086-8870-49fd-be3b-0016a2a252b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dea3a36a-1192-4c71-a066-520c1fd706ec",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcedc5e-710d-4a1d-aa5c-94cbab8cf077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46dbb4e6-bffd-4e4c-80a6-59aa287dd3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de8fe42-bbd9-4464-881e-83dcbe5d8e82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac5c1d3f-26cd-4f77-9e9d-bbda18468794"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "640f4c88-ee41-4f29-80b8-544972199aac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10fd81f8-5a7d-4b7b-8368-dc4e11c41695"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f083b238-8664-4102-8837-df558854f579",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82b1c26a-66f1-49ef-b47e-3b8eeaae3090"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d5b9a6e-0ce2-45f4-a155-b476c2ee0e8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a81f428e-4c8f-45b1-b597-723d2b1ca312"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d0bd4cf-6741-435c-bd11-148873683005",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ffc4929-4445-4e7f-93f7-70e3c26effde"
                }
              }
            ]
          },
          {
            "id": "9f2639c4-3f65-4c5a-9023-4c00fc4a18aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8dae6ad2-96a6-4dcb-8a79-3be41f6bfd93",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dda2ef4a-97d4-48d5-9f0b-ad0ee5744797",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4510f2-34e2-4405-9189-c333b4d40109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dcbfd156-6863-487c-af90-ecb3bfb3954c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e2148-db39-47f2-9723-c0c355c26c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836055af-b7d6-485e-a494-09878debeedb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f60edb81-e6e1-4023-ae59-1e3e9bfffd83",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd8084a5-e758-4011-a5b7-c071626d2f5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e4274d1-366c-46c3-bdf1-dccd8c984230"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10cadfeb-940b-4ba5-9d45-6cd4fe958e23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ac5d438-a4d7-4713-8a87-3e30d877cd13"
                    }
                  }
                ]
              },
              {
                "id": "df813af2-5ebe-436f-9e26-c714f8c97a97",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c37f6a7e-e30d-44e9-8278-d5526a22f7bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ce33e79-532d-40df-bf67-63b27cb7a25a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39a3924b-6a26-469d-ba40-06fd9adfcab9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a84c8464-df71-4a24-b2ba-8f976f7a336f"
                    }
                  }
                ]
              },
              {
                "id": "63347981-189e-48ba-992b-0cf9a987d0e1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0058a274-b08f-4502-8c7a-dc04dbdb8be9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26f9d127-7a8c-4a2c-ba43-a49ad6c86aa4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad403676-6ea0-4c5c-b7a8-414db81ca191",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd022aab-4853-4014-81da-e013b0ccf346"
                    }
                  }
                ]
              },
              {
                "id": "5f2a2fe2-807e-46aa-af25-4a2f9e885e65",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6a7c3eb-05fb-49e5-b0fb-e3cfe37cb980",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf2b32cd-eee3-4ee9-bdc8-d53b0bd1ad36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f581ee6-aa0a-4d88-a99a-d001636cc80c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "de3609d9-d6e3-41fe-9489-cd8cb2ab5c13"
                    }
                  }
                ]
              },
              {
                "id": "9ad2ded6-0705-4512-affa-fbab949e9bae",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91810948-8b26-495c-8900-fba52c9b2087",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca772c42-95a2-4fc6-a1d2-9a2879affba5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b97faba9-8f1a-4b27-95bb-bcd46fcf05a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f1ef6d1f-d0a6-43d2-9a3f-1ca5aa6255bd"
                    }
                  }
                ]
              },
              {
                "id": "df62549f-19ee-47e6-a057-aeced910e222",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ea46551-384b-4ded-8ef0-9b1f7f29606e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f22d34c9-435f-42bc-a511-19929880fa2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf478636-cc24-47b9-9eb3-07ee7e6fa849",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27e3f071-161b-4a8d-8d56-510ff59635db"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45123e30-0ba7-46e2-b943-4ffc6ee0107e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "685b874e-751d-42e4-8c8f-0befd0014020"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "714f29ba-52cd-4b30-ae0e-9947839e85ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d67cd2a-fad8-4200-9ee7-a5f24a0ccce8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cd1e2c1-b83b-499d-98bf-6698e88bfc60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "700716da-44a7-4b63-9d5e-70bd9b2f9420"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed89ced1-14b5-47f2-b0e9-e8385b17b94a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "462e7b84-627f-4d97-bc91-6d6bc50a724a"
            }
          }
        ]
      },
      {
        "id": "5f75e56f-fbf1-4004-8559-e762586bf7c4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "87a5292c-2e05-46c1-b6c9-ff481baa2c70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54fa77b2-5af8-421a-ac1f-f04fc170b3a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c65501fc-52cf-440a-b0dd-7cb6fd352c8a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c950953-d38e-401a-9fec-7cd06961b11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb9e183-0f8f-4f78-b9e4-5ac8b5dbdfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ec391f-cfcf-42ff-b7fa-94ea9e5a474e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f3905d-23aa-4e19-8c08-474f6adaf917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8d05d7-bb8a-427a-a111-5d28bd9980fc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed1b512-b1f5-4865-81d2-6966b6871040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9e270a-17ac-4a6e-9766-b5514c05e3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458e561e-d999-4928-a000-eca0a9da482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7044f33c-71c8-4955-9bf8-6c8ff2e477e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467328b3-1c6e-44af-8029-651ab8b55026",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1590393-ef34-4c1d-afea-74321eaa169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa03b44-535f-4fc1-bf30-4f2e8d958d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafb695b-1e2d-432d-949d-8e9043d54a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4805cd69-8f3b-4b1c-91ac-5ffcb5140b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c45ad35-69af-4695-ad44-a7e6a016b062",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b33a24-fcf0-4b1d-bc54-780ab74e5c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9123ee10-f558-4df3-8d8d-33823acbd1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4439a9-0118-45f3-aa66-9a4ddd162b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7a54cf-5f0a-41e3-823e-84cb7d8cd19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385c693e-c593-461c-9ae2-08352b65ab86",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f06d06-8ee6-4091-af1a-c3b9e90c8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09966952-9b1c-46e1-8044-495a862d3683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a455f232-825b-4de9-9a83-e11235da464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f95ae83d-a503-45d7-aae1-01aed7bc172b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee96cca5-b907-4607-ae5c-a94181e021e2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750d2c16-0987-4676-aa42-9e2e4000561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929f90bb-6678-4191-9a14-c473bc81f858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d688d3b-19c0-4366-a083-1aae762ef3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "948eef62-59cf-4ad1-865b-35c8fbe84ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25607933-2eba-41a1-b057-973f5a833639",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c0f99b-8d39-4846-9af8-8b5432070ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1980b997-0bd6-4a3c-8e81-8d792798272e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e54e3f4-1d81-4748-ac98-ab1bd53b3b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8117770f-879a-4b6d-9539-92266f6f4dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b73ea2-28a2-4d0e-a722-2535426b0dba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0b9857-18a3-4373-869e-90ebb3c2f5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4411fad8-7afd-478c-ae1a-272bd12cb004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c5bdf1-aeac-4427-9508-e604685ebe63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d63520-4119-452d-9ab4-bf56a20ea7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09756304-776e-4a3d-9c81-a659bef27873",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be35dbe-454b-4a91-8ae2-a53aa7cc18fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17ae2e9-3abf-468e-90ec-db3ce4efd3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7c422f-05fb-4f56-a584-d8e44cc85850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e209f82e-5004-408f-bdbb-fa9df0cda6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c018ad-b4ad-4100-a28a-b04072014099",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef7c9d-48d2-4e6c-b9d0-060fea8cc161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ad5929-469e-46ab-af7e-f9690a726605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6f42cb-d23a-4bf3-ae56-abad4da596b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb59a7b-7cf6-4607-8dac-1d6f405aad0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a749a5-db94-486e-85c4-aad1c276c347",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9935a9e-7840-407d-b297-e301536e8d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd45183a-ecb8-4987-ba1b-505290f583ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136dda3a-2058-4b98-a3f7-a1b38b1ae349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b13e64-09a8-48f2-ac65-eb227237f034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c253cf9f-4069-430a-9420-36514af3ad6c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90abe7cb-8a17-4ab6-8a3f-d86435452d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c407bae1-7e83-4ad7-a66e-7fe3d9667121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33878fc-36c6-4cfc-b0f9-70c1358da5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c0f9be-d11f-4427-87cd-2f9eeb8e0bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61034547-d3f1-47d1-a45c-a657c7d3df1a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cb178e-e823-4829-9a5c-a39cbeef5473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bf7220-984c-4748-972f-fc458e57595b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64100da0-5100-44e1-831b-cc243dac27cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42fc3eaf-aa39-41e3-884b-5b5143db047c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dc8d85-2b48-44c5-9f30-dca3a20ffd09",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd2755d-cec5-40b8-b6cd-4b92f7712087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8444f521-f696-45d7-ba4a-70c67208497c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0914210a-ae49-4cd4-9c48-3d5165af8d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b746643b-98a6-430e-b958-d74a8014c3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927f8902-592b-4fd7-ae7b-5613bfa0da6d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8861fa-61a9-48b8-9cdb-fd5900ad37f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f7ccb3-f306-4a59-ab06-77956d60562f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b356b7-88ff-47e9-9ca4-597864e3539a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "87a0a4c2-dfd9-47f3-8473-4352200697f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741ab592-89ac-4b43-b3f7-6ad553fd275e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a565dc41-bb17-49f0-a766-53436c750146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c2f2cf-8239-4d24-a1c9-0f6b3bdbac19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041a1f36-c6f8-4676-90b3-4ea7720edb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0947ea-5bd1-4074-a9a5-98932679d9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0494a4d-8ac4-43d9-814a-eaf5a98bd337",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b31221c-89af-4445-a252-0103b747c3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e7335e-011a-430a-9f06-cfb1364af566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfdfd4d-40a1-4ee6-bbb6-5237ec7d35da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "93cb2055-515e-4870-8957-07655e926991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd9bd7b-6b13-4c2c-8ce2-2a7e9fde8333",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba00d56-8144-4045-9afe-bac99b964460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e935447-310e-4e34-9579-ff3b7d024c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00962f33-5f4b-49a6-85b7-3a0d6576b49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9efca9ad-8f2b-4e27-a493-4bf47df597df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cea8a63-0860-414a-b473-5d40816e0f2b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bcea0a-e3fa-4e1a-9fe2-989f03a68e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee8cc83-1c13-439b-b6b3-1d53fa9868ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd0f900-c70f-4d66-b594-221ca310b50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc10e01a-b950-4eac-a441-738a0455c312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c39babc-481e-4432-b1b1-5ca5a64760f6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce220324-2235-4411-b9de-013fab78c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e605aa6a-52bd-49cd-b690-97f693e256dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fcab24-1950-48e4-b751-b8ffa7e2a43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0484d7d1-679a-4a6d-99db-d2137ce4216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb84fcd7-6a34-42bc-b30c-86b00b554b00",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168368ad-20a5-451a-a8fa-298cf95ab3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d192ce-48eb-4351-8459-f21a258b51bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c85517-b831-4bb5-84eb-93bb31ea0520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7c558f-4f27-4caa-a56f-e9a2af28d0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950d2c78-2c73-4e4c-864c-899bf83dd3a1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df817cce-d78e-42b9-8c5a-65f34129b26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad9bf87-bf53-4e44-9039-edefa4e05f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e872bc9-346a-4514-b5d6-a1a464367894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1b665b-8cd3-46b3-97f0-ca15b6a90475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac35a1b-2b15-42bc-918d-ffa2bbca6ff1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ab68c8-78ad-4841-852f-5ad330f90ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec08d2f-c614-4b70-aaac-ba5a0490dc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36621434-e1f2-446c-bab7-b96d7f95fba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3c95db-eceb-4cf3-9199-5bd575e84d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61385db-ce19-40e6-a562-224f5b00c2ec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f737e10e-87fa-45cc-9342-b046dafe5ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a851317-7ffb-40ef-ac98-2a161d216fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab4f797-4072-4128-b99f-07de3c4d666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c54e5ff-834c-402e-9416-ff5c9b6edb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb42021-0b78-4dbd-b4f5-c0a44f3a2314",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98187d91-6d55-4a31-b8d9-6ace4bd32b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799d0106-19ab-48bb-9547-3f379b18a4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f86bf25-84f7-4e71-9672-ebf73862785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4a6df5-5acc-4a69-9443-b744620ccfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13203b0d-3e0a-4c7e-8baf-34aca40e3820",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e95ca3-4979-4519-a25a-8f6fa8f42d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6246f4f0-4d4b-483c-be8c-562e8fa7af92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea944a4-7446-4d72-a278-3ed0d4ab924e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d68f2f1-636a-4c50-86d9-949cd8977429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c48e40-54ed-408b-a2b2-1e1bbb5733e4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaadfb1-b34a-45fe-aa8a-61073c554e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfec4e26-3852-4d6c-9d56-d918deb107d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe360ea4-7c94-49eb-af3d-ce860968673c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70af4493-0a23-47d6-ba9e-eb23d9236cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e9bbcf-c7bb-409c-bea2-f891cf631d4a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ba07b9-8694-47a3-bef9-42645b07e20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee416a9-1803-4653-934e-64884b212456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2149d613-f987-4dba-a88d-95f6ef1dd19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c39d8f3-26b9-498f-9629-6b55cca6aded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3872d85b-a71b-4be4-b41b-c7bd5e75ca7f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a57382-b01b-458a-ab6f-fed80e7b6e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5b7f0b-32b3-42e7-8488-01bc045db844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4b2a20-d767-423a-ba4d-689798dedff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc2261b-fb36-4965-afa1-59bfb87a62e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7574b48e-5ed4-4956-b270-7115f394694e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9676403e-06e1-4ef1-9508-5f179531dff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb957839-9c2c-462a-8240-45b475528d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5279b9b3-192f-464f-a82f-bc2e94cc75ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7880f5ab-cb4a-4410-9dee-2eca9851234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c118a7ff-4c24-4ef5-a02f-290ab72a081f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d042d8e-b397-40ff-bd95-b6ac5c2f720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2840e245-9530-4f53-bdda-0e1ee33624fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5433f0a2-1b41-4819-a3fb-f85adc15b890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed09c5f7-85d5-4d11-b21b-87f3acac9f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a3f27e-fd6d-4bf7-acfc-a4ab6af4b9e8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568f8283-404f-4d77-a828-71f7475170f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641f0b0d-ef26-4b79-bc84-e93c3072d935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c178937f-5d87-409e-9294-7bbe222bc609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bcc476-c7c6-4adc-a391-1dc8596c9826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2526b666-5cad-4225-a356-91eb571fa38a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ccc4e9-d92f-4d65-b684-258a2a38fa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88bf8f6-162b-4e4f-a4c4-0837b965638a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f541aac3-a21a-467a-90c5-3490df15689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "026d3a91-d22f-4d71-8fba-ef64595807f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a9d479-423d-4844-9c3d-b725d69fd7b9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07fb78b-271e-49ab-805b-b37c35445a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00253981-8c79-4bc0-83a4-a19b7e093d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a129b761-e40f-46a0-ac5a-8d1fc7bce530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71e88e7-1e27-4c9c-8888-9433809adf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80846485-35fa-4af3-b3b8-c5542538a92e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29c2490-ae8a-45c6-9525-8e28ffc9411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee232786-b8c0-4b64-9324-ad089bdb8901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bcf6f1-e1d6-4fac-a7f9-26c7042c0ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f060bf-ad3f-4ee2-918b-2649663b7f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccac1cb-9366-41a3-9923-12c50d04f1f6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7607172-d4a7-4342-b746-6a9e68115ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da917aeb-aa3d-4378-a3c9-d81de3e94461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d880b974-6f19-4aa4-9c4c-84ff4fb9e0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72a12d8-52ee-4e2b-821f-d36f96ddcb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091135a-7a96-4a63-af04-b1fef3dcf77c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216fc8f9-297c-47b2-9fca-405c7bed6f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd451ee-aa3a-4ab6-9bc7-370e3db7c522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962bbf24-9aae-4177-807a-b15efeb84df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d126321-a215-45b4-8e8c-e72589b8a429"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "647a7731-5f9c-4c4e-b62d-30f355e05c06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be68e9d4-1780-4408-8c96-6278b1ef42a5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d692c53-e60d-46fd-9517-2add55d70abd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fcbad1-9de8-4dd2-a7a5-8b0525a4113e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3223532e-2dae-4247-b6e9-909f1b6108b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22779897-f792-4376-a429-300d92a10563"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50db00c9-59ba-403b-8b49-27e26ce0a563",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d3b685d-f291-4abf-a17f-650e1ced6f52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "273164f3-6465-4e5a-9818-724c144b073c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e048be0-68fd-4d1d-be19-1536b057ba55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7edbd6e7-d16d-4cb2-9101-bdbb1d5dfd28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c521b10e-abca-4a69-b0c2-94c232bfdf3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33397328-9f40-405a-bb39-0c4e5a443722",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9f9107a-c908-49d3-b16d-425f424d72c4"
            }
          }
        ]
      },
      {
        "id": "aa190c66-a589-4ae7-9022-ac2beba83ef8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ecaaa493-2484-4baf-9dd1-6da3abd7869a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c117056-1654-4971-805b-51cfa977097f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01c71217-23d9-4063-b840-1ff33af8a877",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd67d79-b1ee-4cda-a633-7280e3ff11ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402021ed-e571-4f26-8bb4-078cfa7574b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d449a0e5-3af5-4fb2-88ab-006bd0ffd5de",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a0222d-485e-47e3-8b0d-0f8c2ad820c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b928b6-6f62-448e-8118-f5cc2a3773b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03add7d0-d530-4a17-bfd4-04a68cc5df6c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6625c113-75d9-4937-9aca-fdc029bda8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dfcae3-a297-4b46-b563-169b77bcaece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7206da22-7076-47f2-b729-c3895ff7beee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233a8278-7989-4a6f-bb3e-b37c40276920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea0112d-f010-4a4e-9a7f-173e0d75e1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86815c97-82f3-4d45-aced-916d1254ce60",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f5384d-c3ff-4690-bf59-c2e48f0710f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920d2182-9689-4e20-8002-2a1ec2106433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28164d4c-4ba4-4499-888e-929a938060c0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47818632-ea94-4e5d-8c62-e54db88e8c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff94711-b082-46a0-ade4-2921dbfe5f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2a57df-aabd-4bfb-8fc1-4dcd98d5fd8c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c46fe0-5810-4355-b50c-a4b5919cb525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc39fc2-d5c4-452c-9c8d-00cde1abe2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5d2b87-85fc-48db-b2f3-fe91f8d48480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515c5419-3d07-455b-af2b-7d011d4961e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88abbd90-da91-4f79-b376-4bb0ee94fe92",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4693d0b9-349c-4e76-bece-97532d7f38f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4da80e8-dba7-4411-99c0-bcef03878163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebc0dc1-4b40-40b5-9f5d-968037fe7b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d900849a-38ad-41c6-81aa-cce20079208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7e306a-814b-49cd-b927-44249a62d4a6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee593edf-f19c-4e85-afaf-b03b0b18983a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef1c836-ad81-42b4-94a4-e0b815457bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef283b2-c530-4163-b8e0-9a4ab02ed75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7216a8-32e5-4750-9582-2b46a8c02607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04ad33f-b61c-42a5-922a-f6831c6d3394",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5254cf44-9add-4e64-af9f-a49a2bfd0a37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cf1bb3-bfbf-40f8-91f4-15cea468e7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833ef6e4-5ba7-40d4-9c54-57ef9757b53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4625a18e-874c-4020-813d-ad1d429361bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4e178f-b3d6-4451-b4a6-aa62fdc1a1bb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db2060c-3341-4c5c-bf7d-c27e5c5bb47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5322a749-520a-4fe8-b73e-52d29a1e455f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521a70f6-c90b-45de-9d8c-a6655ed12fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b81082-8a95-4ba1-be1b-b73fd64d7fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc9e673-4073-49b6-bf2f-f579e7313485",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c62ce7c-a0b0-4973-a05e-bf420820cb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d28152-22bd-452a-bad2-c1634574fcda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b050ceb1-17fe-4565-b77b-271bdf98dbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69eaf4fa-badb-48cb-b778-23035d49095f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1bfd86-1c0a-4102-b286-61334facbfe5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f860227f-8a28-4741-86b9-e123126bb613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb43b25-0a09-483c-be39-d2ba7d3cc30e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fa5c75-2b3a-43ac-9502-c3505979bc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d12217e-065a-44d0-88c4-065b463d358e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c42595-84b8-412b-9c2e-1d734e2c83ea",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4716c3-f9db-47f5-9153-0510adf680ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9086e48b-d668-4a96-8a53-5ec183444f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f933d0-c26b-44a1-8cb0-3e602f2a532a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090bcf04-6c68-4686-9032-911fa6d4e754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd8f64a-53a4-4756-a3cf-0645b443986f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5c9c17-d973-435b-858b-67f3236e0a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fbb9ca-dab7-456e-b04c-527b57f27bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7428a6-e188-4713-9ed5-a586cf00710d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288545c2-8763-4f11-ad34-eb183141151d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4d6e70-47e9-4255-8f18-a6b4c3ee0eca",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab767be3-3a3c-4635-9fc2-8e6e7e680ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "069ca274-3b9e-4564-a002-62deb3deae3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81deaea-23e3-4615-ab02-dca34f138929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f85eee3-9ca2-48ab-bbe9-fbd4a6365b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece39b8b-97e2-4d90-a1ca-8cf0ba3f0a1a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a4cd23-fbdf-4ea2-b621-15a964d8589f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e32d27-99eb-4139-9346-cd03b4f9d0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7354ac7b-fa6b-4f0c-b642-e6cd4f282a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35819d3b-8829-470b-b88c-4d3af64b6a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2898da-64c0-4639-9d13-8a248d47d819",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3426c2-573d-40ca-8990-9c5de53e9d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d1ea7d-4489-4abc-beef-085df4c592d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9ed456-0090-4343-a32c-5b4f0e77af29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733204c2-197d-4bb0-806f-1553873412bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60a483f-ecf0-4487-ba24-9b416e33260e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced966b8-01d9-4a3a-a21b-e9cb8cedb02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2fb1e3-1748-481a-a302-9a83b9de6e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc64be39-5196-4db2-aa70-54be4e64b8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a2e7d5-9713-4c31-a2d3-d32dace32806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c86f8fd-a25d-4c96-b04f-297e40af20d8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33097720-dcc3-4a5e-a415-eb3078498140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f466cf60-2ecc-47b8-9904-b09c21f1ec9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ef673c-b0e5-4969-96b4-ef6a2d056a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91400a45-7d54-4591-83af-1574f77af73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e623ddc9-e043-4a18-a633-07f580690100",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e41bef-29fb-424e-b852-fe212e456725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee09fbab-1fc6-4dc5-97dd-70d04cf47ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ae0b8e-ba61-49e0-8193-5cc27251b8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46954be4-7ab8-4e7d-8b93-854f625869ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349e843b-e452-42c8-a904-0d3828693abf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7510e8-6256-4429-9f3f-c2b2537859a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaf8cd4-fd3a-4ef3-ab71-5effcb6f0d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2157149a-8215-4be8-a0d0-ef4d0c87e82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d22f42-cb49-4629-95dd-40cfcc854bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d3b697-b227-46dc-a612-14fb3e12328c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d685469b-1548-4752-9268-d4133ce6d738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd181dd9-ce77-44cf-b80c-3026a2bc2be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a645d5f7-ce87-448c-a3d8-b327dbf6169a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd1d252-bca9-420b-bdd4-2c237e776853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc2078b-b5bd-4cbb-ac60-0e606b8d792d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de956115-4559-43c0-b697-b215cabb34d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d7c31d-02f6-4f73-8e82-71fca2acb973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4038728c-7d61-43d7-8b2a-2452a9ea5a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a4d855-6b07-4f64-b935-ae3d41493647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff8a11c-419f-494f-9fd8-2d569232c144",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40beb8b-cd5e-4dfc-b90d-1d98cc440542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c75d64b-8348-4d71-8906-58715c3da2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f3fb76-b2a6-4466-bb8c-550d2d2dee64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470496d1-830e-4617-9be0-8606f23a7d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fc8a5b-579c-4493-911b-250b7df78bb1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ea88e-f424-4738-9812-5e5007e3aeb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77475f2b-6181-4a41-a5a7-1d9a393cf75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40f44dc-1892-48df-afba-200b96d5897b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a923796-5d75-4003-a878-e84fc8caded1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c10f81d-68b3-4373-899c-e9b682509f99",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f2dde9-a096-442d-8e4f-1c06010120a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f858ce27-205a-4893-9aca-cdb34d25c9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c00d11a-e6e0-4f76-91ad-0eac2a6dfabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eaab6e2-cfc9-4085-9589-55c26e929d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b28987d-5773-4759-8d74-622e0288a12d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467b98d1-95f4-4d54-b996-8bc6f179cf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9ca982-9f72-4b9c-bfb0-c374c75a4aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69a63f1-8e48-4354-b124-92b2ca53b130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d73a16-4861-43e9-812d-6ac617262a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52417ce3-d572-401b-9f86-665a6de20646",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efff7551-ff8c-4f86-9182-2e253cf5bb85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e620ebd6-c4e2-4ccf-b4ae-d63e8d4b11ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e00023a-1f97-4352-8c66-ccf4d50e2ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d9b1fc-f406-4892-903c-7f8e709f3bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9962f06a-2279-4430-86ce-6d31e723a51d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6644f84a-9b7a-4465-9955-64fbdeabef0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91002812-ab73-469c-a1d0-fa82ab5815b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a645c5-e9b8-4379-9bfa-bcbd5e6cf057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cde56c-1376-4041-a4dd-b7551aaa196a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07319c3-b673-450a-82f7-ee08e9d4dd78",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54a971c-6741-4a74-9062-03f8a9b948b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2cd8adc-46ad-45be-a152-195f86f223e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cc9b26-8671-440b-a42c-a51b0c9a1461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f2ea64-dc25-4da9-8efb-5099ca4c7dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd9e24f-2a7a-470d-b42a-54d24e155c49",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a207227-257f-4352-9ee8-ffc0cb59d6cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7fd34c3-e245-4a4d-a00e-5e289db081fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0427f60-9eb7-4ccd-8e21-4b9de609c63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f50ab9-3ed5-4f08-b543-8d9f74c34ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce28cdb-ccab-4a6b-a65c-96b7b5d165e2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028636c2-2d60-4de1-91e8-5c7bab47ba9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b997cdff-0cb5-41fa-a340-0b4b0fb60d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94062fa-37e1-4657-b4cd-3dc92e9a1f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e07b5b0-48bc-40bb-937d-d9450db69a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ac1889-fd0f-436c-be2e-c7c492e8e420",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c9f9ba-6d70-4543-b422-053dae429fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff1544a-a34e-47db-9d2c-263e0fb7ad76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac66c503-dfbf-4648-bf4e-09e11cfdd939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fa8563-3226-4081-a0d9-b4671f3cf870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbee536b-d05e-4329-a84a-9b2298c86867",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b103a1-c170-46c2-9815-1c523627ba58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f0f898-f214-4825-8b67-7809acfcc9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31311bc3-26f1-4188-8cb5-01e72cdc7682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631f9b9b-0c2d-47fa-9718-74c1a27e048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbb08cd-62a2-42cc-8d0c-70b10b23cbf5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6bde5c-2987-42ae-acf9-48f2709d0701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4103b5-2220-4c36-9a0b-9c0cee9b25a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168a0efc-c8ee-4eea-88ae-2b63dddf4839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1d58f5-0758-432d-b896-f3654f2143e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3cf1bc-49bf-4cbf-b3f1-ff1b12f887be",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2a9b59-7498-41be-a5d9-c561172512bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9b7362-dd76-41c9-9d43-a9ac04fb00fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ca7cba-1272-40d4-8957-52bdb0c2b5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78cee42a-842e-4bed-b102-c1488b2782f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee86ad4-b220-42f5-8a71-3fafca53c421",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f32db7b-11da-4c95-a70c-829175c45291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee74f09-1ff3-435a-9e24-60d935fc2e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0dcba6-ac95-4674-aa22-41f4318b1f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce4b90d-9979-4ae6-aa04-7586adbff08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc948716-9408-4abe-8a35-49277e0335c9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128189fb-22c1-4021-b047-e4dc44d1b4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0e22a3-8dff-419a-8762-f2906c33ee1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9638a98-2a15-4ba8-9aa3-fca190c01cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89a42c3-0153-4a1b-b145-352dda3182a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa7cf90-1daf-400b-8ef9-492a2b624775",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05023a2d-a55e-4f34-8b5f-d035ebb55364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2d17fe-71d3-4ba3-a566-33c017eb22f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0311e3ed-63bf-407b-8b88-825668c96cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12a3790-8b98-4b62-89a3-f69acfb0dd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a20bb3-b59d-4c8a-a008-93355212506b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af06871-8350-4c9c-9fe1-76ed8dbbccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720e011f-6873-4ba7-94b0-53e164614f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8d17de-3502-4947-9c2b-4d5c26919703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa95be6-26e0-49ae-bd83-9c25031e6caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e494115-1992-483f-bd08-33c4cadd01e6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85ba9c2-caca-4381-9a8f-58d7d15bff84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51507536-c568-4a9d-a0ff-e0aa136c1c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38297dcb-af96-4fab-b754-a91e50859298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43c723b-623d-4fec-b14e-81ecddc02f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cfd59f-9697-4643-b6ff-4d3a1d64e2f4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379df819-b5fe-4d6c-8834-42f1a987068e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fad5826-3218-4044-a1df-b9551e164a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8297d5-c1be-4441-8d77-53336cb045cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12615ffe-6a58-4a06-b20f-8e36c430c990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cab19d-d09b-42c3-b077-dae3e7b701a4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af536fa-d013-4ebe-a3ea-1e193e86df2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819e5a67-933c-405d-8ef2-38a07eec8cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c338fd93-9dbd-4fb9-b631-eb83beda362d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486df669-405d-45fe-aeeb-f0773c9eac36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c32525-e7d5-45cb-bf56-96dcb63d3b1f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b9ea3e-1f48-41e1-859a-6488cd53d99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5925a3e4-b50b-469b-ba8d-131650590758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8405e81-7c8e-4be4-aa18-c18aaf5e593b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7e3c80-8418-4c71-97d3-e313bf60b5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9b2855-9624-449d-8afe-01d7a011bd83",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb50e7d-eba7-4eef-a2ce-4c896344adc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a552cd-7357-42df-ab86-1d9ab4ee5d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35701c30-2756-4d3f-96fd-0bd6c7b81443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c4fe03-47c5-43af-b8d1-508d0d4c3a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09642a9-2fc0-4987-9a86-f7feefbdd234",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda2d867-e8d7-4ef5-aa7a-e7411ed33a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dace5bdf-e1b0-42f5-bcad-f132ea5c5336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c862d3-f8b0-4619-a2fb-d42a592473ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e373ab-a220-4562-a935-40b5bba14881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7e2102-411b-4722-af62-6e071e54aed2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82bcaa2-2f4b-4bf0-ac7a-823d5d3d8b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ed8ce3-1667-42a9-aaec-c427059cdfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ad1e0d-bf00-453a-a26b-20776de7db8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0559a98f-49e3-4416-b737-304288ce3c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61c5502-aa79-456d-8210-24ec544aec06",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83dba30-95c4-4918-b50a-fe1e256909c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654dabb0-0e5c-4889-a047-be42cf2f560a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374a2d27-8499-42ac-be88-484e2c89aa2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157ede89-6acb-4703-8604-ad868e1e2a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5ffeb8-788c-4cb6-a461-970e56567cf4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cfb546-b6df-4125-bbe1-9706fec60198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c50d5e-146d-47f9-875c-0fab234d019c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c749a8f8-40b2-45e2-86f9-6e8cfd3a5692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8804686-bc83-4cb3-8105-b498dc719495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16178a36-e761-4f9d-95a0-11abb6473b4a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1591c0d-70c8-481f-b562-37310e7c2f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47bcfaf-b199-4753-8d48-484b6549b691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727e9e9a-0264-4a78-b611-37d46c040551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21952695-f70e-4793-8613-408b36e9f465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1d0581-0f05-402f-b245-8e4d93f91225",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019f3635-53fa-437f-b418-38a252e1a9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051ee3b3-91f1-4971-bc35-13b878d94299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2de2672-e6c0-4dbc-bea0-1e9627b2a379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae49bcc-7a5d-4661-8951-9e5e1d625274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dbb763-92ce-4496-84d3-52fd28a19a5e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dc3e78-067c-403c-a85d-58de02209d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78357126-7671-443c-b5d6-6ecfaa210457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420048b5-f50d-4c65-8293-c96d7e34e9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a47f264-ec45-49b4-8428-48f4c9dc6ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fdb05b-e302-4c3d-b84e-f4352c067dde",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55357911-35f2-442f-aa4a-3505189035e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f706d67b-71e4-4437-8ad4-13e5c7a11238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15366a73-5342-46be-9b77-eac941a0b2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2552581e-2ad0-471e-84ac-5d338c548f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43d60ad-2e3a-4710-9b27-d77d18b4c92c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7bafd4-e441-4a25-8aef-33e176ae9def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3500a6-5942-4df2-b997-561c69f883a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e8123e-6a9f-47a2-a0d2-f84ef0ce026f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1da7012-1234-4837-a094-3631a729bb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71be3c8-991d-4ed5-9372-624ae799b5eb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980eafa0-084c-48da-9f12-3dea28303852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82173241-fa86-49ff-9aa6-e1099bc9eb48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11133446-0e7d-425c-beea-90d470039faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa10482-ada2-446c-9961-d54b93ada54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ba6b78-f846-4542-a28a-4b76027c9cd7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ef656d-9f5e-43c9-a620-96c84b960092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e60cb7a-c53a-41f4-8748-bf78bbc42b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572297d9-a250-4264-933d-39deff038219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6237211-5991-4ad7-a5a6-d6dcee48fc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0131d14c-912f-4b71-924c-98844dbce839",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc743cea-c1a6-48c0-b920-c735988fa99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523d4129-d975-4bda-bf6f-f7413b930181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891ebf02-a58e-4a00-885d-e6b27676aaf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379f8ecd-7095-4462-bb1e-a33d7561ce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53c3280-6f15-4b81-bfbc-604fd3c562a1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c53856-c386-4150-ae9d-d8a9ba4c3e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58996c9-98eb-4ef8-9504-41bd40a1c5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6362fdf2-26fe-431a-8271-8984c9d26b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f0ce5d-754b-45b9-9af8-af4ecc729c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695fc4c5-389a-4cf5-b1bb-23dbab6d0d9c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a326f77a-dbb7-4bba-871e-e12c03260175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd8c1d7-2b60-4510-8f29-ca8a62aa0a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7695a29a-f29f-41ff-b4e7-3e5f4442098e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9770f5d4-af6b-4a2a-9165-ced08034a716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d4a907-a6e2-47d0-9306-7cd817083943",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af0bd51-0cb7-462d-a1c3-a222d5770690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51861540-76b1-4b3e-b18b-a47ac99775b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d29233-fb3a-43ef-85ce-ec73f44be091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9061727-a214-4890-9541-041ed7bf4033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e236024-6a47-4450-aa3e-3547c44596c4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b59d621-2431-48d1-854d-b97dee04d83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7973792-f98b-40e0-b63d-2ca84cfee9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2e288c-4653-48db-a588-c44adbb31088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d29582-0ac7-42bf-bf71-eb6306ded89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce19e9c-4d21-4d70-b0c4-a72544da2073",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16e728a-dc21-4641-91eb-9ef30284c9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b29560-4f64-4879-9a2f-0c1ea13ad3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c4eb9e-c4c6-42c4-b635-9ae5ae3ab807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa46a45-f6f8-4c8c-93a9-754c5301925e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbe5a89-0ec4-46ce-b243-69456ab4fe40",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3c4458-cfa8-4b86-87f7-91c74443fa54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9a399b-4151-4b7d-8389-53d8ec190591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de01d26-15e1-4b04-9dbd-9e404130506c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206e3393-9112-483d-86e5-6ff942595d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001dc678-7113-472a-80d7-ce92768b22e5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00205187-f4d2-4beb-a041-a2097b698fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce8efe3-409c-465a-b42a-5347fc8ea744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2619ed42-9a79-4606-8ac2-a3264118b258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c1ba88-1b57-4d02-a1cf-186a94156549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc7a9b6-3264-4db6-a19c-77855541e251",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1315a76b-cda9-4c1a-9c4c-eab729f15768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24428ddc-7773-4fa9-9c7e-dfc875cc803d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebde805-171a-4457-ac59-1098d3e69db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea535724-a48a-4065-a507-79627ceb7799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b4b256-1bbc-483d-8161-602b2c08731a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd40bf1-a9ec-4044-8217-8d82e285c8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b67d34-6ddd-41fc-91cf-bf594b593f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4f3f02-f4ee-4b21-9824-ae6f4f7b2154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392872c8-1848-485c-8860-46c1b9e6eac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f23f54-007d-4247-b014-67b3ca7d1f7a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fccd0c-d620-475e-8902-f76f6f9629d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd1380a-56c2-4c5c-bda8-a7f88fe69204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77c1458-476e-4f90-bd00-7e4fb973f8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d83378-968d-46a7-8b92-994d86c6fbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2a215b-d8b6-45a3-9ee0-38e6c92b1707",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398bcf12-cebc-4393-92b1-28a6465541d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf0cede0-b903-423a-9887-5d0b22b53143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58adf54-9cd1-42b6-bbae-69a0e9664b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6961e59c-25b0-4b74-a7fe-dada040f9a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97da9ae3-8e5a-4e68-af2d-6cb9c8cd1d44",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831b12e6-3f26-42a4-894b-3f8f0ef1c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b7e1d0-2966-44b5-839a-5dfe648857c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5522737b-e1e2-4283-bac5-35f6f3f2233b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd36d51-57f1-4924-9c00-cf96cfe9be2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e32596f-56ea-46b7-896f-57a5e745bae3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8ceb5a-43c1-40f7-b58c-d4a616399549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbe4dc6-1623-4684-b1cf-25a42b98fb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e01691-5a19-4419-a5a0-aff944367944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a6d87e-517e-402c-9a46-de17e75705b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d29aec6-307b-4580-a780-cc5fc4b59a16",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef087b4e-dd05-4514-8a0b-25bc2a400637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66805f46-4cbc-4173-b864-2a34fb8296bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e352a67-17aa-400d-ba48-3452e252e03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9826110-a9a6-4cf8-9325-4e69cec7864e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b468115-e9c6-4ba6-b309-a5d6e65450bc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3119988-9fb7-4719-aef5-8077fbc00352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdafe0c5-79ff-4aba-b045-5dfbeed6ec9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445242f3-7985-46be-be2a-5af8aaed3bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef195d1-6ee0-44c7-97fb-86ff76421262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f91c8c9-c2b0-4d2b-809c-0bc035b22984",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2d4b08-624f-4f70-a52c-696df57ffa7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88513e46-4aa0-4682-9285-0ac832734afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b515676f-6a0c-4a51-b9fc-4540e5b0ff6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fdb1ed-5722-4994-be56-97ae40f9ab0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4def5efd-7c61-43ef-9a36-0f6e3e35386c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024fbf77-2a5e-44ef-b415-cc03ace866be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4ca313-fb21-415f-a313-80da136dfe31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23521747-856d-4b39-9131-12ad25f85904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02d8f83-1100-4751-9b77-4e4e3b1c9ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8f74a4-9e95-4d62-9e31-ee45543ee31b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db58a293-932f-46e4-96f2-6d1b35f65af2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f100aae4-d63e-46ee-a295-bee8dffe8278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3131133-1fdf-4f83-b48a-9e2011dce106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88875a9a-a618-4990-80e2-5c5d00d02c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37121165-1c66-4659-81f9-b9a0f0dbb33a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571d92b2-08e2-458c-9739-f66b711f81eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c00a51-b267-4ec2-9642-10f053fcef45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cd950c-f360-42f1-97d7-a9443f45b446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff3da0c-117b-43f3-800e-092057c77d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fb8685-eadb-4e43-9d19-67d9b2f64c18",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0c4dea-f851-4553-94c0-3f4b245b9932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cd5eb8-968b-4f0e-82cf-fe6201439c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0c33ea-2866-4550-874f-58bbbe33009b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92876745-0b4b-42c5-a50b-d6450d544630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ad3318-b981-4f2c-b9d7-4a7e75a7d1d0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42474d0-1c91-41f6-a2d9-a6d35fc35078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420e8508-5564-4aee-bac6-adf9cd4a472d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05241076-ca35-462c-9a4f-d33d01affe40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1394b3-1d63-4950-92d2-1558b7698800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8c87a4-3d5d-4dab-8bc0-e1ac3b9f3bb3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c48a681-96d5-474c-a0c4-98cd30e1ef2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77da0b1-2c77-4859-ad52-5ca06ff45ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac3229d-32d8-4ef5-9ee1-4aff744fd573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f248a71-b31f-4c86-bae6-0ec20d581446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97af150b-8af0-4f00-b594-38cb45bee0cc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43452863-d5ce-44ae-8acd-efc94cdf3955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d81013f-d3f1-4b7b-916f-6de58c2980e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67f57ba-06e6-442b-a923-1e5e26fdc0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34f46bc-b7ae-4b12-9315-d6a25279cc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a6c0cb-c013-46c6-9d06-5950223313e5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1c11d3-fb15-47e2-bf20-b231d6aca380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90cc01c2-91ff-4ff3-9fa6-d1b90a9ecf11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4e84c4-6fab-4b4a-af24-15266dc312fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f26b41-a305-4821-a8b9-9cb2b4707aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948f095e-8516-44a5-bd14-8e23f5874dbe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492d218a-ede3-425a-b2fb-7b88b80fbc03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62b41c49-774f-4eaa-91d6-f8f793502b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b110a9-f1fc-41d1-b7e3-2a1da58ba555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97919be-ca0c-47c5-91c5-7960dd078e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f3653d-78d2-4da2-b498-76e54120cda4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64fcaa6-6e1d-451c-807d-be0b95b8170a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b2ba90-7a01-42d8-b97f-98cebb23db70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f712caee-63ef-41ee-b9a0-69a76101825a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d258b7cf-8498-44b8-ab05-f7cc240917dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5beed8-8763-4394-94ef-cdadbc39e8fd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc150ec-15f1-405e-a2f8-14666c928979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb3cf22-e790-4210-977b-2c641be5e6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35580c2-2421-4836-9f7e-cf6c3e2f7e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca55cf3-e3f0-4d29-a94c-1942052db35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3e2b22-6677-4cd4-9a7f-cc6838061c94",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947d1508-6a29-4882-90bc-642168e77614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6f3b80-f767-4799-a978-db129bc8fe19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c36277-90e2-4fd4-b09e-bf7396063807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41967a6-c57d-4f5c-8562-990cd4c83271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e3c201-e439-43d1-a1a7-d77ba3de3254",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2237db56-5455-46ee-accf-25105f6d6425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064a703e-5618-43d6-ad65-d8a944ae3e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997f573a-fa55-447d-9775-c3b98180642b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b284c65f-5802-4689-aede-cfe796ee3998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a371671b-cb6f-48a8-987e-3cff3f2c9d1f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05a5f76-5b49-4656-a305-6d8752d0651b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fa7afe-29b9-4190-9dbe-fb8d06ee8815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950d0255-488b-4580-9e01-c17f27e00802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94827943-53a4-4039-b3be-efb912a53499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02664256-2fcb-4fe7-a7b2-f0475ba19f21",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718d52f2-6a96-4626-b43f-88ddafeaea64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ee8a1e-2907-44c2-85e4-82b9f52dc1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc19cc09-69c2-40a0-90aa-f4fe240baac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb46729-6b51-4e59-9e50-1a3c145b8e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f46927-33aa-42b4-bcf8-1f77822601ef",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d066a20d-8619-46c4-992d-544b7150af7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfed99ae-2a9a-4704-bbfd-bd9574409f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6ad578-3f11-47bc-86d0-9cd9858a59dd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1715868-d13c-4681-807a-df082160d8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475cf68e-610c-4dbb-9b86-0ebaefa11953",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0699ee-6163-408d-88b8-1210d43af06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51de36fe-1a22-47d2-abc3-36c268cbaff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8fc3e8-ee2a-4047-8fa0-5f9bc57b99ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b418b108-0150-44b7-8839-f6c2f6b05abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316d6888-c5ac-4d1b-988f-73be6d4a275c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8248d1-aa16-40b7-a081-38c17c34bb42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1ddf72-87fb-44d4-aceb-5ef04fec7c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b4f1b7-ae42-4708-9b8a-adc81c5e226b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593a158c-9a6b-427e-bd5c-8af873434f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a24e8cb-a4ff-4587-9b05-d08330710c39",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516426a5-b2f8-4e7f-a88f-132a31095f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d796fc6d-f406-4969-afec-2454752f1157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0b3302-e41a-4ca2-b354-c946fab1ae8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fd5c51-7068-4a98-b308-2f467040d79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88914f9-1f9a-4c0d-b437-565a998192ae",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a43c88e-8ac8-4fbd-a672-cb463382ad37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e5251f2-5753-4c3e-ac0a-9cd95c514411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65af3129-7075-4f64-9e63-f357b19c892c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbb9e54-867f-4064-9b3d-c61a2380d6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228b1398-e9c0-4fcf-a07d-b9f47bf4fa16",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa45993-c91f-435b-925d-3b1116ab4e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4472b1-c400-4863-b464-df5eb9b831c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d554bb-be41-446a-a38f-603c316e3380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07100875-58cf-41bc-82d4-8113c3e12857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46955946-9617-430c-bc05-0dc8bfc02359",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5241fb1c-9680-4c50-bc3e-3921693e4ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6c3677-30f0-4ea6-836e-5d5b79d06ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608a44d6-1e23-456c-a4d8-f37cc9f18229",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac83a8d-3bb2-487b-be93-b49af9403388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7128ee-0df8-43c7-96af-e25ba94ef548",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd461c11-73d1-49ab-b922-8aa3502b6cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef80f50b-4ba9-450f-a8e8-224a44fa1c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8856bf99-46ad-44fe-a2e0-76e445498fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce2c0ff-bf1b-44aa-bdf9-60b503d3b591"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2ba0558-83f4-471c-bda2-8900343a3da8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "433ecfbe-baa3-48e6-a594-d853497e73af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e62c0f07-53bd-4aa1-8dcd-ba3cfe685fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3bbfc3f-ddbb-4059-954a-d053da27f043"
                    }
                  }
                ]
              },
              {
                "id": "6b1bc6b1-b730-4d25-8d58-14dc1d762b88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9285129-cb38-4062-98b2-9d6e552fe940",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4e2948-64f3-45cf-bac1-3062345f3787",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "51d8e3f2-0a93-400c-94a8-f8d47743ad1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b181158-3fc8-46ab-9976-450dbd1d2664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3de3f107-6d01-40a1-be09-6c721bf4ded9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8244b544-6c1c-4751-901a-4a91f5692757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dc81120-d6dd-4cb6-9657-2e88561cf035"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01048d15-e7f0-4399-85d5-f4d809917aac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "983d0cea-475b-44e2-9d7e-8c7a3756e4ba"
                    }
                  }
                ]
              },
              {
                "id": "846fc125-a1b3-4208-967f-1938855e07c6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1940d1c9-7c51-43b6-974a-c0cb43dd9139",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33be337-a3f1-4ee5-a2b9-259a6dfeee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c00a46ac-bcb5-448e-8bd5-cabe104d6d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63a29f-d40f-4974-a15f-e0f56e62ea1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78393008-72f0-4f07-a584-069555b56ff8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c1e221b-7a39-4403-b94c-ff9151883759",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5d74f52-a4e3-4a39-9c08-295b7c653c68",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46345538-cd8e-450a-8246-0a93d5d3b618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3bb7f803-8830-4ecf-afdc-3a1660407dff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c71cf2d-871b-44d4-a938-c4436f613f26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53f9f546-c22f-4206-934d-cf3ddbe1065a"
                    }
                  }
                ]
              },
              {
                "id": "c6f40ab7-51c3-4102-b2f2-4e956eec7bd7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2b463a1-2bac-4436-a7ae-75766df901fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec72e1a6-a3c2-4e03-a4bd-06c9c88c60ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef3ed7cf-ff7e-447b-a2e0-cea637a5d392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f705d7c-42d7-4016-8028-417c23e16e3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ee1bc75-d9af-4b03-b358-9f80a4130dfd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2c610df5-bc29-4b8f-bbf8-8056e0f0d108"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c4e9b14-932d-483c-959f-026c3c2cbe87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b09e3027-32e1-4ef3-937f-da845526d582"
            }
          }
        ]
      },
      {
        "id": "189cef87-877c-4293-81e6-827e2d4f24ae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aec3cf7b-d017-4199-965d-6bbf8ae94dd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11aad836-22b2-4bbe-b87c-86d51ea0a61d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2e481d3-0e43-4e82-8920-8647d5bcab12",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39b5d8f-4230-4adb-83f8-3121a4d342f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9b957ed3-eab5-4148-9e14-655ebf711f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fc5919-7e47-4805-a507-16a74f556436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bee606b6-a82d-46b5-a11a-5e5ef15a4c7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cbb3cab-5d33-4cc9-941b-c02084fc0745",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10355218-c41f-433d-9840-3e152a5124c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77b89102-f94c-4e3b-af8b-76db0fb511a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe89c78d-ef52-46a6-8510-c62a6c97be02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f4063f2-5700-44b0-8d79-7006778e48b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cfad6d4e-b0eb-412f-816a-09e53417a9cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd30181c-9c83-4d09-9f6d-12bb84510ed8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cfb0176-a44e-40f0-a903-9ed33c625d0d"
            }
          }
        ]
      },
      {
        "id": "ee8d9314-7ab3-4027-9a17-a8d99cd0b84e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fda810e3-4e0b-433e-8981-ba6af49142f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05f05f51-60fe-408c-8e64-482ceb81014d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f519f20b-f445-4fcc-b0bb-9d8a9d87686a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94ab38f-b838-4610-97f1-e57fb4702029",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "409d3e7d-8fa4-4a38-8758-45f18e59316f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7338314f-cb84-4413-ace9-8d1533764c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f58b660a-f7f6-4862-9b88-112b17d417cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6cd5b0a-3383-49ef-8c12-9936421a15e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "218d979a-b8d4-4cb6-ac2a-96be4995cf1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75a58169-8262-43c1-acb7-d7328dc095d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d64fa7be-b73a-45ec-837e-0b24c79932c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2af325bf-c4d9-4d68-8259-c1c993ead40e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b270256c-afc5-4ae1-b21a-60baafb17c6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "905ad70c-7580-4d3f-8b41-1e3eaa4814bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31ac4565-4065-4d2a-829d-c5787cbd39ac"
            }
          }
        ]
      },
      {
        "id": "028f99a4-c11f-40c6-9895-3bc64a23cc34",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f43bd090-b0e2-4063-9244-b77613475fc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d9daa06-30c2-4c6c-8e09-9e3ca90c05ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99055b4b-1882-4be8-b90e-bada5575da3d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57514584-d054-41dd-b28d-0f1198efc24d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88d4c768-aa8d-46fa-9cd0-5caf5a6c62e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79014fbe-2c7d-4557-8783-5fd8875f5433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86799b15-4db3-45c2-8c45-926d5a823e39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a9fd316-e678-4f34-ab39-4802db2fc7ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc36233d-4b73-4659-b113-ec8776e76f1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10df65b2-1921-480c-b1e0-178d53a39fe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6f82134-2071-40a6-ae75-3a9968ea6ba0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b0ebfd5-25b6-4158-a732-f735ac168006",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3317ca54-6da5-4105-b19d-60a6df2fd4cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1492feef-4db6-4107-8970-54dbad4bbee2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b28db29-8c3e-44e4-8660-b723f49b15c9"
            }
          }
        ]
      },
      {
        "id": "bfc5b9f4-236d-4fc5-a08f-77467b9cdd60",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51396d88-1f1d-43dc-8161-6253657e7fea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bf733e3-4f3d-46dd-8c5b-1421701bc79c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f0c1b93f-029d-4bfe-9753-56adfca9f1c8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c9ef0ee-d836-44a2-948d-0d1777c751ca",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f735881-a9e4-46da-9dc9-1f5a67014058",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.162698412698411,
      "responseMin": 7,
      "responseMax": 858,
      "responseSd": 56.530309659322405,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728002722563,
      "completed": 1728002734590
    },
    "executions": [
      {
        "id": "9bbb61ed-cf1c-4507-aaed-3ae562c91086",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2530bf90-18cb-4061-9714-962dad8a61fd",
          "httpRequestId": "8051f76a-a4f1-4cae-82d0-5c0cd6f4b06f"
        },
        "item": {
          "id": "9bbb61ed-cf1c-4507-aaed-3ae562c91086",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cf9f5037-c398-47d7-b2cb-17b2ab25c638",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "28021b01-fda6-43f3-a535-e74a32504c7e",
        "cursor": {
          "ref": "6786fcdc-4061-4f45-988d-30ec3d46ac6d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e409857c-fe37-44bd-b66e-cdc24168a169"
        },
        "item": {
          "id": "28021b01-fda6-43f3-a535-e74a32504c7e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d9b746b5-6df5-40be-9874-593b3172f4ca",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "2b9f06b6-6071-4835-a3b9-7179b237ac8b",
        "cursor": {
          "ref": "142ca297-7276-4129-8264-58d27f73c1da",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "37cb5ac1-8d4f-47d5-8320-483d9fd7c68f"
        },
        "item": {
          "id": "2b9f06b6-6071-4835-a3b9-7179b237ac8b",
          "name": "did_json"
        },
        "response": {
          "id": "3619e8fe-70bb-40ee-8de6-553d4f25bf92",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbb6181-25d5-4fff-818d-799851dbddea",
        "cursor": {
          "ref": "9fa4e8ba-2ef2-4a6c-a81e-e88c66b6ae06",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd90fd87-2ff5-448a-901c-4ed732314b7d"
        },
        "item": {
          "id": "7dbb6181-25d5-4fff-818d-799851dbddea",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ba09573-cf38-41e4-b7e7-089bd97619b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbb6181-25d5-4fff-818d-799851dbddea",
        "cursor": {
          "ref": "9fa4e8ba-2ef2-4a6c-a81e-e88c66b6ae06",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd90fd87-2ff5-448a-901c-4ed732314b7d"
        },
        "item": {
          "id": "7dbb6181-25d5-4fff-818d-799851dbddea",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ba09573-cf38-41e4-b7e7-089bd97619b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d51052-639a-4a23-a9bb-0b0137b39266",
        "cursor": {
          "ref": "f953b467-b6db-40a5-a33f-3ffaf0b36666",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c8f4d19f-5aa8-47e8-89e7-92169c20a44e"
        },
        "item": {
          "id": "a9d51052-639a-4a23-a9bb-0b0137b39266",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2fb8afa8-a299-4e3d-a060-0a4998e82235",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fdb939-5bf8-42c8-98a3-4b0a750822d3",
        "cursor": {
          "ref": "ecffdc36-f14e-44a7-a80b-53e0e1fffefa",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1f9aa8b8-f6bf-4e32-9ccb-c1731a9c1260"
        },
        "item": {
          "id": "f6fdb939-5bf8-42c8-98a3-4b0a750822d3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "74849253-5dae-4ffb-ae6c-f696ddc15df6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 12,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a0bc68-cae1-417b-b9fc-e5fe38823fe1",
        "cursor": {
          "ref": "4717a670-5a36-4f59-8257-348ec010f3c5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e9ec2ea7-29c6-4a90-9639-157d76ac1501"
        },
        "item": {
          "id": "75a0bc68-cae1-417b-b9fc-e5fe38823fe1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b3cf9c95-5d7e-4a52-9073-8c641546261e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 17,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66811a7a-3f59-435f-9aec-a718a4e8f1c3",
        "cursor": {
          "ref": "a7644082-5bb5-4529-acf3-9cbd01657bf0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eef48d4e-6197-476a-b6f4-5897e40d593c"
        },
        "item": {
          "id": "66811a7a-3f59-435f-9aec-a718a4e8f1c3",
          "name": "identifiers"
        },
        "response": {
          "id": "2f5eb691-3d47-4021-8ffc-7eb734a4711a",
          "status": "OK",
          "code": 200,
          "responseTime": 188,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9eb77a-b687-48a2-b6e3-81012b86d9e1",
        "cursor": {
          "ref": "52080ae2-830a-4faf-8e41-fedd610117d8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b7c456bd-7ca8-4f8f-81b4-b80d7a0cd343"
        },
        "item": {
          "id": "6d9eb77a-b687-48a2-b6e3-81012b86d9e1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d9190811-fcec-4257-bebb-e4e2da0fea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2639e22-181c-41c7-b879-9b6d47978aeb",
        "cursor": {
          "ref": "72e9fd0d-b211-4eef-a440-12d494813781",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "df8a95f2-d323-4176-bf3d-f39588c5ff41"
        },
        "item": {
          "id": "b2639e22-181c-41c7-b879-9b6d47978aeb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4f910af7-a362-4e52-8255-6c3b24b20bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2e9ba3-06fa-43c4-a0c2-b20a63ced3e0",
        "cursor": {
          "ref": "8d071232-36a1-442e-bfeb-f621caa82753",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e7596bb3-bd98-4532-8f99-27b13fdda41f"
        },
        "item": {
          "id": "9c2e9ba3-06fa-43c4-a0c2-b20a63ced3e0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f6d8b215-e428-4019-9ec4-5d61e48bb472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086f5fab-bd09-4da0-9fd9-36b17c18a7db",
        "cursor": {
          "ref": "38ba3f9c-a70f-438a-9cd3-dc086b8b75d6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f2ac97da-7e7e-4a65-a5d0-7d46ee36b6d8"
        },
        "item": {
          "id": "086f5fab-bd09-4da0-9fd9-36b17c18a7db",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "147149fa-7d08-4bf0-a73b-e593dd51907b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe383b4b-46ba-48e8-903a-f70a31f7ffd5",
        "cursor": {
          "ref": "3a9b0a2f-0bb6-4d48-91eb-0fe940b90342",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a85466a5-f31d-4729-92fe-844efe234b9f"
        },
        "item": {
          "id": "fe383b4b-46ba-48e8-903a-f70a31f7ffd5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6af1fb8e-cd54-4e85-8d77-075c2eb43aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3454846-9223-4ec5-a600-e988f99ae7f7",
        "cursor": {
          "ref": "4ca994cf-22e4-4898-8d4d-cf6c91b146c8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2f36d83d-90b3-49d5-b4ea-9cd293325ca0"
        },
        "item": {
          "id": "f3454846-9223-4ec5-a600-e988f99ae7f7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ab4cf261-d2ca-4198-8192-66bcbb567671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb48ab9-ede8-4814-a393-2ad20c2d6c30",
        "cursor": {
          "ref": "9ec08f6b-3a0d-46f3-9f29-810f3f2b4b89",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7cf8f8db-2fea-4ea1-b068-789c63e6e0ba"
        },
        "item": {
          "id": "bbb48ab9-ede8-4814-a393-2ad20c2d6c30",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "eda99a74-f1fc-49a4-ad42-d9816a3a6b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ac336d-5b81-40a2-8bda-e67dd3b63b1e",
        "cursor": {
          "ref": "3b956a1d-c5a9-4856-8b45-32569c38f439",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "111ab4be-8c01-4a21-bb6d-df3d907fd8f6"
        },
        "item": {
          "id": "96ac336d-5b81-40a2-8bda-e67dd3b63b1e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bfd596a7-4452-4b02-b2b8-d0ff1d3a4ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361ab347-9d18-4f7c-8675-156ccfa492ea",
        "cursor": {
          "ref": "d661b88e-0db2-4423-a7e2-d03a64e4b130",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "499e5af0-99a1-445e-a5b5-bd389545a2e6"
        },
        "item": {
          "id": "361ab347-9d18-4f7c-8675-156ccfa492ea",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc1cc257-b712-418d-bd9c-a5ddab0e89ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b08fc7-ea93-4e16-ad0a-712cc6c4c537",
        "cursor": {
          "ref": "feebd18c-0348-43f9-8ac6-039d17b71191",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9c667d4b-7ef6-47a7-b174-bf28d306ae01"
        },
        "item": {
          "id": "96b08fc7-ea93-4e16-ad0a-712cc6c4c537",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c77e63a2-6a13-4255-9f6c-4bccbb41a22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0652a4e1-c4c1-4e20-af64-4c5cb2f202e6",
        "cursor": {
          "ref": "2cb80add-6bf3-4e0e-87e4-7c04bd78fd63",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6c16d909-a9db-41ad-8713-da5fbf520331"
        },
        "item": {
          "id": "0652a4e1-c4c1-4e20-af64-4c5cb2f202e6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "97277f10-7175-40ea-843d-64cc4c5c9d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e57bb39-3725-4796-ab74-5f3c4d2ed6f3",
        "cursor": {
          "ref": "77661d0d-d6e1-4827-a922-658b4bb78a4a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "219fba94-1f9f-4d44-86cb-6223c0d6bb78"
        },
        "item": {
          "id": "2e57bb39-3725-4796-ab74-5f3c4d2ed6f3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "42cd5589-5ff7-41af-9c96-ff0bca931553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e651fd6d-90d3-404b-a5c2-12cc9a0d43f3",
        "cursor": {
          "ref": "cdd85955-daf8-4783-8ec8-b7910bf018e7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ad615205-9b8d-4065-80a7-d2ac6300ae77"
        },
        "item": {
          "id": "e651fd6d-90d3-404b-a5c2-12cc9a0d43f3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f4218809-a1a0-4099-b12a-9a696e57e86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b614daf2-975f-45a4-ab24-1c643645e620",
        "cursor": {
          "ref": "3b4c51ed-d85c-42e0-b7e5-d3f2efe2aeca",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "541547f2-a8c6-40ae-b443-fd208422d3d8"
        },
        "item": {
          "id": "b614daf2-975f-45a4-ab24-1c643645e620",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ad5d31f-502a-483c-8fe2-65a3ffcfcbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a87686-bc21-4cd4-9b57-abb2ddc894ff",
        "cursor": {
          "ref": "26b6b4fd-cc40-4bd6-b30c-cf1737097c79",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "daf85b12-5495-47ed-96dd-b1b315a4d783"
        },
        "item": {
          "id": "52a87686-bc21-4cd4-9b57-abb2ddc894ff",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9300f728-7559-4e4e-bc07-d02ecd6167ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f973ee0-7da1-4eff-b63e-4edf990656f6",
        "cursor": {
          "ref": "564a2ed1-c48c-448a-b65b-6f685c59d48c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "817eb9a0-3a41-4099-9389-06161982d00f"
        },
        "item": {
          "id": "5f973ee0-7da1-4eff-b63e-4edf990656f6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7364f73c-a135-4c81-b665-8959d5f8ce6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea05b3a-bf01-4554-8b34-304312e2bbb2",
        "cursor": {
          "ref": "51cae7d6-2f6c-43cc-913b-d878816f5299",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "26c213eb-36c4-4063-a940-227d48a886ee"
        },
        "item": {
          "id": "fea05b3a-bf01-4554-8b34-304312e2bbb2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b734466e-cdbe-4c35-b1ac-dfec0a952963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04390ad9-1286-4f80-a62d-fe8384fa3b34",
        "cursor": {
          "ref": "d8129879-95c5-4bc1-b68b-f2235b98311d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3034fe34-46a7-4682-8ce6-375ba3dede76"
        },
        "item": {
          "id": "04390ad9-1286-4f80-a62d-fe8384fa3b34",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4759cc21-7930-4716-89d8-80e33d828ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3060aaf8-3fdc-4b3c-8c1b-386fc22b3e19",
        "cursor": {
          "ref": "ee49d99b-95f4-489c-87a7-a5528f640496",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7f8548c2-4ccd-4205-a927-fb70d4b0513b"
        },
        "item": {
          "id": "3060aaf8-3fdc-4b3c-8c1b-386fc22b3e19",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3b3d9d3d-a295-46a5-9089-c9409efdf011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b60880-9633-4670-b0c8-a857cf0e745d",
        "cursor": {
          "ref": "00354b72-2ced-4b58-bee7-cfac1e1a0f0b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "530a9a91-569e-47e5-ac22-7a8e7e204c90"
        },
        "item": {
          "id": "31b60880-9633-4670-b0c8-a857cf0e745d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f1fb919b-a0d4-4848-a877-182783e41b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cd60f7-b20c-49d5-9c75-d2e01a6c3bba",
        "cursor": {
          "ref": "a3f850a2-5102-4f6c-a6d3-7735131303d3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7fe20767-ac61-4c99-9c09-a5dbe19c0c08"
        },
        "item": {
          "id": "46cd60f7-b20c-49d5-9c75-d2e01a6c3bba",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "432e8eb1-8b58-44f6-943f-8af699f9a6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00c46ae-edf5-4f36-8a3c-0f1bfdd26a1e",
        "cursor": {
          "ref": "25aa9811-1c66-4e8b-8009-60f01dd50878",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "514a1c49-f540-4bb4-ab3b-c5e805a8920c"
        },
        "item": {
          "id": "b00c46ae-edf5-4f36-8a3c-0f1bfdd26a1e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d37c5be9-c6a7-4c71-aa61-1413877b6310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4ef538-0c4f-4086-9606-081c8adcd543",
        "cursor": {
          "ref": "20ff29af-6bfd-4d3c-a72f-6b90944ebf79",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a2e02346-ff9d-4710-81df-50c9f8c82afe"
        },
        "item": {
          "id": "9b4ef538-0c4f-4086-9606-081c8adcd543",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a249a307-f7b0-43cb-9d8c-358a9686add5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036fe001-6da6-4b8f-81bc-0b96a029c692",
        "cursor": {
          "ref": "badf4c98-b475-4d14-8a76-62fad1bcbd76",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c2c7e4a2-fef9-494c-a655-9db3b1385ecf"
        },
        "item": {
          "id": "036fe001-6da6-4b8f-81bc-0b96a029c692",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "562a1eb4-4fcd-4c14-9b78-d71b1b1a3d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc0cd02-1484-4a67-90b2-1f1335dcbc67",
        "cursor": {
          "ref": "22eca58f-e55d-48fe-9b4c-f5fc26d370e3",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "60dc0613-4302-464b-a61d-67e081d45017"
        },
        "item": {
          "id": "4dc0cd02-1484-4a67-90b2-1f1335dcbc67",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c2764d63-eb2c-4147-b51e-e53d7b2dfc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f16c3f0-aec7-46cb-8ed1-d7699da1478a",
        "cursor": {
          "ref": "4f4fc223-5c8f-42d9-8747-678dc1761e0b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "52573ab6-1160-4263-b194-133bc3a000c0"
        },
        "item": {
          "id": "0f16c3f0-aec7-46cb-8ed1-d7699da1478a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "be8292da-bebe-43d1-a6d2-7492e802adb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e72590-2469-4e18-99f9-ae8a976d7f1a",
        "cursor": {
          "ref": "9550a1e7-2713-4730-8773-b425dc5c504d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f0e79870-225f-4e5f-a497-fda4d7f43f92"
        },
        "item": {
          "id": "a9e72590-2469-4e18-99f9-ae8a976d7f1a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "68d307c8-96a0-46ab-8fd8-b5a2e6adf1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ad2ab-fc31-42d4-ae1c-1b498874dfbc",
        "cursor": {
          "ref": "52988d27-5bb0-4362-a510-0f525872aabc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bd47d912-d92b-4e74-a43c-286752e4c744"
        },
        "item": {
          "id": "d49ad2ab-fc31-42d4-ae1c-1b498874dfbc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e4d89076-c045-4f5a-8681-3dbfdbdf548f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9050511d-ccb1-4788-94fb-1ce2a99ff6e7",
        "cursor": {
          "ref": "9b13f6a7-7dc1-408b-92c9-71d3d6fbedda",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b1d3ca2a-9551-42af-8884-9a4f7beb548b"
        },
        "item": {
          "id": "9050511d-ccb1-4788-94fb-1ce2a99ff6e7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2294b9af-5bb4-4071-b83b-e58e86500781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f70d759-8d32-49c9-a6ad-455b7e3aa25a",
        "cursor": {
          "ref": "226e65f3-63ad-4ba2-a2f6-581c882cfe7d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c77f13d1-2942-40d3-8ee1-532922052652"
        },
        "item": {
          "id": "6f70d759-8d32-49c9-a6ad-455b7e3aa25a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "07eb8e5c-d3ca-45f9-8b8b-6e39d92bba37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec91073-d8fc-418d-9ed8-3d91712da699",
        "cursor": {
          "ref": "8c08d1d8-5203-4999-b13b-6eb3c519848d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "195fb884-8718-4c92-9642-d37b97f20214"
        },
        "item": {
          "id": "5ec91073-d8fc-418d-9ed8-3d91712da699",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5bf83d74-f1a0-42b2-a536-da6639d57338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f3ca45-08c0-486c-a58a-4e0bda4fa62a",
        "cursor": {
          "ref": "bd791066-31c2-495f-b4a2-f031d0bb3149",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e57ed3be-7d50-4892-9744-5fc394920eeb"
        },
        "item": {
          "id": "99f3ca45-08c0-486c-a58a-4e0bda4fa62a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b2816fd-a93d-467a-b064-c728c05c2743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b99dba-6185-4050-8b6f-9ac6bdb7e475",
        "cursor": {
          "ref": "946cb178-dd3c-4fa4-b133-84d30b205fed",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0e01d6bb-7e16-435b-9540-176578e8a999"
        },
        "item": {
          "id": "79b99dba-6185-4050-8b6f-9ac6bdb7e475",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "45ddcd37-7abb-4114-8d2f-b14184d7e90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd9c3a9-ccf4-4235-9ffb-34a62b195b1b",
        "cursor": {
          "ref": "b0acb07b-e89c-417c-bbf7-c41031519705",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b6674650-0681-48f5-a8a3-b855496279f3"
        },
        "item": {
          "id": "efd9c3a9-ccf4-4235-9ffb-34a62b195b1b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "108051ed-b5d0-40b3-b4ed-4ef2aee3ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e46ef2e-0676-40d8-a8ba-61b58714d123",
        "cursor": {
          "ref": "c2054883-ce13-49c7-b8cd-ea20370e7ee0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e8efa265-6fff-4a52-820a-b915193e0a5b"
        },
        "item": {
          "id": "7e46ef2e-0676-40d8-a8ba-61b58714d123",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3c159fa7-ff26-49dc-9d39-6ff711db73ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaae541-2691-4e5c-b773-46c8e3f05414",
        "cursor": {
          "ref": "86cffdd5-79c4-4dd6-9fe1-a26ce9a1bdc9",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "08688149-28c6-4cc5-9873-f6ff39e0d2a2"
        },
        "item": {
          "id": "acaae541-2691-4e5c-b773-46c8e3f05414",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6392712e-a552-46d7-8ba1-8b22025cf541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fec954f-82bf-4871-a88f-f189882161b9",
        "cursor": {
          "ref": "0873a52f-8ea1-4f48-b505-6688d7f825b4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6b75c79b-e6f2-4d97-9d4a-fb8c03982f38"
        },
        "item": {
          "id": "8fec954f-82bf-4871-a88f-f189882161b9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e44219fc-5ab9-426d-a998-f020fc5232a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc98ee98-fe7a-4bb8-8c89-24d10578fbbc",
        "cursor": {
          "ref": "59de0dea-c93f-4ecd-be90-6efc312bcc95",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "883e2006-404d-4d5a-91b6-dc9f59abdc9b"
        },
        "item": {
          "id": "fc98ee98-fe7a-4bb8-8c89-24d10578fbbc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a89ae2d4-afb3-4014-8959-9b298b887cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c283b4-4d4b-4ba6-bb40-506ec9c369c8",
        "cursor": {
          "ref": "c7e7f831-7bf5-43f7-a647-5505062adec3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4a72d042-d22c-43a6-b801-5e4f1e980351"
        },
        "item": {
          "id": "67c283b4-4d4b-4ba6-bb40-506ec9c369c8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "25c88452-31bc-41e3-945c-2153c73b03f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdd5807-8b4e-4dee-b8c4-8939361c8822",
        "cursor": {
          "ref": "384c01c6-2464-4d3b-a30d-50e297835041",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "00df8849-d739-4772-8906-47c5e3e462bd"
        },
        "item": {
          "id": "1cdd5807-8b4e-4dee-b8c4-8939361c8822",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "08a03e5a-e72f-4e12-920a-7ee27bb6f594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335b7d04-e29c-4575-83b9-4df356e2b0e5",
        "cursor": {
          "ref": "830f536f-e49c-4dcc-b06f-abb160891880",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e0a1b423-29fc-41d0-b726-6669606d7e87"
        },
        "item": {
          "id": "335b7d04-e29c-4575-83b9-4df356e2b0e5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1d844dee-15ff-4e6e-ada1-e93ca691c3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe503085-78d7-45be-9ede-1340ecee327f",
        "cursor": {
          "ref": "cf9e713e-50b7-43bd-8f13-28f2ede36dd1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f0e47539-7db5-49ab-9438-302ba3f8f8bf"
        },
        "item": {
          "id": "fe503085-78d7-45be-9ede-1340ecee327f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "93bf6794-6136-4a6c-9f24-2a2040e4dfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91ae464-6896-46ac-ae91-c2f8014072f8",
        "cursor": {
          "ref": "0db9a0a5-2215-46fa-b255-1068a210562b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "aa2fe1e4-fd00-47be-9b76-23f2078632af"
        },
        "item": {
          "id": "d91ae464-6896-46ac-ae91-c2f8014072f8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ec23406d-af96-4c5e-88c3-3822503b118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be59301a-e2b9-45d8-980b-08a61f3fb50d",
        "cursor": {
          "ref": "f3127744-0f2c-4435-984d-923d24f553bb",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4766eb7e-96e9-4a62-84d0-bc3d428b9fe7"
        },
        "item": {
          "id": "be59301a-e2b9-45d8-980b-08a61f3fb50d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d7398aa4-a6ba-4f5e-8a96-ffd9a3d59358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bbe3f7-0171-4131-8104-6d9b89312367",
        "cursor": {
          "ref": "1b714dcd-5b45-44cc-b415-3b2a94bbc746",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1a98adf7-0a46-4217-a214-ca6b70e294b0"
        },
        "item": {
          "id": "25bbe3f7-0171-4131-8104-6d9b89312367",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22bcd95a-d1b9-4abf-99a6-21b84f9126bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96e3007-aff2-4db6-8477-2aa01aef45ab",
        "cursor": {
          "ref": "bce1fa45-ee9d-4fc4-9079-c27b21c6a743",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "87d71903-ec67-43ba-8064-f04c1212511d"
        },
        "item": {
          "id": "b96e3007-aff2-4db6-8477-2aa01aef45ab",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9e5eba06-f39d-4821-ad38-fb3f46f9cf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4467928-da8f-417a-b72d-2de9ad78733c",
        "cursor": {
          "ref": "9fa4af55-2a73-4f4a-9b7e-416bb5486d1a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bd66f9e7-ba87-4cfb-b9f9-acba5bf3f98d"
        },
        "item": {
          "id": "a4467928-da8f-417a-b72d-2de9ad78733c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f1ae7b4e-40de-45a3-917c-dd2bf7023f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63af8ec3-315d-4d14-ac7f-6ade6b67557c",
        "cursor": {
          "ref": "c0e5784e-1193-4520-9d0c-0cfef1bcc52f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6cb7d25d-f64f-4846-a0ab-01ed19d50636"
        },
        "item": {
          "id": "63af8ec3-315d-4d14-ac7f-6ade6b67557c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b7868631-1e57-4940-bd18-813095df206a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc21f68-edd1-4b10-9394-9f49cbae0021",
        "cursor": {
          "ref": "c2119037-024d-4a6d-bf63-71da86dc8e78",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4e204f77-54c6-4f07-a472-6b93857d6001"
        },
        "item": {
          "id": "0bc21f68-edd1-4b10-9394-9f49cbae0021",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e1ed3fe3-264c-4b74-9141-39c536a64250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08f003e-69d9-4eea-ad58-72c5f4bc3e06",
        "cursor": {
          "ref": "b53a1a54-c581-4182-997b-3091d968cdd1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a4ccea61-2f2e-4f89-a292-33929303ef61"
        },
        "item": {
          "id": "e08f003e-69d9-4eea-ad58-72c5f4bc3e06",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "866c8b79-9e26-45c2-8c8c-f57826958da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6880be7-f1fc-4159-b008-ddb1dbe52cd2",
        "cursor": {
          "ref": "2cd21498-23e8-455c-a87d-e0d8bb584650",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "75c3fc0a-5e61-4705-8802-b996418f49f4"
        },
        "item": {
          "id": "e6880be7-f1fc-4159-b008-ddb1dbe52cd2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "410f3f1b-03a7-4e7e-af58-1e22fb28660a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5829a7-eba0-4503-b1b1-b0fa6fca92c0",
        "cursor": {
          "ref": "1a8587ab-08ba-4ef5-8cdc-42314306a569",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e876ed96-68f8-4621-b0d6-a31c284317a2"
        },
        "item": {
          "id": "0c5829a7-eba0-4503-b1b1-b0fa6fca92c0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "44d6b6a9-4bb4-4946-b436-354bed51211f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cb7c73-472f-4897-b2c0-26e767657fa0",
        "cursor": {
          "ref": "a1b06e21-e8ae-4b91-a064-9ac27a7b8137",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ff4e564c-cfd2-441a-9a8a-5edf8885bff9"
        },
        "item": {
          "id": "44cb7c73-472f-4897-b2c0-26e767657fa0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e674856d-ca4b-420c-bfc4-e56c7bccd0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22bd722-b606-4461-b0b9-265c0beebbcb",
        "cursor": {
          "ref": "b722437b-5bd0-4ff7-8d31-c6243c6227ca",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "52d3d69d-0621-4444-8b9c-586609c7d237"
        },
        "item": {
          "id": "b22bd722-b606-4461-b0b9-265c0beebbcb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "873e179c-c626-4796-8e2b-f1a5d89729f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bf99dd-387c-46be-b125-c58ff6257040",
        "cursor": {
          "ref": "04320b97-75aa-43f3-b692-aba2198f3005",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3748f88f-4aa6-49ba-b32e-30345c2c2adb"
        },
        "item": {
          "id": "94bf99dd-387c-46be-b125-c58ff6257040",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "99f87472-bcf4-40ca-a783-fcab9f74db52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77dc5ef-f5db-475e-9f3f-6a40234ef03f",
        "cursor": {
          "ref": "146ada22-32f4-4a89-afe6-f78e1ec3f451",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3236e8b0-b108-415a-89fc-bef8cd3766b0"
        },
        "item": {
          "id": "f77dc5ef-f5db-475e-9f3f-6a40234ef03f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "01fad4c4-0d2e-4b14-a03b-8af3506c4fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c89ed13-7779-4a99-acf1-5531ea5d0c6c",
        "cursor": {
          "ref": "f8513c6a-ff9c-42d9-8b5f-eb09e9d18dd5",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4c6c4bb2-c66f-4164-995c-e296ce4a1e10"
        },
        "item": {
          "id": "7c89ed13-7779-4a99-acf1-5531ea5d0c6c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b15da80b-507d-4ff1-ac31-e6ebeb9e9d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa571a59-8580-497d-9273-74095a646886",
        "cursor": {
          "ref": "464b26c4-4cfe-45e0-b552-56c209d61900",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2bcf5953-f14e-4103-8b29-0e42efbdd3ab"
        },
        "item": {
          "id": "aa571a59-8580-497d-9273-74095a646886",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "38c503f8-0bdf-4208-988f-c846c223ae3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abf3edc-5746-4b1b-82f8-4455009e4e1e",
        "cursor": {
          "ref": "1108814d-df04-46d0-ba12-3169d9c89e22",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eba2abf0-8e7d-412b-8452-0b5021ad4f7b"
        },
        "item": {
          "id": "2abf3edc-5746-4b1b-82f8-4455009e4e1e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "799e2282-9075-40bd-82e6-ba11a5a7dd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ea1ed8-b08f-43e5-841b-649ad11483a8",
        "cursor": {
          "ref": "b87b71b3-8413-4b93-9f2e-b5fe5d87bb1e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "482e0212-4151-44d3-88c9-6851a57e55d5"
        },
        "item": {
          "id": "49ea1ed8-b08f-43e5-841b-649ad11483a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7dbfc371-9466-4130-bce9-97f5aa585f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c091dfef-e83c-448b-be4f-070de4bed1d5",
        "cursor": {
          "ref": "9b009934-dc21-4ad6-b2bc-2f0038939542",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "926f3f89-acb0-445a-86a9-37ad73b041d7"
        },
        "item": {
          "id": "c091dfef-e83c-448b-be4f-070de4bed1d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8917c6ed-2547-48cd-a788-5e671d8baae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fd92d6-bee2-46c8-833b-f1850e5f0624",
        "cursor": {
          "ref": "5976783c-a5d6-4cd3-b861-568b4e3687ff",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f21fe81a-e199-4cbc-8170-cf52e474dd16"
        },
        "item": {
          "id": "d3fd92d6-bee2-46c8-833b-f1850e5f0624",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "56469c9f-8c4f-4b26-9f27-0e96b4f61ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6206a4f-5bf9-47bd-92a9-df6c4408026e",
        "cursor": {
          "ref": "49162e0c-39a2-4a16-ae96-052e3547a443",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "67e6576d-66ac-4c5e-93a3-c6660870241a"
        },
        "item": {
          "id": "e6206a4f-5bf9-47bd-92a9-df6c4408026e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5792e8ae-d813-47a2-b439-25c9cf3dcad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56da422-6c1b-46c5-a7ec-7f6e077c7086",
        "cursor": {
          "ref": "f93a1edc-f40b-477b-a708-263240ade39d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ef387a13-58ee-4f50-b85f-94614f3a8ea1"
        },
        "item": {
          "id": "d56da422-6c1b-46c5-a7ec-7f6e077c7086",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "58ec39c8-d9ed-4e44-b72a-5880c73f51cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ae1029-6714-476c-98e5-bb1b7e74aefb",
        "cursor": {
          "ref": "37bb1e22-09c7-4e16-9f62-685b11a1d4c0",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "292a7177-a3e3-4e02-ae50-d07232d5abc9"
        },
        "item": {
          "id": "27ae1029-6714-476c-98e5-bb1b7e74aefb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2d9cc266-ad96-4c94-ab0f-83c520b5b162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb60104d-118c-4f57-9b71-bface4cc6df6",
        "cursor": {
          "ref": "e455f418-d9bd-47d0-824a-ee73b7c4ef53",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9bf0752e-a969-40b3-8e0b-db794017e6e8"
        },
        "item": {
          "id": "bb60104d-118c-4f57-9b71-bface4cc6df6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d1277ba3-e9c2-4e79-a8e8-5f64d7e11696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cf3e0d-49e3-4329-a909-04eb3c262d8b",
        "cursor": {
          "ref": "d9e666ef-885a-4fd1-9365-f1fd98411a5e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e217015d-bbed-4f4d-a707-bb87305c2830"
        },
        "item": {
          "id": "51cf3e0d-49e3-4329-a909-04eb3c262d8b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ee9b2a4f-2df4-45d8-b7a0-d9f0f1c93f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679dcf91-1281-422a-a792-e835d4013be3",
        "cursor": {
          "ref": "0e22616a-3dba-4008-80c1-604934347c54",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c69b3ef3-521d-4061-905d-e5624b1595a7"
        },
        "item": {
          "id": "679dcf91-1281-422a-a792-e835d4013be3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c66d31cd-58fe-442f-8c63-90d2cb91e7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86e0cea-9084-49a6-b0bb-48000d78a59b",
        "cursor": {
          "ref": "4af849f9-1594-411b-a6b4-91eca2a8525d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "636942b0-6e4a-4f75-88b3-25acb626c887"
        },
        "item": {
          "id": "b86e0cea-9084-49a6-b0bb-48000d78a59b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1b635d8f-5933-46fc-965e-023319eca619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9434dd-77f0-4789-9f60-31ba3abb44e8",
        "cursor": {
          "ref": "ea74017c-f378-42ad-80dc-779ee3720ac8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fda686ad-2e4a-4342-8436-c79c7e7819ec"
        },
        "item": {
          "id": "0d9434dd-77f0-4789-9f60-31ba3abb44e8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb186691-46b2-495a-866c-b7a2aaa12df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba6aaaf-3310-47ff-bebf-a5770e17a6f8",
        "cursor": {
          "ref": "45f5065f-e47e-4045-9934-5f39b423ecd0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "45606575-f196-44b2-970f-602badc9e7f7"
        },
        "item": {
          "id": "aba6aaaf-3310-47ff-bebf-a5770e17a6f8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a00293ed-b8f5-4640-bf7b-406246c757d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844439a6-6d30-4130-9a8b-43e4d5d5cfe3",
        "cursor": {
          "ref": "3defc5e0-d10c-4034-98a9-0a933b10ecd8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ccd4fee4-c0b4-4078-85b7-9c2c041cdf24"
        },
        "item": {
          "id": "844439a6-6d30-4130-9a8b-43e4d5d5cfe3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "89b17fa8-7bec-4ea7-a68a-4ab76cfd59fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cc5ff5-7d8e-4026-9fff-eb6a07bf9218",
        "cursor": {
          "ref": "10ae6305-ba56-42a2-bbb6-e91a62c180e3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4590e221-01fc-4d39-824a-7055d832051e"
        },
        "item": {
          "id": "41cc5ff5-7d8e-4026-9fff-eb6a07bf9218",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2377897b-24f5-458a-b650-134d681e430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16982df1-3a7b-4ddd-b3c6-0672e6efe880",
        "cursor": {
          "ref": "fa1342e0-8153-463a-b9a5-b8e056d04a40",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "42a2ed22-aadd-4b09-876a-5ee3a2d4d785"
        },
        "item": {
          "id": "16982df1-3a7b-4ddd-b3c6-0672e6efe880",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2dbc0773-9ebe-4a33-8412-72732fc6da38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e595468c-5b70-41a0-8d43-a35a30a1cb6a",
        "cursor": {
          "ref": "586d462d-3600-493e-ae50-48b27f1ab1a0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bf6a333f-6ad7-4115-aa73-2a33b1cd16c3"
        },
        "item": {
          "id": "e595468c-5b70-41a0-8d43-a35a30a1cb6a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "357c2660-89d5-4c40-a187-7594712f76f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0213701b-e4fc-4b6b-ae36-05d4c899c70a",
        "cursor": {
          "ref": "862b09dd-b58e-4924-b76c-e2893e6c260a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "49f5986c-2aa4-489b-a8ef-8aaff566d034"
        },
        "item": {
          "id": "0213701b-e4fc-4b6b-ae36-05d4c899c70a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c458df22-e63b-4cdb-a2e9-170c8237e2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7005cc44-aa7a-457e-8002-4b62359d2a95",
        "cursor": {
          "ref": "8a4abbf5-53dd-4b53-afb3-ac628b5f0dea",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cb9c7b3a-c24e-4633-b9df-404e138bdd8e"
        },
        "item": {
          "id": "7005cc44-aa7a-457e-8002-4b62359d2a95",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d83a4faf-b00e-444a-b162-960309407090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b08bcb-8fb4-4a82-82b1-76d31f027744",
        "cursor": {
          "ref": "41b89d72-6e21-490b-b10a-1db5bc9bf7a6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e2ae4d5e-e00e-46de-b4f9-1bb006c18d6a"
        },
        "item": {
          "id": "56b08bcb-8fb4-4a82-82b1-76d31f027744",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e3cb47df-4d24-4a3c-b4b0-23cdeffabfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0afb70-aab9-46fc-8012-b6219392fcd7",
        "cursor": {
          "ref": "fba62613-66ed-42c7-8813-0ab6af0802f5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aa174c5c-ce91-4e97-8c15-b293fc97d66b"
        },
        "item": {
          "id": "5c0afb70-aab9-46fc-8012-b6219392fcd7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "32ecb77b-d87e-449c-b29f-343504c31125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c8fe3d-c869-467b-aa04-8e420b92ad03",
        "cursor": {
          "ref": "43436282-b27a-482c-ac1e-31d5d2f85acc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "22af8ac9-89cc-4a5f-8e2c-5f2cd650aaed"
        },
        "item": {
          "id": "53c8fe3d-c869-467b-aa04-8e420b92ad03",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "10b1bf08-a4e7-4884-aae3-ed889e6a6ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba366b6-4a36-4049-8205-3c6e5d6f5504",
        "cursor": {
          "ref": "5c031145-3625-49bd-8766-5e09797ee421",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c5e335ac-6de0-47ca-87e6-19e506d8adb5"
        },
        "item": {
          "id": "8ba366b6-4a36-4049-8205-3c6e5d6f5504",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f9c587cc-3b00-4e86-ad84-bff11ab92138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b145f7-2ce8-42a0-94b3-1a900a900215",
        "cursor": {
          "ref": "09d4cd9e-b7e6-40ca-b391-89ac0d99a3e3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "925a7af9-0146-4520-b086-f53cd995281b"
        },
        "item": {
          "id": "21b145f7-2ce8-42a0-94b3-1a900a900215",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "793f1c3a-1470-49a9-9ca2-632134128c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d8bd37-a67c-4704-b32c-6dcd4e7510c6",
        "cursor": {
          "ref": "a4044b1a-d48d-4e99-a8dd-bc9ee597c346",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4ebf514f-4288-4dc4-8539-6af6a1fed67c"
        },
        "item": {
          "id": "b7d8bd37-a67c-4704-b32c-6dcd4e7510c6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e59ef686-6d4d-4d0b-a4b6-757aebda3e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4f4541-d0c5-4f89-9551-46888bfa2f5c",
        "cursor": {
          "ref": "2e7e017b-16e9-4ac5-9b41-5d140dddd9b8",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4ff6ee23-6d50-421d-a31c-c49f8c780818"
        },
        "item": {
          "id": "9e4f4541-d0c5-4f89-9551-46888bfa2f5c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6535243c-132d-4c87-9a2d-e0d79a1c2afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829a9258-f338-4f99-941d-1df04ecae434",
        "cursor": {
          "ref": "aaa0363f-de5b-4987-811f-2267c05791d0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0af576c6-90fe-4c6a-b7e6-1873a3e3febd"
        },
        "item": {
          "id": "829a9258-f338-4f99-941d-1df04ecae434",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "933011f9-1b17-4e02-896d-39f9ffc9e668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1122d5a-99ec-4f67-b502-5483bd28242a",
        "cursor": {
          "ref": "84e6bede-151c-418d-8fbd-1db63967d43d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e94db508-e819-4003-a257-e59305c7953b"
        },
        "item": {
          "id": "d1122d5a-99ec-4f67-b502-5483bd28242a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cb201f11-7915-4c00-9d56-d30fb6419034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8e7e16-c4cb-481a-b529-52eef0059a3e",
        "cursor": {
          "ref": "be06bde3-a100-4185-9c5f-35568e6e0105",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aff3867b-8822-483b-adeb-af6e7031d334"
        },
        "item": {
          "id": "7f8e7e16-c4cb-481a-b529-52eef0059a3e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0d983aea-ffbe-4f23-abf4-e703bff1eb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbe3233-afa5-4ace-9585-363276c0a33b",
        "cursor": {
          "ref": "6f1ca364-5b7b-4fc1-871b-05220df960b6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "184fb055-e77f-4c9a-bfad-68e794b5e9c7"
        },
        "item": {
          "id": "2dbe3233-afa5-4ace-9585-363276c0a33b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "296da3e8-7b18-4735-8f8c-45d82eecaee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9753ed17-c2db-4b26-a764-613399274fdb",
        "cursor": {
          "ref": "ffa08889-09e5-44b9-be7a-bfa513f3e3b4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "63693e5f-ec1f-4c6c-a1d9-1a8d3cbbac60"
        },
        "item": {
          "id": "9753ed17-c2db-4b26-a764-613399274fdb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "40ccd28b-27db-464f-9394-41835dc17876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c901a702-52ba-44d2-a7f7-08d80c363fe3",
        "cursor": {
          "ref": "b11a18f8-d063-442b-9628-6458e9ff5ba3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0239c3b1-8aba-43be-b00b-bd28b1c3965b"
        },
        "item": {
          "id": "c901a702-52ba-44d2-a7f7-08d80c363fe3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b457be6c-a891-4cc7-b970-7b0054cecdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2b7683-6a4a-496d-a4cc-a214ba2f9cb9",
        "cursor": {
          "ref": "5f35fcc8-5913-47c5-8313-c93269528a8b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "64cfdd45-7c79-4af8-8c79-8ccb34495ab2"
        },
        "item": {
          "id": "1a2b7683-6a4a-496d-a4cc-a214ba2f9cb9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "911fd86c-d043-4c70-9666-8bd6710edfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06641de-841e-44d8-b550-7d375719a43b",
        "cursor": {
          "ref": "6aeb9fa4-b357-43c7-b13b-37548522d96b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "955ccf1e-b314-4e0e-8c0e-04d5686295a1"
        },
        "item": {
          "id": "a06641de-841e-44d8-b550-7d375719a43b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8659ac0d-7736-48ac-a640-98ecaafacf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea3a36a-1192-4c71-a066-520c1fd706ec",
        "cursor": {
          "ref": "89d686c6-aa3e-4964-ab0b-b3ff54336b75",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fb1a55c1-de96-436c-8314-b196c515b8b8"
        },
        "item": {
          "id": "dea3a36a-1192-4c71-a066-520c1fd706ec",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "27c097d5-e32d-4e96-93b3-c02e497ce75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda2ef4a-97d4-48d5-9f0b-ad0ee5744797",
        "cursor": {
          "ref": "9a6b1110-84a3-48a5-9a79-957b2973abad",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d2b36c3c-8e17-47c6-9d6b-1e02b1c5c005"
        },
        "item": {
          "id": "dda2ef4a-97d4-48d5-9f0b-ad0ee5744797",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "df0d41a0-07d5-4e8b-8909-a99175cb767e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f60edb81-e6e1-4023-ae59-1e3e9bfffd83",
        "cursor": {
          "ref": "2b83de5c-e025-4930-aa8a-4cca12b0c31e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "44ee9f13-1481-4f47-b6e2-59691c9f3088"
        },
        "item": {
          "id": "f60edb81-e6e1-4023-ae59-1e3e9bfffd83",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a1223646-6386-4864-a068-21083316f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "df813af2-5ebe-436f-9e26-c714f8c97a97",
        "cursor": {
          "ref": "4b3bea41-f841-4cb2-aa03-8406b302f39b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a6ca2b92-785f-4a7e-9a0a-1a1eb603c020"
        },
        "item": {
          "id": "df813af2-5ebe-436f-9e26-c714f8c97a97",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dad3a669-1c73-4a40-bd0c-aff48992c15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "63347981-189e-48ba-992b-0cf9a987d0e1",
        "cursor": {
          "ref": "cf491e67-44dc-4348-8c1a-30c1da2ee0ce",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f67c0d53-cba7-496b-9358-c276d2eac63a"
        },
        "item": {
          "id": "63347981-189e-48ba-992b-0cf9a987d0e1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3633dd31-4643-46f8-ab43-57c2170529b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5f2a2fe2-807e-46aa-af25-4a2f9e885e65",
        "cursor": {
          "ref": "e021733d-c7f7-4f79-b8a7-2247c41cebc9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dc333dce-db9e-4c74-8838-58af981220df"
        },
        "item": {
          "id": "5f2a2fe2-807e-46aa-af25-4a2f9e885e65",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c4351e59-c454-462c-818f-e8e36cc1738c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9ad2ded6-0705-4512-affa-fbab949e9bae",
        "cursor": {
          "ref": "2c217fb6-7fa5-4044-a67a-d81bdad019b0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e897a109-c4cb-4186-84e3-cf7072ab606a"
        },
        "item": {
          "id": "9ad2ded6-0705-4512-affa-fbab949e9bae",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4ad2c691-daa5-4dcc-9624-40dfb2cb25ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "df62549f-19ee-47e6-a057-aeced910e222",
        "cursor": {
          "ref": "164ba6e4-9488-497a-8327-9c66f2fe803e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "774954a3-9998-43ae-859d-e36159358c7c"
        },
        "item": {
          "id": "df62549f-19ee-47e6-a057-aeced910e222",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ec6bcc91-59ae-4242-84d0-03ac3e79fec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c65501fc-52cf-440a-b0dd-7cb6fd352c8a",
        "cursor": {
          "ref": "bc3cb223-db6a-4066-b43c-cfe16cd40942",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "42c2a95d-228e-4ea0-8804-c65432d8c183"
        },
        "item": {
          "id": "c65501fc-52cf-440a-b0dd-7cb6fd352c8a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "197c6e94-fed2-4149-b9f4-d5c9ecd766c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8d05d7-bb8a-427a-a111-5d28bd9980fc",
        "cursor": {
          "ref": "39643c64-431c-4a5d-93ef-3926754a8b3c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "51c94aeb-ddf0-4262-8697-503c278405d7"
        },
        "item": {
          "id": "2c8d05d7-bb8a-427a-a111-5d28bd9980fc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "47603ac8-59a1-4855-b603-b8469be0e943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467328b3-1c6e-44af-8029-651ab8b55026",
        "cursor": {
          "ref": "cd66be6d-79b7-43b0-b593-5b0386768a39",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9312ecb0-aef4-42bf-b432-72c95474e24a"
        },
        "item": {
          "id": "467328b3-1c6e-44af-8029-651ab8b55026",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49668525-716d-46cf-a950-95a0cdb73943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c45ad35-69af-4695-ad44-a7e6a016b062",
        "cursor": {
          "ref": "2e20fd66-6d63-4645-8f5f-92fcea00d752",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "53fd36c9-8341-4ee4-8577-a3a2bb958ea1"
        },
        "item": {
          "id": "0c45ad35-69af-4695-ad44-a7e6a016b062",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ffe255f9-328e-4d87-b0d6-794e0d34e7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385c693e-c593-461c-9ae2-08352b65ab86",
        "cursor": {
          "ref": "4a3da521-bfcc-4f65-bff1-28fc81d0ee32",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "528a9e7e-8b62-4bc2-8010-24977f549562"
        },
        "item": {
          "id": "385c693e-c593-461c-9ae2-08352b65ab86",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f00de8a7-d6eb-462a-90ce-9e70aacc8891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee96cca5-b907-4607-ae5c-a94181e021e2",
        "cursor": {
          "ref": "680acbd4-48c0-4bc7-b2f0-be23260e66a5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ee8a0202-ef16-49d3-957a-fec8fdd5f780"
        },
        "item": {
          "id": "ee96cca5-b907-4607-ae5c-a94181e021e2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "34cf6d9b-7b7a-4bdd-8827-370d26b290b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25607933-2eba-41a1-b057-973f5a833639",
        "cursor": {
          "ref": "7353bc44-0b9b-432f-90cb-ce03fc70fc89",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a4371d9e-c8b2-42ad-8928-871b63452ff6"
        },
        "item": {
          "id": "25607933-2eba-41a1-b057-973f5a833639",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f3e978b7-9fb3-4fa5-a82c-3e922ad3a23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b73ea2-28a2-4d0e-a722-2535426b0dba",
        "cursor": {
          "ref": "0849dabc-05a7-4038-8753-5b456ea05e51",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c7ae96ea-fd87-455e-98fb-c0a8bec27181"
        },
        "item": {
          "id": "50b73ea2-28a2-4d0e-a722-2535426b0dba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "364d528c-446a-4a68-90f1-07d37c5d44b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09756304-776e-4a3d-9c81-a659bef27873",
        "cursor": {
          "ref": "7480bec1-58cb-4afa-9017-3eb2e789bc30",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5a9bd465-375e-4945-8893-ce1523a48882"
        },
        "item": {
          "id": "09756304-776e-4a3d-9c81-a659bef27873",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4981df94-3caa-455f-9a23-9eda33eb0d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c018ad-b4ad-4100-a28a-b04072014099",
        "cursor": {
          "ref": "d62682a7-7fb2-4a7a-a05f-d4b88d85d297",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b78948e1-30d2-42ea-9df1-da833b1c4494"
        },
        "item": {
          "id": "a3c018ad-b4ad-4100-a28a-b04072014099",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e5f9cc87-9950-4d42-8de1-f99f8e695bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a749a5-db94-486e-85c4-aad1c276c347",
        "cursor": {
          "ref": "e750023d-ba72-4b5c-9dfe-dfbe9d51089e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "898dd5f7-bffa-40ee-9628-7025b662e7d2"
        },
        "item": {
          "id": "33a749a5-db94-486e-85c4-aad1c276c347",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ccc1b136-c602-49cd-af7d-ab1005033bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c253cf9f-4069-430a-9420-36514af3ad6c",
        "cursor": {
          "ref": "19510b91-f173-4e53-8bb6-c54ef0f9449f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "373a6d56-ce52-4ff8-904b-5584ab08da69"
        },
        "item": {
          "id": "c253cf9f-4069-430a-9420-36514af3ad6c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "46a9698a-c674-4710-ac4e-358b74fa509d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61034547-d3f1-47d1-a45c-a657c7d3df1a",
        "cursor": {
          "ref": "6b5952e9-e0a4-4da6-b3c6-8c59501128e7",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e603ec5c-f3e2-4296-b46c-f1fcc0bf230f"
        },
        "item": {
          "id": "61034547-d3f1-47d1-a45c-a657c7d3df1a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94dbae48-307c-4258-9311-be3d7d555116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dc8d85-2b48-44c5-9f30-dca3a20ffd09",
        "cursor": {
          "ref": "33fe193c-8523-420b-bdc9-aa2866be74c2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a038438c-cf68-4225-b4f5-ae20681f7dc2"
        },
        "item": {
          "id": "a5dc8d85-2b48-44c5-9f30-dca3a20ffd09",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "87211659-e154-4e39-a69d-885a2e513afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927f8902-592b-4fd7-ae7b-5613bfa0da6d",
        "cursor": {
          "ref": "9f826ffa-625d-47e8-a6d0-e71b2f2382a1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f788034b-0568-4d25-89c7-a565096c8127"
        },
        "item": {
          "id": "927f8902-592b-4fd7-ae7b-5613bfa0da6d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ac6ad025-e5b2-439c-a883-171f67eab2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741ab592-89ac-4b43-b3f7-6ad553fd275e",
        "cursor": {
          "ref": "929b641a-ccc7-48e4-a161-a25ef67cfbd9",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b21a7df4-6c3d-44b9-ad0a-671189ef59f9"
        },
        "item": {
          "id": "741ab592-89ac-4b43-b3f7-6ad553fd275e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f760a75-8510-4117-92a0-af84eabd154d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0494a4d-8ac4-43d9-814a-eaf5a98bd337",
        "cursor": {
          "ref": "5eed15bd-d977-4da6-9e75-209ac0d4262d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2cb1cc02-cfe0-424e-86a0-61d3568c98f7"
        },
        "item": {
          "id": "e0494a4d-8ac4-43d9-814a-eaf5a98bd337",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c2cef5b0-70fb-4e18-b95e-913ece876026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd9bd7b-6b13-4c2c-8ce2-2a7e9fde8333",
        "cursor": {
          "ref": "c11facb4-3ea2-47df-be59-7ce2e474ab92",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "17f3bd75-8423-4e5b-a0e8-18c47cb14195"
        },
        "item": {
          "id": "cfd9bd7b-6b13-4c2c-8ce2-2a7e9fde8333",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "70e900b2-e0c1-4ab8-87a7-178c344f6aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cea8a63-0860-414a-b473-5d40816e0f2b",
        "cursor": {
          "ref": "ace796eb-3a36-4552-91d4-1f612996eaed",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f91322b-53e1-4364-927b-fb414f7245b6"
        },
        "item": {
          "id": "3cea8a63-0860-414a-b473-5d40816e0f2b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dbebaa38-50ba-4e88-bb5a-e54ccc77ee5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c39babc-481e-4432-b1b1-5ca5a64760f6",
        "cursor": {
          "ref": "569e4903-2e04-4039-9e4d-63b25b4aaf3c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6be2e0b1-b9aa-4177-9ae1-7330ef10994b"
        },
        "item": {
          "id": "2c39babc-481e-4432-b1b1-5ca5a64760f6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "827463b9-e201-43b1-a44a-7890aa7a7286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb84fcd7-6a34-42bc-b30c-86b00b554b00",
        "cursor": {
          "ref": "5dd31646-5e4f-406f-b8e5-429958a3c98c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a105a708-25cb-42fc-bb7f-5d78a9dcf1f9"
        },
        "item": {
          "id": "cb84fcd7-6a34-42bc-b30c-86b00b554b00",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b0382a19-3e6a-421a-8047-748c853e230f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950d2c78-2c73-4e4c-864c-899bf83dd3a1",
        "cursor": {
          "ref": "ecc3af50-8d82-4087-b365-452ccd9b4165",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "59a408a4-fe43-46d0-8173-1a12a8f084ed"
        },
        "item": {
          "id": "950d2c78-2c73-4e4c-864c-899bf83dd3a1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6fee5579-488b-4109-8fc4-4246bb729ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac35a1b-2b15-42bc-918d-ffa2bbca6ff1",
        "cursor": {
          "ref": "ab43d4d1-89d8-4aa0-a42a-b9161a317fdc",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4aa26363-61b6-4a8b-90c4-c71862c129cf"
        },
        "item": {
          "id": "bac35a1b-2b15-42bc-918d-ffa2bbca6ff1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0b4759a2-69e1-481e-9830-f48c4c6be7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61385db-ce19-40e6-a562-224f5b00c2ec",
        "cursor": {
          "ref": "1118fd01-350e-4c86-802a-8123f33e4c1c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "580c8824-bad0-44bd-b6ba-65e6a8d1c2e1"
        },
        "item": {
          "id": "c61385db-ce19-40e6-a562-224f5b00c2ec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e47315f2-92f8-462a-9fa9-12d11e47205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb42021-0b78-4dbd-b4f5-c0a44f3a2314",
        "cursor": {
          "ref": "fe02a7e0-94cb-4989-9fbf-f9e1d9bd3c5b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c91dc0b0-5374-4a90-81d2-c03d337ef5bb"
        },
        "item": {
          "id": "bfb42021-0b78-4dbd-b4f5-c0a44f3a2314",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4a219519-0e47-4987-a6e2-1f88c3a46323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13203b0d-3e0a-4c7e-8baf-34aca40e3820",
        "cursor": {
          "ref": "4ec4b32d-1e40-4d60-b18d-af54310d72c1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dc799750-3e6b-40d7-ab0b-fe1d6b5a9273"
        },
        "item": {
          "id": "13203b0d-3e0a-4c7e-8baf-34aca40e3820",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "490453ab-fa17-4ef5-9d29-408b5bbeac12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c48e40-54ed-408b-a2b2-1e1bbb5733e4",
        "cursor": {
          "ref": "0f25989f-2d55-477d-a1b6-186392a0163e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8b956d97-7c9d-4017-973f-759c666e0021"
        },
        "item": {
          "id": "54c48e40-54ed-408b-a2b2-1e1bbb5733e4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f68c64b1-3be5-46f4-88ac-5e791b150943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e9bbcf-c7bb-409c-bea2-f891cf631d4a",
        "cursor": {
          "ref": "2d930663-f49c-4a59-821a-0de5edb42a90",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "07e52d24-95ff-41fc-9eec-081fadb378bf"
        },
        "item": {
          "id": "03e9bbcf-c7bb-409c-bea2-f891cf631d4a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2d3fd0f4-3c87-4668-aaf6-473c2e265846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3872d85b-a71b-4be4-b41b-c7bd5e75ca7f",
        "cursor": {
          "ref": "ca51832c-bb9b-41ca-aaac-29c6831392ad",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "088a8b2f-f967-4b52-b795-906778f9b964"
        },
        "item": {
          "id": "3872d85b-a71b-4be4-b41b-c7bd5e75ca7f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "529939e1-5c3e-44be-8772-1c22b02f226d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7574b48e-5ed4-4956-b270-7115f394694e",
        "cursor": {
          "ref": "69d8a1db-4acd-45f0-82d4-7121a68e6b6e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "80a1f78a-0620-4e84-be3c-e58a7ea1f1ae"
        },
        "item": {
          "id": "7574b48e-5ed4-4956-b270-7115f394694e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4f482c61-7152-42b2-b820-65e709f033d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c118a7ff-4c24-4ef5-a02f-290ab72a081f",
        "cursor": {
          "ref": "046c0617-0645-456b-b02e-6fdb53e6ac6b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "291d8f4b-785a-49f0-b0bd-a0030c7864cb"
        },
        "item": {
          "id": "c118a7ff-4c24-4ef5-a02f-290ab72a081f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d35e7f01-9467-4983-b573-8f8fc69bf8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a3f27e-fd6d-4bf7-acfc-a4ab6af4b9e8",
        "cursor": {
          "ref": "f2c31dec-ca7a-4b63-84a8-b3cbe5aafe75",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "278f00e0-36bb-43ba-a5d6-663b7ef245c2"
        },
        "item": {
          "id": "38a3f27e-fd6d-4bf7-acfc-a4ab6af4b9e8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "06486c90-b285-43b1-9c79-5b2ede58b92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2526b666-5cad-4225-a356-91eb571fa38a",
        "cursor": {
          "ref": "6d6709d0-5f5a-4d2c-955b-c30ee2f0ff3e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a178d6e9-fcd9-43ce-82d0-df39ee2b421c"
        },
        "item": {
          "id": "2526b666-5cad-4225-a356-91eb571fa38a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "595213be-c78a-4801-9de7-2e892d94f633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a9d479-423d-4844-9c3d-b725d69fd7b9",
        "cursor": {
          "ref": "cafa4b7e-0f64-402c-996c-f8b74137303f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4a61b492-a699-43b1-8c6c-86967d304b39"
        },
        "item": {
          "id": "b3a9d479-423d-4844-9c3d-b725d69fd7b9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8bd80408-bcb0-463b-9efc-8896bedf1067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80846485-35fa-4af3-b3b8-c5542538a92e",
        "cursor": {
          "ref": "89847426-033d-4ece-945f-f5f7a3e22d49",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1fde7fdc-19c4-4d2f-bd57-19b042568514"
        },
        "item": {
          "id": "80846485-35fa-4af3-b3b8-c5542538a92e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2b7635c6-aa00-4588-804a-d7252eb9e68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccac1cb-9366-41a3-9923-12c50d04f1f6",
        "cursor": {
          "ref": "b5ebdd78-1c9a-4c46-9ec1-1ef588a6b53d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a5f66005-cfed-4567-adcd-269b46d4a48c"
        },
        "item": {
          "id": "eccac1cb-9366-41a3-9923-12c50d04f1f6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8738f695-5ed6-406e-89d7-25cbc6170bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091135a-7a96-4a63-af04-b1fef3dcf77c",
        "cursor": {
          "ref": "d5874407-a100-48c7-8206-1bee23c4793f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1a039f17-d020-4aea-84f0-bc76de2c749f"
        },
        "item": {
          "id": "5091135a-7a96-4a63-af04-b1fef3dcf77c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b2477512-680c-4a6c-8a94-b53ed56345db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be68e9d4-1780-4408-8c96-6278b1ef42a5",
        "cursor": {
          "ref": "4ef90dbf-8483-426d-aa91-ca28efaf7816",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "32f6945d-4221-40cd-8dc4-a1f037ee63b4"
        },
        "item": {
          "id": "be68e9d4-1780-4408-8c96-6278b1ef42a5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6a5b08de-1fcf-4c7f-96c8-7e6c733a37cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c71217-23d9-4063-b840-1ff33af8a877",
        "cursor": {
          "ref": "789e6677-8e14-445d-91bf-7b81dfd6f9cc",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "626d60bb-1122-4aa9-9b60-571e9ac5c406"
        },
        "item": {
          "id": "01c71217-23d9-4063-b840-1ff33af8a877",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cec5c28b-2f6c-44d7-b926-4dcfbdc5b615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d449a0e5-3af5-4fb2-88ab-006bd0ffd5de",
        "cursor": {
          "ref": "794d219e-dd5b-4557-bfbb-b26be4944eff",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f731bd6c-bc1b-4e7a-a1ca-54c8a2577e78"
        },
        "item": {
          "id": "d449a0e5-3af5-4fb2-88ab-006bd0ffd5de",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5eb30ff8-3458-49fe-8a5e-ed113b76520f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03add7d0-d530-4a17-bfd4-04a68cc5df6c",
        "cursor": {
          "ref": "2446c783-b711-448f-8df3-e68223d766ea",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e1481a96-3fcd-417c-84d2-d07170414d65"
        },
        "item": {
          "id": "03add7d0-d530-4a17-bfd4-04a68cc5df6c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "68f52fa7-cde6-4064-a630-4368ef354287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7206da22-7076-47f2-b729-c3895ff7beee",
        "cursor": {
          "ref": "da998437-75fe-4878-a327-2f654ff8a73c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9d2d2d69-f90f-42f6-81fc-d387840ad271"
        },
        "item": {
          "id": "7206da22-7076-47f2-b729-c3895ff7beee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1419facf-510e-4734-a9b4-1acc70524558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86815c97-82f3-4d45-aced-916d1254ce60",
        "cursor": {
          "ref": "dedbd4a8-0330-4f10-8895-ce1250a76b73",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "36068fb7-9b6b-4ab3-bc29-ec9a6e1320d5"
        },
        "item": {
          "id": "86815c97-82f3-4d45-aced-916d1254ce60",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "173fb118-7096-44fd-bfc6-9e3b25cd460f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28164d4c-4ba4-4499-888e-929a938060c0",
        "cursor": {
          "ref": "1ec36309-52b7-4d58-8108-21387879d60f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7996a8b8-7d1f-49ad-917d-5ce2b7c49f85"
        },
        "item": {
          "id": "28164d4c-4ba4-4499-888e-929a938060c0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cc7451ae-47b8-4066-a93a-ee5d6cc7fc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2a57df-aabd-4bfb-8fc1-4dcd98d5fd8c",
        "cursor": {
          "ref": "227eb840-ba98-47c4-a720-61cadfc50a67",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f69bd28f-11a2-456f-b34d-5e6ef5dbdc45"
        },
        "item": {
          "id": "5a2a57df-aabd-4bfb-8fc1-4dcd98d5fd8c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "355d98be-3ca8-4748-a1dc-96e1cfb321bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88abbd90-da91-4f79-b376-4bb0ee94fe92",
        "cursor": {
          "ref": "5caddce1-7128-4329-bf62-30ffc8d2831d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fd79f52f-47ba-4770-a37c-23c0e65fea01"
        },
        "item": {
          "id": "88abbd90-da91-4f79-b376-4bb0ee94fe92",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "89a88582-ffff-494f-b666-d74ed7c1b9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7e306a-814b-49cd-b927-44249a62d4a6",
        "cursor": {
          "ref": "0df16c04-3e66-4883-9e2b-f3ddcb2a762a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c67bf536-b32a-4ca4-90df-794007d79899"
        },
        "item": {
          "id": "6f7e306a-814b-49cd-b927-44249a62d4a6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "46406cb9-b976-43ee-82b3-b7b99a7e8a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04ad33f-b61c-42a5-922a-f6831c6d3394",
        "cursor": {
          "ref": "8b7646f8-b19d-490c-9547-d34b47eee451",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8eb0fecd-0051-4088-be53-ef3e22a5ac67"
        },
        "item": {
          "id": "e04ad33f-b61c-42a5-922a-f6831c6d3394",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "06c08978-ee8c-4942-82bc-d0c20d1abc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4e178f-b3d6-4451-b4a6-aa62fdc1a1bb",
        "cursor": {
          "ref": "c3e6a075-ffbd-43c5-a72c-28c47b8bcd6c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "82d98f98-ac58-4a20-bfce-93aef6134e5b"
        },
        "item": {
          "id": "8f4e178f-b3d6-4451-b4a6-aa62fdc1a1bb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "654ed407-8771-4efa-a4c9-5ecc1bfd27cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc9e673-4073-49b6-bf2f-f579e7313485",
        "cursor": {
          "ref": "d719c617-f648-4e2c-9c75-bf51ec186a2a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e79a495d-d7b9-4135-9063-46438c560f7a"
        },
        "item": {
          "id": "ccc9e673-4073-49b6-bf2f-f579e7313485",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2483b515-2f19-45c7-a438-73623c027e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1bfd86-1c0a-4102-b286-61334facbfe5",
        "cursor": {
          "ref": "fa731804-a479-4a10-b1ba-d63f0ada7f89",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "58452037-23eb-45f8-a6db-5834467445c4"
        },
        "item": {
          "id": "5a1bfd86-1c0a-4102-b286-61334facbfe5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f99aa5b8-b891-461a-b853-9465b1828ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c42595-84b8-412b-9c2e-1d734e2c83ea",
        "cursor": {
          "ref": "4f9bd5ad-0a15-4050-8f99-987c0bff0b00",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e511c4fa-0c2f-4ab2-8af5-39d12cbbd975"
        },
        "item": {
          "id": "57c42595-84b8-412b-9c2e-1d734e2c83ea",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0d15af64-c3ab-4879-ae4b-dcc747f2b9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd8f64a-53a4-4756-a3cf-0645b443986f",
        "cursor": {
          "ref": "90524920-ba74-4aee-beb0-a083affe098f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fc75bfb7-b716-4bcb-91d3-30ab09fb80fc"
        },
        "item": {
          "id": "abd8f64a-53a4-4756-a3cf-0645b443986f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "09300718-7d32-40f6-bbf2-0e5e1e55ee0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4d6e70-47e9-4255-8f18-a6b4c3ee0eca",
        "cursor": {
          "ref": "8742d40a-136a-4c86-b45b-62725d554f3c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "92596345-83ad-4004-9e82-4aa27bfd15f3"
        },
        "item": {
          "id": "fa4d6e70-47e9-4255-8f18-a6b4c3ee0eca",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "30a66fad-b234-4ee6-a160-c6295aae0c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece39b8b-97e2-4d90-a1ca-8cf0ba3f0a1a",
        "cursor": {
          "ref": "e71a878c-4312-4c3c-b85c-bc8805f1e300",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3c217842-5d98-400b-8734-2b14a1b81e1e"
        },
        "item": {
          "id": "ece39b8b-97e2-4d90-a1ca-8cf0ba3f0a1a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "866ebd9d-18d8-4c25-b056-e8f8e5ce2157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2898da-64c0-4639-9d13-8a248d47d819",
        "cursor": {
          "ref": "ef7bd72f-54b3-45ce-aa30-f027388dd67a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "93291d9d-19df-4696-9f0f-c59772212552"
        },
        "item": {
          "id": "4f2898da-64c0-4639-9d13-8a248d47d819",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cf3711ff-5043-4bc2-b497-aeb638863294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60a483f-ecf0-4487-ba24-9b416e33260e",
        "cursor": {
          "ref": "6f38a0e0-6164-402d-94bf-b6adbe15dac8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "afa7cf06-7460-413c-a691-7f0d5f514d42"
        },
        "item": {
          "id": "e60a483f-ecf0-4487-ba24-9b416e33260e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8573929c-3b7a-48dc-845a-320d4ea3d917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c86f8fd-a25d-4c96-b04f-297e40af20d8",
        "cursor": {
          "ref": "38e479b4-348c-47e2-bb53-41e421b5b657",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ee7da663-3bb8-456e-8c74-4b1348f35e27"
        },
        "item": {
          "id": "5c86f8fd-a25d-4c96-b04f-297e40af20d8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "59e5d842-793b-4317-b8c0-fa6d10958e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e623ddc9-e043-4a18-a633-07f580690100",
        "cursor": {
          "ref": "8931a4b2-786b-4ff6-a5eb-f940a82e78f1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4c34b867-0939-49ef-8320-dad310993524"
        },
        "item": {
          "id": "e623ddc9-e043-4a18-a633-07f580690100",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "faeb4357-39cb-499d-a51d-3d1f7400a142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349e843b-e452-42c8-a904-0d3828693abf",
        "cursor": {
          "ref": "07e4d195-288b-4d15-b748-817d4f42aad6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4a4363eb-e6e7-494f-9788-14c509343f33"
        },
        "item": {
          "id": "349e843b-e452-42c8-a904-0d3828693abf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d1cb6083-1b08-48c9-8bc0-ca85064ff8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d3b697-b227-46dc-a612-14fb3e12328c",
        "cursor": {
          "ref": "f5eb8ab9-71a0-419f-a0fd-cf0c3ca6d553",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e393076d-4b9a-47bf-9bb1-65f4b90161fb"
        },
        "item": {
          "id": "f8d3b697-b227-46dc-a612-14fb3e12328c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0db044a5-c54d-4d65-bd4d-e210dbd74de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc2078b-b5bd-4cbb-ac60-0e606b8d792d",
        "cursor": {
          "ref": "a74c1c53-270b-4956-b353-78b4e653a355",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4cf55101-c1e9-4e17-ab32-8b9b7414b206"
        },
        "item": {
          "id": "1bc2078b-b5bd-4cbb-ac60-0e606b8d792d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4924560c-6097-4bc2-9ea5-13998c2ca14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff8a11c-419f-494f-9fd8-2d569232c144",
        "cursor": {
          "ref": "01697541-0932-4905-b64b-e19e249b12b4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f3b24fc5-16b4-4c7f-90d3-0a71d35a8d59"
        },
        "item": {
          "id": "7ff8a11c-419f-494f-9fd8-2d569232c144",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3061f748-16f9-4073-97ad-4f29a82f5fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fc8a5b-579c-4493-911b-250b7df78bb1",
        "cursor": {
          "ref": "9423d99f-c14a-442d-918b-879c906acc9d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0420640c-999a-4847-8985-3143262e2aa8"
        },
        "item": {
          "id": "38fc8a5b-579c-4493-911b-250b7df78bb1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6c2e54ec-1fb7-45be-adb0-f75f4d9f8027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c10f81d-68b3-4373-899c-e9b682509f99",
        "cursor": {
          "ref": "6b185610-ae01-4550-b773-bc5529f79b34",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "67e8d3c8-c741-4b22-9993-cd9a792f5a44"
        },
        "item": {
          "id": "8c10f81d-68b3-4373-899c-e9b682509f99",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0a295264-387b-4617-bfe6-9e0559f940f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b28987d-5773-4759-8d74-622e0288a12d",
        "cursor": {
          "ref": "2e46565f-5717-4d86-aae9-cccf92a28098",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2fa01e71-2482-4de1-b599-d76a428f7786"
        },
        "item": {
          "id": "1b28987d-5773-4759-8d74-622e0288a12d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "82ab1b67-14df-4ad0-897e-1842092ea379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52417ce3-d572-401b-9f86-665a6de20646",
        "cursor": {
          "ref": "b6170738-7a2e-47cb-824a-8b8876649b69",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cd5adac2-4667-40b1-95be-32757dacaaf0"
        },
        "item": {
          "id": "52417ce3-d572-401b-9f86-665a6de20646",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8c09bb61-803e-4f20-a373-ebd9e1788717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9962f06a-2279-4430-86ce-6d31e723a51d",
        "cursor": {
          "ref": "8b9bc3b9-9b65-4f05-bc09-994719d38a36",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6852719c-6b4a-4d31-994d-712702ae43e2"
        },
        "item": {
          "id": "9962f06a-2279-4430-86ce-6d31e723a51d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eaae8977-9ddc-46ff-a98e-e0f1baccb6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07319c3-b673-450a-82f7-ee08e9d4dd78",
        "cursor": {
          "ref": "a522ec97-de77-46d1-8f86-97f6aca17677",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "df9203d1-57ef-488a-a183-917a5d39443f"
        },
        "item": {
          "id": "f07319c3-b673-450a-82f7-ee08e9d4dd78",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2e292832-e5b2-4d25-a434-ed26a4350fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd9e24f-2a7a-470d-b42a-54d24e155c49",
        "cursor": {
          "ref": "c4d7bfe2-7efd-4568-8027-6789f4484439",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1dd5addd-fbb1-418a-9d10-1fa45868b436"
        },
        "item": {
          "id": "6dd9e24f-2a7a-470d-b42a-54d24e155c49",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d9a3dbc5-4408-4e1c-a0bc-6547b395fbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce28cdb-ccab-4a6b-a65c-96b7b5d165e2",
        "cursor": {
          "ref": "6e571577-5b3a-4d16-92f2-b627aba9ca65",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9cdac52e-eb3f-4df7-b751-f5ea08a6c8e9"
        },
        "item": {
          "id": "8ce28cdb-ccab-4a6b-a65c-96b7b5d165e2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f75206e8-25c8-4cb7-b0a3-fa22a2f94a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ac1889-fd0f-436c-be2e-c7c492e8e420",
        "cursor": {
          "ref": "6b952769-69ee-4a4d-b718-24bdc67ba8b2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0c6412f1-5bba-44d0-8be1-ae79b5cc02d1"
        },
        "item": {
          "id": "d7ac1889-fd0f-436c-be2e-c7c492e8e420",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f51e1321-e350-4f83-8694-7f403fd9ae5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbee536b-d05e-4329-a84a-9b2298c86867",
        "cursor": {
          "ref": "6dafd709-c190-4da0-a2c1-d80d4c889929",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "95f0ccfa-d5dc-473f-b440-dc447cf7da9c"
        },
        "item": {
          "id": "cbee536b-d05e-4329-a84a-9b2298c86867",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "503c0814-8779-4791-997a-5a9d152c7e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbb08cd-62a2-42cc-8d0c-70b10b23cbf5",
        "cursor": {
          "ref": "793d29e4-6177-458b-88ff-6a7241a1c454",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fd4c947d-3d2b-49b3-a6f2-aa91b9f5f1f3"
        },
        "item": {
          "id": "abbb08cd-62a2-42cc-8d0c-70b10b23cbf5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "182a64be-87ee-495e-8399-0db0b2d6587f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3cf1bc-49bf-4cbf-b3f1-ff1b12f887be",
        "cursor": {
          "ref": "72730e6d-0331-4dd3-9cc8-d9ba42d5f5e6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a63e468d-a10f-4797-aa0d-37cab4152e5f"
        },
        "item": {
          "id": "7b3cf1bc-49bf-4cbf-b3f1-ff1b12f887be",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "51e26721-dbcf-407e-8e2c-a0dad8e68db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee86ad4-b220-42f5-8a71-3fafca53c421",
        "cursor": {
          "ref": "d385b5fa-7370-42a1-bf08-778b734f6427",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "52f4a36c-6f82-438e-abb0-f8195f3982d3"
        },
        "item": {
          "id": "aee86ad4-b220-42f5-8a71-3fafca53c421",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e15d88f5-07f9-4f76-8e04-1f3305db4d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc948716-9408-4abe-8a35-49277e0335c9",
        "cursor": {
          "ref": "a6e9bf55-1de0-49ba-90b1-1051e9245264",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4550877d-46b3-4d2a-b463-cac3585a3307"
        },
        "item": {
          "id": "bc948716-9408-4abe-8a35-49277e0335c9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9e29b359-3c66-4a09-b5e5-8186bae40b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa7cf90-1daf-400b-8ef9-492a2b624775",
        "cursor": {
          "ref": "f5e77d16-a859-4bdb-8bd3-afca123966d6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "19284258-7ba6-4162-aa65-93d281eca802"
        },
        "item": {
          "id": "9fa7cf90-1daf-400b-8ef9-492a2b624775",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2a26e289-fa4a-4355-9ced-dee3778cf164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a20bb3-b59d-4c8a-a008-93355212506b",
        "cursor": {
          "ref": "339cbacd-8352-4bf5-9aaf-d8e890bfc0aa",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "873e4e2e-7aae-4cb8-b14e-75a14e13e9d1"
        },
        "item": {
          "id": "07a20bb3-b59d-4c8a-a008-93355212506b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5e6035ae-5313-4fb0-b9d6-67f773fdc2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e494115-1992-483f-bd08-33c4cadd01e6",
        "cursor": {
          "ref": "d4222905-b82f-4706-bf9a-96db7467930a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "72fb7ffc-86af-4a48-88e2-e63852e4ff6f"
        },
        "item": {
          "id": "9e494115-1992-483f-bd08-33c4cadd01e6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3819a6eb-21db-41aa-8d1f-6a6dbe594020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cfd59f-9697-4643-b6ff-4d3a1d64e2f4",
        "cursor": {
          "ref": "74bc9dfd-1ebf-4872-8f51-e4e8aef839c7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5c739251-abe6-4a61-8a6f-69ab2a190c4f"
        },
        "item": {
          "id": "15cfd59f-9697-4643-b6ff-4d3a1d64e2f4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5ee467fd-74af-4fb0-9fd6-0215d5d6395b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cab19d-d09b-42c3-b077-dae3e7b701a4",
        "cursor": {
          "ref": "545513f4-12c4-4c8b-95aa-1b7f95c427cd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9195a0d8-21cf-414e-ad13-e4b95428ce97"
        },
        "item": {
          "id": "e6cab19d-d09b-42c3-b077-dae3e7b701a4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ad3818f4-89b6-485e-8661-6969c896c2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c32525-e7d5-45cb-bf56-96dcb63d3b1f",
        "cursor": {
          "ref": "46de614c-702b-49da-bf15-8874f2e87d05",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0b688b5a-31b9-420a-abe1-a730dbeede55"
        },
        "item": {
          "id": "c2c32525-e7d5-45cb-bf56-96dcb63d3b1f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c710dcb1-da07-4d85-981e-8a6e6a415db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9b2855-9624-449d-8afe-01d7a011bd83",
        "cursor": {
          "ref": "caded731-6cbd-4b45-92ec-16e6ed912302",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "99526a7f-a62d-42f3-bd3d-c8ab9200c9d3"
        },
        "item": {
          "id": "bf9b2855-9624-449d-8afe-01d7a011bd83",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c8364699-5a19-4cba-bd65-e7709ca75d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09642a9-2fc0-4987-9a86-f7feefbdd234",
        "cursor": {
          "ref": "c2cf42d0-3f57-4277-b21b-c1bc0ee506e3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d1ea31eb-ec21-482c-8fda-6b2e516ab56c"
        },
        "item": {
          "id": "b09642a9-2fc0-4987-9a86-f7feefbdd234",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "99a517d6-15ef-435a-84d5-fdf9eba83972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e2102-411b-4722-af62-6e071e54aed2",
        "cursor": {
          "ref": "04ff4fa7-d931-4923-8580-e63475e75b98",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4704788e-c5d1-4566-af97-54b0aa278216"
        },
        "item": {
          "id": "1d7e2102-411b-4722-af62-6e071e54aed2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6b6925ed-d9c9-41fd-996e-c54a986fbf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61c5502-aa79-456d-8210-24ec544aec06",
        "cursor": {
          "ref": "a0a5cecb-653a-4017-996d-5ca2b3c66908",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5341d706-3524-4d9e-b9d8-5348e2a32044"
        },
        "item": {
          "id": "b61c5502-aa79-456d-8210-24ec544aec06",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8caf9cb0-ca66-4664-a894-4c754d6f90ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5ffeb8-788c-4cb6-a461-970e56567cf4",
        "cursor": {
          "ref": "132b8ce5-37b0-42fe-b59e-50b1d024436d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4b28fded-0908-4173-a5dc-43f698e76f50"
        },
        "item": {
          "id": "9b5ffeb8-788c-4cb6-a461-970e56567cf4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b34a9d9c-b868-4789-9bde-5530ba00cf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16178a36-e761-4f9d-95a0-11abb6473b4a",
        "cursor": {
          "ref": "979e2057-a38a-4e18-8314-6ccfc58511cf",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "65dfdfdb-537b-40b6-a1cc-ff5bd38dd430"
        },
        "item": {
          "id": "16178a36-e761-4f9d-95a0-11abb6473b4a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2b040311-347b-4560-a152-f5c4256d4008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1d0581-0f05-402f-b245-8e4d93f91225",
        "cursor": {
          "ref": "c6333053-6adc-4ed6-bd62-9702a7b6431c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "594dff81-40ed-4dee-b722-ab123bf6504e"
        },
        "item": {
          "id": "ca1d0581-0f05-402f-b245-8e4d93f91225",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "188e45c2-5ff7-440e-b403-d0c5b45af240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dbb763-92ce-4496-84d3-52fd28a19a5e",
        "cursor": {
          "ref": "41d86916-0f58-4a5b-bb38-036dbb834bce",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "96ec9d53-adef-4ebb-8c04-504f1d1cf19c"
        },
        "item": {
          "id": "48dbb763-92ce-4496-84d3-52fd28a19a5e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5a9c050b-a2fa-4ef0-acc2-5165ed978f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fdb05b-e302-4c3d-b84e-f4352c067dde",
        "cursor": {
          "ref": "b46ccbbd-f14f-4f36-a329-5d3cb6ec71e9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9cf0a3b4-91b4-423a-99c1-e1e4d706de1d"
        },
        "item": {
          "id": "d8fdb05b-e302-4c3d-b84e-f4352c067dde",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e087735a-8959-4670-8fa7-04de2f9ef682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43d60ad-2e3a-4710-9b27-d77d18b4c92c",
        "cursor": {
          "ref": "3e78cf9e-3d5a-4afd-a0fc-6095884cb3fe",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c06d0b40-f827-4b25-8eee-5603285783a2"
        },
        "item": {
          "id": "c43d60ad-2e3a-4710-9b27-d77d18b4c92c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6e95cfe1-ef4c-4416-9a85-8e3c7c101722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71be3c8-991d-4ed5-9372-624ae799b5eb",
        "cursor": {
          "ref": "960a522d-e06e-4ca0-a352-776310f1c1d5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ed4ff490-5488-4fa8-9316-db94c57570d0"
        },
        "item": {
          "id": "a71be3c8-991d-4ed5-9372-624ae799b5eb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "55b93189-1838-4150-9568-ea0198a61799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ba6b78-f846-4542-a28a-4b76027c9cd7",
        "cursor": {
          "ref": "cb6b1177-7698-4749-983c-4f0a85312b39",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6e8ab0fc-63e7-48c9-8cd6-fd2693029e08"
        },
        "item": {
          "id": "a6ba6b78-f846-4542-a28a-4b76027c9cd7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "be4c1bbd-1617-4c7c-9537-74267de95e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0131d14c-912f-4b71-924c-98844dbce839",
        "cursor": {
          "ref": "4b77c2eb-959b-4575-9aea-b27afca9bf89",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "05ceb253-9b73-4ad7-9e75-fb9a80debd64"
        },
        "item": {
          "id": "0131d14c-912f-4b71-924c-98844dbce839",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f0c5c0f0-fdc7-47ae-97f4-b8dc778dd91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53c3280-6f15-4b81-bfbc-604fd3c562a1",
        "cursor": {
          "ref": "804495ea-e1ef-4edf-b19c-1f172690f18b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dad8f5da-05bd-4476-8e2b-5e795094d9e4"
        },
        "item": {
          "id": "f53c3280-6f15-4b81-bfbc-604fd3c562a1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6f057662-986b-456d-aa73-a7b495b3df0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695fc4c5-389a-4cf5-b1bb-23dbab6d0d9c",
        "cursor": {
          "ref": "f052f28b-c71a-4784-a6a5-0ebd94da075d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0fc61c05-6a03-45bb-a44e-a6ed2cec6f8d"
        },
        "item": {
          "id": "695fc4c5-389a-4cf5-b1bb-23dbab6d0d9c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ec7900a5-dab1-401a-ada5-caf195a90a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d4a907-a6e2-47d0-9306-7cd817083943",
        "cursor": {
          "ref": "5f2e7cb4-648b-4932-8ff2-817a00a489ad",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "de6d29f5-f370-456e-a2b8-3cc047c7ec76"
        },
        "item": {
          "id": "70d4a907-a6e2-47d0-9306-7cd817083943",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5809d9d6-c4f3-472d-88ea-4a64203104d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e236024-6a47-4450-aa3e-3547c44596c4",
        "cursor": {
          "ref": "6cdc178a-1c77-4211-aceb-ce21d610bd69",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dbe28773-c935-46d8-adbf-3e15bc38d588"
        },
        "item": {
          "id": "6e236024-6a47-4450-aa3e-3547c44596c4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "49396936-1e44-415d-ac87-43a1862bda42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce19e9c-4d21-4d70-b0c4-a72544da2073",
        "cursor": {
          "ref": "440bd433-c188-4eb4-84cd-5d50fb2c4da3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "37e45940-0113-480a-9c3d-66e45743efc5"
        },
        "item": {
          "id": "3ce19e9c-4d21-4d70-b0c4-a72544da2073",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e43ca6c-ecdb-418f-8e04-2c14fc2562b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbe5a89-0ec4-46ce-b243-69456ab4fe40",
        "cursor": {
          "ref": "d271da84-90f7-4a0e-b6a6-c8616947d4e5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3674cae5-72f0-4073-95ae-7fcafc2a8929"
        },
        "item": {
          "id": "5dbe5a89-0ec4-46ce-b243-69456ab4fe40",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "99664fda-6a76-44a6-a15b-26976aeadd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001dc678-7113-472a-80d7-ce92768b22e5",
        "cursor": {
          "ref": "4749df06-049c-4768-96cf-32d76d042e72",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bbda890c-b823-4e2d-9e70-9d5e32d7e7cb"
        },
        "item": {
          "id": "001dc678-7113-472a-80d7-ce92768b22e5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3fc269a3-ee26-485f-8115-fa6dc80a94b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc7a9b6-3264-4db6-a19c-77855541e251",
        "cursor": {
          "ref": "1fc31d4b-3247-4192-8708-0cfd29c72a0f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3dba1118-d62c-4201-b453-affd4872fe5e"
        },
        "item": {
          "id": "5bc7a9b6-3264-4db6-a19c-77855541e251",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "efbfad34-0b5e-407b-a98e-73e58aa0803b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b4b256-1bbc-483d-8161-602b2c08731a",
        "cursor": {
          "ref": "98918073-589a-459d-b78f-4d818ddbed69",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d30c9ee4-c04b-4316-848b-febd21edf123"
        },
        "item": {
          "id": "25b4b256-1bbc-483d-8161-602b2c08731a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "38ae1993-b191-4acd-96a0-28900bf04d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f23f54-007d-4247-b014-67b3ca7d1f7a",
        "cursor": {
          "ref": "67173105-1950-4b66-b545-7f98b538ea48",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "db82f28f-b220-40f8-a468-21c0abb66ebf"
        },
        "item": {
          "id": "d1f23f54-007d-4247-b014-67b3ca7d1f7a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "70d8ecf9-5654-4429-b127-50aecb23c89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2a215b-d8b6-45a3-9ee0-38e6c92b1707",
        "cursor": {
          "ref": "f3020ac7-884a-491f-ac3d-4994d8ff7ecc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c9589bd4-7591-48c6-9e0b-a4ec8388ff95"
        },
        "item": {
          "id": "3d2a215b-d8b6-45a3-9ee0-38e6c92b1707",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cffecf07-6634-4ef6-932a-c8159f76e0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97da9ae3-8e5a-4e68-af2d-6cb9c8cd1d44",
        "cursor": {
          "ref": "7bbacfbd-aab2-449c-9897-7dbde09745d9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2bbf85bb-4950-418e-aefb-354732cd6a1e"
        },
        "item": {
          "id": "97da9ae3-8e5a-4e68-af2d-6cb9c8cd1d44",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3ed514fd-aedc-4ac6-ac41-151a85f98a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e32596f-56ea-46b7-896f-57a5e745bae3",
        "cursor": {
          "ref": "d13584e8-e146-4db6-ba4e-d783b4a5fd2b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "796e6bdb-bb2f-4afd-850f-06f7dbc99537"
        },
        "item": {
          "id": "1e32596f-56ea-46b7-896f-57a5e745bae3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9827b2a1-0be4-4590-a8a5-3760643b2aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d29aec6-307b-4580-a780-cc5fc4b59a16",
        "cursor": {
          "ref": "22dd507e-e346-4cf4-bee5-4acacc79c515",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "408ce1c3-2af0-4672-8668-9c6c1059f7ee"
        },
        "item": {
          "id": "0d29aec6-307b-4580-a780-cc5fc4b59a16",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8534acd2-3bab-4bc1-b079-0aa52af9a166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b468115-e9c6-4ba6-b309-a5d6e65450bc",
        "cursor": {
          "ref": "17ec1a40-3886-44c9-acda-51c826d6b59e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0d0c8dcf-1a43-474c-ad72-22e668cfa238"
        },
        "item": {
          "id": "7b468115-e9c6-4ba6-b309-a5d6e65450bc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "91d89085-8324-495e-a7d8-c533b784f711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f91c8c9-c2b0-4d2b-809c-0bc035b22984",
        "cursor": {
          "ref": "11d060d2-79a3-4209-bdb1-b783e5471820",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "efaedf45-a7e5-4d77-bc3f-efc66a39454f"
        },
        "item": {
          "id": "0f91c8c9-c2b0-4d2b-809c-0bc035b22984",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "58b2ddcc-afef-4e05-9cac-5bc7fd006e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4def5efd-7c61-43ef-9a36-0f6e3e35386c",
        "cursor": {
          "ref": "34e887fb-2fe0-4f77-8b12-a7966f368ff3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7396799f-5cd2-4322-b1c8-8f4ac69cc798"
        },
        "item": {
          "id": "4def5efd-7c61-43ef-9a36-0f6e3e35386c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3d6e050b-2518-4eae-9e3d-536104c5aeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8f74a4-9e95-4d62-9e31-ee45543ee31b",
        "cursor": {
          "ref": "15fd7b3d-7179-47bd-a774-611c7fc9fd42",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e39d3c9f-9d22-4980-892a-39204586668b"
        },
        "item": {
          "id": "5a8f74a4-9e95-4d62-9e31-ee45543ee31b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e0362334-43cb-4e78-8527-153326f0dd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37121165-1c66-4659-81f9-b9a0f0dbb33a",
        "cursor": {
          "ref": "c727e97e-2b04-45b1-9bbe-160849d4da3c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4417b12e-5950-4c92-b19c-eedb42e0a3c5"
        },
        "item": {
          "id": "37121165-1c66-4659-81f9-b9a0f0dbb33a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7a8e97be-3fe6-4a2f-9d4d-5fbfcda73364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fb8685-eadb-4e43-9d19-67d9b2f64c18",
        "cursor": {
          "ref": "e66241af-085d-4125-9f1b-d9da26f49786",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dc860b69-0f42-482d-9555-175abb58f470"
        },
        "item": {
          "id": "b2fb8685-eadb-4e43-9d19-67d9b2f64c18",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a9050a9c-156b-4df9-897a-290623a99c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ad3318-b981-4f2c-b9d7-4a7e75a7d1d0",
        "cursor": {
          "ref": "69a9aabb-9538-465b-91e1-6bc8b54f651f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "00577364-f044-4109-9e0c-2551ad9be37b"
        },
        "item": {
          "id": "c5ad3318-b981-4f2c-b9d7-4a7e75a7d1d0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a9af6997-b09f-43bf-a4ad-6f892595e318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8c87a4-3d5d-4dab-8bc0-e1ac3b9f3bb3",
        "cursor": {
          "ref": "accb70be-bf05-4369-9f09-3430eb421283",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "eec64295-c245-4141-ae79-8d48991dd20b"
        },
        "item": {
          "id": "1b8c87a4-3d5d-4dab-8bc0-e1ac3b9f3bb3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d9751b74-3ae6-44c9-84c8-91eb7dcb9c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97af150b-8af0-4f00-b594-38cb45bee0cc",
        "cursor": {
          "ref": "7e793457-2e34-4b5e-af1a-45b4f54539a7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "883c29dc-ee3c-4ac2-abe2-5631525d49d8"
        },
        "item": {
          "id": "97af150b-8af0-4f00-b594-38cb45bee0cc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "69a04003-191f-4921-b417-e675fd3b36bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a6c0cb-c013-46c6-9d06-5950223313e5",
        "cursor": {
          "ref": "4cb6549e-abd9-4f8f-85e5-6436958598af",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "019e85ec-037d-457d-87db-25fd4175723e"
        },
        "item": {
          "id": "c9a6c0cb-c013-46c6-9d06-5950223313e5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "49cdc8dd-7038-49a1-bb4c-81864b9639d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948f095e-8516-44a5-bd14-8e23f5874dbe",
        "cursor": {
          "ref": "76e698e8-ae77-4ee1-ac9c-23ac74eb7fd5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6a5a9b5e-0b89-4584-a74b-21cddf2a6c71"
        },
        "item": {
          "id": "948f095e-8516-44a5-bd14-8e23f5874dbe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f214a9f6-cf5f-4407-aa7e-115a4e002e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f3653d-78d2-4da2-b498-76e54120cda4",
        "cursor": {
          "ref": "fef94cba-6b03-4b47-90a6-273ee70e0bd2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6567333e-856a-4cd3-a68b-8db53cf2a748"
        },
        "item": {
          "id": "f4f3653d-78d2-4da2-b498-76e54120cda4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9a47e66f-0cc0-4e11-8f28-98c52eb9daf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5beed8-8763-4394-94ef-cdadbc39e8fd",
        "cursor": {
          "ref": "7c2f6e30-2399-4ec3-96bf-1e92633192f2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "285b9098-7bd4-4e91-bd2f-9e0e90d8876b"
        },
        "item": {
          "id": "2f5beed8-8763-4394-94ef-cdadbc39e8fd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bebacd80-e8d8-4e78-a674-f5d60ce19c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3e2b22-6677-4cd4-9a7f-cc6838061c94",
        "cursor": {
          "ref": "c41471dc-7f9a-4fc2-913a-b5f55b1260b4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f312ea8a-4d78-4690-b18e-12dc02a15ba9"
        },
        "item": {
          "id": "bf3e2b22-6677-4cd4-9a7f-cc6838061c94",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "78d4a3b9-20cf-4330-b60a-4b2e02c557d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e3c201-e439-43d1-a1a7-d77ba3de3254",
        "cursor": {
          "ref": "ed9fb632-ef7e-45f5-805a-216ffdbc20b7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "79fe2744-1e67-40f0-b900-7cf7e7641153"
        },
        "item": {
          "id": "18e3c201-e439-43d1-a1a7-d77ba3de3254",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "abd38376-b363-40f6-ba98-ea9045558e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a371671b-cb6f-48a8-987e-3cff3f2c9d1f",
        "cursor": {
          "ref": "656b0cb9-eb78-4da2-b401-b93f2e24ad73",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9e6bda35-4079-4665-8f04-a28c5d87a26d"
        },
        "item": {
          "id": "a371671b-cb6f-48a8-987e-3cff3f2c9d1f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f291cfc7-f809-42a4-9585-4b627f9bdf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02664256-2fcb-4fe7-a7b2-f0475ba19f21",
        "cursor": {
          "ref": "22453cd7-000a-4dfa-8ad5-3d82d2f9c503",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c0879f54-1c65-4219-a6b3-c5140d8b3a68"
        },
        "item": {
          "id": "02664256-2fcb-4fe7-a7b2-f0475ba19f21",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a2c4a6e3-52a2-44fe-b1e4-0dcf9d19a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f46927-33aa-42b4-bcf8-1f77822601ef",
        "cursor": {
          "ref": "e9f85a3f-8086-4033-bbed-227341b71fe1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8c1d9f3-7794-4c13-a24d-f4abec2bc7b8"
        },
        "item": {
          "id": "82f46927-33aa-42b4-bcf8-1f77822601ef",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a5c08100-cbec-42e8-b927-a916b1d7896b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475cf68e-610c-4dbb-9b86-0ebaefa11953",
        "cursor": {
          "ref": "08916139-dc15-4ec7-9925-afa985e5dfc9",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "22d1d5b9-1f44-4f44-89b3-574abaabc82b"
        },
        "item": {
          "id": "475cf68e-610c-4dbb-9b86-0ebaefa11953",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bcd42525-f25b-4ecd-8655-9f5f034adb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316d6888-c5ac-4d1b-988f-73be6d4a275c",
        "cursor": {
          "ref": "b1c6d121-3969-4453-9635-f4c0e58feb50",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5580f267-a6b8-482d-b0cc-40f72a06db9c"
        },
        "item": {
          "id": "316d6888-c5ac-4d1b-988f-73be6d4a275c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4209810a-3a34-41e0-bda5-3145ee84d549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a24e8cb-a4ff-4587-9b05-d08330710c39",
        "cursor": {
          "ref": "8bf21823-0d32-4450-920f-72e11afedabc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7b981e35-6532-487d-9019-b38f6018b911"
        },
        "item": {
          "id": "3a24e8cb-a4ff-4587-9b05-d08330710c39",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8819630f-b192-4ebd-81bc-bb960a6dcccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88914f9-1f9a-4c0d-b437-565a998192ae",
        "cursor": {
          "ref": "f98e9edd-f655-4e0e-85cd-571a7b801a9f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "17c098d0-ac73-4235-b553-8eced8a50a87"
        },
        "item": {
          "id": "f88914f9-1f9a-4c0d-b437-565a998192ae",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3c8e7ce3-3ca7-4269-bdf8-5fe0c8fee7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228b1398-e9c0-4fcf-a07d-b9f47bf4fa16",
        "cursor": {
          "ref": "50fcffdc-4b2b-417f-995c-b47656dbe053",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "151e885c-5408-4bd1-b990-d0fba5486938"
        },
        "item": {
          "id": "228b1398-e9c0-4fcf-a07d-b9f47bf4fa16",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6fafe083-5b1f-4bb1-b4e0-21b357d6f4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46955946-9617-430c-bc05-0dc8bfc02359",
        "cursor": {
          "ref": "9a1dd270-7ecd-4dea-9cc6-534d3bbc10ca",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cfa56d9b-92cc-4000-973c-d9261a1d8508"
        },
        "item": {
          "id": "46955946-9617-430c-bc05-0dc8bfc02359",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "519feb60-1ea0-4a84-bbcd-87bca24a0841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7128ee-0df8-43c7-96af-e25ba94ef548",
        "cursor": {
          "ref": "56c64868-ce80-4c71-894e-6c4f503f1d66",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0dad6796-bec1-4309-849c-9bac6261edff"
        },
        "item": {
          "id": "0b7128ee-0df8-43c7-96af-e25ba94ef548",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6427fd24-543a-4741-8224-b02cb50378a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9285129-cb38-4062-98b2-9d6e552fe940",
        "cursor": {
          "ref": "3d6e6888-4658-4fc5-beed-3157c55c3631",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bc81e888-11db-4c52-b5dc-ef40b13d48ff"
        },
        "item": {
          "id": "e9285129-cb38-4062-98b2-9d6e552fe940",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b1968c38-37d9-4272-b02f-fa24a90b0c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1940d1c9-7c51-43b6-974a-c0cb43dd9139",
        "cursor": {
          "ref": "cc3300ff-7782-4d4a-ac63-c13b38e2132b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5f1967d2-f436-4543-a634-be7abc2f8d0a"
        },
        "item": {
          "id": "1940d1c9-7c51-43b6-974a-c0cb43dd9139",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "15a19949-2a22-43aa-b679-cd2e7659876e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "c5d74f52-a4e3-4a39-9c08-295b7c653c68",
        "cursor": {
          "ref": "0ffb67ba-8b33-40db-9340-94b0f80578b7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "290e1d0d-e155-48f9-8aff-cbb817d4039d"
        },
        "item": {
          "id": "c5d74f52-a4e3-4a39-9c08-295b7c653c68",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ed094b7e-0232-4a30-8e86-93011ade9bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "c6f40ab7-51c3-4102-b2f2-4e956eec7bd7",
        "cursor": {
          "ref": "ef3ff460-73dc-4336-a478-5d02c5ffe250",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ccd16b09-8090-449e-a909-4651d67f5076"
        },
        "item": {
          "id": "c6f40ab7-51c3-4102-b2f2-4e956eec7bd7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "71686805-1efc-4903-829b-38206413b7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "c2e481d3-0e43-4e82-8920-8647d5bcab12",
        "cursor": {
          "ref": "b98f1de6-9ddb-45f3-a301-8a513833b95e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "733a33b9-d19e-4cda-9847-5c18e9ec76ec"
        },
        "item": {
          "id": "c2e481d3-0e43-4e82-8920-8647d5bcab12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f733fdd9-2f1a-47f9-9984-f1f9257c25cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e481d3-0e43-4e82-8920-8647d5bcab12",
        "cursor": {
          "ref": "b98f1de6-9ddb-45f3-a301-8a513833b95e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "733a33b9-d19e-4cda-9847-5c18e9ec76ec"
        },
        "item": {
          "id": "c2e481d3-0e43-4e82-8920-8647d5bcab12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f733fdd9-2f1a-47f9-9984-f1f9257c25cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f519f20b-f445-4fcc-b0bb-9d8a9d87686a",
        "cursor": {
          "ref": "b9350633-4106-4335-bb05-7d577a98e726",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4e628628-1b45-4639-83e9-aebde6e7ea80"
        },
        "item": {
          "id": "f519f20b-f445-4fcc-b0bb-9d8a9d87686a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8549817a-57d4-4813-8c11-7882e2b4b7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99055b4b-1882-4be8-b90e-bada5575da3d",
        "cursor": {
          "ref": "8f44bccc-5992-42c0-a8d7-1787f0ccb32e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "663e110b-f358-4bbc-b36a-3ad36e3a988a"
        },
        "item": {
          "id": "99055b4b-1882-4be8-b90e-bada5575da3d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "858ca254-9c22-4c1e-954a-67a5320e3797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}