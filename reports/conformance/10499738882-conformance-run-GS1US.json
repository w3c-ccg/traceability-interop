{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f945ef5e-c4ad-4cf5-a5c3-567b772aa020",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cd920f9a-7754-49de-bce6-d33d91aec5ff",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2627ffac-4d9a-4bda-a307-60d8f2afc102",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "04ffdc5c-77d9-4976-b768-c651bcb84dd6"
                }
              }
            ]
          },
          {
            "id": "bf4878f4-b719-46e5-93fd-258e54e71c1d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d5f8133-54dc-4867-9e34-50111197eaac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b70217f9-1731-4946-a84e-52998e5932c5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "356c745d-f5de-444f-b55b-69a15ee53be6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2ba5c95a-3a4c-4727-ab41-4e945c298c89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83bf4260-a63e-4cc4-9cf8-69072f21a06e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97dd0f3a-7413-447b-87a1-a95a20929629",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb31a708-8062-495b-916d-82d73e59cb7f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05c653e4-700b-41cd-adfd-b47dbdfd14cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09305294-1f5a-4627-abc7-8031e13ba044"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ebf6a7c1-88bd-466e-a7c4-63e81a9bcd2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a60abe95-9893-43da-b008-d69306b1984f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "789fb5ad-1406-433f-a122-f0b4c905026f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0885b825-4dd8-4990-9eb3-443a44b19780"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4de75d4d-5ebb-47ec-acf6-0223cb1f0205",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d41bc55c-5bba-4ca3-a9f8-3d70d5dc5362"
            }
          }
        ]
      },
      {
        "id": "f87a8060-9d1e-4e55-893f-2ebdc707e0b0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a918e81f-64c5-41b2-aa95-9a6bdc745988",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db009134-8359-4a46-8fdc-145e485af54d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0717a79-44eb-4ac2-9a41-8afafda820fc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b511a8b-7398-4593-b232-0abefb23fcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37ce9d81-c088-4670-a0fd-87ff4c630f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fda74b1-09e3-409b-86fa-4615411a698d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa646e3b-e873-46db-8cbc-dbaaab124311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c859de8a-48d5-4ffa-8e52-c344a8b8fdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a373c176-1f0f-43e2-97bf-3aa88a1cbc56",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7b399a-982e-4db7-b069-c01c1c7a211c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3925140f-f781-44eb-9988-54ebefa34e08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "753bb85f-80cc-4962-9521-4a146ec3017c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3292be34-81be-4780-86b1-5dd5737ed5f8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c09ce2-c337-438e-956c-109c166961da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1107f7d9-c6e6-45e5-aa89-b05ef483199d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82b8fc8-1fcb-44d7-9752-6778488dd7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea43774-2797-4f36-9539-5d8ea8e3ac5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2ca62683-b7d8-48f5-ae31-16e9a8e1d33e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19ee387b-3b50-47b6-87c9-defe48aed8ae",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "821351c1-0a4a-472d-8ab7-9080578c8629",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c11cdac1-bfb1-4e15-9e1b-531ce8cbd3b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "857d6ccb-3c3d-4007-8f3a-37e2ab572726",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "232211aa-efe3-4236-bdb5-0a7ba5a355a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a24288c2-52bb-4c2e-9979-86a52a8a114d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77aec040-0921-4575-845e-2fee8766e48d"
            }
          }
        ]
      },
      {
        "id": "7be1e8ed-f8e6-44ba-a488-3e3c1a29c188",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "14c72146-02b2-4016-ac51-36097d6e2e8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81f1c754-a9e4-410a-a649-34cc1f389f7b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b68c927a-2d54-44ee-a582-4701866da3c1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ed4a63-3ac2-4082-a2e5-fe9bd2f38797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3202b618-393d-4eb3-a2b2-139056ec7ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0a85a6-6a31-4d1b-8053-34a687e47ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24d7b0ad-d0f6-490a-9fa9-05e6afe6335c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d1fba6-a350-4660-acc2-813a846239f6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f593109d-425f-4d02-8168-8a7b675472df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f3c018-80bd-4eeb-9195-12d6c4c68b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8322ff35-3ed2-4bcc-8f0d-0a428994e987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e761663-f28d-49ca-a199-ee8640da4cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb2daf7-35c3-4b54-8477-bec3c4a39241",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2061c0-c3ae-4ec0-b186-789170a40022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221131db-ba91-4d2b-866c-f6fe0c343043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc582be-bb91-4f62-87d0-621538f91f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "378a65e3-9499-43de-ac4a-1cc87821c2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd515f48-3120-4e55-b529-a635287e41eb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b90f6c-853d-4940-b8de-b47ad143899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698398bf-22e6-49a2-a5e2-cbedb1059f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46f87ce-869b-4dac-a669-7625716945eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f78fb781-b5dc-439f-9a79-39d58bd9ab86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6e3131-4619-4619-a47f-a7f0d810f70e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a09e9e6-6bae-4ba6-b23e-145aeef5ae8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac6ced9-477b-4ff0-b0ad-71baf3b5544d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ec2c0e-51cf-4494-a16c-b8709035179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4923fc77-f26c-45a4-aded-1a99c8292f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5831162f-4852-4406-be3a-e8f0c3dfebcf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6f1275-fdc3-404a-aff2-5d065c842d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7713970-6ee6-457c-988e-1d79f8dbb389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67eca3-4a76-42d6-86b0-e39bf45895c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad06f98d-ffa3-469b-b858-6afea99f6dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ed854b-3b9f-4cf4-aa58-cf9d96849e66",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98062def-b4b6-4976-9264-716e7d6a08f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eab5d78-b030-475a-8fc3-4f5b15e0177e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba62f465-18fb-4c1f-a58e-3301a4dcd002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e8e5dcc-544e-4c76-a6b2-2da1f8c3df63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab6e82c-9a07-4adf-82ee-35d2b1a7d7b2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e3c7b8-14d0-40c3-9d14-a6e5379b29f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c321828-7742-4d1e-99ad-b0444b897bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76551357-a52b-4227-bb2a-ae62294b99a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c36e4a0-ce1f-45a2-b73c-b13cff9269d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac53863-d0c3-41d1-a85c-d9dc4475b82b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addc154c-3822-428d-b18d-1d78ee9f5022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc763bc9-19de-48ce-9cfe-08a5aeef102b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da57305-f081-47db-8e87-ee21a854ef09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "053f1a31-386c-4965-9f47-d63c60884c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5884244d-1e24-495f-8d20-099469123a34",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27840eea-989f-4637-998e-004b4f7f8f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28dfeb7-26e4-4b07-a336-de46d1c5d63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7f871c-d00a-43f2-97af-7931324c1a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "006ecb0d-9f7b-4994-baa8-e33c0803b136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50af74b5-edef-4626-a5d3-9dd80ad789ee",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38db95a-8897-4264-9071-b2f9f62303e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a88c9d5-c941-41b2-93da-8b0de20a39b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e58f95f-c597-4a84-bbc2-03a3fa1bc042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d39b19a3-cd15-470d-881d-1d883196117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7aaa7fc-137a-497d-949a-6db945af34ad",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a1405d-cd7c-4985-94f3-13922c246742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f72f2d-f9fa-414e-85f6-c2792e0f0c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459a2453-e0d5-4746-bba9-eb47a27373ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8114fd77-295f-4f18-96b7-680a2f200e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b4d6ae-be14-40ef-93dd-0c2d11a3b837",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cd3033-6499-4f75-8a12-0e8b426b16fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac56ed8a-8f52-4df0-bd9d-2c741ee0c8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d580dd17-c5df-4cf9-9740-ce4c59305182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cb848b8-0484-4886-a6df-89a161233dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5786b10-7560-4062-9500-78e9d8b7bd80",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3023e59c-eca0-4dea-8672-791f4482dc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983bba81-e25e-4109-a4fd-aa99d3ceec32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052a18da-28c7-47a3-86a9-5f00ae770110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "768cd0a2-0b4c-4c29-8e7e-da69cee97950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889ac93d-8558-48e8-a86f-18f5a5fe9625",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9e75f7-671a-4423-8c28-ef74e56ee61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611155de-2c32-4f62-8041-d5e606fe9a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2143bc79-2e1a-495e-b794-59fb03811717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9b8b8b3-7bf9-4243-9a84-7063efc28722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ed98a1-d82c-43f6-aed9-48fc0ca4108b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac42b857-0b76-4d49-b905-a2393b6bf7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd77d4e-7ec7-4c93-83b3-32bb376dc131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c1f1ea-4e11-46ee-b298-ec54bd460400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "015bd9bf-d3fa-4bf4-8f1f-9720de16d994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7bb8d0-65f7-4cdc-8f46-08e3bdfce7db",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34637643-5f58-47a0-b697-73f1fa18f86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4da0ae7-7650-4dec-b76d-b12981126f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5debe50-f9c7-4411-a672-d2ef26f50a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04cde5ea-7b6d-46a6-8f44-cdeee1fb0565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d927529a-6792-4442-8f95-9486bd82cf74",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce9b038-841e-4a1c-8929-8a0e3e9c5236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e694e747-d4ac-4ffb-a3c5-6d3a2e817be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de8298d-7327-4df8-8adb-c09963feee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e109c0b8-bc27-4bb8-86fe-fd79a7f760b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190cb69a-867e-4271-b5ac-642cd6f2ca4d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593d5e3b-5103-4b13-a54e-15facde6fcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0ccab0-6f45-42d6-a55b-ed498661a9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edb2753-a961-4142-8d73-8adae98bd882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5953ba0c-88d1-4470-9cc6-b9963daaac68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5e9bb4-bf19-4bd1-9e5b-a916f9a83d72",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cf004a-6ca4-407f-809c-5fa6bff5f93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb43020-15c5-4a52-8805-a93ddec8e9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c65eaaa-e76f-4331-9cd2-a5a366e14225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c46177-1e3a-4b2c-93fa-570ad90e9e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b613197-b50d-47e0-b118-5c878b849b29",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ca0167-25e0-4f4e-b457-da40c1335383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790f0d56-e8e6-471e-b57f-d97a64e2d6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b3ee8c-81af-43eb-ad1d-7b1eff4280ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5db200-5431-433f-ad89-515c3237c9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca9b68f-6bdb-4109-9358-e46a7a7755a3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca9ffc0-389b-4c63-a89c-4cd2b396c6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e53d30b-d35c-4955-97eb-918a685b14fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f02fa2-9f59-4706-b08e-2b7799f58670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4f0f55-2133-4d83-a756-098095aacdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2c5393-7472-43c3-8310-1dc835d91bb3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7758b32-6e13-450e-8e46-0264ab10eab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3090dba6-3cb2-4ac7-b512-470cae325413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e98d7f-a38a-436a-b440-46a770a56b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f73201d1-18c9-4088-8ae8-92f2d6ea6c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc97db7e-56ce-4765-9679-1220c8394c52",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0a905e-6774-4874-9a30-601b815da560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f0136f-5457-48b6-8695-adf49eead756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23449613-b310-42f0-9356-0a4aaf697041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0c881f-4999-435f-8f91-450d8b9e6cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad172c5-1104-48bd-9978-591fac63455c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a8f037-8661-497c-8a5f-a19b6f16d7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e80dc63-d6ae-4384-a4e7-6d17bc568146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4d7334-4231-4b4f-8e17-ccb5be030625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75990b90-0f9a-4db0-b9ae-2e900cd1fde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840d0d43-2284-4525-aa3f-13a36e7b9c1a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf736600-3275-4013-9cea-b6327885e733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1adeb6c-8328-4555-a45a-98bcf391fc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55267d70-6d5e-4cfa-b187-2f81306e67da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0ce9f3-5c47-4b2c-b439-ce14acf00f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb12e22f-6538-4285-b11c-3b4aba7254a3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ab8dff-57d4-4b73-a115-d51c934cb463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337d9c2a-57e7-409c-9b5f-7b5f1a8b1f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86134e6-1485-449a-b214-cc8e4cb36af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6bd67d-20c9-40dd-8506-78cad717c8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39346f6d-584a-4922-b64d-3222c1199a4d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09196553-980f-4ac3-924c-72db14c9e77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a32ab4-4fff-4726-8f93-d4c390b01d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998c9fa0-4c4e-495e-a1dc-b10ebfc5d14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "602fb4c5-2fd7-455c-a9bd-a3c159be30ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3572b9f-a356-46d8-9d36-3dc8878714f7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0de3af9-3432-49ab-a0dd-6443ccbfc929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8e6176-5f60-4110-bd40-a7ac69ea1f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debe2402-1089-4adc-9be5-4900bbd3373d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39e4bc6-2066-44c5-8601-6aeb813bbc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596de11f-5018-4e6a-a6d5-471e9ee60dca",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655cbb68-e033-4c04-9acc-2d301e177721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15dd552a-f3d5-4aaf-b9a2-a81f8238708c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84a4803-1507-4c55-b2ed-e2b4a082cd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ed8de6-8cfe-49b8-a0d0-b4199e67f544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9fc35a-98f0-4615-b55b-7f6c84637788",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de3d01e-54ff-4ece-9ce0-0e625616a20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdec678f-62a7-454b-b8b4-4e1b8c3c4da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584090d3-ff3a-48f6-a755-65234275751a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4a68c3-7a11-43c9-820c-1b8ec514cc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d6ee08-5591-4e71-ad22-49ec75edb6cc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c575a85-c53b-4467-a42d-67b7662de77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801fc57b-18ec-4993-ab1d-3d9f1c3cce0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2b4eaf-3bc1-4443-a770-c32c276f66fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58fcf22c-d07b-480d-bb12-51dd7f8b4131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b836e1-4a76-4168-9e65-81ce3102440e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515134f5-1387-4c96-8b1f-3026808f0d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3ec0b0-b16b-4762-9c37-0dd81dff32b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c155e4a-30f7-478e-865b-7f36fec27fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb193523-d3c1-4402-993f-d97f40506c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e614befa-e769-4d3f-80e3-e68aeb58768e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d382f45d-5b08-4035-b86d-3e7c45f8fa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40e36bc-a7e9-4edf-b3f7-09ebe197f76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d764a35-cc3a-4d7f-a0d2-a76e6774c323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca4caf5-a3f5-4703-b4af-c322eff5bf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364b2063-6117-4a33-9dfc-3236f4360d77",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806501e2-db99-4ce2-b327-0476a6db616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5645b7d4-6b0e-4410-9339-e470d1c537c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a26f52-4f13-4944-bc8a-d869f4300981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6ac86c-5b04-407e-b2bc-cbf232d92751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37342990-885c-4799-9dc4-ec613098cc48",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167a857c-a79e-4319-81d2-75e0308b57ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d7f30d8-bdf6-4556-bc69-c1743af6877e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d2fc05-4ed6-4da5-86f8-87b57345d4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1315a11-fd7a-449d-a0cc-853b2fe5c467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb295993-450f-4f56-a57d-348a1c1d87db",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba411f53-6292-48ee-9d29-55d7c7512525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349353d2-8a55-408f-8594-2056965ad4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29e45c9-8386-4767-98ad-cdd5e4a70476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94331c0d-2be7-442a-ac2a-4b853f25863c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c186413-e645-496c-8cfd-379c20188956",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8913c077-77ff-4236-92c0-7c5ce3b4e678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b8325d-3b17-449b-9c6a-dfb31d778069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296d0acc-d767-4cb9-99ce-94e6d2c826c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1f19d5-5a47-4ef4-9614-aebe62eb6f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b15decd-85f0-44b2-a11f-027715173ee9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c78c48-5584-4606-a73a-2b8be99c53d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982dd928-faee-4762-9f06-963aa29a385c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6a232d-3954-4e00-8467-c29fb1835e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d378ea29-15fe-4bb7-8c48-825a41fe37d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bffc11-1102-418e-a9f3-f24d8248e1f8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8343b5bb-6a47-4037-8932-e285596f480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d335ce-92c3-4bdc-ba2a-dadcdf0114ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdab14b-359a-4c26-9c16-b964d1aae26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86d35ba0-1590-4718-b2aa-0662e6cd435e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f39019-8fb8-470d-9026-20225cd4140f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29307253-3d41-4cf0-ac50-3826c714d05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e08704-430e-43c0-9077-ec26fd66ddcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e284ae-424a-4155-b2c5-6fb8c2c72389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b96806ac-ce77-4c44-a654-2b4c208e0eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75bb08a-e291-4f0e-920d-8f0682b9e805",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb263ebf-ab62-4b0e-81db-702b764844b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91f5714-7037-4305-8dfe-8e8647d4a1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd060c0-989c-45b9-a4a0-327b244a991c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "966c76ce-e22f-4013-8fc4-eafef457c002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36bd9c4-0916-44dd-985d-46ac88b5f6fe",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a5b235-2b6d-481f-9bda-bd9a17a9c179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ef6deb-c8b0-4bfe-b4b6-c410c50965be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f5d3f5-f0b6-47a5-bac8-298fe17a9be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0062b870-912d-4a61-90b8-dc782d5d3f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacf20b1-43ae-450c-958a-3747a96580df",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c788886f-f28c-412d-9a49-157e1ca9a62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b530203d-29b1-42e1-b69d-5b5205fccd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f9952b-d148-4c8c-9ea9-7142b77cbb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4985733-0971-4209-b6a5-cc1464f40d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f7ef09-f4c8-41db-ac07-7cd79cedc56a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58ab997-3ace-4335-b02c-b1485e239e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850ccaf2-1646-417d-91f6-5c672c577ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e941777-166f-42ba-beb1-2669c0ff5822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "374d0c94-4c73-4f87-a729-ee543f3db3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3872ca13-c19c-4685-8b6f-f37ea75c8d5a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fa481d-f5fd-4377-b3f2-aa8568abe890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a2a378-3da6-4eee-b38a-6280dde69ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fa45ce-a618-40f9-8117-e08e00b68586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aac2988d-ed35-4ddd-b05c-164d5f6c5054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9baee0-ec76-460c-baa2-44914ba66e36",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039b7e26-6686-499e-83e1-792ac1ae54b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a85e44b-e923-47c4-bedf-881e4e933267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7707fa0-b996-4b52-a3e8-4d8bf155b6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e037d3d4-f004-4104-849a-5eee841ac460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eea311-3861-4814-942e-b8ffe4d7b808",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05147a8-6258-421a-86c4-ef9fbd830aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836eff24-8a79-4e02-a67e-d2a822b2f997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f7a934-7c5e-412c-8779-0a9a96ba1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0221ef-3f78-4176-9727-33fd62cd6916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae76100-f089-4ae9-85f0-70b01c58c753",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e908be-069f-4805-9b07-c9b7cd94d288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e599881f-3c4c-4c21-8179-a5e1b932a7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452f6a3a-2569-47e5-a076-19f06a7baf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3de1fd-266f-4a56-99ca-3bfe39937844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1484b40d-e1d2-45f9-9ac1-5cd71262dc13",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e46176-02e5-4afb-8489-430a84843118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c246edcc-9c17-4409-9a20-39cd1cd6db74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8980e00a-2cef-4434-b2b5-01f42f45b23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d834a39-da6d-4387-8b14-bf83c233c331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08944029-6534-4741-a369-e821c8aa086c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf6dd7e-bfaf-487a-989c-9cbda72fc4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07de8fd7-7450-43a3-aec8-6c42eff7d795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b29eac8-59bf-4a8c-87df-2b6cd76cfe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e53d522-d61e-45ac-9c07-a697dfec68fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638e3a6d-eaff-4db1-8b06-35e42e209d89",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518c3797-d75b-4fc3-9509-67948f171ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d2befa-bb49-4fc4-b71f-f5888309528a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9a2360-548d-44c5-9a12-8a9d9c0cc0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a452a2-2a8f-4450-971d-9bec7732d2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644599c6-52ec-42b5-ad73-21f67b743035",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d05e89-9908-4a22-a066-2acbb5cf8f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c740a025-fb78-4482-86bd-48b3e0d1297f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3656a682-ffc0-4745-a5b9-5b14f6170d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69e2a45-a162-4ed0-a1b4-6a12f7ae3859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5521fa-1ccb-4530-a6aa-7d8870e73e0c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5929953-854e-4049-81b0-8b6c81404336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d39fdd3-d968-4bea-aa3e-b41f83910d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ebb19d-b543-4602-8d71-579f8f1855cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23cab7bb-d055-424c-b469-40e9f82c9dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe25348-04bb-4681-8acb-468a536e8573",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc9efb4-f20f-4ea1-a8ea-cf22eaa75e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a3a29f-d3e2-4830-827c-fd6cf843d755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e171b960-52d6-424c-8704-8c194c6c3943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca952656-61ef-4198-a74e-50f589b05d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a48d76-f69c-4a21-942a-a62c761eaf4f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc013b3-d0ec-4f8e-a71c-24baa67ceee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330a273f-bef2-4459-81e8-9b39f770a2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3028fa6-51f2-4f5b-a3cd-22c8097da177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1e489e-3b31-49f3-8208-0c7eacb406a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bdc777-f207-4c33-a713-3e5bbdb7a83c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267f1e5e-1652-4190-b082-def7bb7f370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b60221-c644-484d-bccd-2c227e8e9376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92727636-452e-4ba9-beee-fdf5ea026bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7b9ee0-fdf4-4da3-8d19-75c7e99b4d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48124d5d-b1d7-4c49-a9a0-75fd157b3000",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277f7ed2-724f-4736-847a-698e4e1f9e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5396ef-afec-4c98-adfd-851a35665ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212eb697-155a-46f1-8214-6dea8ca53935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "180198d9-06cf-4dfa-a3f1-9ce8d6f2d465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a831e7a8-7f71-4867-9ad4-98a8bfb5564e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29b77b3-a6c8-40dd-83af-c46c60ed4cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a46ab57-80c4-4149-9ffb-99028352e33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c793b279-d553-4319-bf49-4eee4788f54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f95e369c-b8d7-402f-83da-bd37d92a5bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fcbac1-4bb4-40ce-b634-7ceba39cf075",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6fe38c-0215-4af9-a64a-f762da579853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59dd878-ea26-4183-aa56-c93b405f259a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd860940-dd9c-4123-b0ab-88e241acdf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec51d094-b02c-422c-9ca7-b99f4fcfb9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3647b6-6ae6-4477-9c8f-7559aa8510b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d52d0c-0d2b-4404-a306-eff2aff14ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0149eada-345b-4726-a30d-911814b66dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c42f62c-8d89-4e1f-8c1a-04dfa1324856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a795fba1-7297-4618-ada5-61916d757290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bd7238-0c8f-4759-84e2-4215aa338bad",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff86beb-3852-4cb1-8257-dedc676e3ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1342ef01-5997-46d6-8c7c-c93d734d0ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e88634b-99e5-4682-8e85-efca550727fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c815c85f-00cc-4c87-8064-c25bce906738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b125ce5a-7281-4e4b-ae7b-7f7d29e7d39c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3052c8c9-bfcb-4b3e-9273-c02706d2cbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac776339-0776-410c-82d9-11d21885a291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5982686-56fa-4b53-a8d1-96890d4382f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c161e1-3f9a-43ba-ac6f-a74aab886609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa944ef-47d8-4308-8891-0d9c068e3c33",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4f2a5b-c176-4f0c-bae1-ec845a8c65f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11ee155-b974-4a6b-9380-eda6c34ecac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c745cae-bc32-41f6-9b3b-e76d0e4b4f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "947a4d4b-2ab6-4e82-8e14-10c4a1d9ad22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cfccb8-d0b7-45da-8f2f-0829ea062785",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4305592e-d943-4649-befe-31ee8c8b11d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7418a2f-6492-4d51-b64d-731071eb9dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7465852-ebb6-4e51-a1c7-460853957b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d64bab1-7c6e-4204-95c7-405307a533c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc67327e-92f3-4cee-98b4-c2bb5fc87dba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8cc611-75dc-4fed-bd56-8b09799d81aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824b54ad-9dea-4813-b4fd-aaf7a5ba3654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f543fd88-2fb7-410d-b9c3-dfe0edfcaea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b56a9222-0629-41c4-9e4c-e02abbb8e401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72535df1-1a26-460c-a79d-0a3d4e1ad26f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d21c9f9-c905-43e6-b96e-4909102b1e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d48aa48-08d7-48d8-8b53-dd75d9d9b678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f88940b-9dfa-4b7b-aa48-c5fe3c3b7455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "031f8435-3377-4a2d-b1a7-cc6eb6be31e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dc0353-25a1-49c0-98ab-884cab227f23",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97cf7b6-0b68-45d9-934f-1b35a644ad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb08d06f-ac43-47e7-a29e-cf56e192baaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7932965-ec1c-467a-8651-4611a82c91d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39317974-a66c-4094-bfe9-570474b0da43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb94b736-85a9-4aa8-8454-f6e91b1c1086",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e6bb2c-033e-4db5-a3d0-7926f5777703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7971f2ed-2a4d-4455-b102-344343bfa775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16eb9bd-7994-4cec-8448-f411c77aaa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed13d5da-936f-4dbb-a0c3-13a4d3517873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c222995-2b6a-4090-9b5f-c4ea99154c4b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb732cb1-8478-48e9-91a6-fc2144e8b8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7123e469-1597-47f8-9895-6c84212c3959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b602f583-5663-4be5-9715-621c880cc4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb33098-64a0-451b-861d-ea00a1ee510e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb158d4e-ba55-4133-b57b-e94903cc6535",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ebe5f5-cb30-46e9-961c-44e288872dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a4810e-6a40-4efc-b0fa-026987f08785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae700f8-22db-4334-a9e5-331cf7f1ccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf9619b-df69-4a4e-8cd9-1a45057bc3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619ed14b-75a5-4f23-a21f-0c2c8545c19e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab393f5-1561-43e4-83b1-4a653be37d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b1993b-d622-47ba-9ee5-db6233128a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e96043-bcbe-45a0-a4a6-b7f5a78ddd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "021be214-c149-46ff-9abd-947727458fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5582ed7-a7d6-41ed-9b50-662940f44837",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d6f27a-fbff-460d-afa0-551efde646c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f159ce8-22d6-4c19-a9a0-5ab082094959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2fb2a5-f50e-42f3-8488-8e0aeee6254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92d6587-c428-4ecf-bcf2-41ffa9eba195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5399de40-cac8-412d-ac4f-247b226d30a6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf1c511-192c-45b0-bc10-566918ab2f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fd878d-d622-42b1-a30c-ccecd803d582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcad28e5-e0cb-44ec-9305-d5a5440abf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a58e512-3548-4155-9ee4-33430640d9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44d1965-dfdd-4a86-9490-6d0523b150fc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca92a86d-8068-4862-ab82-dc3ad9ba590f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312fd538-dc2f-4de1-afc9-4c29dbf3c91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7c7a84-c126-4766-a0c3-26dfc60e3d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7249389a-d302-4fe2-bb7f-cb7b2a140828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056fca36-cbd4-4236-919e-5d774b992314",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f1e6bb-dd57-415d-8c5f-92aad062d5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6ca73b-a1d8-49a1-a65b-098dcadf422f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d281acf-a27d-4483-a9ce-5fa47f2b3344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3393d8de-8fd2-479f-bf3d-ca046726c8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146cb738-5d86-4439-b39f-cc99e8d89c8d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70de6357-9576-4bc0-87f6-a1abf61f9e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ef28f3-0bed-4ada-928a-6bb5adfd7ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1237aaa5-e8a0-4f09-b322-63018f18a2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "462405f3-2208-43ea-803d-6d583c23a342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991ba08d-b054-405d-9d38-f3a535e4ab83",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcaf85c-a99e-43e6-8344-50ac3fda56b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66734d28-7e09-4bc5-8567-a089b0286cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d85d29e-ac00-4040-ba9b-bc011e7ec5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "096764ba-355e-40be-bfb5-70cdf301de04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cfbc3c-625c-4e76-bc72-b3d970ee4978",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d56f93-daca-459a-82c1-dfc102b9eab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230daa4c-acf7-4605-b986-429daf43f73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1672f875-a8db-415e-b9e7-14ea75c3de24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19880b6e-c31e-4328-ad35-948d79de02b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57f7d41-902f-45f0-bb27-fa6198822cde",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b65a1d-dff2-4c72-b2d7-43c323fd6a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0d8ac0-e3c7-4350-b66a-be1af4899818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccb1752-bc5e-49bf-a07c-91e67fe2f031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61a304d9-2d63-471b-b11f-993d893fde94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e2f8d5-bf8b-485d-b6be-4fc65bbafe04",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaaf6a4-301f-47bb-b171-6847cf7ff4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834ba042-85fd-45a5-be01-247e6dbf0b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3137589-cf76-41a1-913f-1628238aa9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c4e419-8156-40ff-8e4d-1d8e22de2849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0da66c8-3709-47cc-8bdc-fe398ec5b759",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497e6007-1546-4f58-820d-c4606f090daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435e7e87-503b-4347-953b-132bbead81a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbafe15-e555-4c1e-adf1-6d20d530c23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb1345c-f0ed-4dc9-bba1-c8aa62f340d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3e02c8-20c7-4867-a144-7e8ec9c248a8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10ca075-bdb4-4eb6-8edf-6a205edea6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329b35af-2ea7-47e3-a04d-2dffdfedcf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef3c10c-c603-4103-b13f-2a04b9b7701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7e7529-986b-4627-aed0-5082572e06a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5ddcfb-d048-47b6-a54d-f603eacd06a9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bb1ed3-1c6f-4116-bdff-7009873a1000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53169e2e-b0e0-4a2b-ab51-1b93f19210d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6243e89e-7e58-4987-938b-bcc0115194f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2569aa59-804d-494b-89a6-32680f614b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e18552-00c2-44e0-853f-4c14847b48fd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ad5c7e-755d-4d7c-9eed-b2d3c87785de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755b8ec8-0f9f-498a-a89f-e7332a68b483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a31a730-b77e-4945-ad2d-7e5aacddf514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c49334b6-952a-4431-8475-ed92e01ecaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2975ad71-5bf6-4649-96ed-bc40138b0ef6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed769076-ac9d-4378-99b8-e3d439be176b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af4412c-3572-4deb-aa0e-4e3298144b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e13d7ec-8d77-4962-a6d3-98fdc04018db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01570715-6aeb-47a2-9a54-d93ea115d246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0e1bc7-57c2-4821-a40e-12b1550f12ee",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c45d58-bcb4-4e71-9c6e-7154f6eed57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936b447b-0e89-45c0-9261-85676d42397d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55223ef4-afec-4a85-a446-5198666ff3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd39486b-99a0-48ba-8012-c8a478fa75a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14783f1d-3d10-4e5c-8f60-40a50fb3b925",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6759f9c4-8e34-489a-9c11-f35faf8a07c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a1bdf8-da8d-4533-a02b-14baf24d3d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c90c1d-6054-4124-a520-6f5dcbf42d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd30461-f81c-441a-b164-af6b109c8912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77aee322-ff10-4f2c-964f-c21820266c58",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f204587c-a99e-4a13-9b7d-53785d346ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bd4314-3253-4363-acec-169b8f824b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812f5971-1150-4941-b006-edc7d37e48c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e90d2f9-538a-4b39-964f-d9301aae6a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c112b29-daa5-4c18-acaf-f6744491b389",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8843aea-7438-451a-a394-41544fe37026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de562d4-ab2e-48e8-85db-1f6aa32266e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ef868b-ff54-4941-85e3-d79e723bbfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "063e7172-aa79-4bf8-a74b-bd3db9647c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9bcd1e-0245-410c-b52f-f169bd425c97",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc93dca0-ff4e-42b8-9c33-8c0efd7ce621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83c5518-1e6c-48ff-9fc9-62fd76cb68ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d936396f-3d6f-4881-a800-071bc2cc2ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9540941-cd08-4313-8eb6-0cf26a7a4fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e727f593-6964-4f9a-8c76-c965021a2538",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcaa13b5-3c54-4693-bf58-b0598f4497c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d5657971-e6d4-44b9-a282-931ea247c5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2379781-3a51-4da6-8d50-521865b7e38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "baa2c7b0-d403-42af-8913-47b16f878d97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15bdad29-8f72-4d65-8eb5-a1422cb2eeff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aea01238-30cd-43ff-9aa9-f6a7d7d3c870",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4d4099-b515-4d79-986c-37211a01e4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcb71281-44c4-490c-aef6-ab470b0750e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373ae449-3139-468c-b91f-023e0047a697",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "938af15e-9ce6-456b-a25d-977458199b7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88590bf9-02c9-4db8-823b-903ddf2132e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "924d8a6e-4854-429e-a54c-6735812dd2a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8119846e-63ab-4933-9ee7-ed9650c9063d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7925db4-4604-4b42-9c6c-71f09e3521df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a7e612a-4e09-4479-8e9d-099d056019ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87385c50-73ad-45e9-8cf8-b43f62a4bf0e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "735c3146-9f0f-48b7-9798-eee7399e0096",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2ab37de-8ddb-4103-b129-dcf62f091ae0"
                }
              }
            ]
          },
          {
            "id": "38043cb6-78ae-4424-976a-2e2e7b4031a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b50b9f3f-ee05-448d-91d3-a3f49760509a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d00265de-2e12-4b5c-8cd8-9777561e5462",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a95b6a-457d-41b5-a0e1-7333e0561716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "64a0df50-5f8b-4ad4-8217-7ee24a65be02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3994d634-4eb8-4a2b-a1fb-511862263426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc49980-8c85-4555-a65d-191c0ff716ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87010857-f554-4cd9-8e3a-a5b977d60857",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0edebd3-1eac-46c0-89da-918f0282f4af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a1a68b9-eccd-453c-9073-7678dc85ffb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b3d7fb4-911b-479d-864c-9b9f5c20c514",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3441e49-6eda-4cc8-a9a8-b09c286bee9f"
                    }
                  }
                ]
              },
              {
                "id": "fd8f929e-d376-411d-a8c8-cad9e33acdf8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb7f15f0-41da-4520-8ba7-21d2195dfcf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cb128e4-dd22-45e4-aab3-91d02043a9f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fec50fcc-b454-43f6-b607-e8af05e20b4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57fe22cb-fa92-49b4-b6a5-c2b56e6f4bdf"
                    }
                  }
                ]
              },
              {
                "id": "1267c179-6ae3-4a43-ba91-2befa4a5c5d1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9afdf92a-357d-4ef9-8c29-336c9ea70c25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c836300f-e66d-4f10-ac0e-20f1aa211b6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "788120d3-e533-43ea-bf67-0416a3e936a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "542fae3f-6450-4719-a9d4-7443081e0b89"
                    }
                  }
                ]
              },
              {
                "id": "e977b19c-950a-401b-be89-81c7fc68e618",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39c9d50c-166d-4118-8928-0e8a4302b711",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60dc480b-9e1d-473c-a9bf-a5ffed839e6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fea49fd-6e7c-4678-ad2c-ad1b1ee1b3d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f5aca24e-cfd0-4c02-8aca-796958bb2a3e"
                    }
                  }
                ]
              },
              {
                "id": "41e12d1e-1e95-4994-a084-2ff7c219ab0e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a56f1f35-c063-4467-a696-1e5dcade8187",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "577b78a8-b306-4102-88d1-d02c83e003cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad3221f8-bd9e-4531-af1c-3d9b5e510fbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "965f8f6f-60e8-48c3-abf9-9090592bf800"
                    }
                  }
                ]
              },
              {
                "id": "c505679f-4f82-4dfc-9f42-a18a618415a3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc995da-0144-45dc-b8e5-c991d4da52d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2bb9218-8b4d-4b39-a31d-b0d7a913f505"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f936211-7d82-49bf-8741-182de9c31941",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42bea53f-f783-43a0-ba0f-0cd7bc26d938"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "680d7b97-6c3c-461e-8d0b-227fbafa4ef1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13d5990f-7130-4d06-bd2e-82120bdf1af0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc3f91a2-dd48-4662-944a-06c4962ac84f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "729a2ea0-4917-43b8-bd7f-5336426f33df"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7e191cd-d4e2-4b41-8095-f794a046787b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ac30b2b8-2866-4d79-8e16-537ccc6970b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f351bd0-31a9-42a5-b997-cf62ec6a5eb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fe59bc4-ce96-4eae-a59e-225f8f3ca267"
            }
          }
        ]
      },
      {
        "id": "0d07efb3-2a3e-4bf7-b0b7-371a79d015f2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d6ceb7a1-d886-4af8-9524-f307d77469ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70b4aa07-1081-4c8d-925e-344ee83101a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c3aee4b-24c6-41ae-b82b-47575b01fc0f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471c7a13-3ead-4004-8e86-fe4277ed1699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3207c2c3-b539-4258-b858-f10c90a266dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b943c66-075c-453e-bb6d-f5cba1119793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "728994ad-26f4-4388-aa38-ed73234a337d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c9b65e-6526-4b4b-b7bb-305d0cfa7f92",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b14ae8d-7b03-4f34-af7e-95b8605e8ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a53fdc-1c9d-48a4-9c6a-610d0d3fe3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f282ac-ec81-4e98-80d0-1f629223d753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd89669a-bc90-4eca-bc1d-f5548c34a3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678f22dd-5341-4f68-b7fd-a2d4f5978a97",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f806ab-a1f6-46ea-9683-a04352dbdc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbba2913-fd61-4171-ab02-b7a38585e047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849406d6-ac19-4a41-8f32-8351976118d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "698f0170-f213-47e8-96f4-a28fc16fafc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34847bc-ea2e-4223-be55-ffd75e48ca6e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964d2646-55c8-4bea-b142-f6da7d2a6891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392ca0a6-e27a-46cf-854a-0412e8ddc1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def2da47-5ec2-4a3e-87eb-483d63b6cefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f2c2ba-a9c6-4dbf-9095-424fd9ceb510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717f3db6-cd0e-4123-ab44-7c12e1de4daa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3737cd94-4d9a-42b5-919d-0e22f520a4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7e101e-1f76-44f4-95cb-6bf4ce32af61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3892fc-e0a0-440d-be3f-997586cbd3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a303605-8773-4dfb-96e7-01045762bdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27f7188-7fa9-4ddc-be8c-6ec844a2bec3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99312b30-debe-49d6-8e0d-0323b716a632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a006c172-fe03-47eb-a41a-9f4e046b433c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb825b7-7ff4-4654-a0b3-34c99f020acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6e00f7-6342-4a7a-a67e-ac56f03e9ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992451b6-c819-4a91-9c5b-59895e48769d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30379ea6-8683-4575-be0d-10614ca723e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2bf0d3-7732-450e-bcd3-cfc23b43864b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cb3929-73bc-481a-93d3-c811ad65ab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec63e28-46a7-4154-b912-f537a4f978bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87901406-cff0-40ca-a8a6-33e8302fdf78",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b867f1-3f21-4313-b284-4d555daf43cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f857127-b0fc-409a-a53f-4e414c4508bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3840c01-582e-439c-8c8c-9b4da720c8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ba0d1b-f76c-45dc-a9cf-8653e3e907fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660be335-1ca9-4724-96b9-d7b864bdee68",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30578abf-e0f2-4130-b5cf-19acc4a83bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6998bd79-c2ce-4b4d-bbe1-b18b8af7b90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21832f44-f8b5-4b59-a642-f58cb38270c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb75502a-697c-4c35-a0f0-2b359f075bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189993f8-dbbe-40b0-8f18-67329905db56",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aabdfb-4079-4806-a5ba-77412609cac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4521740d-eaeb-49c3-a964-6147087d3e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f85c65-0c9c-40e9-b9be-11f791935f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "994411a5-c2b3-4a7c-9747-9f02a13b5fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7010ab-4cef-4868-9239-4cc96f7c3caa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f626c57-b4ee-4574-9329-d0f0e26f77be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d331299-691f-41c3-831e-7bba4756fe64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e89912-fd95-4077-a036-649c7cedfe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22390efe-bd01-429e-b901-266058f77538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e623c9a8-4375-4790-851f-a536cffcba28",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0fd6b0-455e-4cbc-a3e7-1564cbde31e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c079c6-f263-41af-a205-88e029456e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa27e4fe-5f43-4360-9e20-26a24beadbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a897e5-fa82-42f5-8084-9804d5701276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25853d7a-abb5-4864-a095-8f9926a357b3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd784ae-d5b4-4974-8432-8fb0e184359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b4ffb4-aff7-41b5-bde2-45df899da90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66a0f0a-91ff-48f8-8592-8cd25ef763e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e015bd25-0c3e-4b10-a012-885b59af15ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2df4d26-3772-490c-9fbe-971478780e2b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35b9680-51d6-4959-8f56-16a4a254a18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca5682e-9a25-44ca-af80-6c6c2817ae6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197d2fea-dcff-4f97-9700-3a9180152025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "27dfc4af-cf81-4dab-8907-46baa8ce95c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb1f907-ff43-4918-bdc2-c029834ab814",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b6d946-cb92-4d9b-b295-bbecf40b89b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291bad28-3f9f-42c2-a795-4865d333ff01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553d75dc-83d8-4a88-bf54-15d887be0c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea556d7-18e1-41d9-87b9-54afaf1c67c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b34191-6dda-44ca-8bad-8a3da41ce133",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3754dc15-1591-49df-bfde-5811827281dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67214b9e-6923-4769-ad54-26ff84fc5cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52baf24-afdb-4586-b581-60bd749db23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5275d0ff-caba-4676-8d86-7e057ad4a3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8472ed45-b73a-4070-992c-2cd25887b424",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fa6818-ca30-4d3f-aa92-d36b15aabf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6263c89-13d4-4c73-8ab5-ffb4dfaf4160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92429d6f-3fb7-4861-9f7f-8e1f90e3282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3a9d3c-c195-40d7-b9bd-2871ebd83d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b821ad6-4355-4376-b798-ad8db16aac64",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c88a81e-d3f1-4797-a1c7-13709f9a142d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acca8e9-c4fb-4ff6-a4d2-378b4885b0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f34d83-105a-4474-852c-d34899cace08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b548eb-4bb0-432e-bb09-83a17e7f6ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350cc604-bd24-4a72-9e76-3f80de19ddee",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2741a2-5f32-41a6-b137-49abc045ab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dd19ac-8f42-42b8-8355-70480b273470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7b36da-a3f6-4f99-8259-7ee3fa95a385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26bc5ff1-0bf6-4d75-9674-9d311df22c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e52ae2f-bf92-4eeb-a9b7-1b40c810a7f8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70105bdc-a8a5-4930-9bf5-b33fc0e280af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a654d564-1154-4817-802c-a0f55402d4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5066f9ce-b639-4b41-82c7-83f32b3c48ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d30a1aa-7bfa-473b-b2ba-ec91fcdb0b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e019a6d-1ee2-4d56-a167-0597e1a8b6e4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9162407-4007-4096-9dff-05ec149020a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddfbd45-1e6d-441d-93eb-c562534dfe08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222a2358-ab3b-4dc9-bdea-b22eeceec430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4810455-fe47-49c0-ae45-ff97223dcaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6d17b9-773c-418f-b0dd-d9e61bc9c884",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0396178-6fd3-4163-bbba-ed41804b1a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1c01d2-8fa4-4952-8422-395267e38fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff6fa42-c2b1-4741-a253-624b7c82e5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c963227-7edf-417e-986d-e861c33cd78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4356d00a-3848-48b1-8356-45c3ff82e73e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0745c2-d190-4a8f-892a-e8699ce24c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593c0cc5-74e4-4f8d-a9d4-830265163dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9495d6-0993-4a76-bc2f-e4ee47861da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb3eef7-941f-45d0-ac3b-814e9ee0e14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c362dff2-308d-4bcd-8643-1b2176be5494",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24120c36-9fcf-477c-8ebc-e4f23e692d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a39d011-702e-4ada-9a7e-9242bc800aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a24d9b5-6298-4c48-9e45-926265e7f80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d44cbed-10bf-4663-921a-73f04f006c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535e7f49-18d1-40a4-ac28-c105ba16799d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e68aca5-927b-4fe8-aa62-47afc2b98ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa61fb3a-d296-4eb3-871c-9ca3dce63d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f512aa-b0ac-4264-87ee-2d9405b87bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f398ca68-c7a0-4478-9db0-e09cad244617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9cfd0e-8221-492d-98fa-81c8edcd6890",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e2cd21-d390-40b8-9868-96b0ff3d4e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de697ab-f1ce-461b-8300-b657a7bdac79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f68b43-fe53-42fe-af2e-a16d5f3d18a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23522081-c54e-4af4-a49c-2fdcbd3dca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf478e7d-fc2b-4c76-9bde-bf2d569dd298",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a801ba27-f88f-4e11-beb6-8f18198db4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b508839e-b1ca-4266-a344-df498be1f7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1bd8a8-2f0b-45d3-aa07-330e9fcca39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7030ccc4-28c6-4fdd-bc4f-5826f1b84e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280317c3-0e7c-4da2-9cfe-c9d411e644b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19340b3-aa9f-479b-afdb-3d72380000c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327a8c9b-dae2-4549-8c63-442b616d6a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8442b74b-4f07-4c42-9e07-16667fdf78f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63dcba4-0614-45f2-a162-7bdd8224c58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21639ebb-2277-4027-a28d-6ab5a48dc648",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289e9b29-f9d2-4b81-9117-1565efd814ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7871fac-2af3-4e2b-b244-c54c625f7947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478fd5a0-35f8-4765-9da8-1545f85587ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ec36e3-d569-426c-8994-715e8da49d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee0d4fb-6b69-4c37-b0ed-7f88248e785d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5045ebcd-7032-41d0-88f8-0a1b9baaf00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ee4444-0b43-418d-ad7e-f07c58395d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc9b8ff-e0ed-4f43-bb98-ca939c312bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "642746bc-57ed-4b34-9499-0eeefcc6f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02e8718-aca7-442a-b92d-4520b93eb455",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0109d7-6bb4-4129-9e6a-1043e45a6f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c775daac-00d0-4ec6-b51e-f48778b9d0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aa6f77-d6bd-48cd-9003-58dab7bfc77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de7b0a50-09e5-42e4-99a0-28fb379e90b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29beb726-f0c4-4ba0-a3de-0433eeb974e6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40643ba-f4c1-45e2-a045-afabca5a0da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b061a56f-4d40-45cc-91fc-4150792c1bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85e2116-0382-46b1-8292-b5379468e6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4fea77-a610-4dbc-af1a-187ca9f2c111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577c994b-c80a-4eab-9f3e-e4e158a6337f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae8bf9e-55ea-4b8e-b9c2-1b1ce43bca4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008f9b3b-5701-418f-b979-29b0db0e57e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48672063-fc30-4f7c-8c30-c52fce73ba39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e55e63c-d664-4b6a-ac0a-0899a86954b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0035d69-e90f-40ff-b0fa-59ddc9eba1cd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcbc8f6-f932-4b6e-9aef-1562fdf44bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30bb625-b16b-4707-b5bb-3fe1ea163029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70fa0eb-858f-4982-ab85-f5a103bf4778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e19e604e-3e6b-4225-a4ce-79249ff47807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac25ab4-0b9d-486e-a888-1c76fdeefc97",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f19760-fef2-41bc-b25f-1aa748fb5ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87174de2-a700-4256-a055-166921604b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32b5d9b-9c39-4617-b9c1-ac3efbe7f312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1419809-4de0-4e18-a490-8d0e700e0046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab1d8b9-ec60-4f1c-9375-b7a16f119073",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db42e369-f316-4b31-b832-e3e9d1d63579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a705ddea-eb60-47b0-a4bb-6e258a8ac08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fa5d05-e9cd-4fa4-98b2-85eba1554dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2503a076-bb44-4f4c-9382-f417160951aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525420d-6ed5-41f3-b395-7b2cb0622c1f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb94652-c372-443d-8b43-272e99dd02be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25cd9c2-91db-47c8-a47c-5f08d45726c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a4c2ae-2955-4998-b3a3-76c9b1d80957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aec7b7a-824f-4169-b3bb-914515740783"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae326f59-c91c-43bc-9e7a-31021340b26c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd4219d4-d91d-41cc-b37a-d134b36c58a2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc63bfa-18f2-44c5-9e8c-28bd1fb373db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "31409697-1903-43dd-9120-3ebfb985723b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d9596d-aec9-4a6b-91d4-3b280aa61c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "796b02ca-5166-4104-9f53-026891a49b2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61f83a3e-73b7-447e-93d1-08c887ed1e7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16890563-3cf9-4223-a5c1-d9330219a9f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f834ae18-dbfb-453e-a456-aadf2630be3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2d23115-ca4f-4f5c-98de-671a0c40c9f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9741a85a-e7b3-4da1-92b0-f1c59e36ba73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0bb32a0c-b0ef-4ca1-b6c0-3a0b2774ab06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a30d0a6e-d545-4e30-bc2c-81c13df5e117",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14851326-3241-4fbb-96da-1a45554ef26e"
            }
          }
        ]
      },
      {
        "id": "3a5cb230-d9be-4e9e-b08b-3e1980bb778a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f3843f9e-70b6-4bb2-a87f-b4bc5ac2c676",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28901bdd-562e-48df-a51e-cc3e56fb179e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8d0ce84-09c2-4a41-bb1c-d979a8480795",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3044e86-bb67-48ad-94ff-6c525cf8de7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238deba9-6f8e-4605-a63c-8ad900ebdf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49676a9-c696-4bbc-9f7b-94ae662d14f6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be486bf-ff48-4c0e-90d1-724a55ee8889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19495c5-508c-48dd-9c3d-02afe6619d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdd28a6-6957-4fd3-9715-1762ee8c9f2f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9356aa65-12c4-44af-8428-f9442374039b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e3b9c8-956a-4de2-a00d-a08889d367c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9e5282-6a33-4bbe-9d07-4810e9c96d14",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75f69bc-d216-471b-8142-37aff9728d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab582d16-dc7c-4640-99b0-6d02f8dc3f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee298f9b-d23f-41ae-8674-5df8fa80cd41",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84220724-2933-4917-a9bc-57f5c1f24151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5a390d-131b-475c-b6ec-2fc794cf7b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20caf2b1-ad85-4539-b8d4-a62e26f0991f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3732e0da-13d3-49c0-848b-e1e349312ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2267da-17f0-436e-8ab1-b3849533d977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd3ff30-f239-46c1-8093-28cfac6677f7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473ce6b8-73ce-4821-9d9c-a68bfd7e6fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af58dde3-bd6a-4b9c-a38f-747c42f68fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b42b646-a747-4c30-9ebe-04f5707596aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76147e8b-5ffe-400d-b6fc-e680489590e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bbcf9f-e099-4451-af41-64281cfd4979",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bca165a-24bd-4b5c-adf6-f2be8d75526d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4fbc16-9459-4f2a-8596-f3a2ee487abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75edaf88-ca0b-4809-a829-87b208b80f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd065ef-fec9-40b9-8633-dde45a4c4f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39724a2-771e-4162-9e0d-ace09eee7b94",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a9d3b0-d949-4926-83e7-aac7000b44a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef78d7f7-d804-4b63-ab0e-7e8c0f5bfd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae85fe1-9b9b-46c2-b7e0-a9ad436cdf13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01221e8-34c9-4266-8fea-4aadb78c120c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5686469-2bbb-48b1-b958-f255ce2d91f1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac679f6-6efe-400b-9634-9d7b68491c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f38c810-c991-451b-bd99-29968e2b76a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a65530-6f8f-4fa2-b05f-5524d37e1157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161a6e2e-f395-414c-b42c-ad9d034209e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac5eea9-568c-4ace-a963-0008d34db5a8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631c3bc6-b6a4-436a-8a9b-0821d5a72063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ffd362-b7fc-49f0-b36e-f77e90b67ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e5366c-58bf-4c57-b045-52366f68f417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82671833-b66c-464b-bc78-0d6116514650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d25122-78f9-42bd-9daf-85a99c66b487",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b642c6-d66a-4ddc-95d5-9fd8176c3734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06716931-73b8-45a4-8eaa-ce6497d126a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7020b8b7-0979-4ded-b256-9638e54a918c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89229d83-4716-4417-bb17-b78175f4260e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dc7c99-eebc-4c54-b068-d16f4d854385",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7901934f-3018-4118-8fc4-f67d52fba61d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f46ae4-8b15-49a8-a659-3e51047c3134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bf64d5-1e8b-4f8b-b14f-b95175498b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5aed18-9d55-435a-b181-b17667b2a01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffdc495-830e-4849-95c6-581241fba472",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec6c34d-1f86-4df5-90f0-c8bbfc0770c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379becf2-6f88-4f50-a5f2-d7d495f16127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f29aad-7835-4127-bdda-7835a96248db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25e17f1-3c6e-4229-9e7d-bdea3794ffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01be72d9-0451-43ed-8d71-f30930f235f0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95582f0f-a5fe-4921-bc1a-a4b353c844f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9e227af-6fce-4dc6-8e7f-1380782f7d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc3f90c-1ce7-445f-8bf6-a059940b333f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26e0353-e055-468c-8e0f-9fcc3c3f4636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed03e7a-a585-4cf8-b184-9c15ef345b7e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ea8ee8-9c7c-4133-b945-f0ae15f09e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6691ab-c61a-4dcd-bfa0-218f54d14965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233e6ccf-e3dc-49e3-aa65-ae29b3f659ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7293f856-3c6c-4627-a0f3-d99b5e874c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cebe47-fcca-4e6e-8595-406b8096f4d4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ce27ea-f83f-47d4-a824-2843ebdbf591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1487535d-4846-42cb-8129-68ce560179ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402d6954-23c9-4e57-9e5f-f542e159467c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fda134-f77e-4f0a-8c92-7e270c5a9721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef1e6d9-0d3c-44ff-afa2-bf16df7df299",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a327cf-530c-4663-afa9-f6f2d3a4b557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3884559e-210f-4095-9998-eae39ebdf248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136edba7-4296-4fde-9c14-14ffd828ddef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d780fe-1081-4dd0-a21b-c35a80651e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbec72af-94d7-48c4-a87d-e5b083081167",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426a6a13-7bdf-4e4f-a74d-45429fa8732d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e2de62-c9e0-42e0-9cbc-e815490c338e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beaf657-ff05-49b2-beef-ae4503301196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a647908b-c5c9-4aee-b351-83514c9bdbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6974ffd-57b4-4c72-b98c-5b24cad15932",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab7683f-ace8-4414-ae10-d1a394fc85e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab51b601-d059-4021-9df9-cbf34c1fa6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f09030-81d6-492b-9ed0-d738322b2e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed97c0b-8a5b-4e5b-8c7d-9bd79cfb1d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55800ae7-d646-450e-873c-aeba8e7b2ca2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c848d387-055e-468a-bbf0-2d35555a4c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbb0d16-8e73-4a6a-a685-020ea6e367da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b584ba6e-6ce9-4880-b22e-86c4d746b597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f145f4-e3c7-4b43-a15b-9551ea7d3076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950ecc2a-b523-40d8-bdac-925ab86a66fe",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9ed6d6-689f-49fb-9594-58b815fefe28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48f14cc-ebcf-45ca-aeeb-4ca73a6afa1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e59e48-b19d-45e4-9e0e-d6f2d5421694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f42aea-70f1-4e5c-ac4a-aebc666fe580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7019fc85-9188-4925-9ef8-251bb7e7979e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786904dd-545b-45a8-916a-5576a6acbdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c7d8b1-8646-4c84-8f35-af0ef3b93dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6684c2b-351f-4755-85b8-3f644077761a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94c745c-dd4a-47eb-8064-3ee0ab0459a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65488f3-534c-44bc-812c-d113ae2e540c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642201f4-a16a-48e4-b57f-135bb90070e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8a72ce-dcc5-4250-9b55-d51ff87fb970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970a8800-b63d-4694-81ae-32f965268281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006d8f9b-73b4-4a4a-877a-927a170aa18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4406f6-f674-4229-9e3a-f202a48ee084",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37fa40d-6f44-43a2-a016-cf47e694d604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eac1803-0204-442d-858a-fa521cfac764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cb2d84-ae64-4d2e-8241-e32e75f1b286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93491d35-c56f-422f-8c66-7e918377760c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a82894e-2a16-44dc-8d65-454d57dac091",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be75208-f9d8-4dd3-a420-aac1e49f9eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aa7c1da-0fdc-4cf0-8485-ea6701a7f7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5689c293-ff9d-4ce8-8e51-160df01862e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a27526-3213-4a27-a5b2-c273f187ef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3196f6-64e1-45f4-93f2-85e887e796e8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de6ab9b-4ff0-4035-bcf6-76ff60505d9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d89bb3-014a-4683-9199-101eeaacde37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a71297-b893-4179-ad1e-b9ef6e9d9802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a149a8f-39f2-4e6e-abd5-6ae9fb376cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a185aaf0-87c1-47b8-a338-de9e02ad5d14",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d779e187-8582-47f2-8757-86dcc596fff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4a1cff-6007-4ca5-b469-af4d2f477750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a986677d-b368-4a18-a701-efe3979c7912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4850f716-5020-4e0e-8c0f-8bc33a094963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e52c7d-479e-4ae8-9f50-f4f97b4a201b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7802097-f5b7-4912-be15-91286ed37b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17968e8-2ccd-4b8b-ab00-f4fd6ce54641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c55b99f-e33d-4e6b-9312-58fe6052f8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3a063c-4ca8-455d-bbc7-a96980804149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdab573-7e6c-405d-9be6-4b59f69a8c4f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37fde40-0056-4990-ae58-c5f64204cee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f2b152-ec9d-4f2f-b628-d18d5b71f688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e5f985-9905-4252-843e-f2b56511a4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9e726d-216e-46e2-9bb1-fb9e74f0384c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02566d68-4127-4ad0-b859-b95ff368ecc4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a68d8a-9c96-4442-a686-20aef5247669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2001be7-ba0d-4a6d-8ab4-bb180694f6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329095e1-710d-433a-9caf-4d7d54b08fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfbd49f-2444-48f8-94c4-b548cfc303eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe78e1a3-f9e1-4627-9fff-12c56cf46db5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65591b4-f38f-4c15-98e5-deb71486d393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa35e82c-166f-4571-826a-d05346b0d86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effa025c-b0e9-4d30-90b3-fe9e9b2ad5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf29d86-715f-4596-bd80-55ac95a79896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410d69be-dca4-4d7f-83e3-a8ca168d2594",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a185005-8b49-488a-a1be-5b7d5a6c144c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d500721-e947-401c-9b63-2b6750c74f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3bd826-03d0-43d2-ad69-617ec75890c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee647ec7-f912-4089-be90-d0faf631a1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1921d6-7121-4595-ac68-6c158b12be8a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eace55-98ef-4e8a-85cf-261ba4853b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c6d35e-dd5e-4e8d-a998-469d51602dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bfe156-724f-4096-9533-44fb98e86f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb772b01-e960-4701-b255-6bd5ff4824ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8eddd8-ae5a-481b-9684-53a737a250ff",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bf3f34-b55a-4531-8c04-c3e9ecf52ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41d6a9d-a03e-4f4d-8896-8362fa8c8bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c41d73d-2c21-4cc1-b8d6-04f5c27408a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631c8b02-33b0-44c5-9663-22b80ac8bda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfa9026-78f2-41d8-9b86-f57a58bf3c18",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f671a882-67ee-4b34-81eb-2e9e142405b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20628d92-a90b-4691-8277-7245f7ee051a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742fadfb-d127-42cf-bf9d-658dc4608566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12f15ee-2d7d-4aaa-817f-6f0d515df611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd6d6f2-3946-4a38-b170-af83db0288a3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae8427e-1393-4897-b0bd-0e81269dec68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c34e6b3-201a-466e-a8a7-be13b4059c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652ef63a-f977-42d4-a5a3-37d417baa86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e556f8db-4973-47d7-986a-e41bf44d199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5e0f5f-43c3-4e33-8745-c63df45c7c14",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e9ea42-28e9-4df2-ad4b-4671889def26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646e5938-cf96-4236-8f48-bf758baac783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f425f9b4-3c4b-4af9-b5dc-97f27951adf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31332f6-c985-4cc0-9a4b-f60116951890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6139e5-da42-44c2-b29b-b95ebf0388dc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cafbb09-6539-41a7-a604-4635689ab7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7cf763-9bbe-479a-935e-eed574dafb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a06be1-19da-4ab0-a632-85fd3d55807c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d7c973-8606-4eaa-a6c6-410479d961bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26df6057-7539-4804-a41a-bbd3268c6812",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab02f0b5-2d86-4a42-878c-dc1706d655b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448be8b7-5ccc-4ecc-9d9f-0dff1cd04e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0439d2a7-38aa-4d93-b399-4efeb2d45b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e3d7e8-5c84-43d7-a2f5-dfe776274999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65b6808-8e27-4533-bf92-558f4b3369e4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd072f30-b13c-45ef-b2de-1991ea27f902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7523eef4-9043-4c86-bae9-d0110347f3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5fd056-353c-4495-b3e6-1ae33a3f3461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6199ebd-423e-4678-91b5-8fa56a023336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2ce5a5-a8a0-40c4-9e42-d01635ae539e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46174a2-4a2a-4474-81c7-993349151141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4795dc8-4e8b-4525-bce1-62a0741cf507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb711bc7-fcbb-4aa1-9473-821e26994a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081c58d7-a955-40ab-8e1d-25034c3f5b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475a79ce-28af-48c0-971f-8c15daaec403",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98d5c58-ebfe-4c25-9ea8-2d71f7ae53ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530378e6-f79f-4a50-a3b4-3e29604c9327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed336ff9-299a-465f-a6ff-343474999536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329970bf-57aa-4720-9047-476251867963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ca78f6-2405-4a02-aae8-db5a6177f509",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7127ea4d-78c0-457e-b91d-5b0a14fa9334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4d8f27-3a53-458f-860e-d7e67367502e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffc5766-36c1-40c5-8c15-0036b83ab999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cebc478-9cec-4988-b546-081af5fb2733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaf8f20-68ff-441f-a663-425b41e96bd2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a14ce15-40a2-45f9-aa65-07129043d1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfe45fd-5360-4fc5-a536-0d6d9776c079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d423b8d-6474-4754-9345-744fdb250751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85436b9-a03b-4465-ac48-f042e842552c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d862dbf8-05f2-4735-b061-c12a7a0a910c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7f0bf6-1b21-40f8-a342-dcbf725196ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed515311-dbe8-41e7-b6cd-6ef5114f9581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad9b6b5-bf7f-4883-b17d-1fb0ed647f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f1707d-8dc8-452c-ae38-d89ae53c737f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bb8d05-b970-4265-b891-6070af4d7f53",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160628a7-fe47-49de-9e7f-4490d86718d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b4f004-a964-4ebd-a4f7-031994243839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869832d1-aacf-46bd-a150-57181989d1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49a69a0-eb1d-4584-bd2b-969281a40701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a466c8e2-8eda-48f1-b86b-29b5986d9160",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff81b29-ecdf-4ade-8d06-36828d8dc88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a02bbf6-5dec-426a-a231-55f26c02fca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f368d17e-1eab-4cd1-81bd-76def02c6748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e1c829-333a-41a3-9bef-5d2474c8d0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8e35f8-e554-4b63-b01b-2fb194e5dab2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feedb5ca-08a7-4346-ac4e-af2e8b8b598a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04ed099-7714-42ee-9f3a-7d424d1fe56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1bab24-f3f2-4ac4-9a40-e45884f0b212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8764fa-e753-4141-8ba2-7de05620f213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b7dbf7-ea7a-4d17-a696-6ce2d4882780",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b29742-b7ea-4b0d-8e95-09936304f887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161b39d2-3f18-4d06-a486-cfe350a265a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b9c0cc-1a77-4c2b-8d25-412e65b25502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5485f47-3be0-4f4c-beb2-bf1456ec7ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4ae50c-f017-4029-b26f-6171286a7f20",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41901e1a-bca7-461f-baad-b476b3b8fb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6ed9d9-a095-41c8-934d-addad8618369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0257a2-e8f0-40cb-8dcb-7d67c7c79df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7048d2-a753-451a-9b38-24465a9fca8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d958c492-0aed-479c-ab81-270bcec48e31",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95078976-ebc0-43c2-9eeb-3fcc4fa79c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabf82f7-0474-4012-9892-04e923ffacb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a855a747-225f-4e37-8818-c52920dc7ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e401f82-7740-4d49-b228-66e39445aa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1251a0c-563a-44e8-bd25-271676f11c82",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c46a63f-35df-48b6-80f4-81210e40576e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38feee9-f634-4c13-8890-e97b7ec2692f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b687bd-8619-4874-96fb-5324904d344c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4361b473-2291-4936-b2ea-189ce373c6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14b5a15-a5b9-4080-9389-17f680bb8f33",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afb5c52-e60f-4ad1-85c9-46eec6e2af60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07168a48-e1ba-47fc-a53e-5708100bb008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8ac02d-487f-4793-8b5d-0f41770dd6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea3c839-02f5-4939-a452-1d88497e0f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5110319d-679b-43a2-99f7-c26c10976a31",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43d631f-0e20-43e9-a392-1da6a62439c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7009f8-885a-4bc2-a8cd-c71bfcbafec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24fb99a-7c19-4d72-9fa3-ffa8cd14bfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6c7915-58b9-40c1-b733-8977d43777c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1a0d09-8e5f-4da9-b8b3-c65561efe117",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3fe5e3-1aee-437b-95b5-07467c63cd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f92f9eb-aec4-466b-8596-320a196b7434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b7bc50-604d-4371-88e2-d9e39a28a8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527e311d-d177-4116-b787-08049081a2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080770c1-6975-48bc-9bce-4e7180dcd093",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f8e1ab-3f18-4cd2-857d-a2fc8099fd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac98c09-321f-41e9-9f0f-699015bef097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9db795-b74a-4a3b-a41c-adc1972156d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1403483a-069a-4efb-862c-e661849c3852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9288b25-d10d-48ba-8f62-d863e9ee72d5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b82b74-881f-4af1-89c0-8f08b9936bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44108279-2cc1-4ef5-9800-34f56f59dfad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97164e2c-b916-4988-ba25-059384c0091e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43b7491-5605-43cb-a818-d723b6475622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6d8ff1-1bff-4138-a888-1103b7fdd54f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5226cb89-489d-4e49-8735-3b8065b9a507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f526e0a-328e-4c2b-a220-2a4aeb87b61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa0be1d-386d-4dd2-b9d1-88593d0575aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb537536-e728-47c2-aa0d-06cf880a9d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f38e5f8-03f4-4c60-9fa2-127b5c7852ad",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d607d77b-d1cf-441d-80cf-b9aac550b0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c26c88c-4ce1-4cf2-a3e0-52be75def079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc44d601-96c1-42ad-89d4-cf185b94a252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a446751b-064c-4125-b70a-b2fbf99f5ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b328b90-efb6-499f-adad-9db3cb2afe44",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795083b-89eb-4a3e-a3a2-ec48a73d412b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f287ca-0b29-40a8-9b9a-2f218ceb4a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4769318-1be9-4ece-82a6-ee7d744e8f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed84935f-2ebc-48f8-8e0f-f405c974e0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208e6b46-c2b7-4e72-ba96-10686aa5c209",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74252b9d-5ec1-436a-9cef-51c416b84971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7f3fd2-74d2-4ff9-81cf-196787a6d050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e21b9e8-ae2b-4def-a896-ec9e7f0a7849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68428cbe-da43-4928-8c4e-58d9435b3a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27287588-9384-49a1-b700-83d4019eeaa0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd855c1d-85c0-4048-88c2-1507b88c2df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b302c3d1-48f3-462c-8c8a-424f447bec48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464e240a-fb78-4f0a-aa83-5a3f515abacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ffd56d-8427-4e14-b3ee-5ec82a159e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d44a3fc-da4e-4d14-9e43-f2b1ea8252cd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5424c396-9c7b-4484-9774-9edd1f1b9c72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a908dc14-7a15-4921-9764-f756f25e727c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e47442-835e-43ec-be04-37e05b4a99bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdda2f3-3475-4db6-abf5-43e0cfd457f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a0dfa6-fba0-4b45-87df-d7d9c230cca8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63370006-fc13-44b6-8806-3956130b99e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd62da9e-7a64-47ef-b25b-0d4a7d436ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68665148-1849-442e-b2d5-e3b36b085201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88697804-84ed-43c0-bf1e-d591145e7d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1310d7e-795c-49b2-a76e-fb1832377f2c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93510d26-da36-499e-a84d-660b43bb00b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c648a4e2-54a3-4816-b28c-c4ee39a9793f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d5532b-d78a-41ed-a94d-f5707cadfd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b0be76-32a1-4efb-8f7d-a96663d2ab8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e3e286-2203-4684-8abd-48ba9b432abb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad37c7bb-e445-4c17-a17d-0fc3c6cc3acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f1eb524-df8c-45b8-bdc3-c0a831c89af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565d0008-2d8f-498e-9ae1-6d875fbfd205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d96090b-956b-42c4-bb91-641a53eace14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261e7fa1-0fff-407f-9fa3-80498a32da46",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4047003d-9e03-4de0-b299-db0246c8efac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdbf12b6-ec56-402b-ace0-c8562de09cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2837fc83-e3ae-4383-9222-a793db448300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080fe8e4-0c5c-4f4c-af98-84af4ff26476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb68ac2-1c08-4dc4-acb8-0c87710534ea",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db45711d-6f68-4a24-9fd2-c8f205291b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f5e33d-1e4a-459c-b39c-ca39619cca5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b622ef-f084-4646-8881-abd8eb241012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b45c73b-b880-4a21-af42-6b9e3735f5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4327d566-6998-4395-988f-c146e057308f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1dbbf6-273e-4b4e-913f-562c114d0bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ca7a19-746b-46c8-935f-0c0aeb11556a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a24e831-959b-402e-9082-0d309ac82fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961d1388-4e5c-4532-bef4-02da18eaf929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee4b450-7e1e-436c-9159-0dc5ba78c5a7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f5fa23-7fe0-4c41-9995-548a715c6c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d7fd57a-2bb4-4b87-98a6-c9849b2ce5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56602ef3-ed4b-4e2c-9bbd-48aeed51f3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6776f959-03e8-4f79-8722-e9342b81ba4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9d8482-410a-444f-844a-f4c482ab5bc3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c4654d-d5ad-47af-b7fc-377582efceed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5785bc6-25fd-41ae-a800-e79232c33e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768cfc4a-7660-4b85-a2ba-9ce368312811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f77857-e792-44db-b292-c0c1d755e745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73208ea3-f8a7-432d-8756-eacf4a344469",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b0a72f-f76f-435b-adc1-ed009af88f0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7406a59d-5e90-42c4-8adc-f07c9c2531c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7f414f-4703-4458-827a-628fcba1961e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1927be6f-3e14-4429-8d54-9ff97f72a580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49fa4cd-7ed4-4eb3-adc5-21398bb60f15",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e86b51-f159-4be2-9a7d-762ed0652bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c5d60e9-8129-4128-94a6-bcc14ea21b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf1cae2-174d-475b-b510-53bef00607c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7993a19-23f7-4093-8334-8722dab7abe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a63d380-4e9e-46fe-be40-0d15c69bbab4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d573a90-978b-4e19-a24f-ba54baa867ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34c6a748-714f-4d68-90eb-75c84f21bb34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e1017c-e904-404f-9c72-70cbf9e46e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139c5780-1eff-4d5e-bbe9-6230b45ec689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2588e5c6-471a-4f87-83f8-5726981873ad",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab33f943-77ec-4379-8c1b-6545ab289e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b20932-66e8-478f-9eb1-ceb4778f24c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbda0f6-5e98-4a94-b63a-79fe72cc08cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5734ca-617e-4656-83b9-61d0d3ed6646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a79fa7-6025-4d46-a78e-dd1228b1c665",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2507ba-ad4d-4414-a382-fea75339ea7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a259d7f8-a754-4bdf-9af6-ac1ed0d3f034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea32b1e8-3109-4603-8eb4-3887a6a3e628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff44ff9-2d78-4532-bd48-c98a5c22be7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a06558-0936-4ae9-b1ce-57fd8e0bcfc4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6364e7f-333c-4a0d-8d7a-5d4be4ab8cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1926d2-47ca-4c4f-a793-e03ec69ddce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766d1f25-830a-4fd1-94c7-ff4350a3b595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16d561f-2444-4333-9dd6-342d48e37ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c146cb88-9f5e-4cc4-b50c-303390166e10",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2bbe85-25b1-4d4e-9912-44f0e485f26a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8b7377-c0b2-4af9-a340-20be8ea4e765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf7aec6-f71e-4f84-9048-ee36d54816df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16845c81-415e-46e2-b0bb-50406c5dc160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1812ca1-96f8-4d2a-a946-ac3bd16894aa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb0200f-a634-4070-9974-6a90792933c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97080113-3a1e-40a6-948e-bf5be2458502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c746b32-9a2f-43ca-a738-b836c3a6db86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675893fe-602d-4169-8533-967015f211af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe59f302-7044-497c-9bf2-920ed615d124",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220c2099-cc45-46fb-b1eb-eb633b448288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a46a17-12b1-4667-8d58-b504538be8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cc6421-d4d1-4c88-9f68-b2edb9505287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c00901-28df-42dc-82c0-a2a3e311d444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf9a019-0e14-4b48-bf35-4cf35bc4d3c8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4576249-0e1c-4a33-b14c-11b6a75dc27e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee535bb7-0f35-47e2-b1d1-f5f0445af3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6bd239-4088-4588-96c9-c4edbb3c494b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827b9036-ae20-47b8-84a9-1c5abe9d0c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a982ced-4124-43ce-8a8e-0eb4ff897094",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53767da3-0e16-497a-88ca-4093bd6e095c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8206113-1a8c-4ec4-996f-8cf8002c5c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107fc022-26fd-432e-a197-ea1111d05670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e820e549-b932-4319-b9b1-7ebc62449fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46c63f3-a904-46df-bbc8-0bd7507c44d4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99727df5-3c17-4051-abab-adeab93a28e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feaf1544-27a7-4211-b412-5c5256f7cecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e582c012-ee2d-431e-828d-3d53e6439c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60a3df4-ed2b-48c5-a829-efc225968b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c051c9f6-9707-4037-8fb4-932d14a54b27",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f1fccb-f7e1-4b05-ba87-338d2272558e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4764061-a7d8-4bac-9660-2c84a0b6669d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb8e41d-9b5d-4021-944d-292614a8da18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f6ab33-6faf-4283-b742-f580a87d62fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a40b07c-a92f-41a0-817d-b91123099c56",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5346bf-4747-42db-bee7-45fa2f76ca1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c894d3-e01e-46e2-b68d-6bf50f68bbac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585d64e3-c623-4fa8-a184-7bc0790fe774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ce9240-f9f3-45fd-a567-8cfb275bc732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f5c8e5-d546-4d0e-a9d9-61782abf727e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bc7a88-afa5-4e9d-8aeb-b39bb636fd1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb78b704-2643-41b6-81f8-ab40bb8f8955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f11f1f-b887-496e-85a6-883801c41c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d532c6d-8014-4abb-878e-a690b43413b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9065ab-3fbe-486b-8758-6aa34243d7da",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b308f8f9-e3e2-4f9b-913a-65e780f24a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1599d882-b989-4b77-873d-edd020b490c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4c27f6-1da2-4157-907f-bf10162e8044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3392b084-636e-4595-b5f8-e33a03b05444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f52795a-0775-42dd-832e-edf4b7095e7e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727f132f-1220-4d91-85ea-36e03d0ae258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d540044a-6e0e-494d-b3ed-454cb302f260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0fae09-f55a-457a-b222-cbabb631771c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6901b675-203a-4a46-90f4-85ff050c1d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba12011-a6b7-4cee-bdd1-111581369cf2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8962de-347a-4578-919e-dde99ff04c6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa7e8b15-fd0f-4c5b-8a12-6fe6e85b1f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d8fcea-24e1-4e01-9c54-1f90dd8ed9a4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec298896-a0f8-4d30-a437-d132a33df551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0b199b-1cdc-40e3-bad3-43ce353fb3bb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd6ffc1-619c-4515-ba15-4ec213a2813f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c842b5-56fe-4089-8633-1f87bf46c31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74820281-0a40-4a8f-81e4-5f4333b51f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c6598d-d112-483a-8d90-6791915fdb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0e8595-f119-401f-840e-6198a78642b9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ae9b9e-fdb4-4ee7-9683-9dbe538170db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fea5640-30b0-4df0-a212-3e5a429c2a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd93a98-8b38-4071-b7b0-0e2da8a65225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93f4838-6000-4091-ac03-b50e36a48ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d9a5e8-3353-4e57-8149-625f4c76bc97",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d8a436-8412-4784-a84e-baeb5de5388d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33d4460-8da7-4ecd-b522-b28a3a63bcac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76d110b-4a7c-4eb6-b697-6467d8c3b98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b471f75-efc4-4546-83d7-25ff51861dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a4e8ad-e6e4-453b-b143-c1ad75210e65",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f35c38-b93a-46ab-bef0-f683fa0ccb19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12755e5-85a1-44a5-bef0-b9e5f7cc1633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffaf79b-3e3a-458b-aa53-b7949026da1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c011b1-25bf-402a-ac3b-99e19f60879d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9060dea6-6079-4c94-9f43-f0fa160603ea",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a40e82-acf0-44a2-b838-9da4bbac824d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20e0437-dcac-40fd-aaa6-ae3b7ea67add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701fb4ec-a51e-45e8-875b-00e6f192f30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f9bed3-ba9d-4ea1-b36c-09cb6c6a4893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d96fe7d-7127-4122-8319-be02574c6a8e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ad2298-a781-43d8-9db3-2fcdf3e66d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "892503ef-245d-424b-a0b4-708481c94cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874bf7de-dc3b-4667-a019-a5cd3f7bbb42",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b7fafc-f3a5-4886-9260-437718461e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64bce7f-043a-4f34-871b-d4350da8b916",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4694f73-ed6a-4feb-af5e-96d23707a695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56946cf1-b8dc-42a4-b53f-9e85e21f7b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b37e78-5db4-40c6-a96f-5c861d62dc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198594d3-f0eb-4308-b126-7d0b9e78010c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b322fb2e-4559-4ff2-bc81-db86e9c222c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03b2368f-4d01-49d8-bfcf-901c7c39fe03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24cc0342-d61b-4d68-9c3e-068bc0d3db5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2420e6c9-eb13-4848-bd2c-3a97123ecc87"
                    }
                  }
                ]
              },
              {
                "id": "db972a95-d626-44b4-b199-cde144c2f970",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "950169e1-8d87-4b14-9681-13ece8c7232b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a122fb9d-30fe-4c85-9d80-7f36478eea72",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e81161ab-19b7-493b-8327-a6d76950a231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eefc604-8ba6-45e9-a015-3e27c0d3c608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "340a304d-2ed6-4e7e-87c9-811f7cdb619d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee627240-1e0a-4703-b782-70acf83f1f0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19e9962e-2ecb-457b-9aa4-3c11b77f8138"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f241b807-c3bd-4ebd-9162-3e99f6734223",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a88ad80-6e34-4d3b-b1a0-8743a7cb4378"
                    }
                  }
                ]
              },
              {
                "id": "118d8f82-c0cb-44da-b9a9-d09dbd889888",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7b833b0c-d7ce-4218-bc7b-b8fe3c126f05",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a91cdb-dcfc-4272-b991-d45a5a4ea9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aa410c30-8cb3-4fde-a378-9f6ea4bd2b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c7ddba-487b-4621-926a-c0d712eef5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba3b3f6-8bcf-41af-9f13-39f74fba43b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "962a7e31-98df-4931-8dcd-35c9e9d6ddda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e869d39-1a24-478b-a708-797e61c945fb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e02c8df-7ad5-4e1f-b689-3c5e007bd084",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a6a4c2c-4b74-43e9-8166-af6d718e2c5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edd3ed44-5067-409a-87ec-78221f16fdd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5f88547-6ae2-47a2-96d7-cc5a5ed479b1"
                    }
                  }
                ]
              },
              {
                "id": "2c0b4a04-cf64-4ec1-9282-c86cb77b16f1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f11c24d-c3ca-4a30-8247-e9bd9d8c11f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2768a533-ef14-4cb3-9961-fd9d81572474"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8da5d8e8-abd0-47a4-853e-d1bf9322c424",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "381f2f2d-d2aa-47ca-8acc-82de6084c6ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3f54cee-6f8e-452b-a45b-2a24271c4140",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b6295765-6650-44ce-99d3-f4e6a2e51161"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "175f7007-88bf-4aa3-8dd0-03354eada60b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4c78e98-fe9c-478e-8c73-f58a77a7c5a4"
            }
          }
        ]
      },
      {
        "id": "54851bb6-d06b-4f26-b67e-0c5860cd572b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5a03bcb5-9824-48ad-a223-ccbe8c0321b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e8e9298-3f85-450e-8b12-e3693a7d070c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8bb0c070-f9cd-4ea9-81a9-761339d788cf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d830adec-fe6b-4cfb-b493-3a5b06806158",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "84978f3e-ba73-43e9-831c-d24a7b4ac336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534bc1bd-d022-4e7a-a619-4f3742171dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "525d9558-ee3c-47df-b6ac-1cdd42c53c42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d83994c7-73dd-4562-90f8-3da759a60ee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa388b82-8224-48d6-92e4-fef0c026ff3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b50b5b40-3738-418e-957c-7048e9218103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feff60b1-7ea9-4f20-8844-b7b49904494c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b85eb9ec-2937-45cb-9fb6-e7b1d0f45dc7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d69ddec7-e62f-47a2-8c15-ca442803e011"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab3e944c-3cb1-449e-95b4-37b2ac8db77a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33daf22b-110c-48e6-8221-9a8dce05335e"
            }
          }
        ]
      },
      {
        "id": "0d7e3fb2-fb13-4fdc-a552-8b21b8246533",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "230a24a3-c90c-4689-8a29-61882df764a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3ef2c76-cb44-4bd3-8f34-b5111c7da885",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d918211-3ca4-4d6c-b713-9b642196d13c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc44f64-6692-48b7-aa08-594a3d1668ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f930c58-5153-4f11-a79d-50cd932d42c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f1e738-b844-4dd7-9347-994995ff70e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c0ae9b6-1cea-4f3a-9240-8520f391f3a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36670330-c6bf-420d-82ec-15e4f1998bc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe931ef1-d8e1-4274-a608-d4f40e949f08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ec28d4b-5beb-4b71-860e-98f31f4b37f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "735fae62-9f70-4e7b-9ffe-ed13573dd9e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50f93536-7760-4995-bc2e-c82208b53835",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf18df74-9a2e-4d8d-8caa-a76b964a733c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1e05304-7b63-49a7-a505-385b5d02504e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a83d7026-6c3a-49e6-ad38-aa6227818409"
            }
          }
        ]
      },
      {
        "id": "0c32b777-a26c-425a-9f40-ba5b5b26826d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "235817d6-3bad-44c0-9034-ce6304cb9d4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5628ab4-68d4-45b7-a376-aa942cdadf30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9984c24-fd30-4e50-bc6d-21bf9da49b12",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09131c7-bba3-4b5d-ac6c-1db7ea49e08d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2472c63d-d8f6-4860-8500-75123017e91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09db2dd5-b7df-4472-8627-33e89e37c0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fa476c8-914b-4918-be8d-1a75e2e64c7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03390d83-daec-4128-aea6-7360d5947ee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9590baf8-c139-40a7-9bed-df46d28374be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "800dab1d-d328-4808-ace1-1877985c3318",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da3162f7-232c-40fa-b5e3-528a80774903"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7852f61f-f4c6-4e59-8872-6ffc294bd42d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2a3f3923-6179-40f7-9ed8-7c58de9e4acf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2020749e-b0b7-4767-8018-0e938c40f0cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3063daa-44f2-434e-a2da-e21ebe2dd07c"
            }
          }
        ]
      },
      {
        "id": "0232faf9-fd82-4a64-bdea-4462e7e8c5ae",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c1e4e49-f746-48aa-84f2-3159031f63e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c00487a2-0428-406f-9592-cd4957e0fdaf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6f41e66a-af28-49df-bed4-b88af8e6c1ee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3bb249b-0478-43ab-b234-3d97e5fa749b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f454b20-d9d1-4af6-9adf-d377ac25a387",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 170.3492063492063,
      "responseMin": 20,
      "responseMax": 15622,
      "responseSd": 1015.4767729828299,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724287303745,
      "completed": 1724287355009
    },
    "executions": [
      {
        "id": "cd920f9a-7754-49de-bce6-d33d91aec5ff",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7bc3b603-2c82-4e80-835a-a93d2197e09f",
          "httpRequestId": "6e7b9800-3884-4d8d-a9f0-aeaea1be7ead"
        },
        "item": {
          "id": "cd920f9a-7754-49de-bce6-d33d91aec5ff",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4a570b75-dd67-45db-bfe4-fc190ac14712",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "bf4878f4-b719-46e5-93fd-258e54e71c1d",
        "cursor": {
          "ref": "0410f3d9-62b9-42e0-b0a7-ee0c8e795143",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a3f1aa8e-c740-4631-95e3-a4f8cf9383ca"
        },
        "item": {
          "id": "bf4878f4-b719-46e5-93fd-258e54e71c1d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d7bea800-7ad8-4d41-9946-34c1274628b3",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "83bf4260-a63e-4cc4-9cf8-69072f21a06e",
        "cursor": {
          "ref": "b73ecc9d-540e-42f6-86fe-ad6c96ce0599",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e2621e67-c28b-4a18-809b-0ad1ff0ebdb5"
        },
        "item": {
          "id": "83bf4260-a63e-4cc4-9cf8-69072f21a06e",
          "name": "did_json"
        },
        "response": {
          "id": "6861e742-9883-4731-873a-d0b4b2677a93",
          "status": "OK",
          "code": 200,
          "responseTime": 460,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0717a79-44eb-4ac2-9a41-8afafda820fc",
        "cursor": {
          "ref": "a3c0ba72-defb-4738-a010-16378c26b530",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ee85e2a-9452-430e-bfa9-7b78d4b5c922"
        },
        "item": {
          "id": "c0717a79-44eb-4ac2-9a41-8afafda820fc",
          "name": "did:invalid"
        },
        "response": {
          "id": "5d8ed94a-c5da-4288-952f-992a0b091342",
          "status": "Not Found",
          "code": 404,
          "responseTime": 301,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0717a79-44eb-4ac2-9a41-8afafda820fc",
        "cursor": {
          "ref": "a3c0ba72-defb-4738-a010-16378c26b530",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ee85e2a-9452-430e-bfa9-7b78d4b5c922"
        },
        "item": {
          "id": "c0717a79-44eb-4ac2-9a41-8afafda820fc",
          "name": "did:invalid"
        },
        "response": {
          "id": "5d8ed94a-c5da-4288-952f-992a0b091342",
          "status": "Not Found",
          "code": 404,
          "responseTime": 301,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fda74b1-09e3-409b-86fa-4615411a698d",
        "cursor": {
          "ref": "a85a3c49-3a14-4a28-8b0e-386d055a8218",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b4dcbca0-65a4-4fc6-9e76-a632779cf2b2"
        },
        "item": {
          "id": "0fda74b1-09e3-409b-86fa-4615411a698d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b3049243-7115-4274-b2b0-16734376b7a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a373c176-1f0f-43e2-97bf-3aa88a1cbc56",
        "cursor": {
          "ref": "00352aa8-ddf9-4b33-9ffd-566e35fcef67",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "26840490-411b-4dd1-8b7c-ce196ef9620f"
        },
        "item": {
          "id": "a373c176-1f0f-43e2-97bf-3aa88a1cbc56",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "77359aa0-7d1b-4940-b1ce-16dafbf5decf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3292be34-81be-4780-86b1-5dd5737ed5f8",
        "cursor": {
          "ref": "5d783311-3851-4ee6-b49d-faac0d0aaee7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c1a525ab-b43a-47ec-80b2-eaf495dd8c76"
        },
        "item": {
          "id": "3292be34-81be-4780-86b1-5dd5737ed5f8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "95092b5d-50d0-48e8-8ecc-fe70188542f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ee387b-3b50-47b6-87c9-defe48aed8ae",
        "cursor": {
          "ref": "896bb391-6f2b-408b-bc7d-87051497216b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3e8dacdb-de4d-4fda-8ec1-6799b57cbe15"
        },
        "item": {
          "id": "19ee387b-3b50-47b6-87c9-defe48aed8ae",
          "name": "identifiers"
        },
        "response": {
          "id": "0984e69c-0cb9-432a-95fb-93618963a534",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68c927a-2d54-44ee-a582-4701866da3c1",
        "cursor": {
          "ref": "08e9c39e-8df2-4f29-b71e-66c2f0cbab22",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "db43258b-b3bb-487f-94ef-df9fad4edc54"
        },
        "item": {
          "id": "b68c927a-2d54-44ee-a582-4701866da3c1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ca67e0f4-ec1a-4b19-be67-36e36d0bf58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d1fba6-a350-4660-acc2-813a846239f6",
        "cursor": {
          "ref": "c67caa62-714e-41b6-9fe9-086ab52607c6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c3a50a7c-dd2d-4406-b989-0f682c320a7b"
        },
        "item": {
          "id": "e2d1fba6-a350-4660-acc2-813a846239f6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "506d2e39-9828-46e2-add5-0aaa0ae9f32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb2daf7-35c3-4b54-8477-bec3c4a39241",
        "cursor": {
          "ref": "3525404a-6d34-4bbf-9ee4-5da7fe425e8d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bb11a455-f730-4c05-a61e-f76b01d16f0b"
        },
        "item": {
          "id": "8cb2daf7-35c3-4b54-8477-bec3c4a39241",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2797c906-4732-4fce-b56e-6fb7d2ed0b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd515f48-3120-4e55-b529-a635287e41eb",
        "cursor": {
          "ref": "06bc9b46-808a-4d46-99c8-1c326bf4dc26",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cf88bccc-ba6b-4a8a-bbc9-014ffaa79427"
        },
        "item": {
          "id": "dd515f48-3120-4e55-b529-a635287e41eb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "50efa78f-babb-4085-b7e6-2d2d3f9e56a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6e3131-4619-4619-a47f-a7f0d810f70e",
        "cursor": {
          "ref": "f8e1487c-b8a5-4578-a2b6-bf1ba14b330e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f5b32012-a4e2-42c8-8f4e-8f8f9e2801f9"
        },
        "item": {
          "id": "ad6e3131-4619-4619-a47f-a7f0d810f70e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a254f0a2-2ff0-42c3-a147-813692a34d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5831162f-4852-4406-be3a-e8f0c3dfebcf",
        "cursor": {
          "ref": "ddc51b98-e950-4aa9-a30c-517ce44c823c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "29de7bf2-c428-414a-bf7e-534d6d5ecf6b"
        },
        "item": {
          "id": "5831162f-4852-4406-be3a-e8f0c3dfebcf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "52a25925-f21a-4c85-812d-b1f843a56c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ed854b-3b9f-4cf4-aa58-cf9d96849e66",
        "cursor": {
          "ref": "3b27d114-57a4-4164-87d7-974e67d83ad1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d155da35-1dba-4dcd-bee2-6ee5735b82fe"
        },
        "item": {
          "id": "e6ed854b-3b9f-4cf4-aa58-cf9d96849e66",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4f2bad22-2b0d-412c-8c2a-08337f13b86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab6e82c-9a07-4adf-82ee-35d2b1a7d7b2",
        "cursor": {
          "ref": "229e7ddc-cecf-49f8-ba04-3743b2dbeda0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dc50b9fd-c814-4e8a-97c4-568807e2862b"
        },
        "item": {
          "id": "9ab6e82c-9a07-4adf-82ee-35d2b1a7d7b2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a0d50ccb-bfa7-444e-944b-3952bf38857c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac53863-d0c3-41d1-a85c-d9dc4475b82b",
        "cursor": {
          "ref": "fa653bcd-97df-492f-8659-3b24ab896f2e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b3d0b750-c6ea-4bd5-a95f-667b8b2e9b03"
        },
        "item": {
          "id": "3ac53863-d0c3-41d1-a85c-d9dc4475b82b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e76f55be-f96d-4055-b597-bc289b7f9c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5884244d-1e24-495f-8d20-099469123a34",
        "cursor": {
          "ref": "a21c8b04-e32f-4695-85ab-6c87cfd96eb6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "85bc1939-9935-497d-b208-f5a64b257078"
        },
        "item": {
          "id": "5884244d-1e24-495f-8d20-099469123a34",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9b660a4d-879f-4f97-8898-4c94b2f0e18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50af74b5-edef-4626-a5d3-9dd80ad789ee",
        "cursor": {
          "ref": "18d79f0d-9860-4dca-a019-5f41fb1e6259",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4fddb147-de73-449a-9f39-310c4eda7514"
        },
        "item": {
          "id": "50af74b5-edef-4626-a5d3-9dd80ad789ee",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6ce4a24e-b0cb-42be-8c26-c2f00b3f4840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7aaa7fc-137a-497d-949a-6db945af34ad",
        "cursor": {
          "ref": "afd827a5-859d-4a1a-891d-df1ccd70c49d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1f3e3ad5-84ed-4ba5-bea4-6dfb21fb931f"
        },
        "item": {
          "id": "f7aaa7fc-137a-497d-949a-6db945af34ad",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fd05be54-8c22-47bc-8308-439334ebf160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b4d6ae-be14-40ef-93dd-0c2d11a3b837",
        "cursor": {
          "ref": "21e6abb6-7b58-406b-9bdc-0ac4460aa2c6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8b51f778-0b22-4d26-8b3f-bfb27b331752"
        },
        "item": {
          "id": "b4b4d6ae-be14-40ef-93dd-0c2d11a3b837",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6254df70-4e7d-4170-b29f-8a3c3f7c4176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5786b10-7560-4062-9500-78e9d8b7bd80",
        "cursor": {
          "ref": "dd05891e-92aa-4a4d-a278-46eb647600c7",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3a9a142f-54ca-4ecc-8b09-56553c3f3381"
        },
        "item": {
          "id": "b5786b10-7560-4062-9500-78e9d8b7bd80",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "da6a5d02-980c-43e2-bc0c-bded051b9ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889ac93d-8558-48e8-a86f-18f5a5fe9625",
        "cursor": {
          "ref": "71678308-70e8-49bc-8e5a-a2cdc5c19751",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8ceadd1a-72b9-4dd8-a214-7216cc999ab8"
        },
        "item": {
          "id": "889ac93d-8558-48e8-a86f-18f5a5fe9625",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "31f9d7ce-b10d-4330-829e-e60c8ce45ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ed98a1-d82c-43f6-aed9-48fc0ca4108b",
        "cursor": {
          "ref": "66477757-6311-4865-b76d-757b95890457",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a71f9513-621d-4a83-b664-26b10b29b832"
        },
        "item": {
          "id": "74ed98a1-d82c-43f6-aed9-48fc0ca4108b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6a78e4c4-7494-40a8-bfeb-ef99f6d3aaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7bb8d0-65f7-4cdc-8f46-08e3bdfce7db",
        "cursor": {
          "ref": "d49d4ac6-dbc0-435f-b423-e8ffca698dcc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f2219f1b-e2bc-460d-bb0b-0e48a785f9d6"
        },
        "item": {
          "id": "4c7bb8d0-65f7-4cdc-8f46-08e3bdfce7db",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "221891ba-a34d-4e32-a80d-6f7997d32e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d927529a-6792-4442-8f95-9486bd82cf74",
        "cursor": {
          "ref": "595f7f36-a478-4a69-8afc-f0763a70978f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3a8b9621-fa61-4726-a651-07785c119851"
        },
        "item": {
          "id": "d927529a-6792-4442-8f95-9486bd82cf74",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b3f08fc6-95e5-496f-982f-32400c2389b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190cb69a-867e-4271-b5ac-642cd6f2ca4d",
        "cursor": {
          "ref": "605b10b7-578a-4a8c-9ecc-b923245f6140",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fbfb2e85-d0f1-4c73-9192-c26a78484a23"
        },
        "item": {
          "id": "190cb69a-867e-4271-b5ac-642cd6f2ca4d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8055855b-13ef-492c-8e23-e712fbacc32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5e9bb4-bf19-4bd1-9e5b-a916f9a83d72",
        "cursor": {
          "ref": "2f41f9ed-4754-4b17-88fd-d6e643a60d8b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2781e893-e968-413f-a93b-14a13a6556cd"
        },
        "item": {
          "id": "be5e9bb4-bf19-4bd1-9e5b-a916f9a83d72",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "35e0a8d4-0292-4d04-98cd-106a05f46c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b613197-b50d-47e0-b118-5c878b849b29",
        "cursor": {
          "ref": "f26dc270-33a0-4409-9422-590bd4315e67",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "28cec319-b8ca-4289-b510-f1268475fbe5"
        },
        "item": {
          "id": "7b613197-b50d-47e0-b118-5c878b849b29",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ff4fffdd-2b00-416c-9386-7573e6b4c44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca9b68f-6bdb-4109-9358-e46a7a7755a3",
        "cursor": {
          "ref": "25911938-270d-403f-993f-226aaf1696ec",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b7c54880-2f8a-4bbd-8b2e-e8aed021bbaa"
        },
        "item": {
          "id": "dca9b68f-6bdb-4109-9358-e46a7a7755a3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fbd80b19-9172-43b6-8b09-8a7bdd237074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2c5393-7472-43c3-8310-1dc835d91bb3",
        "cursor": {
          "ref": "9fcaa778-701e-49a2-9940-964d9e16339d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c0440a44-1a76-472c-96ab-f2e5800d3e23"
        },
        "item": {
          "id": "9c2c5393-7472-43c3-8310-1dc835d91bb3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bb96afe1-bfaa-43df-9057-d2ae88cdd329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc97db7e-56ce-4765-9679-1220c8394c52",
        "cursor": {
          "ref": "cdeeaec9-80e6-4d02-90bd-88de93c33b22",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "501d7dc7-7395-434b-aea6-8d86656d2f8f"
        },
        "item": {
          "id": "fc97db7e-56ce-4765-9679-1220c8394c52",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dffa95bd-80e1-4bb3-801d-f0a67d37ec56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad172c5-1104-48bd-9978-591fac63455c",
        "cursor": {
          "ref": "47e03eac-b619-472e-933b-7b5df75c9825",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dfbf6908-fec1-4d66-9ca7-526d5d87e437"
        },
        "item": {
          "id": "7ad172c5-1104-48bd-9978-591fac63455c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "98ad8269-c35d-4b0e-a0d4-bda2e489ecdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840d0d43-2284-4525-aa3f-13a36e7b9c1a",
        "cursor": {
          "ref": "d2f16caf-5eb6-42a4-93c1-9b653c62d45f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0bec872f-8af1-43b2-b613-1a0d9a730019"
        },
        "item": {
          "id": "840d0d43-2284-4525-aa3f-13a36e7b9c1a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ab450a17-67a8-4cb7-a9ef-a0d49ec67e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb12e22f-6538-4285-b11c-3b4aba7254a3",
        "cursor": {
          "ref": "c274bf98-1071-4892-b690-e1856525d64b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ff7edfa5-8ecb-42c1-91a5-991ffcf926f9"
        },
        "item": {
          "id": "bb12e22f-6538-4285-b11c-3b4aba7254a3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b9b3d3ab-056e-44aa-9aa3-27edc65e57f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39346f6d-584a-4922-b64d-3222c1199a4d",
        "cursor": {
          "ref": "f98df2cb-5a1c-46cb-9b73-9feb7eab1b7e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a63db513-86cf-4c95-b2d6-193c025ff821"
        },
        "item": {
          "id": "39346f6d-584a-4922-b64d-3222c1199a4d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "36edd2bf-3689-43b4-b92f-35c1318ba02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3572b9f-a356-46d8-9d36-3dc8878714f7",
        "cursor": {
          "ref": "5c91221b-18af-49f2-a3c7-36bac5739fdb",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "84d37801-82fb-4e63-bc6e-f14d3038f6be"
        },
        "item": {
          "id": "a3572b9f-a356-46d8-9d36-3dc8878714f7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "41724352-be47-45b2-bd35-ac3de563c9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596de11f-5018-4e6a-a6d5-471e9ee60dca",
        "cursor": {
          "ref": "27e3888e-8cca-4513-81d8-99396b3a5a71",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1a7c9150-635c-4402-9ae9-d36790e5b72f"
        },
        "item": {
          "id": "596de11f-5018-4e6a-a6d5-471e9ee60dca",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "09a40959-177f-4c84-883d-55a1b1eb10e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9fc35a-98f0-4615-b55b-7f6c84637788",
        "cursor": {
          "ref": "22abc108-d493-4128-82d0-1457c15f7a0a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e1e02aa8-ae35-4194-8bbb-59b3abe01f2d"
        },
        "item": {
          "id": "af9fc35a-98f0-4615-b55b-7f6c84637788",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dd51010e-2581-446c-91e9-369747432bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d6ee08-5591-4e71-ad22-49ec75edb6cc",
        "cursor": {
          "ref": "09cc2d3f-aca2-4e85-bbff-33d8bca55a9a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "71cd940b-b557-4b55-b9b3-5ddbcf7a689f"
        },
        "item": {
          "id": "f0d6ee08-5591-4e71-ad22-49ec75edb6cc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1589e944-fe13-4de5-9ae4-723617161602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b836e1-4a76-4168-9e65-81ce3102440e",
        "cursor": {
          "ref": "07190f12-dea2-4bb1-b368-7e03ed6ed6bf",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d2956507-0a4a-4105-889b-3fb173b6db07"
        },
        "item": {
          "id": "b0b836e1-4a76-4168-9e65-81ce3102440e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "161367a4-e0b9-449c-b11e-7ce9b50e5238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e614befa-e769-4d3f-80e3-e68aeb58768e",
        "cursor": {
          "ref": "f7cf4e54-2362-4fde-87e8-b30592f80ae6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ff32c63b-8dc8-479e-9fbf-567931c1f11d"
        },
        "item": {
          "id": "e614befa-e769-4d3f-80e3-e68aeb58768e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c60905ee-e274-4812-9cf7-1ab0df6445a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364b2063-6117-4a33-9dfc-3236f4360d77",
        "cursor": {
          "ref": "31536037-deb3-4be4-a6f6-b56d5ca00889",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7ddc0d0c-c1e4-4655-abbb-dda5f8f95e62"
        },
        "item": {
          "id": "364b2063-6117-4a33-9dfc-3236f4360d77",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a46a7c9c-bbf9-4c97-b42d-8db17e6c75ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37342990-885c-4799-9dc4-ec613098cc48",
        "cursor": {
          "ref": "6667fde8-5c6f-44bb-aa3d-af45ce763684",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6d3c4da4-448f-4b6f-9745-792d1faba6b8"
        },
        "item": {
          "id": "37342990-885c-4799-9dc4-ec613098cc48",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b9e15a4a-013c-4739-96f6-8da6901d7a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb295993-450f-4f56-a57d-348a1c1d87db",
        "cursor": {
          "ref": "1cc2ec8d-bb53-4a06-bcfe-79b054ee095b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "32e4b7e7-3a44-4789-b111-c189ed28850d"
        },
        "item": {
          "id": "fb295993-450f-4f56-a57d-348a1c1d87db",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "36a292c3-0ef6-4165-bda6-b693fe24f55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c186413-e645-496c-8cfd-379c20188956",
        "cursor": {
          "ref": "c12365b0-6a62-43a3-a5b2-e72a0c9cccf8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1b50d8fa-dfd5-4008-8607-9d59101fcfdf"
        },
        "item": {
          "id": "7c186413-e645-496c-8cfd-379c20188956",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f89ff5c7-fd89-44dd-9b97-b774943dca3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b15decd-85f0-44b2-a11f-027715173ee9",
        "cursor": {
          "ref": "efce2e79-d8fe-48b9-bf86-69e560e7dd0c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3aab9d3b-f3f8-43b2-9486-d481c99c9776"
        },
        "item": {
          "id": "2b15decd-85f0-44b2-a11f-027715173ee9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "91ca4b41-ad28-4903-a7cf-3dd9d5539bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bffc11-1102-418e-a9f3-f24d8248e1f8",
        "cursor": {
          "ref": "be6cf4ee-0735-421e-a3c1-5cab7ea81423",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2c2c9508-d132-40e2-9be1-5df16c5b44e3"
        },
        "item": {
          "id": "78bffc11-1102-418e-a9f3-f24d8248e1f8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8096af5d-a63c-402d-a45d-c68f8589377d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f39019-8fb8-470d-9026-20225cd4140f",
        "cursor": {
          "ref": "b59857a5-4530-4d54-bb63-88782a6025f6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e81fcf2f-e538-4b36-bf05-b30b4c5fa873"
        },
        "item": {
          "id": "b7f39019-8fb8-470d-9026-20225cd4140f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "def5bf25-79c4-4d63-8c23-9cf20b1398ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75bb08a-e291-4f0e-920d-8f0682b9e805",
        "cursor": {
          "ref": "7bb1f926-7927-41ed-9cd9-1e7a439bc890",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ba1f87c7-4d88-41f2-85bc-0223940910ac"
        },
        "item": {
          "id": "f75bb08a-e291-4f0e-920d-8f0682b9e805",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9d44b0e6-a70e-43e8-9f2c-638f0779d4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36bd9c4-0916-44dd-985d-46ac88b5f6fe",
        "cursor": {
          "ref": "502e07cf-2ea8-4025-a1ba-8eaaaf6386da",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8b92c8f4-5e09-426f-bf28-9fc2300cdfa5"
        },
        "item": {
          "id": "d36bd9c4-0916-44dd-985d-46ac88b5f6fe",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2fe5d1ea-df65-4692-bfb4-7ea8d39fbcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacf20b1-43ae-450c-958a-3747a96580df",
        "cursor": {
          "ref": "b6dc98b0-97b2-427c-92bf-b69a6f362e6f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "029409fc-4c91-4eb4-a82d-72c135af5665"
        },
        "item": {
          "id": "cacf20b1-43ae-450c-958a-3747a96580df",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "18e4676d-d9bd-4cd3-9474-96055b1b486b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f7ef09-f4c8-41db-ac07-7cd79cedc56a",
        "cursor": {
          "ref": "37109201-08da-4d3a-9fd2-e90d15208c30",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e0e9dbe4-5356-44f2-ad8b-d66c1fff6023"
        },
        "item": {
          "id": "b6f7ef09-f4c8-41db-ac07-7cd79cedc56a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f033b3a7-d1dc-4002-b9ed-57c2a1b4cd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3872ca13-c19c-4685-8b6f-f37ea75c8d5a",
        "cursor": {
          "ref": "fe66fb0f-303c-4730-90eb-4f1260d06118",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "73d74cf3-1bef-4486-ae25-afb733b89e2f"
        },
        "item": {
          "id": "3872ca13-c19c-4685-8b6f-f37ea75c8d5a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4190da7e-228a-4353-8fdb-043754790af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9baee0-ec76-460c-baa2-44914ba66e36",
        "cursor": {
          "ref": "bf72597d-56f3-4657-a14c-2754ee53e941",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aca309ec-eeae-491b-81d1-a8a4f56d7769"
        },
        "item": {
          "id": "8f9baee0-ec76-460c-baa2-44914ba66e36",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "20ba57fb-77d4-4f5f-92d0-532ededbba16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eea311-3861-4814-942e-b8ffe4d7b808",
        "cursor": {
          "ref": "38b48451-b3a2-461c-b620-c3cf908f4a16",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "acbdd22c-9a88-4221-b95f-0aeb31c54a34"
        },
        "item": {
          "id": "66eea311-3861-4814-942e-b8ffe4d7b808",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1fd2f926-55f6-447d-b383-c739ce330a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae76100-f089-4ae9-85f0-70b01c58c753",
        "cursor": {
          "ref": "ef1e25c4-0547-4438-b4a9-ef2fb3d68a06",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0af1f78d-0a24-46c9-90f4-a9735883d55e"
        },
        "item": {
          "id": "fae76100-f089-4ae9-85f0-70b01c58c753",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a7f8ce6d-a315-4861-bf6f-ba26c20fdcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1484b40d-e1d2-45f9-9ac1-5cd71262dc13",
        "cursor": {
          "ref": "fca2e8a6-0a2b-427c-9bbf-ace9669fcba6",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bae8dc6f-7f39-4cc5-8136-f843084479a6"
        },
        "item": {
          "id": "1484b40d-e1d2-45f9-9ac1-5cd71262dc13",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "98942f6b-bce5-4d81-b2b4-55759358752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08944029-6534-4741-a369-e821c8aa086c",
        "cursor": {
          "ref": "3e7cd6fc-e111-4b4a-b042-dc36a9a6b51a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c3c21a87-f66f-4f98-93b1-6d824c71a8c8"
        },
        "item": {
          "id": "08944029-6534-4741-a369-e821c8aa086c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "51d95db7-e618-42a6-9198-06de5634fd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638e3a6d-eaff-4db1-8b06-35e42e209d89",
        "cursor": {
          "ref": "21674267-d2d7-4220-be0a-fd221f36213d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9c38c11d-0058-4130-ad7e-ea037e88dc31"
        },
        "item": {
          "id": "638e3a6d-eaff-4db1-8b06-35e42e209d89",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6b629780-d65d-43ab-8e68-39dc03797067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644599c6-52ec-42b5-ad73-21f67b743035",
        "cursor": {
          "ref": "389e1493-b11d-4c2c-a243-39cf2e8d765b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6c788eb0-13f3-41e2-a990-9165a2d23c5d"
        },
        "item": {
          "id": "644599c6-52ec-42b5-ad73-21f67b743035",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "55913945-4b23-4577-a834-a0d000b9b058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5521fa-1ccb-4530-a6aa-7d8870e73e0c",
        "cursor": {
          "ref": "75ec6540-3036-4449-bb38-e8386b0dc0f3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "58af2884-9244-4d1b-8b24-0ecc893da49d"
        },
        "item": {
          "id": "3d5521fa-1ccb-4530-a6aa-7d8870e73e0c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6be5eb3d-a22a-45c5-bc5d-4874cc10a81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe25348-04bb-4681-8acb-468a536e8573",
        "cursor": {
          "ref": "45ae7052-7e65-4740-a84b-12ad8cd0eaa1",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "888ecbfe-fd63-4be2-9bc0-badb6244ed42"
        },
        "item": {
          "id": "abe25348-04bb-4681-8acb-468a536e8573",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "378ec035-edf2-427b-af16-26386439e746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a48d76-f69c-4a21-942a-a62c761eaf4f",
        "cursor": {
          "ref": "9eece2da-d38a-41b2-a44a-5f68489a2476",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7833b0e9-33b5-46df-b2d0-991898ef3b65"
        },
        "item": {
          "id": "83a48d76-f69c-4a21-942a-a62c761eaf4f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0c07a9b6-d5a2-4f3f-9e63-84b8addba0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bdc777-f207-4c33-a713-3e5bbdb7a83c",
        "cursor": {
          "ref": "64b7ff72-0be6-40b6-8bea-6db837419c11",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "796cbac3-192a-473b-a7a8-13de9ea765ed"
        },
        "item": {
          "id": "f5bdc777-f207-4c33-a713-3e5bbdb7a83c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a76f9bc8-d0bf-478a-b8ff-779fa1cb356b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48124d5d-b1d7-4c49-a9a0-75fd157b3000",
        "cursor": {
          "ref": "45582ee7-94c2-4b94-9d4e-cc03ab46903c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "af36eab3-4b4e-48a5-8da7-7b36f81691cf"
        },
        "item": {
          "id": "48124d5d-b1d7-4c49-a9a0-75fd157b3000",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "df0b9d0b-7dfa-4257-bb37-f50dadffbea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a831e7a8-7f71-4867-9ad4-98a8bfb5564e",
        "cursor": {
          "ref": "54bbdfe7-d80e-4d0b-9bcd-a96fb507e98e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9046638b-4993-40e2-b0d5-7a2693f2ee58"
        },
        "item": {
          "id": "a831e7a8-7f71-4867-9ad4-98a8bfb5564e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a4a3d233-5dde-4d13-b153-c7e103c6b3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fcbac1-4bb4-40ce-b634-7ceba39cf075",
        "cursor": {
          "ref": "23b29a99-9bc0-4207-a216-783e10a7ec0d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b0756dbd-69bb-40a0-9d97-df9ce03be2f0"
        },
        "item": {
          "id": "35fcbac1-4bb4-40ce-b634-7ceba39cf075",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f7c36f83-32b5-4ec3-93ad-383eda73e298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3647b6-6ae6-4477-9c8f-7559aa8510b6",
        "cursor": {
          "ref": "1b0378d9-df54-4b14-ad87-b40269c22393",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bd2c3a1a-65f0-41a4-a5bb-fa7a97efc9dc"
        },
        "item": {
          "id": "cf3647b6-6ae6-4477-9c8f-7559aa8510b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "155c56aa-b44d-439d-877e-32b1183b50f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bd7238-0c8f-4759-84e2-4215aa338bad",
        "cursor": {
          "ref": "962a2af9-6514-48da-a84c-fe37fe69a084",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dae8d0ca-80ca-4521-96bb-1c3adc59e3f5"
        },
        "item": {
          "id": "62bd7238-0c8f-4759-84e2-4215aa338bad",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "208f5160-4959-4e7e-b485-6c7147e30484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b125ce5a-7281-4e4b-ae7b-7f7d29e7d39c",
        "cursor": {
          "ref": "990d8257-2b64-435c-b4a0-a14054fb93c1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "62794220-6a07-450a-86df-0880f07263c2"
        },
        "item": {
          "id": "b125ce5a-7281-4e4b-ae7b-7f7d29e7d39c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c734837b-4c33-4acd-8d45-a97ab94707f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa944ef-47d8-4308-8891-0d9c068e3c33",
        "cursor": {
          "ref": "fa1dbe07-a6e5-4c5b-b27e-5c4fc88532c2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "48c52b10-8b60-4c01-9be1-3b6c483880d6"
        },
        "item": {
          "id": "2aa944ef-47d8-4308-8891-0d9c068e3c33",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cc170eee-208c-4dc6-87d9-3a379418223e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cfccb8-d0b7-45da-8f2f-0829ea062785",
        "cursor": {
          "ref": "49e46f16-73a0-40ba-9387-2b41175323e9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1a6af82f-0054-4ad7-88e1-da2eb4b040d3"
        },
        "item": {
          "id": "52cfccb8-d0b7-45da-8f2f-0829ea062785",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c1af45dd-5469-4aa0-a5d0-bca8be7afe9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc67327e-92f3-4cee-98b4-c2bb5fc87dba",
        "cursor": {
          "ref": "6aa91645-051a-4b83-8ad0-9078184576e9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1fbdcee0-a6b9-4529-af59-9e9c26768e4c"
        },
        "item": {
          "id": "fc67327e-92f3-4cee-98b4-c2bb5fc87dba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7e83a71b-58d7-45cf-8233-75c7aa4cc060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72535df1-1a26-460c-a79d-0a3d4e1ad26f",
        "cursor": {
          "ref": "5f2f7c02-6534-4da3-9e32-df4b596eb9ea",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "18d830ee-e8bc-4fee-9f36-41c4dd2f2aeb"
        },
        "item": {
          "id": "72535df1-1a26-460c-a79d-0a3d4e1ad26f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c34d1816-277b-4874-95ae-5899b559ef8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dc0353-25a1-49c0-98ab-884cab227f23",
        "cursor": {
          "ref": "9d8d5021-a731-4df8-834e-c8f5a2a7b270",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d99f69f0-7c3e-4fb9-8c58-14e6e85a3285"
        },
        "item": {
          "id": "43dc0353-25a1-49c0-98ab-884cab227f23",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2e5bbac4-7f09-4133-9fb4-f756655d4dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb94b736-85a9-4aa8-8454-f6e91b1c1086",
        "cursor": {
          "ref": "6f68a28f-c5eb-4874-a071-112545c4bdd0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "56d48d4c-83d2-435f-a68e-ea6d992266c4"
        },
        "item": {
          "id": "bb94b736-85a9-4aa8-8454-f6e91b1c1086",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "65fabc95-ecd8-4bae-8047-0712ea7149a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c222995-2b6a-4090-9b5f-c4ea99154c4b",
        "cursor": {
          "ref": "2300120b-2de3-420e-b4fb-c8d3b4d0ddb1",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fb89ef94-68fd-4dc9-bf67-b78635f601b3"
        },
        "item": {
          "id": "8c222995-2b6a-4090-9b5f-c4ea99154c4b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28b78119-4ae4-4dff-8bc4-b46ac5147b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb158d4e-ba55-4133-b57b-e94903cc6535",
        "cursor": {
          "ref": "3c9802ad-af6d-43a1-a0a7-fe160bfacf57",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a8a12b5e-2483-4036-b0e4-bd75a73dbcfe"
        },
        "item": {
          "id": "eb158d4e-ba55-4133-b57b-e94903cc6535",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cc8b5d38-7851-4a56-bb42-61148bf83e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619ed14b-75a5-4f23-a21f-0c2c8545c19e",
        "cursor": {
          "ref": "2a24f29d-a5e8-4db7-b599-d5773227c901",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8ff613d-656a-45a2-abd2-3d558802d014"
        },
        "item": {
          "id": "619ed14b-75a5-4f23-a21f-0c2c8545c19e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "970cb616-d8f1-4b52-8567-6f084d347fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5582ed7-a7d6-41ed-9b50-662940f44837",
        "cursor": {
          "ref": "5a60d74c-235c-44d0-a727-27866ab1cd9f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8c69f1cd-c399-4cd5-8ca9-1799a7fd58b2"
        },
        "item": {
          "id": "d5582ed7-a7d6-41ed-9b50-662940f44837",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3cffbd9e-2353-49bb-b124-9c853a9e6b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5399de40-cac8-412d-ac4f-247b226d30a6",
        "cursor": {
          "ref": "267d69b1-2024-4d1e-80a3-879f58dc0bd1",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5912666b-6a40-4cf2-aca0-73d46a108cdf"
        },
        "item": {
          "id": "5399de40-cac8-412d-ac4f-247b226d30a6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "86b13196-7f66-4699-9e35-cf2dfc39f303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44d1965-dfdd-4a86-9490-6d0523b150fc",
        "cursor": {
          "ref": "fd5cc896-b99a-40fb-9077-ee9fc21b5b10",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9323687c-a143-416f-b897-549b8849718a"
        },
        "item": {
          "id": "c44d1965-dfdd-4a86-9490-6d0523b150fc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b876c149-2bea-47fe-ab3b-9b7df5fc164c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056fca36-cbd4-4236-919e-5d774b992314",
        "cursor": {
          "ref": "65208acb-1789-404e-83e6-a79070823095",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ccb2d87d-f628-49d1-a42f-053fc4a0c383"
        },
        "item": {
          "id": "056fca36-cbd4-4236-919e-5d774b992314",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bb36832c-bbd6-4d2e-a8dd-3e0c03c0b348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146cb738-5d86-4439-b39f-cc99e8d89c8d",
        "cursor": {
          "ref": "f43cd005-5e41-4983-b9b4-a7a7011dac23",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "768a743b-4a12-4b01-ba15-35f6ae795143"
        },
        "item": {
          "id": "146cb738-5d86-4439-b39f-cc99e8d89c8d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0e0f5aa3-6f5c-4ade-8ea4-9a653aecb3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991ba08d-b054-405d-9d38-f3a535e4ab83",
        "cursor": {
          "ref": "4ac5ec75-c9c8-4800-a1ae-ea381cc6f555",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f923b07b-9e1e-4369-bc5c-f7276915c2bc"
        },
        "item": {
          "id": "991ba08d-b054-405d-9d38-f3a535e4ab83",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "29df4408-dbd5-4f03-a75b-8309a5d4dbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cfbc3c-625c-4e76-bc72-b3d970ee4978",
        "cursor": {
          "ref": "9c8b5474-4065-4338-93d4-9b42dfb4f963",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5d6aeb68-a649-4087-bc55-fd1f1f7e4eba"
        },
        "item": {
          "id": "48cfbc3c-625c-4e76-bc72-b3d970ee4978",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d3176b52-a4a3-4bb3-b8c7-57ac25ab820d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57f7d41-902f-45f0-bb27-fa6198822cde",
        "cursor": {
          "ref": "c3a5ef3c-f879-4d6f-8824-ad1c36e6e66e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f871c140-5f02-4870-b28a-859165d76bf9"
        },
        "item": {
          "id": "b57f7d41-902f-45f0-bb27-fa6198822cde",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5c5e72a1-64e6-4e86-8cac-89960c624bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e2f8d5-bf8b-485d-b6be-4fc65bbafe04",
        "cursor": {
          "ref": "eebdd363-13fa-4b90-a9af-854639e2ce9f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7bd49c6f-49e3-4962-b0e0-94c0dadae943"
        },
        "item": {
          "id": "26e2f8d5-bf8b-485d-b6be-4fc65bbafe04",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3bbea86e-5578-4971-80ab-98c40485c035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0da66c8-3709-47cc-8bdc-fe398ec5b759",
        "cursor": {
          "ref": "4325dbf7-8eae-4740-9d9e-711ab3f9d809",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "84d93696-efdb-4ca2-80bd-f357c522dd1d"
        },
        "item": {
          "id": "b0da66c8-3709-47cc-8bdc-fe398ec5b759",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8113b754-79bf-4e9b-b87b-ec9d1f985dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3e02c8-20c7-4867-a144-7e8ec9c248a8",
        "cursor": {
          "ref": "2c88764e-fd37-4457-a00a-93eebbd2e5dc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3d2dd6fc-6451-4b2f-a351-781d661c640d"
        },
        "item": {
          "id": "8b3e02c8-20c7-4867-a144-7e8ec9c248a8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c3caeaf4-2e18-4aad-8127-993602bbbc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5ddcfb-d048-47b6-a54d-f603eacd06a9",
        "cursor": {
          "ref": "fbcf8b2d-fc00-4deb-ba02-924041b2ba30",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b152b1be-5087-464b-89e8-9b12ab86b056"
        },
        "item": {
          "id": "be5ddcfb-d048-47b6-a54d-f603eacd06a9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c132270c-e861-472d-b8c9-beab36da4ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e18552-00c2-44e0-853f-4c14847b48fd",
        "cursor": {
          "ref": "c4112eb3-e1fb-433c-8a9d-e08701490e50",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7c842255-9f2c-4709-a87e-6a19b5896efe"
        },
        "item": {
          "id": "c1e18552-00c2-44e0-853f-4c14847b48fd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d78d0dc9-745c-4a15-bc3a-86810739d60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2975ad71-5bf6-4649-96ed-bc40138b0ef6",
        "cursor": {
          "ref": "51783751-8d18-4730-baa8-147449454d16",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ce4f06bd-d39e-47d7-92d9-45e566138311"
        },
        "item": {
          "id": "2975ad71-5bf6-4649-96ed-bc40138b0ef6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d99649d9-232b-413a-aadc-5d5e9c01c8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0e1bc7-57c2-4821-a40e-12b1550f12ee",
        "cursor": {
          "ref": "1c0d0001-4663-4911-8d17-79ba49c61f44",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f6bca406-4ab0-421d-b136-4f950ba585be"
        },
        "item": {
          "id": "2d0e1bc7-57c2-4821-a40e-12b1550f12ee",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "db7cefb8-023a-442d-b7b7-209cd48017e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14783f1d-3d10-4e5c-8f60-40a50fb3b925",
        "cursor": {
          "ref": "5ae3a607-193a-4491-94a5-7432668eb0af",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ff20086e-4e93-487b-94cf-0818ab0d1e31"
        },
        "item": {
          "id": "14783f1d-3d10-4e5c-8f60-40a50fb3b925",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bd922efd-f850-4adc-8261-e77f8e7f505d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77aee322-ff10-4f2c-964f-c21820266c58",
        "cursor": {
          "ref": "b38e92fb-7b5a-4e6b-8ce2-241c22182fed",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9a2c0982-e605-4d2b-aec5-1f6f19e4e7e8"
        },
        "item": {
          "id": "77aee322-ff10-4f2c-964f-c21820266c58",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5a3a6a43-f46a-4cda-9774-17cfd72a7153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c112b29-daa5-4c18-acaf-f6744491b389",
        "cursor": {
          "ref": "6ec2e6f8-1f16-42af-b203-32c7bf93af28",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "97f8e8e5-0a25-49a1-a883-8911a2959f66"
        },
        "item": {
          "id": "0c112b29-daa5-4c18-acaf-f6744491b389",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "da8bb828-5aa1-4ea4-95fd-fea3fd2935e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9bcd1e-0245-410c-b52f-f169bd425c97",
        "cursor": {
          "ref": "ccfd0cc3-1e83-4eee-bd5e-4df86eed04d5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a8ec2870-f532-4a8e-a638-e9e7b2bec9f9"
        },
        "item": {
          "id": "fb9bcd1e-0245-410c-b52f-f169bd425c97",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a907b7e0-5f5a-463d-a470-408d23c9065e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e727f593-6964-4f9a-8c76-c965021a2538",
        "cursor": {
          "ref": "4d094c9b-ed87-4db1-a0b3-a6363c35cbdf",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6c27627d-79c8-4c2b-8ec6-9a5598e6fed9"
        },
        "item": {
          "id": "e727f593-6964-4f9a-8c76-c965021a2538",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "990d329b-563d-459a-84fd-002ec2764fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea01238-30cd-43ff-9aa9-f6a7d7d3c870",
        "cursor": {
          "ref": "1f85695b-8d4f-49de-b0d6-212c3d12b11e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2c072514-760c-426a-8bc2-ed37a9dcc19c"
        },
        "item": {
          "id": "aea01238-30cd-43ff-9aa9-f6a7d7d3c870",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2313c6c7-4767-4607-9864-033a975e3035",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00265de-2e12-4b5c-8cd8-9777561e5462",
        "cursor": {
          "ref": "0c869e60-6d81-4e77-899a-743dd406f3cd",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0162bd5b-69dc-403e-a200-78ab90096bf6"
        },
        "item": {
          "id": "d00265de-2e12-4b5c-8cd8-9777561e5462",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c153690c-132f-4b94-814a-abaf2719a572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "87010857-f554-4cd9-8e3a-a5b977d60857",
        "cursor": {
          "ref": "e76cd03e-f3ee-4e12-aee6-9f24f7316e21",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ab89ecf0-6aa0-475f-aa99-acdecfbbcba5"
        },
        "item": {
          "id": "87010857-f554-4cd9-8e3a-a5b977d60857",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7efda25f-6fad-462b-bbe8-431c0091cb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fd8f929e-d376-411d-a8c8-cad9e33acdf8",
        "cursor": {
          "ref": "c13b7664-2f4a-4053-82c9-5fcb9408592d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "592d3eed-2225-4a45-98c9-86a28eda715a"
        },
        "item": {
          "id": "fd8f929e-d376-411d-a8c8-cad9e33acdf8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9cb1c14f-95b9-4552-b757-9a7ef64d17eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1267c179-6ae3-4a43-ba91-2befa4a5c5d1",
        "cursor": {
          "ref": "b42765d6-8539-4f15-830e-20248897813b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "63ec7bcd-8f27-478c-974f-db5841dcae6b"
        },
        "item": {
          "id": "1267c179-6ae3-4a43-ba91-2befa4a5c5d1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "22a0a3c2-60b6-4ffd-a1ae-498f78f07aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e977b19c-950a-401b-be89-81c7fc68e618",
        "cursor": {
          "ref": "70673905-2488-4a16-95b5-b83183b2da6a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3867a314-bb44-429e-965f-576d1322a9ea"
        },
        "item": {
          "id": "e977b19c-950a-401b-be89-81c7fc68e618",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f4f03ea0-3b40-4818-bbdb-c5995661dd89",
          "status": "Created",
          "code": 201,
          "responseTime": 15622,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e12d1e-1e95-4994-a084-2ff7c219ab0e",
        "cursor": {
          "ref": "11fc0321-d956-4ee4-8145-c40a09c499c2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a97be449-a8e3-4259-bfa1-759d83bb958d"
        },
        "item": {
          "id": "41e12d1e-1e95-4994-a084-2ff7c219ab0e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9290b60c-358f-43aa-aef7-c1fd0ae57ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c505679f-4f82-4dfc-9f42-a18a618415a3",
        "cursor": {
          "ref": "add27457-c455-4a50-8ccd-9a72a94e2536",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d2346a7d-f11a-4564-b8de-9451fd05520e"
        },
        "item": {
          "id": "c505679f-4f82-4dfc-9f42-a18a618415a3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c457ca35-4335-475f-b3ea-6ca9300a2187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1c3aee4b-24c6-41ae-b82b-47575b01fc0f",
        "cursor": {
          "ref": "85fb8d7d-e22f-464e-9827-2a40550e93b5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0c915a98-bbce-4ff8-b2de-65db8ceb8e11"
        },
        "item": {
          "id": "1c3aee4b-24c6-41ae-b82b-47575b01fc0f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c0ed83bf-542a-40c6-af9d-9c9a8dfe5b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c9b65e-6526-4b4b-b7bb-305d0cfa7f92",
        "cursor": {
          "ref": "2c3649a6-77b4-4d72-a86e-14168776725c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d76155c3-dc0b-4e08-b829-eafe2efce026"
        },
        "item": {
          "id": "f3c9b65e-6526-4b4b-b7bb-305d0cfa7f92",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7921687c-8140-4c22-95a0-00202c5b1b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678f22dd-5341-4f68-b7fd-a2d4f5978a97",
        "cursor": {
          "ref": "57dd80f8-098b-457c-b0cf-e221d86c9aa7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c953e5c0-b961-4685-ab2c-191618f02554"
        },
        "item": {
          "id": "678f22dd-5341-4f68-b7fd-a2d4f5978a97",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d100515e-8ee8-4869-a080-36f1a1a34a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34847bc-ea2e-4223-be55-ffd75e48ca6e",
        "cursor": {
          "ref": "34074b7b-1abb-4d30-b82a-4f4f38ca5e4c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b828d1aa-a6db-4dfd-aa23-50904bfcaa5b"
        },
        "item": {
          "id": "d34847bc-ea2e-4223-be55-ffd75e48ca6e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "69580dc8-231a-447f-b052-da4444941a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717f3db6-cd0e-4123-ab44-7c12e1de4daa",
        "cursor": {
          "ref": "4993826f-0460-4665-a22a-67f7ed96d038",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a3cf4619-7571-4f08-a36d-774e05c34589"
        },
        "item": {
          "id": "717f3db6-cd0e-4123-ab44-7c12e1de4daa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c939f327-8491-45c3-837e-cc41b04a46aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27f7188-7fa9-4ddc-be8c-6ec844a2bec3",
        "cursor": {
          "ref": "725c1431-d958-4204-8168-0b03fbe719ba",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4c7d415e-f2c2-407f-a871-c160b3099806"
        },
        "item": {
          "id": "a27f7188-7fa9-4ddc-be8c-6ec844a2bec3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ec9810bb-5a1b-4e77-8bc3-a89870155949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992451b6-c819-4a91-9c5b-59895e48769d",
        "cursor": {
          "ref": "f3940f8a-ed8e-4e50-b754-9e4867eddb9c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "277fd901-327e-461e-8138-d28044b3ff23"
        },
        "item": {
          "id": "992451b6-c819-4a91-9c5b-59895e48769d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f18e6638-6423-4ec0-acbd-dd498e567021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87901406-cff0-40ca-a8a6-33e8302fdf78",
        "cursor": {
          "ref": "52757a68-5bf1-4783-900a-e72c5c9df1bb",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4d184df9-ef4e-4b8c-a00f-02e39ba9314b"
        },
        "item": {
          "id": "87901406-cff0-40ca-a8a6-33e8302fdf78",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ecae2546-ad87-4069-911e-eb3569c518f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660be335-1ca9-4724-96b9-d7b864bdee68",
        "cursor": {
          "ref": "aa71b02b-3af0-4e61-9c45-d167071d347d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4a266de4-a4d7-4c54-8fa2-05136bb459c5"
        },
        "item": {
          "id": "660be335-1ca9-4724-96b9-d7b864bdee68",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bfe08afc-8c9f-4533-87be-999e5ca9cb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189993f8-dbbe-40b0-8f18-67329905db56",
        "cursor": {
          "ref": "4175a122-7132-4fc7-9222-6c70c8a69cc0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "718c6920-5272-41fb-bc0f-978417d00dad"
        },
        "item": {
          "id": "189993f8-dbbe-40b0-8f18-67329905db56",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dfc33b62-2b06-4096-a1be-96a4fddf9e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7010ab-4cef-4868-9239-4cc96f7c3caa",
        "cursor": {
          "ref": "e6515b4b-d8a4-43c8-a2e4-efdb3cfc6d1a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ae73ffa9-049f-4c86-9197-49fbfafb9786"
        },
        "item": {
          "id": "6a7010ab-4cef-4868-9239-4cc96f7c3caa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f343821b-d929-4a97-b782-e9e20080eefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e623c9a8-4375-4790-851f-a536cffcba28",
        "cursor": {
          "ref": "c88c2bac-5d98-42e9-b451-f5b76dd84c4e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "92a1e15f-2c6f-4d4d-8335-b3313eb5193d"
        },
        "item": {
          "id": "e623c9a8-4375-4790-851f-a536cffcba28",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e6763d16-292d-4706-9e1a-7eed9e8d27c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25853d7a-abb5-4864-a095-8f9926a357b3",
        "cursor": {
          "ref": "4faa36ac-1ee6-401a-89ea-152a16e1204b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d1edc76f-56b4-4677-b816-936bde3524cf"
        },
        "item": {
          "id": "25853d7a-abb5-4864-a095-8f9926a357b3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "95657428-b37a-4c64-b4bc-c78b849d2b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2df4d26-3772-490c-9fbe-971478780e2b",
        "cursor": {
          "ref": "839d50d6-040f-4057-b4c0-b7d758ea95fc",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9d07272a-26d9-4ebb-bd68-2f86a69fad16"
        },
        "item": {
          "id": "a2df4d26-3772-490c-9fbe-971478780e2b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "831b35a3-0f9d-4c5b-8985-9fb7ce92a84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb1f907-ff43-4918-bdc2-c029834ab814",
        "cursor": {
          "ref": "9a92d96a-05c2-4a43-8d44-e0aa3453ba2a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1871652a-0b66-4408-b5ad-dbc71c761644"
        },
        "item": {
          "id": "abb1f907-ff43-4918-bdc2-c029834ab814",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "39d83b37-93e4-4777-8cdb-2ad4c4263fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b34191-6dda-44ca-8bad-8a3da41ce133",
        "cursor": {
          "ref": "aefb7d54-2b76-4877-9dd3-cadd0977c3e5",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fe189484-d402-4f38-8de7-2e238c3e9c40"
        },
        "item": {
          "id": "42b34191-6dda-44ca-8bad-8a3da41ce133",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b096a201-20f6-4e9d-a717-85431f41bfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8472ed45-b73a-4070-992c-2cd25887b424",
        "cursor": {
          "ref": "db990771-bf7c-4179-9d12-d088f97a3b1e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b69eabc4-6a72-4ee8-8477-30ad12f7837e"
        },
        "item": {
          "id": "8472ed45-b73a-4070-992c-2cd25887b424",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7687e4e2-0169-4439-9bef-3f9b7d1c8067",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 255,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0b821ad6-4355-4376-b798-ad8db16aac64",
        "cursor": {
          "ref": "c92f96f6-ca87-40f4-b173-0d39119a2684",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3632008d-a9a8-48f6-b543-de801509b3e9"
        },
        "item": {
          "id": "0b821ad6-4355-4376-b798-ad8db16aac64",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dccb0711-95e8-4828-85f4-a9841a8d5b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350cc604-bd24-4a72-9e76-3f80de19ddee",
        "cursor": {
          "ref": "9b202101-7dd2-4b6f-a29e-8080c66e9f56",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cdb54450-cbda-43db-bafa-1b70afef0265"
        },
        "item": {
          "id": "350cc604-bd24-4a72-9e76-3f80de19ddee",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81dfb42c-c20f-4889-9cb1-068477d28dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e52ae2f-bf92-4eeb-a9b7-1b40c810a7f8",
        "cursor": {
          "ref": "1b8927b7-cfda-4703-aff4-dff808f694e9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ae5325ae-1ba5-48d0-b2c6-7bd4885c8c2c"
        },
        "item": {
          "id": "7e52ae2f-bf92-4eeb-a9b7-1b40c810a7f8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1ca5dac9-5303-44b2-a97b-736420096330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e019a6d-1ee2-4d56-a167-0597e1a8b6e4",
        "cursor": {
          "ref": "02946364-53f3-49a2-8a80-762a07cc51aa",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "306c8c71-b619-449b-8a14-aea341bd063c"
        },
        "item": {
          "id": "6e019a6d-1ee2-4d56-a167-0597e1a8b6e4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "be78c025-f9ad-421a-8987-ccb08600e21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6d17b9-773c-418f-b0dd-d9e61bc9c884",
        "cursor": {
          "ref": "470980a2-3c81-44f0-9894-fc31571d3621",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a8767afd-6fea-4036-829e-6b0798319481"
        },
        "item": {
          "id": "ef6d17b9-773c-418f-b0dd-d9e61bc9c884",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d9c24988-4bb8-4849-aa7f-412b0999e6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4356d00a-3848-48b1-8356-45c3ff82e73e",
        "cursor": {
          "ref": "59c39e6f-094a-458c-a5d9-3fce98cccc6a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a54c4143-6801-43af-9026-45c87611baa5"
        },
        "item": {
          "id": "4356d00a-3848-48b1-8356-45c3ff82e73e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "59641a42-a637-40e4-ab5a-d29a622a455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c362dff2-308d-4bcd-8643-1b2176be5494",
        "cursor": {
          "ref": "946b6b64-43b5-4256-83e3-48910621522e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9ffedc46-dd7c-47c0-87f5-d29f1a055132"
        },
        "item": {
          "id": "c362dff2-308d-4bcd-8643-1b2176be5494",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d60e405b-27c8-47fb-94e9-bca531600b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535e7f49-18d1-40a4-ac28-c105ba16799d",
        "cursor": {
          "ref": "23d9df67-5ba4-4750-8138-118563167098",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4034a3db-5983-4884-a986-f9a6a466b60d"
        },
        "item": {
          "id": "535e7f49-18d1-40a4-ac28-c105ba16799d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a73bb43c-85e6-4341-9d27-f837ab1a6211",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0a9cfd0e-8221-492d-98fa-81c8edcd6890",
        "cursor": {
          "ref": "194ed76d-d9b6-4a89-9a66-14335602f573",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "34de691f-ae80-4cd2-bf53-1430594a98b6"
        },
        "item": {
          "id": "0a9cfd0e-8221-492d-98fa-81c8edcd6890",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e71812bd-a927-4782-9f89-a4606bbaa7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf478e7d-fc2b-4c76-9bde-bf2d569dd298",
        "cursor": {
          "ref": "28945ddb-29ef-4a14-b7e5-2376c1f876c1",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a02ab940-3a0a-4c3e-b877-b54cceceb25d"
        },
        "item": {
          "id": "bf478e7d-fc2b-4c76-9bde-bf2d569dd298",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "76a72526-193c-475c-9337-1e8a3445f66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280317c3-0e7c-4da2-9cfe-c9d411e644b3",
        "cursor": {
          "ref": "59d6ffd6-45f0-4592-971a-f3c0989a083a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e5f59f8a-fd66-4bb1-bf80-1aae322e7e93"
        },
        "item": {
          "id": "280317c3-0e7c-4da2-9cfe-c9d411e644b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e3c7b4d5-29ec-4934-8df0-19c3196ec638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21639ebb-2277-4027-a28d-6ab5a48dc648",
        "cursor": {
          "ref": "b43b6acd-2fc6-4d6a-9dca-0f8a14a1bf16",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "97082c6f-226f-45ca-9aed-58b417cd36a6"
        },
        "item": {
          "id": "21639ebb-2277-4027-a28d-6ab5a48dc648",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "19530f83-957f-45ff-ae35-97ef6fc71150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee0d4fb-6b69-4c37-b0ed-7f88248e785d",
        "cursor": {
          "ref": "990cbe4d-991e-495f-9203-1f7778e9445a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c1a8878a-8494-45c1-95a9-30fd3e8d0448"
        },
        "item": {
          "id": "dee0d4fb-6b69-4c37-b0ed-7f88248e785d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7be657cc-b152-4f31-88b9-6e799e899a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02e8718-aca7-442a-b92d-4520b93eb455",
        "cursor": {
          "ref": "c2568d1a-d85f-479c-8e78-d87fa6d0e0cd",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "24cbec87-0173-4a3d-820a-7464d05265aa"
        },
        "item": {
          "id": "e02e8718-aca7-442a-b92d-4520b93eb455",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ef107377-2c16-4177-95e2-845e1d825521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29beb726-f0c4-4ba0-a3de-0433eeb974e6",
        "cursor": {
          "ref": "8279f0e2-d9f0-40e2-b068-df5f69a63a05",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4bc96736-9a5e-4383-b1d6-e9f68a74eb7c"
        },
        "item": {
          "id": "29beb726-f0c4-4ba0-a3de-0433eeb974e6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "91a4c47e-1184-4be4-8144-7c811cc0d928",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "577c994b-c80a-4eab-9f3e-e4e158a6337f",
        "cursor": {
          "ref": "e3f65032-8915-43fa-a353-df14e11a9ba7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d4afc085-9e49-4a15-8f8c-b5075e3ee71e"
        },
        "item": {
          "id": "577c994b-c80a-4eab-9f3e-e4e158a6337f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ce299acd-b99f-4141-ac9a-bb267aa0bc8a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "d0035d69-e90f-40ff-b0fa-59ddc9eba1cd",
        "cursor": {
          "ref": "11f9cde6-73cc-496b-9ddb-fb850f53a849",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4574d6ce-ab00-4049-9ffc-311388c80a2e"
        },
        "item": {
          "id": "d0035d69-e90f-40ff-b0fa-59ddc9eba1cd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "569e5ac1-3832-4a20-9568-bad908ad53c8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 91,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "1ac25ab4-0b9d-486e-a888-1c76fdeefc97",
        "cursor": {
          "ref": "e8f26f89-7dd1-4a58-8625-830e3b6337ee",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c5ab0266-66e7-4c4a-a9db-aacc94986f5a"
        },
        "item": {
          "id": "1ac25ab4-0b9d-486e-a888-1c76fdeefc97",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3b439434-aa8f-48f4-9f3f-716a1b32a91c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "fab1d8b9-ec60-4f1c-9375-b7a16f119073",
        "cursor": {
          "ref": "f7937aa5-d24c-4811-b3cb-e969a7fc8577",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "904e3bf0-6263-4421-a648-022a3124474a"
        },
        "item": {
          "id": "fab1d8b9-ec60-4f1c-9375-b7a16f119073",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "576d239a-52c1-47eb-ac2b-434b50225597",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "b525420d-6ed5-41f3-b395-7b2cb0622c1f",
        "cursor": {
          "ref": "e6e31c0c-b54d-4b59-b952-d7bb33b25c4d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e1ac77b4-e67f-4460-a6b9-b49344d7c819"
        },
        "item": {
          "id": "b525420d-6ed5-41f3-b395-7b2cb0622c1f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4d685280-80fc-463e-9f43-8d944b8133bf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 92,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "fd4219d4-d91d-41cc-b37a-d134b36c58a2",
        "cursor": {
          "ref": "61f80705-b96e-4f67-bc1e-a7c82c958c6a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "565c43d1-d0b9-460e-9c83-01c410d31ae6"
        },
        "item": {
          "id": "fd4219d4-d91d-41cc-b37a-d134b36c58a2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "97a2162b-3369-4ada-ae31-ceb53375770c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d0ce84-09c2-4a41-bb1c-d979a8480795",
        "cursor": {
          "ref": "cb9962a8-d952-46be-a0f1-eb8fe91872e9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9ab55128-eef6-4a01-83f9-385c42eaec98"
        },
        "item": {
          "id": "c8d0ce84-09c2-4a41-bb1c-d979a8480795",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e46a69da-f718-4153-b593-091f5f4bb401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49676a9-c696-4bbc-9f7b-94ae662d14f6",
        "cursor": {
          "ref": "97530ffe-48a2-4f92-9e28-76ca74f65ac5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b7788238-9b3c-442b-bb6d-de9665d56bdb"
        },
        "item": {
          "id": "f49676a9-c696-4bbc-9f7b-94ae662d14f6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea12556a-7fb8-45db-a45f-cf76d0b1aaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdd28a6-6957-4fd3-9715-1762ee8c9f2f",
        "cursor": {
          "ref": "6159cee5-9199-42d9-888d-d6606ee84ba6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "beed5b3f-30f8-448a-8d5c-68cee6f845b8"
        },
        "item": {
          "id": "afdd28a6-6957-4fd3-9715-1762ee8c9f2f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "05755a4d-d1cb-4e2b-b958-56483139f3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9e5282-6a33-4bbe-9d07-4810e9c96d14",
        "cursor": {
          "ref": "cbc5d8f0-4531-44be-896e-f299682df5a0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f38c143c-3654-4fb0-859f-f713aae53a2b"
        },
        "item": {
          "id": "7b9e5282-6a33-4bbe-9d07-4810e9c96d14",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "de40626e-91dc-4f93-a37d-d40a1ac0ad28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee298f9b-d23f-41ae-8674-5df8fa80cd41",
        "cursor": {
          "ref": "7a064304-dfdb-4b71-b9eb-efbda7cb2064",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f1d7788e-a01f-4189-9285-7d4b91ff455e"
        },
        "item": {
          "id": "ee298f9b-d23f-41ae-8674-5df8fa80cd41",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5f5d725d-f73e-4105-b567-c781c13594d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20caf2b1-ad85-4539-b8d4-a62e26f0991f",
        "cursor": {
          "ref": "d4bf1bb7-8412-4e6e-aa93-e1c13681e926",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "08d6f4bc-202a-4124-b213-9cca858f9889"
        },
        "item": {
          "id": "20caf2b1-ad85-4539-b8d4-a62e26f0991f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c501b6e2-81cf-4df0-9d16-a73a5bebef89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd3ff30-f239-46c1-8093-28cfac6677f7",
        "cursor": {
          "ref": "4ca4ce80-ebce-4e07-95e8-7a2d0af245cd",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e10e035b-9b4c-401c-93ca-775e9bb902d4"
        },
        "item": {
          "id": "ffd3ff30-f239-46c1-8093-28cfac6677f7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d6fc93df-0d24-485a-89d7-a6676ea48b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bbcf9f-e099-4451-af41-64281cfd4979",
        "cursor": {
          "ref": "87ff5c41-9e7e-41cd-8ebc-47d2d371c619",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8eabdff6-f4c4-4cf8-bc66-e8c909725477"
        },
        "item": {
          "id": "c8bbcf9f-e099-4451-af41-64281cfd4979",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "98143e32-8d41-49e9-99c9-8db3566543e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39724a2-771e-4162-9e0d-ace09eee7b94",
        "cursor": {
          "ref": "4c4263f4-a6a9-4c4f-87ef-bcb288754965",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ab2e1eb4-51df-4b87-ab45-408978c3da7d"
        },
        "item": {
          "id": "f39724a2-771e-4162-9e0d-ace09eee7b94",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b2ec5aec-18b7-48ca-a890-8369ae79bb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5686469-2bbb-48b1-b958-f255ce2d91f1",
        "cursor": {
          "ref": "b21c3a3c-37db-43a5-bfc4-8a24d87c71c8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "af53c865-2e8d-42b0-9451-50e57e571e16"
        },
        "item": {
          "id": "b5686469-2bbb-48b1-b958-f255ce2d91f1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f602aac9-8fbd-40c4-b587-280b4c84b321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac5eea9-568c-4ace-a963-0008d34db5a8",
        "cursor": {
          "ref": "3b54ee71-d9ad-4a31-a2ff-e47b368969c3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2a17d7b3-f61d-4f61-9201-a8ccf0056ef6"
        },
        "item": {
          "id": "1ac5eea9-568c-4ace-a963-0008d34db5a8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "deb0d699-6f33-4ac2-a60f-f00c50db796c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d25122-78f9-42bd-9daf-85a99c66b487",
        "cursor": {
          "ref": "ac3b6a36-4559-4814-a0c5-b7d01d20fcc4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ed2837d1-37c4-4ce8-b801-a2267195beab"
        },
        "item": {
          "id": "f8d25122-78f9-42bd-9daf-85a99c66b487",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "14107ad0-0cb7-4f36-a430-ff4c1ddcc2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dc7c99-eebc-4c54-b068-d16f4d854385",
        "cursor": {
          "ref": "a040a0c5-b10d-40bb-8c08-f7c430ecd6e3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c99c74cf-0539-4b0f-8cf2-37b9558b0be3"
        },
        "item": {
          "id": "e3dc7c99-eebc-4c54-b068-d16f4d854385",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "58470063-cead-49b7-835a-003af2d8f8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffdc495-830e-4849-95c6-581241fba472",
        "cursor": {
          "ref": "026cdbc3-341f-48c2-8db6-74eafe018bc8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d01d07a4-c024-4320-a310-e90d6833855f"
        },
        "item": {
          "id": "6ffdc495-830e-4849-95c6-581241fba472",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "18eefde8-f5f1-4f22-8345-ad4e9391c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01be72d9-0451-43ed-8d71-f30930f235f0",
        "cursor": {
          "ref": "b58f6316-eb9a-4392-9555-374dab89b242",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d99a4a40-d02c-4c68-a1d4-0103168a77ab"
        },
        "item": {
          "id": "01be72d9-0451-43ed-8d71-f30930f235f0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2eb9e2f5-6192-4e75-a802-d2ef1e023f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed03e7a-a585-4cf8-b184-9c15ef345b7e",
        "cursor": {
          "ref": "f74b857a-177a-4b78-8319-9b8dc5a074ce",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f0aba7ff-93d2-4a12-bf3c-03314ab2e122"
        },
        "item": {
          "id": "2ed03e7a-a585-4cf8-b184-9c15ef345b7e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6d65b521-c5b5-42a7-8b0f-cb34e2820696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cebe47-fcca-4e6e-8595-406b8096f4d4",
        "cursor": {
          "ref": "a5b73fc9-8ee2-43ff-9a11-34a379691da1",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1e6af7b9-f931-4690-8782-b98565ee57e3"
        },
        "item": {
          "id": "c4cebe47-fcca-4e6e-8595-406b8096f4d4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7f40d619-3016-4569-8158-90489bcce3ff",
          "status": "OK",
          "code": 200,
          "responseTime": 186,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "eef1e6d9-0d3c-44ff-afa2-bf16df7df299",
        "cursor": {
          "ref": "9c7761d1-c9a0-4763-b7d1-3dc3923506c8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "066d1465-8537-403f-b7af-14dd7b96367f"
        },
        "item": {
          "id": "eef1e6d9-0d3c-44ff-afa2-bf16df7df299",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ef517d42-566c-4af0-bbd7-ac1e07dbd3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbec72af-94d7-48c4-a87d-e5b083081167",
        "cursor": {
          "ref": "90b67602-66b5-470d-8c71-534094190995",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b95d73c8-594f-429e-b916-ac980a8ca49e"
        },
        "item": {
          "id": "fbec72af-94d7-48c4-a87d-e5b083081167",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "00bfc409-e4b0-4eb0-b2e4-4189090f9cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6974ffd-57b4-4c72-b98c-5b24cad15932",
        "cursor": {
          "ref": "40e4c1f6-c6b4-4449-a25b-bd23cb4a54b5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0c2b340a-431c-4975-9ce7-e54b6e9746be"
        },
        "item": {
          "id": "e6974ffd-57b4-4c72-b98c-5b24cad15932",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c8134b99-f970-4a75-9038-7310ff4b369f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55800ae7-d646-450e-873c-aeba8e7b2ca2",
        "cursor": {
          "ref": "dd736a9e-f3c8-4ea0-aa60-d73c650b6bdf",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1d5736e2-2670-4d9b-b562-facc4bdc8168"
        },
        "item": {
          "id": "55800ae7-d646-450e-873c-aeba8e7b2ca2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b86e1761-0e44-4489-8e5d-79455ff1d22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950ecc2a-b523-40d8-bdac-925ab86a66fe",
        "cursor": {
          "ref": "5da3d9a3-beaa-4c0f-b724-1b16db9fc403",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4b2ea97d-be96-4c4e-8cc5-91564062c72e"
        },
        "item": {
          "id": "950ecc2a-b523-40d8-bdac-925ab86a66fe",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4146c724-b3e6-461a-b550-080c1f9aa261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7019fc85-9188-4925-9ef8-251bb7e7979e",
        "cursor": {
          "ref": "b1701fe0-3ae1-4597-a923-64fba6ff6f4e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "961a9971-2ec9-47d2-8756-5f174d87696b"
        },
        "item": {
          "id": "7019fc85-9188-4925-9ef8-251bb7e7979e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e3e3950a-cdbd-4422-89d5-5e8eec14e982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65488f3-534c-44bc-812c-d113ae2e540c",
        "cursor": {
          "ref": "3620844b-20d7-4bd5-8173-3267ea2925c0",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3599ed8e-ced4-47f8-b66c-5ce9f0752780"
        },
        "item": {
          "id": "d65488f3-534c-44bc-812c-d113ae2e540c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "97b210d4-1584-424f-9d9d-c5abb234b252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4406f6-f674-4229-9e3a-f202a48ee084",
        "cursor": {
          "ref": "377f49a8-f0e1-4346-a0fc-7ec9436bee14",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d40fc1b6-70a4-42ca-9fe4-3997b1d5cf5c"
        },
        "item": {
          "id": "6d4406f6-f674-4229-9e3a-f202a48ee084",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "96af1792-8220-414a-b750-2034506d6c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a82894e-2a16-44dc-8d65-454d57dac091",
        "cursor": {
          "ref": "223b1083-d18e-46b7-937b-f7c24392e564",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9e496267-e9a0-45b1-9f34-3cda4e7b36d8"
        },
        "item": {
          "id": "3a82894e-2a16-44dc-8d65-454d57dac091",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "61abcae7-5bc0-4d93-990b-f1112bb72a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3196f6-64e1-45f4-93f2-85e887e796e8",
        "cursor": {
          "ref": "1d1c1b2a-a53b-47c9-b878-3965996503f2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4bbb2d2f-d593-48ca-8e3d-f341c44a29a5"
        },
        "item": {
          "id": "5f3196f6-64e1-45f4-93f2-85e887e796e8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0755f0c4-7839-4588-a320-f51fbf8e6379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a185aaf0-87c1-47b8-a338-de9e02ad5d14",
        "cursor": {
          "ref": "61f784ec-cdf5-44c1-8adc-1ff1401c2a79",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9fa82d23-7d8e-4cd8-bbb1-999efcca7312"
        },
        "item": {
          "id": "a185aaf0-87c1-47b8-a338-de9e02ad5d14",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fefd96d7-e66a-414a-958a-47f565566edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e52c7d-479e-4ae8-9f50-f4f97b4a201b",
        "cursor": {
          "ref": "81b24284-50a4-4ac4-a1dd-5df79672f7bf",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "15621441-defb-4fd0-a195-b828b0a86216"
        },
        "item": {
          "id": "f5e52c7d-479e-4ae8-9f50-f4f97b4a201b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "225e9bd4-4da3-4668-a326-fe3a8d7c0a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdab573-7e6c-405d-9be6-4b59f69a8c4f",
        "cursor": {
          "ref": "1d15c598-12a8-4c15-bec7-05fd089e7fe0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "08148632-d1c9-49fa-9978-a1491a584a8f"
        },
        "item": {
          "id": "bfdab573-7e6c-405d-9be6-4b59f69a8c4f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "41658b84-3f95-492b-b2a5-92fa6a15255d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02566d68-4127-4ad0-b859-b95ff368ecc4",
        "cursor": {
          "ref": "ddf00ccc-c5a5-47c9-94d3-4aac1faa4efa",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5448866f-572d-4bec-b077-3541c5891617"
        },
        "item": {
          "id": "02566d68-4127-4ad0-b859-b95ff368ecc4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "994fa44b-82c6-46a0-a093-7253f04f1feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe78e1a3-f9e1-4627-9fff-12c56cf46db5",
        "cursor": {
          "ref": "059f4d71-cbf1-47b6-acbf-dd2476af3d7e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bd1782a3-5fc6-4f6b-bd30-7bc70c16fae2"
        },
        "item": {
          "id": "fe78e1a3-f9e1-4627-9fff-12c56cf46db5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ea6f70f3-aea8-46cc-a56b-20e2f52cbc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410d69be-dca4-4d7f-83e3-a8ca168d2594",
        "cursor": {
          "ref": "20407052-6331-42a4-b18e-38ef8db90031",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d8f7aaf5-f1ee-447b-99ef-2ccc433aeb03"
        },
        "item": {
          "id": "410d69be-dca4-4d7f-83e3-a8ca168d2594",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "36208d80-a4d5-400e-ad09-2c809a07f9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1921d6-7121-4595-ac68-6c158b12be8a",
        "cursor": {
          "ref": "f78fb570-70f1-4035-b9e0-4fbf28e0d818",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1e5dfff2-ddfd-49b4-8efa-c05f1fa1b92f"
        },
        "item": {
          "id": "ac1921d6-7121-4595-ac68-6c158b12be8a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "91178df5-a644-4ada-ae17-aca114c9ceb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8eddd8-ae5a-481b-9684-53a737a250ff",
        "cursor": {
          "ref": "9fb18217-c506-4a10-8b2c-44dd5463f3a1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b4b0f47a-faaf-4cad-af24-3da0ab633547"
        },
        "item": {
          "id": "bf8eddd8-ae5a-481b-9684-53a737a250ff",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a0248e78-c53d-47b6-b0e5-11bc1e48eb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfa9026-78f2-41d8-9b86-f57a58bf3c18",
        "cursor": {
          "ref": "fff199d6-a2d0-47a6-b7ed-cd5dd47351b4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8300a6e9-dfc6-4830-96b9-0ae6402d448d"
        },
        "item": {
          "id": "ecfa9026-78f2-41d8-9b86-f57a58bf3c18",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2f25b088-992d-43ca-a1a6-7dc103db7d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd6d6f2-3946-4a38-b170-af83db0288a3",
        "cursor": {
          "ref": "d764358e-b923-45ac-90a9-4e80568ac74c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "24c2b313-8899-4650-8cb1-07fb01c39928"
        },
        "item": {
          "id": "9dd6d6f2-3946-4a38-b170-af83db0288a3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1f1a7080-dd5c-4033-95ce-5e37b18a27fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5e0f5f-43c3-4e33-8745-c63df45c7c14",
        "cursor": {
          "ref": "87f3e4d0-7f96-454c-ae13-0c8fa8dc6e61",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "037bd66a-03e2-4f2d-8886-1905c9f89425"
        },
        "item": {
          "id": "7c5e0f5f-43c3-4e33-8745-c63df45c7c14",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "23f9b0dc-6bae-4e55-8b91-37d4d12fdafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6139e5-da42-44c2-b29b-b95ebf0388dc",
        "cursor": {
          "ref": "42e97b04-0faa-4063-afc1-68a4f020ff0c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "41e1d9c9-2e26-4381-b6a7-7db3b7653c04"
        },
        "item": {
          "id": "af6139e5-da42-44c2-b29b-b95ebf0388dc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a5f63f1a-44dd-43d8-99d6-b5c499202f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26df6057-7539-4804-a41a-bbd3268c6812",
        "cursor": {
          "ref": "8223e53c-99ed-4277-95b0-793af4f946c8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "747a65c8-bf29-497b-859f-58b0633099b9"
        },
        "item": {
          "id": "26df6057-7539-4804-a41a-bbd3268c6812",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3d9295ad-32b6-4834-ac66-ba1c6d16b7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65b6808-8e27-4533-bf92-558f4b3369e4",
        "cursor": {
          "ref": "404132e5-09b9-44a6-ae8e-19955f741465",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6a8d601c-b458-4022-af93-bf757b1e85b8"
        },
        "item": {
          "id": "f65b6808-8e27-4533-bf92-558f4b3369e4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "30dabe7b-c67e-4068-8875-003fb708ebd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2ce5a5-a8a0-40c4-9e42-d01635ae539e",
        "cursor": {
          "ref": "6374cad1-377e-464f-adc1-5cafff38675e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e05bb73a-27c0-4a60-8e8c-3f0c1f051c6c"
        },
        "item": {
          "id": "bc2ce5a5-a8a0-40c4-9e42-d01635ae539e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3125819d-93dd-44f1-beb0-2c759fe27075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475a79ce-28af-48c0-971f-8c15daaec403",
        "cursor": {
          "ref": "6ecca752-bc83-4bff-b9e9-7a8f82cb8d06",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8bcaf3e5-209a-403d-a38f-fa12e9588626"
        },
        "item": {
          "id": "475a79ce-28af-48c0-971f-8c15daaec403",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a9739022-d507-44d6-a69f-0753587719aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ca78f6-2405-4a02-aae8-db5a6177f509",
        "cursor": {
          "ref": "d0ba564c-b227-42e9-92a0-288203c67df5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1d4a713d-4a4f-4c77-a179-5395fd7aeb16"
        },
        "item": {
          "id": "e5ca78f6-2405-4a02-aae8-db5a6177f509",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "273331a9-376b-4add-bb07-1f858ad14e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaf8f20-68ff-441f-a663-425b41e96bd2",
        "cursor": {
          "ref": "faaae3b3-72d7-4aee-8bd4-c3b2dff142bb",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1fe84260-4282-4c8e-8145-0f18a21238c9"
        },
        "item": {
          "id": "5eaf8f20-68ff-441f-a663-425b41e96bd2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bcb4a5f4-b651-4f88-b093-6f3cf99054a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d862dbf8-05f2-4735-b061-c12a7a0a910c",
        "cursor": {
          "ref": "1ad2afce-3b43-4920-b2d6-f563997ffbdf",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d645a646-9d68-49b4-8751-81924438b582"
        },
        "item": {
          "id": "d862dbf8-05f2-4735-b061-c12a7a0a910c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c2909350-f007-4339-9e1a-b342aa618d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bb8d05-b970-4265-b891-6070af4d7f53",
        "cursor": {
          "ref": "b9393a40-caf9-4113-b3c2-728e19286693",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6f37c176-6ef0-47c8-b28c-f116cbdc98a7"
        },
        "item": {
          "id": "c4bb8d05-b970-4265-b891-6070af4d7f53",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4f64a078-1c4d-4b7e-9c42-d380e31cae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466c8e2-8eda-48f1-b86b-29b5986d9160",
        "cursor": {
          "ref": "24cf6fbd-7e06-4f48-a1ec-cb357146dcb6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5ac77bcb-fbfd-4357-8495-19ef24322f03"
        },
        "item": {
          "id": "a466c8e2-8eda-48f1-b86b-29b5986d9160",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c65d2828-0dd4-4d20-b975-52dad18efaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8e35f8-e554-4b63-b01b-2fb194e5dab2",
        "cursor": {
          "ref": "6e1a77b5-42c5-4c8b-b8dc-d89e5d3d146e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "72c671e5-e0ec-46f7-8011-449f9ca1519d"
        },
        "item": {
          "id": "9f8e35f8-e554-4b63-b01b-2fb194e5dab2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c9df3b87-9014-4a6f-afd1-24f5626f595a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b7dbf7-ea7a-4d17-a696-6ce2d4882780",
        "cursor": {
          "ref": "4e2ba65d-a607-4358-9081-5ccff7e46718",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "edb05dcd-2e4c-413f-94df-618922a310a9"
        },
        "item": {
          "id": "e4b7dbf7-ea7a-4d17-a696-6ce2d4882780",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "70af7280-b3ef-41aa-9dfd-46c063aa4c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4ae50c-f017-4029-b26f-6171286a7f20",
        "cursor": {
          "ref": "f3143ed1-384b-4c44-9f17-4059c7e61d97",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7fd3d322-c5a6-48bc-bce4-7c1ee64617d2"
        },
        "item": {
          "id": "8d4ae50c-f017-4029-b26f-6171286a7f20",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8836ce4e-9e5e-4851-932c-aade1b66c9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d958c492-0aed-479c-ab81-270bcec48e31",
        "cursor": {
          "ref": "fe027417-efe2-42e9-8a00-109cb7b150e4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b37e5a47-d42b-4227-b7ee-7fbd2199536f"
        },
        "item": {
          "id": "d958c492-0aed-479c-ab81-270bcec48e31",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d4ec469a-a1e1-49c7-8c25-fdafaee7a5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1251a0c-563a-44e8-bd25-271676f11c82",
        "cursor": {
          "ref": "ee336db0-be22-4567-a862-865065da88b6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f4e8dc63-6571-48d3-b9ec-c1701b7d9179"
        },
        "item": {
          "id": "b1251a0c-563a-44e8-bd25-271676f11c82",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a3534cd5-7bb6-41b9-a956-6cd3e10758be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14b5a15-a5b9-4080-9389-17f680bb8f33",
        "cursor": {
          "ref": "a2436d4c-07ac-415a-93b4-75f45ea3428d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a629e7db-d9a3-42b7-9675-cca091e01827"
        },
        "item": {
          "id": "b14b5a15-a5b9-4080-9389-17f680bb8f33",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e905d4d3-bd7e-405e-a964-b5f64a10f840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5110319d-679b-43a2-99f7-c26c10976a31",
        "cursor": {
          "ref": "bf6f3ee6-ff35-457a-bcef-0c5a0a0aa8ab",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0bc82d00-2b59-48de-832b-2137c3a49993"
        },
        "item": {
          "id": "5110319d-679b-43a2-99f7-c26c10976a31",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ee3fb38e-51ad-406d-ae92-d78829d432e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1a0d09-8e5f-4da9-b8b3-c65561efe117",
        "cursor": {
          "ref": "222a311d-30c7-4196-8309-c0d56381bb5a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "257757a6-efe0-4a62-94f6-df698dec72be"
        },
        "item": {
          "id": "9f1a0d09-8e5f-4da9-b8b3-c65561efe117",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ac1772a5-f8e4-4053-b616-bbc0fba0a551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080770c1-6975-48bc-9bce-4e7180dcd093",
        "cursor": {
          "ref": "78081271-f4bb-4002-859e-84f699d2d665",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fc2da2a9-1a4a-4bc5-9a3f-a3e836b9c82e"
        },
        "item": {
          "id": "080770c1-6975-48bc-9bce-4e7180dcd093",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4d9c5ba1-ae1e-4abf-8c66-12247a984eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9288b25-d10d-48ba-8f62-d863e9ee72d5",
        "cursor": {
          "ref": "bc49960a-968b-4f8b-8267-d7473f488153",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "71ddb3c3-f823-4116-8976-b9b2a914b820"
        },
        "item": {
          "id": "e9288b25-d10d-48ba-8f62-d863e9ee72d5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d3ca1ea8-8f02-4803-8786-bb10440089d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6d8ff1-1bff-4138-a888-1103b7fdd54f",
        "cursor": {
          "ref": "e56a6952-2aee-4af8-bfda-92b2d55621a1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8a924644-8ca9-430e-bac0-bb81be8031fa"
        },
        "item": {
          "id": "cf6d8ff1-1bff-4138-a888-1103b7fdd54f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1fe0134e-6e47-4433-b3bd-7e718e9cea80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f38e5f8-03f4-4c60-9fa2-127b5c7852ad",
        "cursor": {
          "ref": "b53fa2b8-fc06-4125-ab5e-9e4f9d623693",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9210b67a-fa5c-4516-8cce-353521475490"
        },
        "item": {
          "id": "9f38e5f8-03f4-4c60-9fa2-127b5c7852ad",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0d93adc1-94f9-4f5c-a62b-8a6d35d9bbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b328b90-efb6-499f-adad-9db3cb2afe44",
        "cursor": {
          "ref": "0fed0f87-3dbc-4032-92ee-beb6d8b8f859",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eb87aa54-27ad-49ff-915d-79a32a79bed7"
        },
        "item": {
          "id": "7b328b90-efb6-499f-adad-9db3cb2afe44",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "538cb7ab-d405-439b-bc4d-8faf9cbe1297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208e6b46-c2b7-4e72-ba96-10686aa5c209",
        "cursor": {
          "ref": "82de6776-e4b6-446e-9c64-629624b2ce19",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "239d9518-89e0-4f0f-83e6-e966cd791456"
        },
        "item": {
          "id": "208e6b46-c2b7-4e72-ba96-10686aa5c209",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "00043dc8-b14f-4454-ae70-f5e8695444b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27287588-9384-49a1-b700-83d4019eeaa0",
        "cursor": {
          "ref": "dc2b3b4a-43ba-43f5-b57c-d98383ec003f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c60bbc00-7647-4587-a192-d0ba61d97c38"
        },
        "item": {
          "id": "27287588-9384-49a1-b700-83d4019eeaa0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0dd27717-a5d8-4880-8984-a406b3d9b309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d44a3fc-da4e-4d14-9e43-f2b1ea8252cd",
        "cursor": {
          "ref": "02441cef-7408-465a-9459-67ca4c114c51",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9e576d4b-fde5-4cb1-b47b-e9af98e79f6d"
        },
        "item": {
          "id": "8d44a3fc-da4e-4d14-9e43-f2b1ea8252cd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "24ac4b9d-f6fa-411d-baf9-cfe673046f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a0dfa6-fba0-4b45-87df-d7d9c230cca8",
        "cursor": {
          "ref": "70d577db-129f-442d-9198-73c115c66a81",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c5d23fb4-2da1-4acc-9f86-ce953424189b"
        },
        "item": {
          "id": "61a0dfa6-fba0-4b45-87df-d7d9c230cca8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4b17abf9-4b50-43e5-aa99-6c611d299fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1310d7e-795c-49b2-a76e-fb1832377f2c",
        "cursor": {
          "ref": "763b02f6-c41b-4893-91cb-a56b6c1d29d0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4e9556ca-7a1b-4ea6-b442-54cd8cd5e3cb"
        },
        "item": {
          "id": "f1310d7e-795c-49b2-a76e-fb1832377f2c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1133ac2f-8bc0-412e-9fe7-16564c3d9957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e3e286-2203-4684-8abd-48ba9b432abb",
        "cursor": {
          "ref": "b06f1bac-272c-48d7-8588-055f4f9f239a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9a214c90-a3a1-4ead-98e7-1487315fc78d"
        },
        "item": {
          "id": "a3e3e286-2203-4684-8abd-48ba9b432abb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2708746e-c4f7-4ae1-9af9-476c350ea759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261e7fa1-0fff-407f-9fa3-80498a32da46",
        "cursor": {
          "ref": "7fa62a83-e359-4046-bc3b-8734a7ef5012",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3ecea73a-c185-41c5-9c04-1e22eda44bbd"
        },
        "item": {
          "id": "261e7fa1-0fff-407f-9fa3-80498a32da46",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2254fdb4-a2c0-4d73-bc70-38370ee583da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb68ac2-1c08-4dc4-acb8-0c87710534ea",
        "cursor": {
          "ref": "1aa887c4-669c-4915-b307-892103bbd921",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "80b1a038-7e3e-4ca0-9879-3c095f95fd25"
        },
        "item": {
          "id": "cfb68ac2-1c08-4dc4-acb8-0c87710534ea",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b5a268e3-6938-445a-94b0-ed061ba49717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4327d566-6998-4395-988f-c146e057308f",
        "cursor": {
          "ref": "d724134e-c3cd-4819-b505-20d422d90875",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e661f53f-baf9-455e-bda3-30fb9231461e"
        },
        "item": {
          "id": "4327d566-6998-4395-988f-c146e057308f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f6f8bdab-3ac2-4eff-8d5f-63a38fc1d001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee4b450-7e1e-436c-9159-0dc5ba78c5a7",
        "cursor": {
          "ref": "1f4dfb4d-d098-4856-a1fc-6066c082abc4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0491a0a5-36eb-4d32-9f29-9cbf7061dd6a"
        },
        "item": {
          "id": "bee4b450-7e1e-436c-9159-0dc5ba78c5a7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "66e418dd-7224-4bfe-b7d1-d9236eeefd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9d8482-410a-444f-844a-f4c482ab5bc3",
        "cursor": {
          "ref": "efd125d0-232b-49a6-b761-36241cc4ffae",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b5c0396b-dd0c-4c21-b27a-824eb87aa288"
        },
        "item": {
          "id": "9e9d8482-410a-444f-844a-f4c482ab5bc3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ec951414-adb1-4c66-933a-d08609ea84c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73208ea3-f8a7-432d-8756-eacf4a344469",
        "cursor": {
          "ref": "88da1f0e-677f-44b1-ad32-14538b2893f3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7563b222-0a65-410f-b863-6b61ebe3ef71"
        },
        "item": {
          "id": "73208ea3-f8a7-432d-8756-eacf4a344469",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fac6bdb5-778e-443a-8250-281900a89230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49fa4cd-7ed4-4eb3-adc5-21398bb60f15",
        "cursor": {
          "ref": "c20784db-7fe0-4d97-964e-2723704e9545",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "405e5004-caa7-4203-a447-50c3be463ff2"
        },
        "item": {
          "id": "d49fa4cd-7ed4-4eb3-adc5-21398bb60f15",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0e3af2b9-9bed-40ba-b1a0-a1677f97cb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a63d380-4e9e-46fe-be40-0d15c69bbab4",
        "cursor": {
          "ref": "3cbb1c68-796d-4816-9ee1-1135d45e1792",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7e436e4c-2a63-4191-895f-d14d48127384"
        },
        "item": {
          "id": "7a63d380-4e9e-46fe-be40-0d15c69bbab4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d5f88f6e-7d93-4be9-ad2a-6464fedb8f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2588e5c6-471a-4f87-83f8-5726981873ad",
        "cursor": {
          "ref": "9a385333-409a-4795-b65c-5fb223984ce3",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "872c9070-635f-4b61-9810-536b97e8d4a5"
        },
        "item": {
          "id": "2588e5c6-471a-4f87-83f8-5726981873ad",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4a4132a2-313b-4481-bafd-7d641b740d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a79fa7-6025-4d46-a78e-dd1228b1c665",
        "cursor": {
          "ref": "cb90a508-a09a-4710-8a86-b531df3dcf32",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4a8a8bc8-e0da-47c3-b425-e15fbad604be"
        },
        "item": {
          "id": "44a79fa7-6025-4d46-a78e-dd1228b1c665",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a95b59dd-b8ac-4bbb-932e-fbe53c46e70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a06558-0936-4ae9-b1ce-57fd8e0bcfc4",
        "cursor": {
          "ref": "e121c4f9-624f-41ae-a77b-29d71663b074",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "31186043-e900-4f99-8377-d0ed8b93aec6"
        },
        "item": {
          "id": "d0a06558-0936-4ae9-b1ce-57fd8e0bcfc4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "29066644-87f5-4394-b36f-081aff33d094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c146cb88-9f5e-4cc4-b50c-303390166e10",
        "cursor": {
          "ref": "70739885-9f6a-4904-9b66-7c2bf4c38ec7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b55232a8-a404-4b0b-8b10-fbf2adb62184"
        },
        "item": {
          "id": "c146cb88-9f5e-4cc4-b50c-303390166e10",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6eaec96f-e811-45e7-b754-bdc3dccac4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1812ca1-96f8-4d2a-a946-ac3bd16894aa",
        "cursor": {
          "ref": "2bd3bd7d-1dcf-488e-a218-af1ae7c3d8c2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "51a23f3f-7eb3-4f30-826d-d4e7bca3cd4b"
        },
        "item": {
          "id": "e1812ca1-96f8-4d2a-a946-ac3bd16894aa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ac13260c-a290-4929-9d17-0279bd0e1518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe59f302-7044-497c-9bf2-920ed615d124",
        "cursor": {
          "ref": "6dd4619a-c208-4354-a5ae-187531be1e84",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ce2c77ce-18a6-4350-82fb-b670343facd7"
        },
        "item": {
          "id": "fe59f302-7044-497c-9bf2-920ed615d124",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "44d4c185-aee9-4f31-b2d3-a002e7a7f3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf9a019-0e14-4b48-bf35-4cf35bc4d3c8",
        "cursor": {
          "ref": "d6fec42d-0fdb-4ece-9a86-7ef1aacff4a4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f72f563c-6311-484a-8635-c0bcd147bb8b"
        },
        "item": {
          "id": "2bf9a019-0e14-4b48-bf35-4cf35bc4d3c8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d5aa7ba1-0fbc-438d-a1d2-be0b0dbc4b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a982ced-4124-43ce-8a8e-0eb4ff897094",
        "cursor": {
          "ref": "d4923be2-a70e-456a-8349-8fe88296c55c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "476f5791-6834-45e5-aaf7-82fda9821b18"
        },
        "item": {
          "id": "6a982ced-4124-43ce-8a8e-0eb4ff897094",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "09809a39-f926-453f-a25c-ec45e4d22c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46c63f3-a904-46df-bbc8-0bd7507c44d4",
        "cursor": {
          "ref": "cc867fcc-2e18-49cc-8da2-1e2a5b7411e5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "19ec7397-97ab-462c-89ef-01cd000ebea5"
        },
        "item": {
          "id": "b46c63f3-a904-46df-bbc8-0bd7507c44d4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d638ef7b-3442-4f91-8c9b-5857790b3868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c051c9f6-9707-4037-8fb4-932d14a54b27",
        "cursor": {
          "ref": "8e07d6c1-83a2-418d-b3dc-8e35ac834413",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "157b4857-9369-4c27-9d97-a2bb46cffa98"
        },
        "item": {
          "id": "c051c9f6-9707-4037-8fb4-932d14a54b27",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "58c433e5-30c7-4ac0-a2c6-da7b922dde08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a40b07c-a92f-41a0-817d-b91123099c56",
        "cursor": {
          "ref": "e10ccee4-d922-4459-a5a7-4992e46288db",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2da424a4-3cf4-4130-87f6-71c4b1004301"
        },
        "item": {
          "id": "9a40b07c-a92f-41a0-817d-b91123099c56",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "39130f38-ca88-4e8c-9dfb-c91963a63ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f5c8e5-d546-4d0e-a9d9-61782abf727e",
        "cursor": {
          "ref": "78368f87-7b68-47d9-bc23-e57e1f2fd596",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6c8a3f34-ac1a-4e43-96b7-f1b30f8c2bc7"
        },
        "item": {
          "id": "67f5c8e5-d546-4d0e-a9d9-61782abf727e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "23acb371-cfb0-42e0-8c3b-fab770062fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9065ab-3fbe-486b-8758-6aa34243d7da",
        "cursor": {
          "ref": "62a6e436-7413-4006-9538-05e90342ba78",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8c946273-dca8-4030-af0f-e1277e73323e"
        },
        "item": {
          "id": "ad9065ab-3fbe-486b-8758-6aa34243d7da",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61e25caf-02d2-4122-8478-5e93d77eac85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f52795a-0775-42dd-832e-edf4b7095e7e",
        "cursor": {
          "ref": "8a2a922e-57b0-4f80-af5a-0b26aedfb8b2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a27c62c1-cd5d-4cfd-9f69-6a15cf2c137c"
        },
        "item": {
          "id": "6f52795a-0775-42dd-832e-edf4b7095e7e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "26efa961-6ac7-4781-8c06-dd5fec069f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba12011-a6b7-4cee-bdd1-111581369cf2",
        "cursor": {
          "ref": "ebbbceae-2dba-4065-bf00-8253d03e5543",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "64dd19b1-8215-4b33-8bfc-8177b42a90f8"
        },
        "item": {
          "id": "fba12011-a6b7-4cee-bdd1-111581369cf2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5ed7a486-2f83-4cdf-bdf2-213d7730e60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0b199b-1cdc-40e3-bad3-43ce353fb3bb",
        "cursor": {
          "ref": "6a1fb4c6-6647-4a51-8b1a-151f5687b035",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a7c24a0d-1db1-46d7-b982-3a32a41b1a64"
        },
        "item": {
          "id": "8d0b199b-1cdc-40e3-bad3-43ce353fb3bb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "17dcc759-0bc6-4c0d-892c-b75eebd8da5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0e8595-f119-401f-840e-6198a78642b9",
        "cursor": {
          "ref": "f0835237-4dcb-4044-8ddf-2fda05ba6f0d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7b58a9a8-2064-431a-a79a-df53f1f31899"
        },
        "item": {
          "id": "3c0e8595-f119-401f-840e-6198a78642b9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c3351fc6-9f11-4dab-b754-5ee13a5b3a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d9a5e8-3353-4e57-8149-625f4c76bc97",
        "cursor": {
          "ref": "6dc77c5e-c4f6-4288-a8f8-d7d61200c679",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a9664880-57b9-4045-a78e-9be3e88d91a1"
        },
        "item": {
          "id": "50d9a5e8-3353-4e57-8149-625f4c76bc97",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "62b12d6d-e324-4fa1-9af9-ca5042f332d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a4e8ad-e6e4-453b-b143-c1ad75210e65",
        "cursor": {
          "ref": "cedda4ff-67c8-4b20-80b5-83666397d845",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "17d5befb-98b2-401c-b580-af49934d98bc"
        },
        "item": {
          "id": "a4a4e8ad-e6e4-453b-b143-c1ad75210e65",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b41415d4-ce74-4786-9999-d72a96607324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9060dea6-6079-4c94-9f43-f0fa160603ea",
        "cursor": {
          "ref": "c8f57b56-feb8-4822-acce-0a9ea9ad7655",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bbfdf025-12c1-442c-9dd0-d201023b5d52"
        },
        "item": {
          "id": "9060dea6-6079-4c94-9f43-f0fa160603ea",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4bc93623-44aa-4e21-9376-4495720173f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d96fe7d-7127-4122-8319-be02574c6a8e",
        "cursor": {
          "ref": "3143757f-c29d-41bd-93fd-191fa07b956f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "64236b12-98ed-4daa-aded-adc4fadbec92"
        },
        "item": {
          "id": "4d96fe7d-7127-4122-8319-be02574c6a8e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ce8bfe64-ef57-4066-91a0-f6a906ece871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64bce7f-043a-4f34-871b-d4350da8b916",
        "cursor": {
          "ref": "2f23c336-75a8-44e9-8b48-5c44d8940836",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "60043378-4863-4a97-b778-b2807add48b1"
        },
        "item": {
          "id": "e64bce7f-043a-4f34-871b-d4350da8b916",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b84b0704-c66f-4e43-a1ae-b0eb715d7d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950169e1-8d87-4b14-9681-13ece8c7232b",
        "cursor": {
          "ref": "a2e4bea6-cb2e-4aac-aa87-86af5aed85f8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d7312255-b08e-41be-b55b-5036ba69f257"
        },
        "item": {
          "id": "950169e1-8d87-4b14-9681-13ece8c7232b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b9255f25-f495-44c7-96ff-008795c655f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b833b0c-d7ce-4218-bc7b-b8fe3c126f05",
        "cursor": {
          "ref": "14e07b02-7247-4bd0-b2af-360733d39346",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a3ef1219-9edb-462f-b940-2c5253f4eaad"
        },
        "item": {
          "id": "7b833b0c-d7ce-4218-bc7b-b8fe3c126f05",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e8093722-fa7a-4346-8ca7-53cd56fa620b",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e869d39-1a24-478b-a708-797e61c945fb",
        "cursor": {
          "ref": "453d8dcd-e3d1-48e4-a3cc-93702e244163",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1ce290f0-1e38-4d4b-ab28-d55c0a8ca0c0"
        },
        "item": {
          "id": "4e869d39-1a24-478b-a708-797e61c945fb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "25c036d5-4175-48b5-a671-d243750cc5a7",
          "status": "OK",
          "code": 200,
          "responseTime": 3067,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0b4a04-cf64-4ec1-9282-c86cb77b16f1",
        "cursor": {
          "ref": "aa94ed99-a0ef-42f9-a9ec-e455bd1ac2d1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8afd6b58-1033-44a2-8ed4-971302152e84"
        },
        "item": {
          "id": "2c0b4a04-cf64-4ec1-9282-c86cb77b16f1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "46288ce0-fe27-4851-81b2-3d5be70ac90e",
          "status": "OK",
          "code": 200,
          "responseTime": 3111,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb0c070-f9cd-4ea9-81a9-761339d788cf",
        "cursor": {
          "ref": "3e24cf9f-7440-4920-9090-03caadacc542",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3756dfdd-88b2-4ebc-a947-b43c53d53316"
        },
        "item": {
          "id": "8bb0c070-f9cd-4ea9-81a9-761339d788cf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6bad1865-2f4a-4522-b5a4-79645bf2c2d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb0c070-f9cd-4ea9-81a9-761339d788cf",
        "cursor": {
          "ref": "3e24cf9f-7440-4920-9090-03caadacc542",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3756dfdd-88b2-4ebc-a947-b43c53d53316"
        },
        "item": {
          "id": "8bb0c070-f9cd-4ea9-81a9-761339d788cf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6bad1865-2f4a-4522-b5a4-79645bf2c2d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d918211-3ca4-4d6c-b713-9b642196d13c",
        "cursor": {
          "ref": "83ec90cc-457c-43f1-af27-1e1a32629bb5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6dbaa652-1892-4d2a-aec0-1259f75e8a7d"
        },
        "item": {
          "id": "8d918211-3ca4-4d6c-b713-9b642196d13c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7b148afa-4d99-4052-932c-e14f91a41c06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9984c24-fd30-4e50-bc6d-21bf9da49b12",
        "cursor": {
          "ref": "32d30e07-6e1b-4415-ad2d-f98093be5421",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9b4d77f9-abce-4938-a002-e351711bf346"
        },
        "item": {
          "id": "b9984c24-fd30-4e50-bc6d-21bf9da49b12",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "60004794-bfce-4c22-9e74-f21494b47580",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}