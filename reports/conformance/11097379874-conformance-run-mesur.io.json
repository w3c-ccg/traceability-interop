{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c324713e-8eaa-4ac8-8fcf-9333b2227dd0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f353c3a9-70ef-4903-bdf1-d488797d87e2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75edc084-7dda-4115-8334-3b6006a6733f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6eda9102-ffab-44b5-bc8e-8e24847e1167"
                }
              }
            ]
          },
          {
            "id": "8dcc268e-56bd-41ab-877e-5f5e961c2a3e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90eabb9e-5181-4049-a142-5b7f85dde48f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8f5a784e-3b0a-46ea-b034-defd00bd0781"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aa04f95a-49c0-4e73-bd63-d6297ac46852",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6dcf0e6b-48f2-4707-8f7b-26e0c13db12f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9eb8982-29d2-410d-ba36-7c60bac60e02",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50ad740c-94d2-4903-91e6-80273ac84d40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaa645ce-c416-491d-950b-088f221dc7b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d4c932a-6236-4764-8326-4a53aaf35165",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e64e6d3b-ef5b-43fa-af2c-fb5d2ac2b676"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "711655bb-81c1-47b2-a610-3ee30dbf6de4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "187e078c-0e28-41a6-8a30-c93366e8c7ca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00f191dc-9e84-44df-b8e1-61b146891ea8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0024916a-3ce5-4dc4-aece-5051c90cd7f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e933c92d-0373-4228-85de-6356b63f700c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8139924f-a7be-4884-b9b6-85ff68895ce3"
            }
          }
        ]
      },
      {
        "id": "fbd1109b-bab2-421f-b54a-7bb9593af8a8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0783c62d-4d3e-4072-9869-50355b292aa6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c3f60e8-f1e6-4893-81df-601d92ca8280",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "301a9eeb-05a2-4dfe-b40d-4b52a02e21ac",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5109d9d-60b5-4e9a-bb6d-f9f7f78e4544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "387596b1-7a9b-43a5-8af8-7d892e845f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e50ab8-d590-4d77-a775-9923dba480c2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9149defd-218f-4e83-9b93-84316c838e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31beffb9-d064-4e58-add8-645dfd8a9665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027520e6-75a8-4eb3-a1a7-412066d8e12b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a545324-54c4-44bf-955d-d66256bfdefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fc22c72-3952-426e-b0b3-81de1f735e2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3738aba-deb6-4689-8e1c-d54daf50637d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d854ce2b-0e47-4db2-b690-75cbfec94d21",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f35cbe2-9453-43de-999e-9e7e09d07dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8111a527-6bb2-4e84-8dc9-f1a7599703d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0197eb61-9be0-4a13-92f7-029b4139a134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d92a384-32ad-4721-bd2b-de0f86a46d8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dc2b2c88-124f-4d21-8634-6424d8669174",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adb11b6e-55dd-4de5-b15d-e55ab9eea12d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "586741a7-6447-4798-af0a-289f49a59dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ebcda8eb-cc0b-4b24-b308-eb43d1efc414"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a81546a2-f9c6-4615-8a82-189c347d2de4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "232bbb88-f922-4c7b-82d5-3b0237bb203b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "573c30dc-7871-4e77-92b3-83800cc687c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06502d60-fd02-4ad1-a2c9-30466bcf319b"
            }
          }
        ]
      },
      {
        "id": "f24ed6d8-4135-43d1-8391-06998351ed2a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "690cadf3-aa7b-4323-9033-13c53f49049f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9430f405-456b-44e4-8c06-ccd2a40f4f50",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8b8dce8e-43dd-4016-b004-7ae8bc98c20e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3b807d-6904-417e-8ad1-3e822d52f233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7b4e80-7739-4414-9ece-161cc4527af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17732206-0717-478a-8f5b-35a344fbc6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfd02a29-c8cc-40b6-8da1-b8cfefed49f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fdcab0-9c36-43f2-8738-2dd31f3bcec6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96b6499-1599-40f6-9510-cd4022a9d320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37cbc3f-9223-4479-b79e-6be165ec1b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bed4ff9-8301-4192-bea6-f70416107b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b15f34ba-f02e-4c5b-bcc0-692caaa42cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa787bd-03e6-4869-9eed-1ec27f6ac899",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5834977-966b-47ba-a5d9-79470565b16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df3e566-3def-4209-bae1-aa713a94bc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ca0e4a-3aef-4dd0-85e4-79b35c8e908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2089b29-a141-4420-b7ad-f635774bf673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf70967f-5112-44c5-a617-aa4c325a1328",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6933a9e-e0cc-4f3b-9992-b0520c38dc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51991647-670b-4713-a989-d0459ee572f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a551bd60-4ef5-49a0-ac75-43f3ced9feb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9019285a-48fa-44e4-9fee-e823969106d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a1144f-7496-470d-8749-17a3815878f4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39a1652-7d76-4678-9673-4041a4cae4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e68fc2d-40ed-46d3-ae82-69c45a87d25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db7ca32-3fd7-4065-b852-472799fe817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df427d37-4070-4bbf-8f2b-69dffd019c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df750b21-9f4b-4e8b-9022-8911459fdcb8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e12aa-8245-42f3-ac60-c2519d59d921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1861075a-155a-47cf-915c-891d3e919d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9c0a89-3c8b-4033-85d4-b734c7e4f9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1507262f-2616-4c0f-9408-0c09782a3743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d448637-2fee-4c83-bc6c-a07d6194cc48",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f96499b-6efa-42ff-8408-67f94d588583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fe0966-0654-485d-9d98-5241d0a2c272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f11e7-0703-4adb-abf0-1e105986632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c45f60a-3f1f-4e7f-a9cd-270563144192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fef45ea-77e3-48fc-a939-c8d6e1eb23b0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b2907c-bb8e-4818-abed-37ef442616d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69686d7f-38e3-4fb2-a40e-9db5468ef629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ee86a6-2218-445e-af42-c7b4c1b2f7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48557413-59b2-409a-939d-7667937ee74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561d29cd-22ab-4310-9914-e14083271434",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a726a1-a2e3-4a53-a149-20a2b605f381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076e3059-92e3-485e-a608-721028a3eac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e035e-05fc-4426-a07e-2616eefafef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d9e321a-d80b-4f5d-b4e5-c76e9afcca73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4413ed41-d266-46ca-8354-7aae950a8097",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d307403-a857-420f-8d42-b6e09307d0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c05e4b4-3336-4566-bc15-3d85d1693229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaf46fc-75c3-41fa-833f-f1744ad63b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe9163e-3828-465e-9cb6-dc4570bd9808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2db3fe-cbc1-49f1-a048-b68f1c70e53b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef657ee0-3e56-4777-80e3-f783767b8e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2c3c35-cb7e-4957-80ab-a112062a23bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1ee480-1be3-4de3-834f-c062c5b3fb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "368f80cb-7580-4ace-a860-b16862304df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d81d1a-7709-4be1-8d6d-42e5feff957f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e8fe25-773b-4361-8fa9-7b455560c5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2eddfd5-24b7-423c-8c59-d2efe043cd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd70e0b-26a8-4542-a6c0-146d40af157d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40d7b5da-8ef7-46ca-8b06-b7347f50ed54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ca7ab1-f583-4e2e-bd19-09177ed2bb9f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4525c6-abcb-492e-948f-8bab5fd3571f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da354708-4927-4f84-9e8f-708db5f6581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5452e4dd-8e73-436f-908f-acabd5e01729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84aa240d-381c-41bc-85ae-13ef27979f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57e5744-6435-4f81-a4ca-b165d7d5b00a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a294d00-633f-4583-8968-c2f6058550e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f07499-e5b9-4fa4-88a2-d9e2a1754be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a4f0be-ac69-47f0-8450-aa7f94b90367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32a297fb-d96e-4665-a3d3-8423106329e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa03450-3020-4d88-998c-a409470c8735",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366d308d-7184-40da-bc57-5f3ca5d572ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a83f618-24ef-453f-b15d-5f778e344cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0d1e17-d4a0-4680-a3a7-75f43514a167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dd7a41c-319a-427a-9ec4-f89bd89ff06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11cac33-5d90-4503-a3ee-e52c45a1b014",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b600890-7160-4170-8aeb-f5248492758a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de47a6cf-ab8e-4f77-a828-24cf3c426d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd084496-9ce7-42bf-8f3f-c7703155c318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1051320-ea5d-4d8c-a1dc-07ab9e5e2224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fe8988-7291-43cd-bf3b-9ed11717ee58",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655ff862-9cd6-4358-81b8-8cab4e3cb032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52dd8d8-aa94-442b-837a-dc7a8bd7ffdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef05f27-82d4-4979-886e-bdab17a90bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6d71604-cdad-45f0-89a4-574f1dcf9780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e688425d-6e7a-4703-8fbb-d63261b0daab",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064aa40c-37af-455c-b819-ca1a23e72f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba353037-9c7d-423d-a596-adaf633fe3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46093e2-837a-4804-9c6e-3480cf6f45e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e91483d-b3ca-49ac-8740-3a2151a3ac61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf43d58-88a0-4919-8e7f-eaf727386ab7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648fade1-4a32-4b5b-a2f8-84feb0d7a12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d417ea1-7cce-48b1-8c26-bfaa054038dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7611575-5d3f-45fe-a586-dfbc356d1f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "504d33c3-771f-4170-a0a2-cd7c7880b0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff623eab-9f4d-42c8-83d1-80f3fe5dac89",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f44c7b-c38f-4ef4-96e8-82b544609d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ecee98-be6f-41fd-a809-eef2a9f3e60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3496929f-a88c-4317-85c6-9fdbea6550b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e77d794-bb32-4376-9318-058bf76264ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd76657c-7a6f-4cf4-ab15-4f5af9a82871",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb1fea2-fda7-46a4-9b39-e436c0ce87b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807aac85-d4f7-41d7-be9c-689258a4cf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6450a71-22b3-4e79-95f0-d29c0872a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15e30a40-9bf2-4b21-8c40-ce4b9290f97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2cc2e2-e992-4cb3-8088-9969a5b5ed8e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8859889-eb44-4935-bca7-3062abf72b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56a0586-4587-4b6c-9e61-b480ff5f0a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faedea38-8f66-48ab-ab60-6fb224971c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1651184f-cbbc-456b-99f1-03f2217bd952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7ca4ab-1f1b-4a7f-8659-454b63c58d96",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cc5456-b6e2-4ceb-831d-44a2950c4d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7034a7b3-064f-4c86-b094-1ec8271031ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d3ee44-75ca-46cb-bb61-589ae64389fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a8241a-1838-4e35-b293-a0def219cb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e6b78f-1ed2-4f2e-b06a-2769bc0661f2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69c11c3-89e4-4f9e-a383-cb996f91a1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a9db9e-5437-434d-ba6a-ad8a93a27b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9050ddbc-f93c-42f1-b5a5-c86b7bc8c552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d7b34d-cf21-4e9b-8d77-69920ee59028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07fa2b5-f06a-4224-a8ee-01b639bc6cb5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c0a767-0e6e-4cdb-ae9b-da2ea936350d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84fb1a7-f579-480d-9247-17e0d14eab23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1801800-c05a-498c-88d4-a8c9cdc25b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44422a4-1522-41ec-b174-f540d59ddc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44bcdc8-88d4-4b8a-bcb6-252177d8316d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b437c29-0ad8-4025-a4c4-591360a215c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e7b4d8-5605-46f6-908f-08e7b7894a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af61b878-8c8e-4b7b-8303-bb2ea35f70a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3338259a-729c-46c1-8280-45ec402d3659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfd3614-6e3e-48b8-b268-e4ac5285bb9a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3272d482-e410-439e-a602-308f2f57831a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92595fa2-efb4-4439-90f5-191fa8f8c0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485c5c32-1ce1-4591-a654-ca111e728f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2982ef-c61a-41e1-a9cd-edb46199825b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db05167-9916-4cbe-8d37-731610b91755",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7effae37-2ea7-4de7-b1d4-d8e7afa5a77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77533ce-19d8-4f50-b0e1-acd7cb313918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076a9a1e-3c2e-4583-ab52-db59117450be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae571659-ef4a-4cda-b5af-47df70098e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa3e0fc-7161-4b19-b37a-f8f1fab2a7f8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8317220e-13fb-42df-ab5d-37f6c41fda60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c043b3-7b10-46fa-add0-b8295067bd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da00dd2-e0d4-421d-a0f3-88c6412b6ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f76bb3e-59eb-45f2-8e18-396dad4bc9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11637962-37b5-42ed-94f4-8062e1666c27",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bb8783-be36-44d4-b12d-6545dfce20d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77051f5f-13a4-4f74-a96d-c2df7687f23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c71e42-f43c-4818-a370-bc316254c097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "216072c6-f6a7-4e8c-a230-a65bdc8b4655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa4d2fb-66b5-4563-be9c-6a4702f49f5e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fb0ade-0c2c-4eab-a62e-aba28a919108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e3552c-2f2b-429c-ae6d-880487ad562d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee957d7-ba29-40b8-8629-1fe846e8ce9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2caf9af-f3e6-49c5-984b-a08457f8b9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2992c069-be9d-4eb5-9e0a-81772fa97743",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855d8e72-731b-42db-9bd3-e43b08bd8ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe546668-41a5-4ab0-bb87-81592cd22250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c95423-4478-4683-ba1a-edcb4d3c1018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40140986-41be-47c0-b2d2-4c3624f485a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfa60c9-8185-4e25-a852-f19de4be124d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719a118b-e74b-43c5-8c4e-d3d022cfd27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf539a18-c87c-4b82-b060-7696544bf6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c999fa-45ff-43a4-b897-ebf96d4b478b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8dcf70-ea92-4ed4-a795-2783acc2cf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0d5fa2-ded8-4432-b802-4749a0f693bf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af998650-eb53-49fb-a963-6907c19fb2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc16368a-6bbd-4daf-bb73-96f425c04bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2016bf31-b2fe-4f24-8b5e-c8629cb2a229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e39dce8-f6af-47e0-8f20-309cbea6fb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b518e4ef-4c18-492d-835d-c8b5ea0b45e6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b791ef-c2b3-41b8-ba01-54d65ea4adfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd429db-9163-4db5-a345-d2a07842b75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58bc5e8-96f8-4d55-882b-093c856f76ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "46c4c044-7d07-4429-b781-449b1c0f5114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d73f95-1f05-4fe1-805a-faa107319934",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c323b93-b79a-4a5f-97c0-64d95b0e142c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c620e95-ddfb-40cd-abae-13b3514ff66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541eadb9-a117-4549-bbb4-eaf1c6880769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b661d565-6f91-4cc8-862d-0f896db101f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d52cfb0-8147-4ecf-ba5e-658f9fa4f442",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f273e37-c2b7-4f19-aef7-cbb5cdfb831f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d74a216-ee54-428c-9ab0-5dbf932f6bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d17fe5c-d95f-4387-8f85-5b832061b9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e507e5be-c6e4-4668-ad56-32bac6a52902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc97316-8a96-4de8-9f33-bb06fe50d60e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4a6378-a993-406f-9fa4-49d7005f8b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566ed65a-75c9-439f-81a6-cebad28d1d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c294f122-96b3-4263-aa5f-a4eb71caf696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88d9bf21-9154-4b02-a723-a069920f85c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4900eb9e-5c1c-40f5-9684-1a4d37a2ee19",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f3aa52-9b65-40ca-a546-54594fda39c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d7b90b-70e1-4863-9d23-6425323f5b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c5681f-c49e-4d91-9673-6441ef3d2888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c489241-8354-4132-8040-8616f23aeec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423bf9cf-326c-4332-83fc-095baeb1d452",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235a46b8-19d0-4441-bfc2-513157fa073e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cef3bfd-81ab-4d39-b817-34d6164726d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a120be5c-10a6-4806-9518-cd8243969781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a81d504-8512-444b-9781-a76990bac5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd42ba1-7faa-4d49-8015-b26e65b50acf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0025a9d-56eb-447e-8709-69405e5b0c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b1cefd-76f7-40ab-8822-fe856c1475fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1464cb1-012e-43ca-a852-c255f353507d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb98a47b-2c69-4b5b-8ec7-7137bd42a4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5161eb31-d0cd-4246-8343-12bb96024023",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1734f0-6cf3-41ba-88e8-664495377214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90d5178-0079-4193-a902-ae8ed8d87b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ecd588-cd89-441b-ba04-ceb157ba3e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bc13ca29-719b-4fef-aa02-8796c402b2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c1d7e0-0e17-4342-9117-50bcb4c9eebb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f6d582-7d4f-4948-ac15-6d1d60fbd919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee84e60-849f-422b-8ebd-24f4e964ba3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032980b3-c145-4d19-832f-c185e240cf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eae2f77-28c1-4ea7-a3f2-2e4777d7f125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca846ea-4d09-415b-9ff6-ce09d229961a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e88e67-d5c2-408b-be69-0a5b6077db95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3460944-48d9-421e-947b-99e771b2fae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5424cff7-4463-4e93-b847-27585dc12a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2216caae-9c8c-49a4-81f7-00b2ead74eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac5439c-bb06-4b2a-85fb-b231288b7c8e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c739da4-5a11-4255-acf2-b48094424e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee07ce6-f668-4520-b7c9-9a15a7fcb540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ecaf72-1369-4aa5-9c76-ace7bbaa95c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15afe839-4d95-4684-8625-f35e6bfd5344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8539c961-f37c-44da-ba8a-14ab76479dd7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c99c58-d4a4-4c6e-92da-ba6e8da05a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42f44a0-196e-410c-913d-83d60b8fc7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10c7d82-86ef-4b6b-9b95-aeaf25dfcf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "836d4011-b1c7-4b63-9f82-778641766c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768a2336-c46b-48f6-8266-a08d4a1b5d1a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70904efa-0480-4364-b0e4-44945d06b49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1646b57d-5b3a-468d-a78e-e87c5051d64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6644ec7-80f8-48a3-b240-c67526b82d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9deade10-7ba5-43f6-9fcf-acaa53b51128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c8ecad-4bf8-44f9-be1f-e5d05b95b1fd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf3e9ba-da13-4352-b77c-5397abedf566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0335824e-ff5d-4d8f-aa50-e483c7c3e1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02e83e4-8438-4e9d-99e9-f253758a45df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c82ce04-754d-4018-83a6-afa657e785e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cabdc1c-1e34-4cc9-8e0a-51b3e3d532b5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6038dc74-ea2e-415f-96a0-da02e7a3545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fa0f01-5055-49ac-b631-0995293cf851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3fbb43-7e39-403e-bfb8-c9e753494d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2e098b-1882-4f05-9f06-15728e900d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56709ab8-45dc-4a01-b9c6-bfc198be81b6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f0fdff-c1e9-42ef-8040-a61c2ab88015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f3e8ca-33c7-42e0-a8cf-097fc464846a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a021250-b608-42f5-b6ff-d84d263b7541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c033f82-e17f-4ff5-8384-4c9dd3d440b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c089576e-f9f7-4097-80c8-f29eba4d91cb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f2f038-1d84-4328-971a-93c55c360305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592fbacd-0bbb-4fcd-bc65-e1cd8fc9dfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c13f982-4c3f-4186-95d1-d85f0a92d8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e28c56f8-722c-4c30-a0f3-d03d819cf908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d374a6-886e-4279-96db-9b494226ec42",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45792c7d-2519-4aa3-b7e8-d9ee32b370d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29d4b00-c204-4f59-9c52-17293fc72c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a37ab3-0e71-4350-a42d-bfb2f66c24fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dadfbcd3-f3b4-4153-b4dd-c45aec4cd4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883e8751-1623-4166-bffb-1f267dae8545",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a92508a-81b9-41fd-b20b-2758193f3b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11795013-bc86-442a-a63a-cd8998cdd39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4ac7f8-9b4a-4828-86ab-78e5b378c48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9203b78-5926-4d24-849e-74ef01f4ddb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8f2878-a48d-49c1-bbb3-09e425b2d428",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af232ed-0d9c-486b-a1ac-59323b34606f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfedb1b-0232-481e-8f4c-80b019857a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017ec4da-93e7-4395-80e1-b813e21b4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49d798d4-59e8-4bc6-90fd-c5245742adf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e330c758-8cf7-47be-a2c7-215ee63e2e0b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6482bb-25b5-4403-90ab-0fe96f04799a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b85ce23-1359-42a3-bdd5-9bb77dc504f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34699697-253f-4049-bc58-17109d94e929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efcf6e08-80b6-4bb3-aaf1-51fb03c72a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf42c0d-7e7a-4eb9-9d41-4bf82b17ab1f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568fa2a0-5102-48df-b87f-dfe3aa406559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5025c4f5-6a29-4c76-85e8-74288e938dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9390d8b1-535b-4e24-ac78-2af3ea67f811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd917fa-d746-49a7-aff3-18fb816a57e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a4c471-4a61-453e-b255-345abcad828b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ec25b0-f79d-4ccc-883f-d27ab61aa8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd89d009-0891-4eef-b014-88e778dc9147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97fd1d6-4c2a-424d-b3e5-324655958784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebec2b7b-e754-4f5f-9bd0-94d4357fbce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39483a1c-46b2-4454-bc76-f04e6eb21e73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9aa80c-c2a8-4079-90ad-c1b55c77a4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124e0c33-f3f0-4b0c-af31-70e322568ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed0e429-6c29-41c1-91d4-dc4ad5ae538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d490458-7efa-47c8-b70e-8450450af053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f811771d-76f6-49a3-b905-5583216594fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c425ab9-c00f-46b8-bbda-c42c9198a8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5372231-d5cd-4f96-883d-3e31829aa135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c880d2d8-85fd-47e5-98ed-4b045b9a0c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba0aa35-f36b-402b-8416-3686c9baf09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f003ba2c-3bf2-46cf-be19-4aa03fbcb9fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0867bd-94f1-4533-8aa6-44a8dc5abb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43322fb3-6a13-4878-9849-54cef83d44e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a192f9-d153-4fff-a786-67c0f773e449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "709b7788-106b-4def-a49a-9f5195b0ee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf382079-b3c3-438d-8f35-3ff9aad1ad89",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3216b74-77d2-41e8-a554-be039a484519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc4fc94-734c-475e-91b7-36ed12bdd1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ebe01b-e54f-4978-a6b8-4c16616e3dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "50471fdb-68ac-40fb-a348-fb2305089afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799af9c2-48db-41db-97db-641c89051a72",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9959c4ba-98f1-47e8-bf2c-0327ff326703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb6cb8d-b1bd-4fa2-9aeb-21d45eb8a43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ad8d26-689c-43ee-8b76-b67dd69aac06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0da82b7-dcbe-45cc-b468-3a0ec810c3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec27e56c-578b-4e33-abfb-b93b76b928cf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bbf27a-4b6e-4e8c-944d-2e2794fecf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5670729-641f-4935-ac70-21be32b23abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bd3b82-73a3-4916-9632-0d5b5972ed6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfec7fe7-5b0d-4a5c-b50e-7cdd2712a77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85b52bd-245e-4449-8349-365f185e0cd9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44795d29-6fd6-4e8d-a128-88217f5fede8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2075873-d3bc-4c39-b70b-7beebf7306a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0302fe-4de2-4721-b2ea-ee1f6e7eda56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71af1a06-0ee2-41c5-bbd0-d1b8f7717504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec76139c-17fc-47d9-ba74-cb684245a238",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b5fbef-12ce-4975-b628-4c98e56b8808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e2720a-5e49-4013-b1cd-725b017b4b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326062d3-3dac-42dc-bfa8-be87329f3f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b739ac-9dea-432e-a61c-df8628819f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00039e56-9798-4866-858c-681b214854ae",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e3e56d-a2d8-4d5f-ad7c-f45dbfda566c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af0e406-9519-4df4-b46e-fddc7133b41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c7c7fb-088a-497a-8150-c00b3c3043fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c8a65d-e9d9-453a-af84-bfc0e4751011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c8e23d-a81a-49f6-a69e-ea30872e74e8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8797d06c-683b-48df-ab71-9428006a5199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca77a47b-9ec0-45da-9529-0270dc1e875b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e59fedf-623b-468c-bc62-eb75361244bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5466757e-ea49-4760-96b4-28dd1adee057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4228388-c9bb-49ea-990d-82f9b75266bc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eb9f44-0885-4621-bbe3-324c4562fc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6cfd02-626c-4ab2-97a6-f7b189d52984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83721cef-54d7-445c-b7a4-10d0b9b76e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c23b12-7040-4d09-a815-ee97a7289bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc3d9e0-b71a-4cd3-8d20-f514de2afe38",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e019abb-e711-4146-b268-94eab68fd44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf15a3f-aa74-4a97-98bb-0d2d4c3de0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072ae541-8f37-4022-802a-867287d8f489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "877f81c5-fe39-49a1-b78e-a128faa7b01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d97750-4b99-4687-9c72-036570a71367",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932a4fbe-9323-4363-b623-f5902790986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ad325e-ae26-498e-a109-b4902462b229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5664e279-af06-4deb-9e05-de711118844b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1971d7-d2f7-49e5-835f-4ee86bd0ddca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1747f7-e647-46d2-9353-58a6a3659406",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b300a5-2697-4e6c-83e7-086163a3e6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0960c78-d62e-452b-91e4-80c20f4e1ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e73d02-18b7-4598-9374-063d83dec936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "685f8313-aaa5-4d83-8160-9a55fc07c092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1713ef86-8f35-474a-82ca-83ac1bc351da",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafc09b1-9f06-4440-800e-b8303bfe5061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8eb4eb-1bd7-42a6-a8e4-d2167109b3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616a7ef9-b5a5-4e5a-a598-d7df568b62c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e1d183-33cb-492d-8e34-49a4964c5671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c37f9eb-6e25-4941-a9b7-8906ec00d790",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e00726-db52-4fdc-b654-5a5b5f8f3889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c7ae89-d7a9-4a80-b669-9c2d19cd11b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543b771d-d5a1-4838-ace7-ede05b59b22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "059780e5-1d25-43ef-a296-47a5c4733ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fe10c6-4e04-4731-9d70-64976bf77120",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107e8eae-d0e0-42d1-9842-d68441a816fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790b237d-bace-4af4-a691-02870ebdd036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d898a798-87b9-4728-a116-8177f6dc6d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0797e30b-2c6b-4309-bbae-73143347d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6292a7ae-b767-4c61-a2ee-9ac14084bc8e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27541958-90b9-4fa0-a097-c6c7bc83c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84606894-88bf-4fca-b7f6-9675c81bf580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7738ef6-2b24-490f-a7d7-14016658d109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f4dcff-71ff-41ab-bb34-87b473b8c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab0cadb-9af8-4681-8d07-04d3c3cf63d8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219b4287-e61a-48d6-b23c-808d5d527bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a62c901-b989-434a-8b6d-fcfa93e4ac57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2588f529-858f-4f35-9a08-fcc0a73c97a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "478b738a-4bb6-4df1-aae9-1534664e4f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68321b3c-3898-4460-9d30-c02ade807c8d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ccb636-f02f-4e98-a7d0-4f84446c7f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da76703-a306-4455-ae2d-1f50cdc95190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a5f804-7ec0-4427-9e5f-ee2a86390dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdd0494-76aa-456e-90d2-9808e9f6bd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f56c386-c105-4f09-a281-0ce926e5b416",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85ab9ca-4098-4f36-bf61-ba9234bf62d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27773124-7229-4793-a93c-7fdd3946760e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac8f322-7f45-4702-b889-ab5ff765088b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af8730f-9d66-496e-8413-1135bf0633a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2be039-e91c-434d-ab7e-dfadda153c32",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77f9736-2d09-4fe0-9331-148b9a6c4aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc64814-8912-48b2-acf3-da39a076f544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3fc74b-89e3-4331-9dcb-6c789094a9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62780ee1-7e5d-4d44-b5fe-283ecfd6f6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a86f15e-d341-4bd2-9bf1-fdf12567c3bd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caecbef-b605-4c36-9e16-146a3a49aa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3382ea-d1c3-4012-a8d9-c45968a8e00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50111fd-30b3-44b5-8d5c-6f98029b6bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f13d3bc8-048f-4587-8d3b-be830eeb4773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70390b78-3ff3-4e68-8667-ee77687b3e08",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71746a5d-18cf-4fe6-aa08-9c9b8a4f43d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3d4f8e-9305-4623-88c9-5ba502240c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ed2acb-fa0a-45c9-b441-2ab6b90a8ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b149e8a-e0dc-42ad-8285-ed24ca456d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3620742-efbc-4f3f-bf3e-f592942187fc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fa8664-f780-4af8-8ba2-0300e6968c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d251b5ee-8b1f-4eec-a8bd-970ee202c428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f4a80f-a1cc-4b73-a19d-761782c83754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "526273b6-14f1-457f-b96c-5c65e3ddf23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6cae06-b216-46a3-9eb7-3e91e1bc75b4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc1d39e-55a4-48a6-b81b-e15ef1a01ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40ddd30-95f5-4214-8675-52b095d24143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b7059f-7a7e-4c6d-ad8a-7054411e6807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf0821a-007b-4714-81c4-8157a56cf35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d360a3-f834-4a76-a6cc-5898ea7ae9a9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40aeb80e-ff0c-43f4-8cd3-b36d058a67cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94bdf4ff-936d-497c-811f-6d64fc3e04b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6e1b3d-d7af-490e-8576-d04707a0248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf72676-3aa2-4d96-b727-37c405291e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bed1b7-1b17-4de0-ab9c-4bada96d214d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35b6b0e-27be-43cd-b865-21fa23ccb6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ace73e-5839-4c74-b384-9df8b6d88be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d49b92-b82f-42ff-8571-553c8cd56166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a587abce-56f1-422e-ac5c-3ffc3916194f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0f8086-b965-418a-abc6-d9bfa57bd43f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b18bdd0-e7ea-49e4-838c-512f596c6464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2796bf-c0a6-4e86-860b-11304ff7b1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c426e928-fc98-43a2-9a33-3ffa5bd17507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b188f0ef-556a-457c-902a-cd68a52c2ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa5dbf2-8246-4f3b-9306-ce2586374669",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398037e4-04f2-4256-bf07-7121acb84733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fbaaa0-1f30-4cf7-b6d4-481fc6c3fef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495b7972-36cf-4f8c-bd66-6efd2dcded8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2faab095-bcc5-43b7-be37-194f533da96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6abead-7c34-4544-9775-594e93427966",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711c928e-e592-4ff4-a201-4abcd8d269cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fd38f2-d2a5-4f2b-885f-9a2552fc14d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0bec50-96b4-4932-ba23-9b2540b6bab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4751a3a1-b291-4b17-aa61-8e4f12cc0297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a79a92b-53c9-4f5b-b3dd-88bd4cc0871d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cd6457-1365-495f-aa52-85438142543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32039e1b-d96f-4ab2-87f2-b0bb51e08203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2899fa83-b0c3-4fa6-ac36-f6668f144dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2ffb3d-6764-40bf-b019-83341cc88304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf51fa4-33f8-4126-a2dc-1640c65b5931",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9245b37-a5f7-4d7c-8f0c-afc15b0eae4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7975784b-91c5-4c47-afe4-4f6a1ffefe0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67cb9a9-33ea-4b07-87aa-6937eaa42ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7da07cf7-4c49-46e9-bcd4-cc2b72c3eb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478a4f06-14c4-4993-8a9b-1de3091657d7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c62bf8b-5822-41d5-a090-ee4130ea3bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a908ba4-49de-4051-9cd5-104ec1901b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5d460f-4181-45a3-8f5a-cf5dcc2cd998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "544c5d40-d9f9-462d-89d1-34e311101906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28f41b3-666c-4c80-87fe-5f1e0009b493",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089e70b8-aada-4b3c-8e97-52233c18c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fdb3211b-fd57-41ff-bcfb-60e95cca2895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a251626-a38e-415d-8e03-bd5d815bf56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc413a6-b1fc-4679-91f4-ec2d530924ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b9d82ed-5bf1-4aeb-bbaf-11584e90da56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e5819a7-74c1-4a11-9c8c-772b985345cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27571a4-5695-43a6-953f-0f39e4133149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "504a570c-eeb6-4ad3-8fe1-7d0adc3f34ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dfaeb5-106b-456c-aa65-cb257c1758b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1056a0c-9941-4dd4-88fd-7e2d3d59d6e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f58802e2-7af6-40a4-94b2-09c1724ac89e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c2a1a54-91e6-44f9-ae0a-5d685cb4c95b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56726390-eb52-4dfe-babf-93d2d723c0fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21f0b5fa-6182-4dc9-ada6-b8cdf25ffaf9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7653e36c-672d-41a6-a1b0-3793b2a2c23a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "167c54f4-6f2e-44ae-9d4a-26650ec01ee1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "498afef5-26ff-4034-8c6c-bb06c43eef86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62745590-d6d2-4432-9601-b0b5dfd113e8"
                }
              }
            ]
          },
          {
            "id": "02c5dec5-0ed0-4a24-b842-5df322dfd389",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1df46cde-57d6-45b7-927f-60972bb512ba",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6588ed51-1cda-4bac-a311-e956278adc9c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cd777a-704b-4c2e-969d-5bcbbc034d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "89752c1c-1a6d-47a9-a35e-991cf867836d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b14a6f-c751-42da-9def-36ddf9587b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f54a6b-1c03-4844-9aee-8a0cba6ac59f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c3e1b70-8850-4923-a42d-85056cd52bcb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19c598c3-37b2-45fd-9629-8ee69310217c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "430f1115-992e-4c61-92f5-4179c71fd731"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "573e8889-bbe0-434a-b61d-020676b055b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab80f70b-a2cb-4445-a292-c894d16bade7"
                    }
                  }
                ]
              },
              {
                "id": "d58d5aea-edc9-4528-a2ca-b1cd960c9acf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7b819d3-8f10-456e-bfdb-d98ca8b7406c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "549e26dc-b2bb-4eef-8609-9103725d7d94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a2cefc3-c3d1-4d8e-9572-efe4b8471437",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2aef846-eecd-442d-833c-76ab78b52a88"
                    }
                  }
                ]
              },
              {
                "id": "5cfa0616-8229-41df-9f19-043366079698",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86ba9371-fd01-4c10-bb44-01035832b4a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49299495-4e40-4c92-a4ce-e0b9dc36992c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cfd18d0-6ad1-4666-a471-de7bf1caa9b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b07d1a5-f342-4586-9179-f679960eea8c"
                    }
                  }
                ]
              },
              {
                "id": "a4da9ac9-8307-4de2-bccb-e5af608abbf5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a9ec259-f294-4b99-9e21-ef191cf97e8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7943f5cd-a8d3-4061-86a7-32f2eed7f035"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07d542c1-83a8-4c54-b9f9-2eb87c9e542b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6ba1aeae-1260-4a36-86f6-0d98b8615a35"
                    }
                  }
                ]
              },
              {
                "id": "09bb0e9d-424e-4445-bd09-2a855b9ffc20",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f573d57d-de7e-418d-a423-fdf8a271dc5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abef4103-14ea-43f1-8ba2-a9dd5c54b59e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc6ea1f8-6fe0-469f-9050-82dd51ae6647",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "820b7622-1f2a-4352-ba61-840d60e216cb"
                    }
                  }
                ]
              },
              {
                "id": "ebdc3830-c512-4563-b310-48be6ba22fd1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5b7a4b3-434c-421c-9311-e7bb8e90fd75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "125f8d41-6a0c-4a83-8953-5dfb1bd7a175"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dd5ff49-a7c6-4d1c-abfb-7f22463a3bc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dee0fbde-b780-486b-9470-964a08f17d1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be2a1099-74e9-4ca7-8841-c6bd0c499e3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f432c7b-a080-4d24-a8bf-549dbb82f797"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c47f706e-7771-4542-909e-56fadaad90de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b056f16-5372-4a89-8086-0bee9ebeee0e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a4cf3ef-9913-437c-a2fa-4903ba87738d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "31c853f7-88dd-4ed0-bbf7-030eae46123b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49015c1f-22ca-4a1d-9c34-365f5924ec6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "507df87e-1218-4f29-aad0-6173b3976f33"
            }
          }
        ]
      },
      {
        "id": "fc2aef47-16a4-4310-b839-30ef5d5594d9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "30915866-636a-4522-96ac-ceb7359b7032",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46783b35-2bf4-4677-8862-a1420be126a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b9dcf14-8bc4-4aaf-bc39-8b2cecdac77b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1fd22a-959d-430c-bccf-0c1830a090a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fa6d6d-7882-41bb-8fb0-638325f77e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1260f3c8-5971-4cc4-9974-fa0adb1838c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f87d545b-9704-45dc-b4e7-feb90c65bbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44cb2ce-312a-44cb-a71a-120124ff16fc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c77879d-f778-492e-8684-8e17cea67149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993d05cf-14e2-40d3-a9a1-a1d035b94842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f0643d-813c-41df-8b00-ff3022ee3f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c47c7a3-7a11-4e3c-9ec9-3fa9a2f670e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b40ff6-31f8-44ad-9d3f-f7993ee48431",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea0ed71-ab11-453f-a495-cb39b962bd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08c486e-7812-48fc-897e-1767b200c926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3ad35c-093e-4939-b8ee-d3dc0bd1987e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71205144-7f39-4fc7-a68c-1f23a3966e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4b1f2e-3811-44af-8399-dfd0d23619d6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c27d637-a5eb-4678-8340-0533d4f8df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b7fc22-a4da-43c7-9536-27f05cc78552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32815048-ac51-469d-b2a6-a33becacbdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "377a8c39-78e0-4ebb-85b5-6caaa23e997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3057161f-f290-4377-9421-2f3917f6fe12",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3274ae5b-73b6-4789-8dde-9a85cdb1383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08e8c3d-b416-40dd-86f5-7e42c7631276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffe94c0-ec84-4ec6-b7e6-0e4856619ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "998a3dad-145c-4675-b8e5-b3c39152cebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588ec459-a397-4139-8b8c-799b7b1a03b6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d63f74d-a5e2-45db-8b79-65a98ae1c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5c7e5f-93d0-43e7-9a58-adde312eb06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259f46b8-6322-4145-bfd4-492258f76b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36b6e49a-6f86-46e5-ac4a-f6e851b366e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6d3fff-7687-4e82-927a-7fb7d82a133e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95cccb2-353f-4cff-aaff-463aeabe28ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f721be8b-f58c-446e-87a6-6e70f624f666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bab825f-cfb9-4596-afc6-1c422688fe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e302b157-6807-4cda-ab16-d4427a6fec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a8c4f6-3da6-47cf-86be-69bb06c9c95f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7016b4f-b455-4d65-98be-ce3620939526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f6f394-19bc-411a-9b2d-e9d83cf33095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4f9d83-864e-48de-a979-92f50f7693bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c46539-3690-4d9b-94ac-d9c5d6a91c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0851086-8dad-48c6-abad-96645dae4997",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2856bcc0-7926-47c2-a477-51f8e46e217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76aa1171-490d-4ba4-a51f-240eca4fe22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc71f72-2a62-4d31-a0cd-9565caad5dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74b0596-a9e3-4924-a591-15364ef061c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b763e70-e185-40d3-88e5-7498b2d74a9e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad92543a-eb9a-4b66-a97f-312980600b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a543f004-5001-4e0f-a9cc-77149d899104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57f6dbf-4bb0-46d8-82b4-c178f628c6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1fcb24-f486-4fb8-a301-14ef5130ded0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c7fcc0-4abd-4bf7-89d9-d211d93a5d9d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622fda83-1873-461f-8489-6ca7d517ac3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cfe338-7b04-4946-b859-99a47b5d2f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad7e52a-d4ce-4946-b00c-a6910ce7d482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "95d95736-4aca-4a90-9010-6436ad42d55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3908cc-2ba8-45b3-98e4-ba60bb546ab5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf35e73-4700-471a-b155-13be639fb84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d630d78-61ed-480a-a90c-577c610f469c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32612ac7-be37-4922-9419-2edb669b1f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7c2de4-0bd0-4194-9bd3-a3a8b079d1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0201b0-6653-41c4-9e6c-ea134b98b184",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8b8f7a-06db-4d48-a6c0-916360c7648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad70c24-3080-4c06-8019-a71101ea94a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbe457a-7e40-4a77-baff-a8d73d8d3dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f925bd-bba3-4cfb-83d9-dc8855f35c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e09acf-e052-4908-b915-fab67917265a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31b6ede-fb09-4584-83c3-faf71a75ee7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca73aa21-5a9a-427b-a09c-2f64a4ea502a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0286dd-e5e0-4742-b322-c64e352a1d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35bc5ba5-9c67-4536-8ade-f337a851c5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd2503c-c113-4404-aa3d-2f164ed37801",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3b2db4-036f-4b6a-a362-9a4775dcfaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9189c6e2-8cde-4f36-8337-12b5884798d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfea652-4da2-4576-8022-c0b7be2a4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "28142208-a253-4885-ad47-27399291981b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199fed60-82e7-4f2d-9fcf-bdac1ac01de1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd623ff6-3ecc-4c65-bdf5-3b05e16a59da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7ec1fa-8aa5-40ae-b6ce-d1c9c68e72e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba0124f-f733-41b1-a80d-6ff6a26f3834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6847076b-087e-4473-b7a0-6f8a13301006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5ce9fe-ea4e-459c-bbc9-0baaf6e88a18",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811139dc-c078-427e-8a42-4ac5df274f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ac47db-2fbc-4075-a158-9a04618b4429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30743cac-74dc-42a3-bb81-9b5fd7f8bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "69dcfff4-440f-42f2-8645-ec40e1ce9abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef437176-78aa-4232-a36c-a28b79315dc5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b99ec6-4c5d-4793-9c6f-5b7149f565b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5974dda-376f-4134-8739-7b3ec9389f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b1c6e4-696d-4338-9e17-1ff7ab9709d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4526ce-6816-432d-86e5-c2315051e2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9549ba7-0e45-46dc-b607-bbead90f6986",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc78f3d8-4909-42db-b29e-1274e582ad5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90631e5e-e999-41fc-a781-ef1460da3e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabbba78-d5db-4228-b095-061b7b0ba133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "087afcc2-517a-4831-8e4e-06a776a4042c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbab5365-9b45-41df-b306-e275b51f3fc8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9814e7-96e9-4d4f-9033-3031ecbe2cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aadf9db-2bab-462e-997a-bd31a72b574c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6744fa13-937a-4d11-bdda-dbe257b1b463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5063d81a-7d5b-4576-8b03-668e6193359b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80203a0-eac3-4b50-b3d6-74f1743805b4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6f9c08-dd77-4eb1-95f1-5addb9a0defe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4321064-ae9a-4f61-a9f5-205fff893d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bf7991-28cc-4903-8994-076e7cd37da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "726d708e-9a3e-47be-b41a-6409f54e2c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4da062-afd1-4ee8-bc7c-170c4aa599f3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3040d2f-0841-448a-b128-a671e5307322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd85f11-e4d3-4c6d-8919-379386e68a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849760da-c9e0-425a-9faa-f7a8310b6db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a743ddda-72eb-401f-9992-589359be2982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4342ce03-7d59-448d-a36d-b8a5071e7e53",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d4fc3d-2593-4776-bf00-2a9880a6406f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abc5462-5164-4727-b06b-c4f27073a19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb60125-f65d-4577-bf7a-b498967f7606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0b246e-aa5e-4a61-923b-dbece85e1213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1d9e08-ea13-4e70-a050-fec5ea420d2f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d42a93c-a0df-425e-ad05-c12751e7af24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71754b5-b23f-4b97-8b77-c80c5d20ae5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c350c9-59e3-4cbd-913d-e815d1ac0bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60be52ef-5b06-469c-9f36-7dadc4735ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3ea9a8-6bb3-444a-ab9d-c22adb42b013",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10d0df9-89e8-4e51-a7ae-39b225a1a744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a816bf-ea7f-4d1c-b9d5-fd49a6d72a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6abb747-51de-454e-bfa8-0d5357e2d60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3a3ad5-56b7-4dde-8939-9d88eefb040b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baffe5e9-f31f-4a9a-ab15-f24f100f74c5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8920db1-be29-4866-9ca4-be69c88c7ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2021e17-c80a-40fb-82ea-8c3423598816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894c52fa-ff6f-42da-a7dc-fba13eed18b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3833281-6a57-439f-acfd-67afdaee6fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c73dfe-0473-4752-92df-c4870c4c9cf4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed4153e-8cf6-4479-90df-cbc8904c8030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc367ac-d57d-49d2-89d0-fc65af8b855c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb29432-e44c-405b-a6df-961d9e5189ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be9ea6c-8f2c-4dd0-a447-de54252a27a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32956940-055f-4dee-a0dc-851801ec2621",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59659b27-81f1-461d-9253-d5cbaad356de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0cd4ee-b4ad-4711-90c5-976248286877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e08143-6384-433b-b967-2f844b0d5cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d428f85c-7256-4d94-b4f0-03ebf6f2ebb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0300e5a0-92f2-4dd3-a3d7-e6407d488887",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e12c60-3aa4-42d9-a69e-1b8bcea099f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418c922e-bacd-4ee2-994e-606b1375b998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c468e0dc-fefc-4933-9d8e-92ae91e6a71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42688c9-ebc4-4a32-90a9-11019e0b2131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aca3b3-826f-44bc-a41d-f9fa28d40c10",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc2ec58-3485-4cc3-8423-9511d8e39614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a5ab8c-dbe0-4dc0-a204-7e08b10593f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7670310f-fbf7-4835-b33d-b3ffe3d8f0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d81645-f6b1-4c4a-8224-709f46755c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c43ade5-0d4c-4044-83cb-a2142ab05863",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aec495c-ad7b-4d93-8912-59f7e8246b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3343aa39-a3d0-4ae9-8ec3-5d4ccb6b2e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d95c3b-5f49-4a4b-99ed-960e5992b36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf7bfd9-4729-404a-99a9-401d3b9b285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad48a66-f754-4d99-a9d6-7d80bf6c70f6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7326199b-fba5-4c3a-a75c-e9ca0549750e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c62fca-d403-434d-8cbe-cdb6e06443c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12804271-8ef8-408f-84e8-f881dd7ad9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96236901-0d6f-4310-85a6-ffc42d0e6e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83356a0-d442-4b3c-944e-d9dfe55b2b67",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f685206c-684b-4f12-806d-28a664886a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af847f38-5714-4587-b805-fb18cbcc970e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024fa8fb-a7ad-4522-9059-25d927d316c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dffbdd6c-6b7e-4385-8c69-ba8df4b9614c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43aa5bb-b2df-45e5-b54a-602fddc8273d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269ac86b-f1bc-4345-bf06-4995ee0e2588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250d777c-729d-489c-aa0b-5072649f26fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfe66f9-e6b8-4495-8de4-c793ce02f8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8778bd62-71f6-45cc-b6d4-7c15dda3e54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ff0f1a-9202-48aa-ba7a-1bfe0497b576",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f2e6c5-a662-4b33-8554-4d424484130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b41189-a0f0-475a-9329-f88ac53fa16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a607e42b-c84e-42c4-b880-3a3b44ea24d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "461f6976-d5cf-4adb-b5fa-a80d1c7a3789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba3b97d-00ac-4002-bb4f-b95ec04bc300",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3df2b1-1a60-436f-9e30-4bc4b0f7d990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181ee1cb-2f44-44ab-a555-8923d0841584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2a3c99-229e-46a4-9399-868c81b1ed66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af549e9a-e941-478a-8026-5f35582745d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1352c2dd-6b38-4257-b4e5-32a9828cf083",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4836b732-075e-4323-9569-90fa0a4f5fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048028d9-46fc-4cbb-8162-7df3ad84fffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6619fd-fde2-481f-b510-4320ad2c6c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fbbaef-dab4-4a7a-8b02-ffbad1232065"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a3cef3d-e08e-4177-9f8c-058b1631d4a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3fe9a3c-ca87-4b11-804d-2b2b977f9e5e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b36a80-efe7-4aa1-b58f-ed766767ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "46ddf601-4313-4269-860d-b56b45280805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc61856-b4cf-4e23-90d6-583ed6a3447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09c84c8b-be49-418e-8fce-5ca8534a1bd8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12c15da-5274-4b29-bd2b-42e3aa22e364",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92caae8b-3fe6-418d-afc2-64d0df1cc630"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43bcd89b-f984-4a62-86ed-71a50190791b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38a86136-f4ba-45fa-be46-f7068fb7884a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be75b6db-d0ea-46cc-81f3-8e5d705e25a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be146404-d95d-42b0-b3ae-c66f47599047"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f68ae878-ce17-444a-aaf9-4c3b2fc170b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75eb3eaf-314c-49a3-8bc7-d1c91cbffd77"
            }
          }
        ]
      },
      {
        "id": "102d01be-2e9e-44f6-bae5-84a10f3b47db",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c9b18215-fba2-4e89-90fb-3d2bea87979b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86f00246-ad8d-4c5d-9cfc-38f4b353b260",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f8ad843-afd5-4224-a8ca-7f2019e2a7d3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c9f849-654b-488d-ab64-c82789807734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fed09e-ecca-44fc-87a1-2441e1cec1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2c3280-ac5e-4285-ae4a-07d8d2989744",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e77005-3d32-420b-b29e-dbcafcff310e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec4fa10-e0cc-43b4-a383-f97282acaa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f051ae7-1cac-4465-a30c-4fa651ce2da0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cd8a2f-e829-44e0-9ecd-954cf736cfda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd18fb53-0a46-43b6-b43b-dd7064f0f8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb68a9b-339f-4d50-8c05-ccbdf3dc8599",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3431ea64-6abb-42be-82b1-fb6d5a2f152f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1697771-0724-4cc8-b2b3-d9579b3b1689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a48861a-d6e8-4f52-9c3f-b8fc0816d971",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336fb222-c52b-4e35-baff-621ab791c6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ccd0d8-07de-4671-bea4-7def840d21e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381f0654-ec46-4fc6-94be-4074dc9614f2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7fa64d-f61e-4a19-9ceb-cb718fa3f033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd73c378-4096-4d37-be3e-d139e08f0cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c118f0c-afc0-4104-a5fd-8b51af485564",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238ccc41-e530-4bed-97f3-f023945f578b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d96eed-0a55-4f72-bb7a-7ff435fd66fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f166d05-9a58-48f5-888f-bf45deb8576b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e909ae-c2c8-4c7f-a315-630b46b20f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336ec0c7-b176-4ded-baeb-315650b4bf3c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61741a5-652f-4334-9e9a-2dd233af9769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832b5f5d-097c-4066-a7cb-3fe441c21ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b5f6e2-4b6e-4db7-ac6a-bff798e4afac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cb6c78-7b70-40ba-877f-e0aa85a20845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b95ab9-0488-4f8a-a0ad-f3c57c236dcd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fd0f2e-4b96-470f-b849-17ce85b6ff4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd6c0f3e-d859-4a02-974c-7e593af51192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9347af7e-0bcf-4241-b0f9-2b716ec7264f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935ca150-3e0c-47ee-b2af-4d4cd768b011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f4bf78-9fe4-4728-8b98-4240c8f6da77",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f53dc8-7cca-4883-8c69-2ecc1dca7164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90efbd63-72b6-4df0-a3a6-828ff72841df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ffa4ac-5fdd-43e1-80bb-46f19bfe9762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60ab426-210d-45e6-966a-3e086fd06c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816312d7-46f0-4a36-ad7d-d4daa18cf487",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f99892-8ecd-4387-bcc7-2f66a464a2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22227ecd-5021-4a84-8484-11ce94f14d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc79651-37c5-43ef-95a9-9678aaefd576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca202780-3ec0-4707-8a39-0f99391df79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cba88c4-1529-42ca-978d-49339b5a59c0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cdd888-578d-4077-9a8e-6d74cef991cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45953c1-6156-4f3b-8c84-85c6c1132f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec4556b-4a48-49c5-a85d-4cd50d77abe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d5bef8-9987-4ae9-97da-a701f58ce0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f64e43b-8416-469b-a080-abfbb0f2428f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b307bfc5-65dc-4e73-8a5e-84b816a322ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c466dd-2ff1-4be5-bcac-6995288374c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ec3add-fef2-430a-8a2d-4bae42e99185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b548a0-a5dd-49c0-9b0c-6f28b0e6ce87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aa28cb-d686-4b77-9c83-934d56687510",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd74da1-fc0a-4372-a5f5-54d2fda727df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0201ca-e11a-469f-9808-4ee5b2647e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca78a5a-0484-4f4e-9ad6-e31f0a77937f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504745b2-7832-4c5b-80f5-8cc15fc30ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e95988-e425-4231-9458-c627de15df57",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5587c1af-1437-483e-8b76-3ec6014c0005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff6d7f6-b952-4d80-b85f-aa4af23b2421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c164d4-7463-4853-a330-98ba29d461ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1918e3-e96b-4ff0-b614-01794083463f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abbe2ed-2e4e-4eae-b537-5f984bfd8c78",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8efe39a-7d56-4cba-acb2-9c0b5d160041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e10adf9-f829-4b93-8164-468cfdf210ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef68a16-478f-48c7-b954-b3cc4c7afdc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2aa8434-365e-4795-ae38-2ad84779bfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a401da-492e-4ecc-b6f6-9f347ece1769",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571ff11d-f9b8-4251-90a5-1dce9ec04ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d3037c-3904-44db-8860-8f83f7ed4b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8dbdbd-5663-485f-ac50-58f98861d46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c037db81-6c1d-4fca-bc71-bc689c01ab37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb37fd3d-73ac-4353-902c-f06738c02e9f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92872f4c-3b92-4abf-9eb6-3b45b9c654b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bd9b6b-8d20-4ea4-9e2a-3865fd7d9437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6921e7c-0eb8-489e-958d-183f21434b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816eb812-8cfc-4bc1-8948-5e8ef3483881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d148c14-91eb-4731-8a62-f5c7d63fdc75",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8131bd3-f953-40f6-b47a-c3b24a4439f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673e75b4-15ab-406e-a0bb-7ba610a677ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fea8e6-c000-4161-85cd-9f68a7c87240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3704ab5-6529-497d-9925-4bcd790a4368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f599d75-1cea-484e-8257-3e18595f35e2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907170e9-4a85-4c96-bc5e-1cf56eb41121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16ed8e7-3706-4346-af80-9127683d83da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5ec79f-9811-4028-b6cd-058bc4f1f01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22204a63-0fa5-4548-b103-685995620311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04334ed3-5a98-4067-af72-accf918779eb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86de170-407e-4fba-94e0-59598633afa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db617e7-5bcc-4ebb-8553-a03a0c18826b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2928c9-c095-48e9-bf6e-eb41a39bba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2272a6-f22c-4cef-a67a-6e197744041e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cc2f37-51a7-47cf-bb67-6959204411c4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aaf511-6906-4b08-a2a8-4e7f17e06512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b06014c-8491-4442-8768-dbe71d744fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370d3e7d-a42b-4412-971c-49e958c17146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5bb182-5213-4e9f-9ce0-d8a0606fd820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cecbf4-ed5a-4bf2-8272-a0f8b2e2b209",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57d9654-ee03-47f5-9b97-1c9bee4cce7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e954048-45e7-4175-817e-23d7a7b181ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661a626f-98f8-4a7d-8ae3-8fa80c22915d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918b68f7-f21b-4eac-9ae9-176e3673f305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70423c8-292b-4c49-96b2-5c026f400723",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142391c9-2357-48de-b296-609ccb5ca797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e435f67b-63d0-4b53-9e5b-195aa421e4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd0fa1b-83ba-4231-90ca-61374f34feec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3dc943-1037-4a5a-b70a-7537841dd681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0a4b38-3149-408a-a237-e8c3c099332f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03aecc5-89f8-4156-981f-747c96b2fb8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e463b4d2-0451-4b99-88f5-c74635f0d2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d543a544-bbbb-437f-9729-210493584bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f15bb0a-a6f7-433f-b8d8-4311473c3e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e4e76e-469f-409f-8861-8a297d64f238",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c0bf20-f4c3-486c-a747-38ede0520c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641da636-28a0-4f87-bf7b-94b76956b36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe0b6a8-8b37-4ee0-ad71-df6a0931da8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab345ca-fbf9-45aa-bd3f-fb65e749bb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b832ce-aa19-407e-86d4-b94dde87dd7a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22207eee-9937-4380-822c-63eabd9a7bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c127724-0c5f-4991-bb26-9e37c9f0b1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b5a1f6-262d-472e-bee3-bc64e7ce3097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d7fe46-43fb-4014-8cda-fbd830e30322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6242fb74-5d44-483c-b8b7-6c109d7c0ed6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea4327f-f38d-46b0-baff-2897fea7258b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0536a7-9887-4c75-86b7-aaf033a8b4a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2903b7bf-5484-48e8-8143-811846a9a5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8a243c-912d-4c81-99d8-d5e83c12bc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85276360-9f63-4aa3-96a2-95f154b654c6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798f3357-ea87-49c6-928f-282f6e03e32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d2b9d3-a7ad-4c59-9709-2e4450f0f566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c9a046-0cf9-4f9a-a84e-c93c7f76ccdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e6e677-2ee0-422c-9bb2-d2777914a51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d81fd41-083e-4f48-bbac-fa7ec1e6d65b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b411e290-00fc-4187-8557-abff38f6ef63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4685fd-0866-463b-9a4a-6528653cf8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9110a5fa-64f8-4f0c-a8de-01554769b0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c61c67-d3d2-4930-8e30-0145bd62c857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502aefb4-98c4-4654-9f77-e56e330dceae",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1c8b4f-0f47-4bcc-a3c2-0f981900aaa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5621a50c-c978-4364-955e-b3c54a746348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34adba5d-1e97-4455-a317-832e0ab7fd31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b09f84e-3e61-43af-a910-6ae69e1aa031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3112ad2-83b3-4e69-8774-88b19f199e72",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85be5e1-c49a-43a4-b992-91922fc607a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd982a5-c384-4ebe-8fd8-b07bc83ef383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8aee56-0ef1-47b0-aa48-c76ea07cf735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cd6412-2a82-4f4c-8886-6648e8eec3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53484e2c-5900-4fcf-b1d0-324786244ff0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc65e4a-0a48-48a2-86e1-921ab9f14e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc194e4-879f-4da6-9e82-d265f9437fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c439a49-46a6-431f-a3b0-ef542934859b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c95756d-6ca0-47a1-bf18-d5632fdf2e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa54d3bf-04a7-4fbc-98ac-eac28461e9ea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49c8003-b3a2-4c9d-a1a0-25114333b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c43e73-4848-47d9-8a0a-248de3a4a38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e97e66-cb10-43bd-9e82-b68a078f3ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3c23c5-7073-41a3-aa9e-b5f137d9f9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c20d8e8-63f2-4618-bbb8-a22701b5efc0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fee94ae-7fe2-4e49-b328-02f2da24b4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd99c39-6d67-4c75-87d5-e98ebd6f41fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f939c869-5ebf-4f19-b702-98dbbbbd177e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4f40d1-772c-4463-97c5-f1051f0f3a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602f0d97-e353-4578-883d-8ced298a4e4c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b884cc-1a0d-47e3-b48b-8b41fb9dbe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97989f4-ccfc-4cd3-b649-8c57fce4f995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c997ae2-3471-4644-851e-d29455e38151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b944e5f-4408-434d-9e7a-de7c357392af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c775d3d6-1c29-4764-b882-4422b06c3f6e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc9ea26-51f7-42f6-8d51-98a64bffa301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f54fc4-96f6-4461-b6df-edcfd6da088a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec43eab-e11e-42c3-ac9a-708dc00ee154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde6b389-4865-45a0-bcc6-b4b1cc8e7ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a134560d-3fe0-4dd9-a871-b80c01b08a83",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d85b75-62b5-4064-ab7d-5ba0e4c5daea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719f75d9-6424-4544-96c0-0c40ec76e0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3e3706-2018-4ada-bfd1-e5daeebf1aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80590af4-281f-4b08-944e-d3e1372a543a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4afa970-78e7-4016-8c7b-092d7538980b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5702b1-4270-4bda-9dd0-b43580e5504e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eae9061-a0b6-47a7-b935-40229c21d6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5980c9f7-8635-4e1e-8ee3-cebca59ad657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c28299a-4789-4610-b5a8-c789274d6169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b182ca-1765-4034-877a-395a3e5df2c8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bd86cc-1f8b-48ae-8c97-f9fecbd5f990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5364b40-e54b-4f33-b8e3-89350874f22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31ca4ab-662a-4056-9b7b-7e07bfcba91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6445baaf-819f-46e7-84b8-22494eefd3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768534f7-1965-4fe9-a06a-23cc5c269c72",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48443aa7-d39c-4431-9de6-72cba9d5ca42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a543ce-9eeb-4942-8e41-a70116ad5f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb1a5c7-0aa7-42ee-bcc4-27ab751e4006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1ecc61-ed1c-485e-a3bd-0aa45b67276d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed41d67c-a2fa-46d9-967f-a31de6f28307",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44f2eed-ef0d-48d3-bb4c-daeaa095f543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b95cf28-b742-470b-9bca-828eaeed9fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58301b4-855d-49bc-b150-8c7b7f130f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4beb5f94-9cd0-4384-bf68-781046c5e1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2846d1-48fa-42ae-9caf-123597ceff88",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489bcd05-e3b1-466e-be35-700250787909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcf1506-c455-4211-a4d6-a56bd6679789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7a76b2-5c64-4fc4-ac10-1cbc288bcbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9fa499-8655-4175-9b77-6e5e4f795a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c78053-4d7f-4e04-b47b-5abbd06f74d8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f35d52-5fa3-4e63-ae94-a90267e2f5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e406f92a-71d8-4547-8cbb-eee12d13b181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db36b93-e81f-4b0f-9635-319392394ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfa05c0-26e9-415f-9bbf-38af627e4e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df549315-a81f-43af-80aa-f45623280d3d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e62088-c63c-42d0-b0aa-9e50652c9e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce34e66a-f1d5-4839-a65f-1b02ea127d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d2b67c-4810-4c24-992c-f30fcf335053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1472ec0c-8d78-4883-b9e9-61b6d7e530a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ab5513-14f3-447b-944c-8145d5f588d9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190053a1-c0b8-4d21-926a-9fec183da1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e247fe2d-00b2-4fa4-a01a-5c3589a43cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16659d2-5e8e-436f-bc58-5b1f0c01b95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37636ac-b704-4b0a-8c30-81721c003f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945c5772-a702-4aea-a4c5-fd8b1f191741",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e31d5b-913a-4be7-a162-fdfd0e3e5024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fe2756-b5d6-40b4-bf79-3b6ef3332883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92c2ad7-4b13-4a13-a3e9-c76e30f707f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83437d20-3459-49e4-bdba-03c0ef305f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18ec16f-7aab-445c-a032-7fc9b53e317e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b990c4-0353-4a72-ab02-9bce0a4f8b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75389c0-58cc-438e-a776-02146967050a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e54782-ac5e-4ee7-a9b7-2c88c2d53582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a750d74-97d5-424b-8156-86b5cbdf5275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22db9460-8f7d-4711-bdb2-0229ec024f79",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ced8d1-45ce-4133-b08d-e3a40d686281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012baa1c-5f22-407f-a09a-ef8bb53bc8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01070cb8-9a5a-4946-9447-cfb73066fbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3827fa35-b2bb-4f27-bcc0-fd6b6e13e818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d3ed41-5220-4de9-b61f-9480427ecde3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db19062-2629-4ee3-955b-8e69a2b496a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda94301-2ffa-46d1-9351-76abcaeb666e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c2b42f-54a0-4237-99e5-df1941e2d248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c070510-2ad4-43b5-b0cd-ce627d41f1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8813b6d3-2830-459a-b6ce-e9d2c705916c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791c9537-78d7-42ba-94b9-b47c6f6e9764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2cf7f6-17f6-4d84-b9c5-c3c15d2f6a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c036bdf-6a65-4c8c-bea9-30a7116d4e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e48ff1-0c8d-4b35-8ae2-ee8eb887d852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8032ebb8-8c82-464d-835b-e70b32003fc4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9b3ba6-c6a6-4190-bceb-1133eb06f732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce21429-6393-427b-a648-12012d0875ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaa576c-4850-4c34-b383-b0d35f3c97d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5204b92e-cafb-4491-abad-40b34adb5edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f02922b-2b97-4a6a-b977-0a0f54c4455c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf5f4d0-c1e8-4ada-bde1-a850e0ec5315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c46072-f47c-4ba7-9d1a-f7f0db4eb35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f656225f-07df-4b5e-bcae-e3999702dabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890228fe-d0b7-48fc-af10-174fb683c94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef18ef24-ff4b-49fd-8895-cea26453c15f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0048c1ce-40a8-4392-a9e4-3c7a98da3f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb98c44-5a4e-4f97-83da-987c82664c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05347ed9-05b3-4d8f-bc42-9f7ef1682ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0d20f9-f035-4d5a-96cb-16a8be5805b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a7767e-0b87-48e0-897d-d5c000488260",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6abb721-cf17-4846-8521-5529974ca3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47f711c-0537-47f7-b5d9-93c9fcece4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e251a1bd-0a5d-40a6-985b-ea444bf7b298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6138285d-268f-4f8d-b7fb-b0ce6da1d203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e9d38d-855f-4ea8-b204-be248cca44b3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2570ba0e-9715-4d05-a912-357dd6c74f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c45b20-eff7-4a13-b04a-d45d90c46855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18faaff6-f8f5-4cd8-b5be-129a85a9d714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed13d5ca-7856-484d-9371-3d75544c1a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b74a75e-57f2-4c32-b86f-bfecef856ab1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1628a7da-e927-4a3f-8c71-0519b74a57ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ee0b4a-a0f5-46d0-8f00-fca4b48660b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a30e4d1-71d7-47d3-86e4-67b2fd3e4cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed46d31-6b68-4967-8646-03dc438281b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2026784-8ca6-4ee1-9045-78dddc65b033",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4bb782-5f57-42d2-9a8a-f24e8642348b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f83ef43-4bde-4c09-80cd-576f122bf931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d08dfde-bf1d-4fcc-a3c0-c518c4bb315f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2673b242-b9fc-4b28-96f4-ee215fac4814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ab6d6c-6346-4946-83f6-0b335262e898",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54149fb1-64f8-4106-8c3e-cd1d59e21b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87e853f-96f0-4387-8043-1af8726a7d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a54fe0-fb52-4a1a-a0ef-acfd7903163b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccb07df-44a7-44e1-aed4-5d4e190d6e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12d7252-fbac-4b1c-b414-4405a105dba9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0985a4b-3298-42fa-901d-5a237ebe9faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b04ce59-c0d6-4f0c-ae7b-3118228b7407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9a0a82-f2f1-47d3-a357-6df172465bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf4c623-900b-4604-8ba9-8a0b695008d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce0c09d-882d-475c-b679-2ecc51ca7926",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe2e217-58d1-4bf8-ab3a-723aae7ba311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93772a2-2f1f-4e84-a0eb-4545dd338d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5693dc-f8ab-4372-b623-863fcc7e2631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a836ba9-86a9-4914-adb6-bde84ea4ab2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bbd98f-6d96-4ee1-bdfa-1a5b61bf8633",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06254fc0-79e0-4745-976e-0a5ca62abe41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75282776-faf6-42ba-9996-976b05f7b1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e6ecb6-c575-459e-b882-65bf07cf979a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16038d12-fcfa-466a-96df-a182a43c40ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b7b770-2c32-4106-b4b0-73f26a3d21b1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059b8455-895f-4c48-93a4-75977bd0935b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37134084-88d9-4d78-8a3f-edd1837469c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f80a152-68bc-4fd0-b1fa-15eedc10ce14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ba968f-492e-4d9c-a5ab-a9eeb343858f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc66e477-3c3a-4347-b30b-6bb5035b19ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1100dd3-e932-4181-8253-ab03f5943527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e769b429-fdb6-4c22-9e87-e2322dfb8ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9857b36c-e7ca-48ac-8ffe-5134deb9472f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0050a1be-6b34-47b9-a8e0-2131649dbff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266963fa-eb94-43a0-be3e-14429ae8ff09",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d707fd8a-c934-4ce3-ad36-22b44ef09669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0031924-a72c-456a-af8d-0f3a83eb0476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0301a1c5-0af5-4a47-9bc8-946a25a85041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfa70c9-9b14-4a9e-b938-198f0c497b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d6eb95-c48b-4cd9-a4e2-45e92f9d818a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8602c2-d5e3-49df-a6d9-a26382c8fa76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92091040-daa0-48dd-8236-10259aaeda73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5f6322-19ad-45b9-b5b6-2de1dacdfd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffa37ee-5f33-4f40-802d-d011d27fb9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcd839c-33e1-4c7d-8f4d-59bcfa31a3fc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67454e54-c3c7-4387-8522-0804a052ea41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d505e4-6512-4523-8be0-20dd843d0073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32171652-20c3-4fd8-a272-aa8d3afff42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9e9ede-110e-45be-b1fe-7dc86c7e64a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0f44f0-f103-4799-b8c3-b97c0060ae3f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f82821-b7f6-4c8c-b42b-be24f93dd68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd28483-cba5-4a37-89c8-6a3c09352056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c78db49-063a-40be-a0b8-9303a5761f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2fea1b-99a5-4e18-ba14-5b22e25290b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55df813a-b2a3-4f19-b20e-dcf0f2208c63",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bd7003-c316-42cd-8977-4ea87553dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42fc3b5e-5df3-40af-84a7-42395d4f842c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eec4ba1-53ff-4592-992a-279275df49b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa818839-959a-406c-93db-85d468cbe3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca47d62-a33a-44f3-a6b6-e331643ac85c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea16c04-2316-470c-a62a-ab8b8bb8d67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8d57e4-ed0c-4e1d-a0a0-0898183f2f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146db1a7-5fee-44c9-847f-d541ed6d3d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ddc5fc-1768-4569-8baa-d95b9c6dc798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0719c0b-9a4f-46b9-8d6f-0edcf258896e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a927d936-ec17-46d8-ba30-adfbede39944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc92b76-07cf-479b-82c6-b2dcdfa21cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e0d0d0-f88c-4d5d-ad22-0bf15539bfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985e4912-8e12-4ec9-87bb-0fe178038594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d57b5b9-0f8a-40bf-8711-62ee2c321422",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff448cf7-aaa7-4d44-8e33-3c786b1a13ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de58aa8a-51c5-4ab3-8ed7-438a651a8206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddacacc2-1d7b-4a10-9fe5-5fa8c22422ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f48730f-58f0-4325-bee5-e02752830cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d58081f-6233-4f3d-89c9-1df1ba7dd627",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59b09a9-a97f-4902-ac1b-c7d73eba9f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2b4168-c801-4d0e-886f-c9fd202c304d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c31b542-8757-4f67-8c31-05018d3a1e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60b6e43-7e36-45c4-accb-54877c7f1975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816dcc11-100c-47ff-a700-6a52c095e440",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8aa0963-7f17-4774-abbf-821849a8c94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f33ad28-49e5-4a2b-ab88-3c1a75042b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e7870e-c245-4131-a325-4b1caee7e2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a994cd-d2dd-430c-b230-1991c63d7aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae710959-2848-4335-8140-a94670b968c6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9975300d-a481-485a-b622-d105f53d0c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1814550-5c17-4608-8998-a6db7c5c0a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb345777-f4aa-499c-b759-cb29779f178f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c658cd-5a4d-4ef6-a9ed-60af7f70254f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b89dee-a6a2-4212-9d45-3bdd8a7de521",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2412a143-5e92-448b-ae93-8aba3b171d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d39c589-0023-40ed-9e5f-9ac68315604f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c44d1d9-b738-41b1-8228-dc257b3270cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9d343b-dad9-4649-997c-2d26eaf40ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fd8bac-526b-474e-8b71-99aa1489a30c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c72beaf-64cd-4283-83db-bef441668623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a74417-423e-4d55-8dca-d796d28c424c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd09e17-574e-4329-8bd4-6399dad2a536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ff5f2c-77ed-496f-87e1-528f8526d2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17bed0a-6150-4512-a542-f31d97c41316",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e9782c-9033-449c-b13f-33c015d49feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc8a4c6-6fd0-4a92-b9d5-4cef3a9f0cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affca18a-5cb9-4828-a827-7dbb013e9fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bf3cc9-0f4c-4827-af9d-ec4d133755b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab915ec-f181-4b1a-8fb4-c0d0049ad7b0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546b89eb-1672-4557-b229-dbf49df104b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c84e3df-4c6b-42ad-af4f-013c226c3672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d4c3fa-fd0c-49d0-8943-b79c8090ce34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30528cec-35d3-4ad9-92ae-be1bdc00fb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa51dbc4-63ff-4066-b5e0-bc2df7de7c90",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f86a22d-6680-4b12-b58a-2711d4e03ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0449c4d-04c4-40d5-9dcb-ccd9d329154a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc990eb6-86a1-4c13-a9ec-10ba5179d0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3976b0b-ff2c-407a-8d7e-45cc0f506cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f778ff-4587-4673-ab17-823bf022a9ec",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f40c6b-5e5b-4526-a5b1-3661c024c7fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd63349-d0ef-4e8d-ad0c-3b3cc219337a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1a1500-597c-4a20-8561-a8e3bbcb3109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9b12bb-938f-42d6-bbba-770eda63cf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5b9327-551e-4dbe-a633-5043a52a8f8d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae81244-d4f8-44cd-89a2-82bdfaca9429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f21424-e480-4f47-891e-5bf639672c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bc9d4f-5624-4ca6-b7cd-3f0d1c0e909f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5b8845-9035-45dc-8d97-70f4ca444705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae0f882-af7f-4a70-9687-fd4baec89bfd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f1ba3f-a808-4bb3-9a65-20dc01756261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b35a4c-b47a-46f4-be23-018f7f968e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8535439e-5208-4617-9f93-72973f750ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13562f43-f7d4-41d7-a367-5083ffded26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3c5d64-9085-40cb-9128-9acfd3cb803d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7e0d4c-53c2-410f-89a6-a38e250cc336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e28a294-9dd6-4f4a-af18-2928cf31c212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2c0218-a924-4956-bb5e-aff5b6802e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a2a289-aedd-449c-a59e-df95dc1bdf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7445b421-8bf0-4476-9d09-25c2978ad9a9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2382dd-4846-461d-a96a-7acb4dfc4775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d83ef09-6e35-484c-beae-8f3e3ab937c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda003d-a3b0-462f-a0af-e690272caca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42eb4f1-5c5d-4d6a-b3ae-c5d28b53bd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c019a481-fb25-47e7-8ebd-7bfe1fe843fe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff867193-4d3f-4df2-bd0a-e30fdaea7d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a917a278-c34b-435d-87e4-4dd2854ea6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f09bda-aecb-42e9-a3c4-4062e524c092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8537bc25-270b-4c40-973b-59cd8f74b046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc403049-45c8-4596-a9fc-2878cf530aed",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1625860-b0d8-47ee-88ab-0a97c169b3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5230df74-ca62-4445-b3ec-e4f222933a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbd2f57-b59d-4dfb-af9c-6c0b5df77baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b8b79e-3ac8-414e-929f-7fabb9c50831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca538ac-f36f-47b4-93c0-8f97f4368415",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5ad72c-1d2b-4c86-8a0e-6e16202abf8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0ea498-1571-4c3c-8268-f07e5bdc8a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762145d6-a2a2-49a6-a2eb-03decfd3c6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71d80d7-c370-47d3-9589-e02c4e3a12a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb26ad3-c348-43d1-9141-af66276bc351",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c809fa-bf37-407b-a9d5-f4a7bbf41c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0b89e84-e0b8-46b9-b48c-d4bc58580514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456ef20c-51c4-41c3-894e-1c8ad32deba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572e65fa-8886-403f-a70f-02d6f7dd956b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61927457-c443-491a-8a88-b8cab508c7df",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c8a36b-fe71-4238-945b-7ed5df6034b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eef6c15-54a3-49d9-a3a6-3f916ce899fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471eace8-2dc2-4d7e-b8fd-842de4d42128",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29057ac3-113b-4a52-9f2f-6ec2cad187bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dcb67a-abe4-44e5-afa6-93b029f549ab",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f74ab65-2aa7-44ae-9c1a-997cfba268fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f285347-a839-470d-ae83-38053a92e4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456a1178-f321-484a-8ef8-b51bf4b3d34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0384b634-5ae6-4bb8-9db8-0bc2dfa1989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cd1b4b-28d0-45e4-a642-933a4dbe149d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8402dca0-6b7d-4313-87d1-0714ee18ffac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3640f30c-b006-447c-8708-6bde4580083f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec5da25-55de-4c12-bc24-a767fddc1816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a071ecc-0f9f-435b-83e9-9a73d6ad8905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4393485c-041c-4d1a-89fa-5cc7464fcd0c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907b3994-0bfd-430b-b841-4ef281a68364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d898e8-d3fb-4bfe-a129-69cef9f48a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad7965e-6257-47cd-8690-30fc40661787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f791167-e9db-4a2b-a3e0-a8969fd6b37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae71d60-3250-4d9b-8e32-fdea9f36a382",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3933cf1-ccfe-4817-b161-3888b0e5a96d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "328dbd06-5974-4212-9ec9-5874dc00a1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bee629c-797d-4089-95d3-3f5aa7a1f4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71379f76-06f2-4c65-bbe3-ae936cf1ba18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb01291-7ba9-4abb-91ca-8a31e69ff1d6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aff1d1b-c640-4b1d-a663-e46b99698232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0004ae0e-3fca-4dbf-a20a-5149cea950b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e9aafd-0ae7-4725-a2f3-04c69815e4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a668562-7935-490a-908d-cafec0af0aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b7383f-edb4-4d2e-a39f-c2e2e435d21c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c50b1f0-0466-4eca-8d94-3bf79d9454f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f29214e-c19f-415b-bb27-6ede1da4fa2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9845bfc6-2499-4bc2-84c7-aff88ce9f3b1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243497c1-3fc1-4a9a-875a-eb0b597fbfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbf89ad-a6a8-4dfe-902f-4c5847f09d00",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388015af-fde4-4288-8507-f97955dbc45e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7651ec2f-d490-4b3f-acf7-dfd221d701aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1765b08e-4cf0-49d4-9204-d791ccbb8313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d004fdd-215e-4ea0-9d96-5e9fd61d67ba"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63e09c17-cb44-4ef0-accf-858f4cb89f58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48f396a2-9ab7-439c-b2a8-5de67ad8fd98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68c220ac-76e7-4e8c-94e3-10002a109cc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65e436da-9c8a-4043-9df7-1dcc9794a6f9"
                    }
                  }
                ]
              },
              {
                "id": "58ba6b71-c836-41d3-a58e-0251ec7919c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "749f7c1f-2997-4b3b-85c6-7dc0714807cb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb797674-ac39-482c-96a6-3da239b07e5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "64bc88be-ee8e-4b28-830c-d4af61c9e7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdeb99d-a1c9-4f17-9fd2-0efd09cbe6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b78d15c-86fa-41c7-a3c3-0a9cce1d9598"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f279af8f-67fd-48fc-9736-a0273724a9f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "119fe8ff-0ef1-49c5-ab09-e198c8e78aaf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0361e6b0-a664-4e85-a7ba-b57726399cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8356c0e6-f991-4292-b121-c42939a10a86"
                    }
                  }
                ]
              },
              {
                "id": "9db7817a-b5ca-45a2-861c-ba711a840725",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "57162e76-52b9-4627-8e6f-d6fe5fb7d447",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c48b603-f121-4ea7-bbb5-599ead6701ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "17ca6756-db2b-4761-97e4-4166cbcf066c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a919e051-e44a-4b79-aeec-599c946ffc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079087cc-2ec9-4593-9dc7-ea5be4ebdbbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4a10eb77-7a2c-4d93-9855-88209799eaac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cdb7079-8746-47c7-9a0d-ccffafe66353",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c27ac26-1282-4c40-a56e-382df3d18f4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e559dfa9-f045-43ae-872e-7092eeae77f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71963b38-c4a4-4fad-a062-214fa523578a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17520911-e4e6-4713-abe7-9c283dada116"
                    }
                  }
                ]
              },
              {
                "id": "7cd24c49-6070-4f04-8dc4-02ef5407e476",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52cbfcce-5666-47a8-9728-73aa040a64a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f995e123-4906-4921-9484-12651ffcea47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ec14279-f7c3-4437-af76-b6be08f9982c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30960883-e578-4ab2-9e9f-74f2d9a76a17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "300e60f5-4b58-4ad1-aee8-d9176d2004eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "71ee9408-7d51-4b70-bc4c-97a739cf5834"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c212935-9f29-45ea-915f-698bb083037a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e018f49-4562-434e-a02f-6c6e09f97fef"
            }
          }
        ]
      },
      {
        "id": "9bae08a7-2055-438c-88f7-72b1d7a5724f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "62d12fab-8547-4095-8842-9eb79cea3aec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca4b7e7d-ec99-46b3-a348-4b57636086e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f41a550-37c7-4d5c-ae73-c9128dd33004",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bb7978-14bd-40f2-844b-733464439c77",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "db98bf74-7405-41a7-beba-5e863d7c1379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2dcfd9-3146-4dee-950c-771d88a6eef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b17d262f-406e-4453-8366-240dcac8f142"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c5231c6-062f-4139-a5c9-f4bef99dc96d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06ac142f-5959-43ca-9435-baf24cd4f0b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46538d9f-962d-4db6-a7cd-84c29e6774ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d03dfc02-0961-401b-93fe-32acad221576"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e5d313d-0821-468a-bcc2-8ac68d3cfec2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f2c735c1-a4b2-4fbe-a601-f066133903a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "381fc043-e1ee-46be-ac33-20af0cbb50f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6253c736-77a3-4da6-a83c-1fc06333fe3b"
            }
          }
        ]
      },
      {
        "id": "e7540be8-163f-4eff-83e1-47122639b4f7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e8bbe422-d570-4f3d-a760-4a07791df65f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c4cb184-c975-44e6-b997-4d73cdb9cbbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8215a0bc-b9c2-4597-b192-39e100596a19",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8a598e-8e2e-4c3c-be9b-78e0946b8ae0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e27abf61-21cc-49ae-b1d9-a3fd9d19f513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8168b910-2d9f-46e0-94d6-1adbe30ab7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24414340-abba-4e62-b320-d28d32817f23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b448167e-728f-40a9-b78f-9394b5da6515",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7780829-a8b7-4313-b21b-d44769c7558d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89b8081b-2f94-4bfc-bf50-a52284dea579",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f151e1a9-15f4-4bc7-9295-24e24d4c7171"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e60259be-a3a0-4247-88d6-407e22613dd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a1cfcae2-0b9a-4912-93b8-135ef1d8dd78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "858e5476-48d1-40e9-9686-286f7320d8ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b5deaf0-af88-4215-9192-9a5e749a34a0"
            }
          }
        ]
      },
      {
        "id": "e3817304-02f9-4f6e-b954-f24fa2dac92f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "104cb92a-5048-4439-bf48-ccbca1cc4151",
            "name": "Negative Testing",
            "item": [
              {
                "id": "674ce360-1bc2-4604-9813-b50f35192fd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7b08718-e502-4661-a802-a28770d8aaa8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6093bbc1-88a3-4108-a6d4-791c82650eeb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "872e40c4-1c22-4e0d-ba1e-a15121572d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5898db1c-1e27-4576-8b3b-60fb06ef1713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1af860c-4b0e-4a3f-b125-17b700f4699d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad4d8526-49de-4212-bacd-18aab2c11eeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dd79805-dda6-4b87-891a-d397f553dc58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c84f8ec-41a7-4257-8be6-3e5acce1be73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35a6b4a1-d508-4d73-a816-e924d3f3fd3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69289231-fa0e-42f2-8f9d-4028cdcc1327",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "940988fb-7cff-432a-84d7-d0e7a65e3640"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b53eafb-61ac-4995-974e-19638a6f7250",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9132308-8c56-4aee-8199-958b7ba4db18"
            }
          }
        ]
      },
      {
        "id": "15e12890-41af-4ccf-9622-440e108ea558",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad6ca60f-1955-4fed-ae4e-20febacdcf27",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bad8ae0a-5169-494e-97a4-8f02f6c9ca74",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "88b7c3a7-751e-4273-a340-858d24b1f81f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae047c01-8407-4511-bde0-d78a153c18cc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "611132ad-f3b3-4598-8132-fad1a5904153",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.78174603174607,
      "responseMin": 7,
      "responseMax": 709,
      "responseSd": 47.437971029166945,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727657263480,
      "completed": 1727657289327
    },
    "executions": [
      {
        "id": "f353c3a9-70ef-4903-bdf1-d488797d87e2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3027e08c-2596-489c-9964-24d78e27b6ab",
          "httpRequestId": "b875a0c2-0982-4039-8555-ef11b4ab4445"
        },
        "item": {
          "id": "f353c3a9-70ef-4903-bdf1-d488797d87e2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "95c0d8ba-867c-4dbf-a640-a589f1a75df5",
          "status": "OK",
          "code": 200,
          "responseTime": 148,
          "responseSize": 0
        }
      },
      {
        "id": "8dcc268e-56bd-41ab-877e-5f5e961c2a3e",
        "cursor": {
          "ref": "80e1f5f3-56b8-40bd-bd7b-2b1c4d4a753b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "69c43752-bccf-405f-8316-e6aa4ba5de0e"
        },
        "item": {
          "id": "8dcc268e-56bd-41ab-877e-5f5e961c2a3e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "827f80f5-8928-4ce6-8328-500cef8f0bbd",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "f9eb8982-29d2-410d-ba36-7c60bac60e02",
        "cursor": {
          "ref": "c2fa37ce-667e-4065-b664-745508da88d4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dca80ba6-709f-42c5-9823-8b4819b6ff54"
        },
        "item": {
          "id": "f9eb8982-29d2-410d-ba36-7c60bac60e02",
          "name": "did_json"
        },
        "response": {
          "id": "6093ee37-aac1-4414-8f4d-d2b6cf0b06f8",
          "status": "OK",
          "code": 200,
          "responseTime": 354,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301a9eeb-05a2-4dfe-b40d-4b52a02e21ac",
        "cursor": {
          "ref": "c6a4225e-2d72-4b60-9d74-61ee9119ae2e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f03ff154-ffdf-42e3-aefa-3979dd10c21b"
        },
        "item": {
          "id": "301a9eeb-05a2-4dfe-b40d-4b52a02e21ac",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba9bfc81-473b-4a0c-b3bf-66418571e5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301a9eeb-05a2-4dfe-b40d-4b52a02e21ac",
        "cursor": {
          "ref": "c6a4225e-2d72-4b60-9d74-61ee9119ae2e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f03ff154-ffdf-42e3-aefa-3979dd10c21b"
        },
        "item": {
          "id": "301a9eeb-05a2-4dfe-b40d-4b52a02e21ac",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba9bfc81-473b-4a0c-b3bf-66418571e5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e50ab8-d590-4d77-a775-9923dba480c2",
        "cursor": {
          "ref": "0624bd59-8d2a-4bac-9da1-da0600e90cc0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "abe8b152-b551-4bac-9b7a-801823f21150"
        },
        "item": {
          "id": "69e50ab8-d590-4d77-a775-9923dba480c2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "82f45e9b-c286-4229-ad24-b5b4e154e7c3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 162,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027520e6-75a8-4eb3-a1a7-412066d8e12b",
        "cursor": {
          "ref": "5145bc06-0794-4a75-8679-0c20be52359d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a412cea8-060d-4b82-9555-5410b1eeb15f"
        },
        "item": {
          "id": "027520e6-75a8-4eb3-a1a7-412066d8e12b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "10e92121-2abf-4654-b349-eae45c5d07a6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d854ce2b-0e47-4db2-b690-75cbfec94d21",
        "cursor": {
          "ref": "34a49ae3-d683-450f-8604-4a8df4c5164f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b7a0c2ae-1850-444b-8b4e-f922c268c27d"
        },
        "item": {
          "id": "d854ce2b-0e47-4db2-b690-75cbfec94d21",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "410298d0-594c-4472-8fa4-afc688c8a61f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb11b6e-55dd-4de5-b15d-e55ab9eea12d",
        "cursor": {
          "ref": "9044d15e-bc32-411b-a980-8da1aba20bc0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4d7a2b92-9711-4066-93b8-81bdb0d656c2"
        },
        "item": {
          "id": "adb11b6e-55dd-4de5-b15d-e55ab9eea12d",
          "name": "identifiers"
        },
        "response": {
          "id": "4eefd302-a173-4ff6-9c74-59e4a66b41a4",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8dce8e-43dd-4016-b004-7ae8bc98c20e",
        "cursor": {
          "ref": "bc1d2bec-4b94-4c7d-a806-b25310685733",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "57b1bd8f-3017-422a-9dcc-9e30d12bec4c"
        },
        "item": {
          "id": "8b8dce8e-43dd-4016-b004-7ae8bc98c20e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f9c3bc80-3c1e-4464-9a15-f27be5c6cc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fdcab0-9c36-43f2-8738-2dd31f3bcec6",
        "cursor": {
          "ref": "923bfa6f-0842-4e68-87b8-f24589d07ac4",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bc5d9e92-f1ff-4321-984c-d0de91849c37"
        },
        "item": {
          "id": "71fdcab0-9c36-43f2-8738-2dd31f3bcec6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f56669f4-7993-4809-9239-a334bce0e39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa787bd-03e6-4869-9eed-1ec27f6ac899",
        "cursor": {
          "ref": "cb57cf45-b644-4ec6-8e1b-8bc26dc47635",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "82893b6b-e827-4b43-9aa9-fa10d970ae38"
        },
        "item": {
          "id": "daa787bd-03e6-4869-9eed-1ec27f6ac899",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e2020fad-244f-40f9-82f5-5ca38c5dc087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf70967f-5112-44c5-a617-aa4c325a1328",
        "cursor": {
          "ref": "89e98017-cbbc-4172-8393-60a1935a7c92",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "86d123a2-c133-4366-bf12-920158eec8f1"
        },
        "item": {
          "id": "cf70967f-5112-44c5-a617-aa4c325a1328",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "13f1b235-fa1d-4ac2-8b82-6aa742748b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a1144f-7496-470d-8749-17a3815878f4",
        "cursor": {
          "ref": "98e663a9-bc30-46a3-af56-853ebfa922f4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c69153b0-b1a6-4a2f-a7e2-ae3b066c317e"
        },
        "item": {
          "id": "78a1144f-7496-470d-8749-17a3815878f4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "606cea49-8765-41ea-b08a-9de2513f7ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df750b21-9f4b-4e8b-9022-8911459fdcb8",
        "cursor": {
          "ref": "f29411b5-76d0-4ade-8d10-09010cd27f26",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "541bd9cb-5536-41bc-8041-14df7cf8ba6a"
        },
        "item": {
          "id": "df750b21-9f4b-4e8b-9022-8911459fdcb8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "52ee20a4-a8f5-4f5f-8bdc-230c395665ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d448637-2fee-4c83-bc6c-a07d6194cc48",
        "cursor": {
          "ref": "8d501608-de45-4a1e-83cd-5d0acc6b886b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "73e7644c-9670-41c8-8dc7-a0245137b90d"
        },
        "item": {
          "id": "3d448637-2fee-4c83-bc6c-a07d6194cc48",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cf90b6e2-7d32-4419-86db-c8cde71f8a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fef45ea-77e3-48fc-a939-c8d6e1eb23b0",
        "cursor": {
          "ref": "f803811c-1817-4923-be8f-ce5191847aab",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9d126bb5-b244-430f-a4f4-ff4551a87c43"
        },
        "item": {
          "id": "4fef45ea-77e3-48fc-a939-c8d6e1eb23b0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f30d8733-5343-4b01-a720-63338fb949bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561d29cd-22ab-4310-9914-e14083271434",
        "cursor": {
          "ref": "7c1ac163-f0aa-41e8-b04c-f3051105f267",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5366084e-8e8b-4c91-9b73-43de5049e240"
        },
        "item": {
          "id": "561d29cd-22ab-4310-9914-e14083271434",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e0cd3e9a-23c9-42da-ad0c-ceb4811fddc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4413ed41-d266-46ca-8354-7aae950a8097",
        "cursor": {
          "ref": "2a66de14-4f8d-4d9e-94e8-520639af96f0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6781c4b6-d5ac-490f-9c64-ab4a29e9bd5d"
        },
        "item": {
          "id": "4413ed41-d266-46ca-8354-7aae950a8097",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "85a5b2bb-306d-4cde-8360-2dd087404532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2db3fe-cbc1-49f1-a048-b68f1c70e53b",
        "cursor": {
          "ref": "7d9db16f-3fde-4bb6-bb43-6b844daf5dad",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18f9705a-b792-4af7-bcf1-7252a35557c7"
        },
        "item": {
          "id": "ac2db3fe-cbc1-49f1-a048-b68f1c70e53b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f3dc1d39-bf07-4ecf-8d6a-2a5e4a2ad153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d81d1a-7709-4be1-8d6d-42e5feff957f",
        "cursor": {
          "ref": "05acb724-6cbf-469e-9aa1-bec98b0b32ef",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7459f679-0bdf-45ff-951d-0ab65a229067"
        },
        "item": {
          "id": "c4d81d1a-7709-4be1-8d6d-42e5feff957f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0d884cc0-4f8b-423c-bed1-63666f20f314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ca7ab1-f583-4e2e-bd19-09177ed2bb9f",
        "cursor": {
          "ref": "d9406880-a581-437b-8f18-94becd53b116",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "02bf7a92-e5c0-489f-8001-2368f8b2eefe"
        },
        "item": {
          "id": "11ca7ab1-f583-4e2e-bd19-09177ed2bb9f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8bceb9a3-f64b-49f6-af6e-8c04e4473d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57e5744-6435-4f81-a4ca-b165d7d5b00a",
        "cursor": {
          "ref": "d5defb83-b57d-4a3c-9436-88bf3b22e9d0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "380401f2-ce50-4bf9-b7df-d730b4023ee5"
        },
        "item": {
          "id": "f57e5744-6435-4f81-a4ca-b165d7d5b00a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0fa5ef41-f329-40ec-8396-664a3456b0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa03450-3020-4d88-998c-a409470c8735",
        "cursor": {
          "ref": "67ce1068-2834-4377-9358-644b3f096462",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e2cd8773-fe9f-477d-87dc-4a8dfc9460ae"
        },
        "item": {
          "id": "afa03450-3020-4d88-998c-a409470c8735",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7505cca0-d35a-4af6-b7d6-3372665b188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11cac33-5d90-4503-a3ee-e52c45a1b014",
        "cursor": {
          "ref": "705ac07d-63e4-4a2c-8fc5-7b888f42ae06",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "98941398-85e4-48ee-8a4e-fe54b57c4c5f"
        },
        "item": {
          "id": "b11cac33-5d90-4503-a3ee-e52c45a1b014",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "119664d8-83c6-47cb-a4ad-552736b83147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fe8988-7291-43cd-bf3b-9ed11717ee58",
        "cursor": {
          "ref": "72b2b795-ce0b-444e-a165-6657c42726fa",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "72fbef01-fdf5-45a9-87b4-4032261322d2"
        },
        "item": {
          "id": "40fe8988-7291-43cd-bf3b-9ed11717ee58",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f9257b15-4481-4444-9091-ca27f62d15f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e688425d-6e7a-4703-8fbb-d63261b0daab",
        "cursor": {
          "ref": "f3ff5e09-1f55-480d-bf89-6298be31bee3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "17d683a1-c3f7-4442-9a8e-950248c20c62"
        },
        "item": {
          "id": "e688425d-6e7a-4703-8fbb-d63261b0daab",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1fabd8f0-e9a1-4002-a2ed-c1bf2f177dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf43d58-88a0-4919-8e7f-eaf727386ab7",
        "cursor": {
          "ref": "10033891-17b3-4f41-9010-64b841c84940",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c7e75746-153e-4e59-80cd-f93844ae4bed"
        },
        "item": {
          "id": "cbf43d58-88a0-4919-8e7f-eaf727386ab7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c3efa71c-769b-4684-a007-6f02ee42cf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff623eab-9f4d-42c8-83d1-80f3fe5dac89",
        "cursor": {
          "ref": "a28fdc97-9e3f-42d1-ba4d-d65d3be2a092",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "34d4565b-1645-4296-b7f2-665da8f18c8e"
        },
        "item": {
          "id": "ff623eab-9f4d-42c8-83d1-80f3fe5dac89",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1fc0a06d-5151-4c46-94e1-a5f59b01d102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd76657c-7a6f-4cf4-ab15-4f5af9a82871",
        "cursor": {
          "ref": "dd5da9b4-53a3-43be-81b3-cf6bde80c555",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a56df878-8617-4688-b64a-170bb97cca45"
        },
        "item": {
          "id": "dd76657c-7a6f-4cf4-ab15-4f5af9a82871",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6d34f06b-0bc6-4b62-b193-8cbd54dae243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2cc2e2-e992-4cb3-8088-9969a5b5ed8e",
        "cursor": {
          "ref": "ab982ab0-3ad8-4738-98b9-0633a3c5b32a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6494a340-5c4c-413c-ad04-a68a357a4ef7"
        },
        "item": {
          "id": "5b2cc2e2-e992-4cb3-8088-9969a5b5ed8e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "846eb997-fe4b-4b08-a050-a01030dc053a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7ca4ab-1f1b-4a7f-8659-454b63c58d96",
        "cursor": {
          "ref": "277c85d5-bc44-45a9-90a2-1850b8292ed5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "34d5eadb-97b2-4b23-9626-6dd3701c5959"
        },
        "item": {
          "id": "8e7ca4ab-1f1b-4a7f-8659-454b63c58d96",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7eb173e0-239a-4986-966e-fa8b560f7ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e6b78f-1ed2-4f2e-b06a-2769bc0661f2",
        "cursor": {
          "ref": "0d429185-daa5-4d9b-8b4d-22f2152e8346",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6f8a1074-5f15-47bb-91b4-8c9072fef15b"
        },
        "item": {
          "id": "82e6b78f-1ed2-4f2e-b06a-2769bc0661f2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d20035c4-79c0-4f28-97ab-001fd829d404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07fa2b5-f06a-4224-a8ee-01b639bc6cb5",
        "cursor": {
          "ref": "f1412877-b2f8-4cc6-bd03-1b5b64afadc4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "63a2857f-138b-42d4-b6c4-179161f91ddf"
        },
        "item": {
          "id": "a07fa2b5-f06a-4224-a8ee-01b639bc6cb5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "95bf6cb8-153d-4a4f-9c82-34aacbd481e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44bcdc8-88d4-4b8a-bcb6-252177d8316d",
        "cursor": {
          "ref": "4c8ee2a8-1926-4169-9465-bad711859ae3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d993884f-7339-486f-aef6-0734933e5f9b"
        },
        "item": {
          "id": "b44bcdc8-88d4-4b8a-bcb6-252177d8316d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e95ac671-9426-4494-9278-43fc1c9521fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfd3614-6e3e-48b8-b268-e4ac5285bb9a",
        "cursor": {
          "ref": "cbcc3e0c-d018-4824-a7e5-d515a12ca60f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "067285c7-9162-447d-9570-cc9951ec4f6a"
        },
        "item": {
          "id": "1dfd3614-6e3e-48b8-b268-e4ac5285bb9a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c906ab67-6f45-47cc-941a-ae7389be2c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db05167-9916-4cbe-8d37-731610b91755",
        "cursor": {
          "ref": "20d1462f-5e5d-47b5-ab23-861880d3bd55",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b3264764-349d-439a-b26f-a9fddb6710ba"
        },
        "item": {
          "id": "7db05167-9916-4cbe-8d37-731610b91755",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "01337831-b773-4f09-84ba-370d96bc0d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa3e0fc-7161-4b19-b37a-f8f1fab2a7f8",
        "cursor": {
          "ref": "ba6e7783-2727-4a4d-89f3-b1ca5c248c74",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0eec67ec-34c4-4a45-8bcb-fcc677baf341"
        },
        "item": {
          "id": "ffa3e0fc-7161-4b19-b37a-f8f1fab2a7f8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7a6d87f8-6bc3-45aa-aee8-eb0be62093bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11637962-37b5-42ed-94f4-8062e1666c27",
        "cursor": {
          "ref": "6d8ce3e6-9e76-4ad7-92a7-54af6bf8733c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c145ad2e-d97a-4cde-b55e-f8838accdae6"
        },
        "item": {
          "id": "11637962-37b5-42ed-94f4-8062e1666c27",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9d15e0c9-7d69-41bf-b65c-64d2e4d257ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa4d2fb-66b5-4563-be9c-6a4702f49f5e",
        "cursor": {
          "ref": "123fd40d-8eed-441e-ae1e-2c3e40716584",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "553ccaf3-bfe9-4060-af4e-542c01e7b68d"
        },
        "item": {
          "id": "afa4d2fb-66b5-4563-be9c-6a4702f49f5e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bd2566a7-148d-45cb-856d-ed0b009a73e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2992c069-be9d-4eb5-9e0a-81772fa97743",
        "cursor": {
          "ref": "4d1c96aa-bf4a-44fa-98cb-ee861845e00e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bfcc32e1-85e6-4486-9991-72a83084fcc0"
        },
        "item": {
          "id": "2992c069-be9d-4eb5-9e0a-81772fa97743",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a6bf0c74-508d-4fe1-9dfa-3f03ae75d9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfa60c9-8185-4e25-a852-f19de4be124d",
        "cursor": {
          "ref": "7c1367e6-0ff6-45d7-a618-11b442e7c52e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2d401b44-206e-48e6-89c0-d329ea35dfb3"
        },
        "item": {
          "id": "1cfa60c9-8185-4e25-a852-f19de4be124d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1c9c576-c728-415c-ac5d-3ade2b9b34a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0d5fa2-ded8-4432-b802-4749a0f693bf",
        "cursor": {
          "ref": "590a49c6-7305-4d71-8592-fcf0168061c2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "05522109-71a3-4290-8b89-0c964f49dfb5"
        },
        "item": {
          "id": "0c0d5fa2-ded8-4432-b802-4749a0f693bf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ed214efd-20f7-4c72-920a-04e3e6739eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b518e4ef-4c18-492d-835d-c8b5ea0b45e6",
        "cursor": {
          "ref": "72966db1-4b5b-441c-9545-9029ec803eca",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4ba70c19-8238-425d-9424-4e43d491981c"
        },
        "item": {
          "id": "b518e4ef-4c18-492d-835d-c8b5ea0b45e6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1b16453c-e3af-4ae8-a8da-7dc31bcdd968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d73f95-1f05-4fe1-805a-faa107319934",
        "cursor": {
          "ref": "1407f330-fbf0-4cba-b06b-87ce68e6554e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1420a517-8311-4f8e-beae-f0a93097641b"
        },
        "item": {
          "id": "37d73f95-1f05-4fe1-805a-faa107319934",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1fa740bc-4fb1-4813-9d0f-79e9ab75d784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d52cfb0-8147-4ecf-ba5e-658f9fa4f442",
        "cursor": {
          "ref": "d00a3e1b-b996-40c2-8fae-945f05da0d5f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2a9695e8-cae0-4473-aec4-256065587a6a"
        },
        "item": {
          "id": "8d52cfb0-8147-4ecf-ba5e-658f9fa4f442",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c0b9847d-d407-4e70-845c-b4ed16ef32d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc97316-8a96-4de8-9f33-bb06fe50d60e",
        "cursor": {
          "ref": "26724dd5-a9fa-4e8c-8da5-09ff600fe451",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "46b88529-3d2b-4a5a-bf5f-c68c78e59105"
        },
        "item": {
          "id": "fdc97316-8a96-4de8-9f33-bb06fe50d60e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29a44c79-466e-4ea3-8949-5bfdf40bc22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4900eb9e-5c1c-40f5-9684-1a4d37a2ee19",
        "cursor": {
          "ref": "b0ff86a2-f2d7-4023-acb0-daef4447a456",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "11041b48-28f7-4ff8-bbc0-23f7ba724cac"
        },
        "item": {
          "id": "4900eb9e-5c1c-40f5-9684-1a4d37a2ee19",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fb9e14b9-99b2-48a6-9791-03cd4d860a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423bf9cf-326c-4332-83fc-095baeb1d452",
        "cursor": {
          "ref": "fe1faae0-81cc-4b3f-93f9-e2a4c717f048",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f5deba66-d03e-4b61-836f-ed7ebce875f2"
        },
        "item": {
          "id": "423bf9cf-326c-4332-83fc-095baeb1d452",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7970a336-69a9-4aba-8008-a7f9f6337f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd42ba1-7faa-4d49-8015-b26e65b50acf",
        "cursor": {
          "ref": "13e34060-4742-4b4d-80f6-1daa7e3caa4f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bebfa253-759f-4f70-ab05-a4722617236a"
        },
        "item": {
          "id": "0cd42ba1-7faa-4d49-8015-b26e65b50acf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "14b806f1-0d99-4b2a-9c45-410041902333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5161eb31-d0cd-4246-8343-12bb96024023",
        "cursor": {
          "ref": "d80cab35-cce4-43e7-aebe-e3c8dc2c2273",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "47ac758f-aa3b-4f30-b73e-c288d06d82a7"
        },
        "item": {
          "id": "5161eb31-d0cd-4246-8343-12bb96024023",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "93c07aeb-de5c-482d-9b0c-b1cf3e3b1353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c1d7e0-0e17-4342-9117-50bcb4c9eebb",
        "cursor": {
          "ref": "0daacb83-4557-4f7d-a55e-4e93e1d16315",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d502e3b0-928b-49da-81f6-baad171d338f"
        },
        "item": {
          "id": "93c1d7e0-0e17-4342-9117-50bcb4c9eebb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8f97504c-7a19-40db-9b69-73e6ce2d0aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca846ea-4d09-415b-9ff6-ce09d229961a",
        "cursor": {
          "ref": "8850113e-b0f4-4972-b658-ee7e0a985c68",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0df0eb85-7952-47a0-915f-16e21d0270c6"
        },
        "item": {
          "id": "3ca846ea-4d09-415b-9ff6-ce09d229961a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9c728261-a9f8-451b-86b8-d05f2b57c51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac5439c-bb06-4b2a-85fb-b231288b7c8e",
        "cursor": {
          "ref": "42b8ee3e-7a15-4c2b-b7a4-d05e5628b768",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4011d6b6-0a8e-482a-9e33-c7fc80c7e5bd"
        },
        "item": {
          "id": "7ac5439c-bb06-4b2a-85fb-b231288b7c8e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cea97080-a568-4608-b078-d21569e0558a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8539c961-f37c-44da-ba8a-14ab76479dd7",
        "cursor": {
          "ref": "6c56e7fa-4a20-41fd-95c3-b0a733a030b7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2e0087cb-21fe-46e1-aa0b-ab019d2fc9cf"
        },
        "item": {
          "id": "8539c961-f37c-44da-ba8a-14ab76479dd7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3caac43a-ee52-4826-8415-24c424739111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768a2336-c46b-48f6-8266-a08d4a1b5d1a",
        "cursor": {
          "ref": "0f487267-a796-4797-a7d7-43ac8eb15989",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8337c7ee-826f-4c0f-8e77-bf467847fc93"
        },
        "item": {
          "id": "768a2336-c46b-48f6-8266-a08d4a1b5d1a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "efe50cf7-150c-4f5e-9e57-b75b4ca3e627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c8ecad-4bf8-44f9-be1f-e5d05b95b1fd",
        "cursor": {
          "ref": "d44d5d63-37bb-4eed-8fcf-7934e21d327e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d7534175-191e-4c47-890f-9d1fc75958ca"
        },
        "item": {
          "id": "55c8ecad-4bf8-44f9-be1f-e5d05b95b1fd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b1718d8e-1af6-4925-bc00-45fe670f5a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cabdc1c-1e34-4cc9-8e0a-51b3e3d532b5",
        "cursor": {
          "ref": "46e945a5-97f4-41c8-8b51-7ec211ec614d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "435fe63f-16ef-4fa1-91ff-73d0b8a28576"
        },
        "item": {
          "id": "3cabdc1c-1e34-4cc9-8e0a-51b3e3d532b5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bcb23ef1-54ba-4dff-9f25-bee1ef295b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56709ab8-45dc-4a01-b9c6-bfc198be81b6",
        "cursor": {
          "ref": "7ec82f5c-2827-471d-a9a4-219eb68eab39",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bc182e0e-d7b3-4ccc-bb9d-4d9acaa06605"
        },
        "item": {
          "id": "56709ab8-45dc-4a01-b9c6-bfc198be81b6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fa9032f3-dc1d-48c5-921b-1f4a189c04b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c089576e-f9f7-4097-80c8-f29eba4d91cb",
        "cursor": {
          "ref": "c2497688-736b-48a7-bab9-e57f795741fe",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6b12fd34-a899-4423-ab74-1f30c45cfb48"
        },
        "item": {
          "id": "c089576e-f9f7-4097-80c8-f29eba4d91cb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5f374c05-56b1-4baa-a175-4be02fcc7dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d374a6-886e-4279-96db-9b494226ec42",
        "cursor": {
          "ref": "a7fdbc60-5eef-4fd5-bc31-945ab5b6f15e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3d4516d2-3450-49a7-9f3c-c5632626cab7"
        },
        "item": {
          "id": "41d374a6-886e-4279-96db-9b494226ec42",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c86cef2d-7419-4c39-a3b1-14362ec14836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883e8751-1623-4166-bffb-1f267dae8545",
        "cursor": {
          "ref": "2d5f845a-c79a-41b7-8fe5-71e2f2672dd7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9c9e3e8e-2e3b-417e-ac7e-122b8a5b39c1"
        },
        "item": {
          "id": "883e8751-1623-4166-bffb-1f267dae8545",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "aaba646c-a863-4b50-910c-bef51daa4a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8f2878-a48d-49c1-bbb3-09e425b2d428",
        "cursor": {
          "ref": "de19cd11-b58b-467c-bca2-452007608ee3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ed77a49f-e62b-47ba-835e-4efdf46f4808"
        },
        "item": {
          "id": "fa8f2878-a48d-49c1-bbb3-09e425b2d428",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b2f0630f-e74c-4d28-bb83-5ac9c119279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e330c758-8cf7-47be-a2c7-215ee63e2e0b",
        "cursor": {
          "ref": "1acd05c1-5458-4d87-b698-0cb6bcc016ef",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "920d3bd8-d3bc-48a2-b288-5b5f50d78595"
        },
        "item": {
          "id": "e330c758-8cf7-47be-a2c7-215ee63e2e0b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1f703b23-f04f-471f-89ef-2a23143f7b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf42c0d-7e7a-4eb9-9d41-4bf82b17ab1f",
        "cursor": {
          "ref": "9ce84709-b93c-490f-8ecc-d6306f475786",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4bc02191-4aab-445f-9c89-39416fe99035"
        },
        "item": {
          "id": "aaf42c0d-7e7a-4eb9-9d41-4bf82b17ab1f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b332dea6-927e-4aa5-a69d-8e2eed8b032c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a4c471-4a61-453e-b255-345abcad828b",
        "cursor": {
          "ref": "6c53abc5-ce1c-4db7-a573-95c9f46cbb1c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "454baf1c-d0f2-4903-bf61-4911c7621559"
        },
        "item": {
          "id": "51a4c471-4a61-453e-b255-345abcad828b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8efe76fc-32d8-4740-9aa4-c358d6c5c8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39483a1c-46b2-4454-bc76-f04e6eb21e73",
        "cursor": {
          "ref": "d44f6f55-d3c7-4ae6-80f9-eef9657172c6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6078adc3-7a6a-41ae-adce-4320024b3d72"
        },
        "item": {
          "id": "39483a1c-46b2-4454-bc76-f04e6eb21e73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8db28a58-caa2-4d82-b67a-338309757b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f811771d-76f6-49a3-b905-5583216594fb",
        "cursor": {
          "ref": "daea8101-6154-4a75-9617-76a59e2fdd20",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2f0dd21f-c87e-4c2a-8b7a-cf554f17b96c"
        },
        "item": {
          "id": "f811771d-76f6-49a3-b905-5583216594fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d6d747d9-3ce4-46ad-82f5-f6023b892de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f003ba2c-3bf2-46cf-be19-4aa03fbcb9fc",
        "cursor": {
          "ref": "5f9d83c8-59f6-45c3-ad19-58a0046a982c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6f742c9a-39ab-443e-8897-905d5fa23e72"
        },
        "item": {
          "id": "f003ba2c-3bf2-46cf-be19-4aa03fbcb9fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1853dced-a7f2-4425-a3d6-9c18bc423e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf382079-b3c3-438d-8f35-3ff9aad1ad89",
        "cursor": {
          "ref": "86eee75e-ac0d-4b4a-8d15-7fca37a1510a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "125b0ee5-7b38-4e91-a508-ae2e360c6f2f"
        },
        "item": {
          "id": "cf382079-b3c3-438d-8f35-3ff9aad1ad89",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0a8f0e58-85e7-4c29-af90-8fdf95238f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799af9c2-48db-41db-97db-641c89051a72",
        "cursor": {
          "ref": "312ccbf8-9d87-4800-a17e-b1e167fedc51",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b24d28e8-628b-40e2-870f-d164d790e199"
        },
        "item": {
          "id": "799af9c2-48db-41db-97db-641c89051a72",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4f2eb3cf-c9a8-4885-a9e8-a095414aeec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec27e56c-578b-4e33-abfb-b93b76b928cf",
        "cursor": {
          "ref": "61ee5615-60c9-4141-8779-8432576354c7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cb062f6f-b86c-4fdb-b68c-21d5eacbc5ed"
        },
        "item": {
          "id": "ec27e56c-578b-4e33-abfb-b93b76b928cf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d3c24c73-c67f-4a2f-bd01-2338fa3d0ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85b52bd-245e-4449-8349-365f185e0cd9",
        "cursor": {
          "ref": "c98788b6-fe20-468a-a589-a3fd0d22f28f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "788756ef-f700-4ae8-bac0-1f00c615c0a1"
        },
        "item": {
          "id": "c85b52bd-245e-4449-8349-365f185e0cd9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6b1a0ad8-af0f-49a6-aa29-d95e7a9bbf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec76139c-17fc-47d9-ba74-cb684245a238",
        "cursor": {
          "ref": "00100664-7ada-45c7-bdd9-10f76cee0da7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4cd44159-5036-4a6f-b5e7-8b6562af2bd8"
        },
        "item": {
          "id": "ec76139c-17fc-47d9-ba74-cb684245a238",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c96fa1a4-5cec-49b1-b9c8-0175958146d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00039e56-9798-4866-858c-681b214854ae",
        "cursor": {
          "ref": "b5b471fa-4159-4d8d-8d49-3fc12301af52",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4a0a80ba-1571-4244-b816-d6c178cd03ce"
        },
        "item": {
          "id": "00039e56-9798-4866-858c-681b214854ae",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7e65ac5b-fa3e-42a1-a6b5-9c0d61db8cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c8e23d-a81a-49f6-a69e-ea30872e74e8",
        "cursor": {
          "ref": "af0c91d1-c68e-4ee4-acaa-62ff47b7efce",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "61859378-66c6-4308-94b6-ff6f4243d11f"
        },
        "item": {
          "id": "47c8e23d-a81a-49f6-a69e-ea30872e74e8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c339b7e5-18aa-490e-a731-296d23d09353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4228388-c9bb-49ea-990d-82f9b75266bc",
        "cursor": {
          "ref": "313d56e6-1307-414e-8247-4eb88a5617e2",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d260597f-e7ff-466d-a81b-a60ad0570846"
        },
        "item": {
          "id": "c4228388-c9bb-49ea-990d-82f9b75266bc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e14ec134-2746-445a-a4f0-7eaf51684504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc3d9e0-b71a-4cd3-8d20-f514de2afe38",
        "cursor": {
          "ref": "2d6ddf6f-96b8-4087-9fba-270f8eb99fcc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9bb4f773-b586-4575-8870-d5f109a6a9eb"
        },
        "item": {
          "id": "bcc3d9e0-b71a-4cd3-8d20-f514de2afe38",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "42faef55-444f-4292-b338-930788df4853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d97750-4b99-4687-9c72-036570a71367",
        "cursor": {
          "ref": "2f1ccec5-d57e-4063-8de3-5b8de924d845",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "feea1761-986f-42b7-84fd-aa46de75fe8e"
        },
        "item": {
          "id": "53d97750-4b99-4687-9c72-036570a71367",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a5ddab37-0f0d-4b84-a789-4aa0f9a3cbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1747f7-e647-46d2-9353-58a6a3659406",
        "cursor": {
          "ref": "ee32e7f4-7353-4efb-8a79-cc2bea247087",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "987ffa47-26d6-4e89-834c-c834a05eea86"
        },
        "item": {
          "id": "2b1747f7-e647-46d2-9353-58a6a3659406",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "926639d2-9a73-4145-aedc-0126a69670ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1713ef86-8f35-474a-82ca-83ac1bc351da",
        "cursor": {
          "ref": "67dcaf7c-e3d9-4a02-80cb-c4899c132966",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "150a1021-7328-4cdb-98c0-61c7af5b7b63"
        },
        "item": {
          "id": "1713ef86-8f35-474a-82ca-83ac1bc351da",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "05fdaa82-9434-49e6-aed5-6ab5dd67e8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c37f9eb-6e25-4941-a9b7-8906ec00d790",
        "cursor": {
          "ref": "0fb11722-d7b4-43b5-8093-039cac3c3fd7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ce7ea652-7c30-4854-8a48-dfec2763ce84"
        },
        "item": {
          "id": "6c37f9eb-6e25-4941-a9b7-8906ec00d790",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "95013996-36a0-4074-931d-d419fe89e089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fe10c6-4e04-4731-9d70-64976bf77120",
        "cursor": {
          "ref": "8087a909-bb7d-4d21-a45b-d20ce1d2f89a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "702de6eb-8626-419d-8f6e-a58f5a6397d7"
        },
        "item": {
          "id": "13fe10c6-4e04-4731-9d70-64976bf77120",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8b522d61-f0d2-4361-99de-63ea8334284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6292a7ae-b767-4c61-a2ee-9ac14084bc8e",
        "cursor": {
          "ref": "3037ae3a-c6e7-4919-b2d1-312a53eed041",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f935aeee-e078-44ce-909b-cf44fb0f9ed6"
        },
        "item": {
          "id": "6292a7ae-b767-4c61-a2ee-9ac14084bc8e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3bd1fc46-1f7d-4ed7-b89d-decb3ea62647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab0cadb-9af8-4681-8d07-04d3c3cf63d8",
        "cursor": {
          "ref": "81c14af5-53f6-4483-a099-e16fc04894e2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f5062887-e20c-434d-a68c-23be4b26ef5d"
        },
        "item": {
          "id": "1ab0cadb-9af8-4681-8d07-04d3c3cf63d8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2487c4ed-6319-4e92-aef4-571e84cecc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68321b3c-3898-4460-9d30-c02ade807c8d",
        "cursor": {
          "ref": "2868cfcc-c65f-4966-8505-218145d11246",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d3820967-4759-4193-8f1e-e8172f35d308"
        },
        "item": {
          "id": "68321b3c-3898-4460-9d30-c02ade807c8d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "54fdea9e-6f76-4a0b-84be-53df550da412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f56c386-c105-4f09-a281-0ce926e5b416",
        "cursor": {
          "ref": "9968d75f-cde5-4dd9-8da9-973752fdcaa5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ef1ac8ee-920b-4bcf-b650-296264342b9d"
        },
        "item": {
          "id": "9f56c386-c105-4f09-a281-0ce926e5b416",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bb831ae5-5e20-4c14-9b59-c5b450a8b139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2be039-e91c-434d-ab7e-dfadda153c32",
        "cursor": {
          "ref": "a7dfba62-9de2-4835-9f5d-543a21fec757",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dc54805a-9af2-42ca-bd9b-f7c74dda6968"
        },
        "item": {
          "id": "fd2be039-e91c-434d-ab7e-dfadda153c32",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5382cc3e-7ded-4289-997f-db112a87976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a86f15e-d341-4bd2-9bf1-fdf12567c3bd",
        "cursor": {
          "ref": "fe039a78-79b2-492c-bc5b-7296b47278e1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a5adc2c7-35de-44d3-a305-a88c678602ea"
        },
        "item": {
          "id": "3a86f15e-d341-4bd2-9bf1-fdf12567c3bd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "01c30aa4-8bdb-4f56-bdbb-bbd6de7bc456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70390b78-3ff3-4e68-8667-ee77687b3e08",
        "cursor": {
          "ref": "9dde755a-5e37-4b29-be92-d43d8b83d7f9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dc4c8c44-703a-4c14-828b-fa436ea27a31"
        },
        "item": {
          "id": "70390b78-3ff3-4e68-8667-ee77687b3e08",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cb61e3ce-901e-440d-9b8e-cf38bc37de41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3620742-efbc-4f3f-bf3e-f592942187fc",
        "cursor": {
          "ref": "a74be61a-825a-4329-b76c-9d93d93bc36e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4824e0b7-cd25-4714-a180-209cde6c6ca0"
        },
        "item": {
          "id": "b3620742-efbc-4f3f-bf3e-f592942187fc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5d5f6a49-f58a-450f-808a-5130a7e961a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6cae06-b216-46a3-9eb7-3e91e1bc75b4",
        "cursor": {
          "ref": "1d706c63-5d6b-4dfc-934f-c52c9fc01b00",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "36b24224-74e4-4d74-bf18-1e0c9c34ae9b"
        },
        "item": {
          "id": "1b6cae06-b216-46a3-9eb7-3e91e1bc75b4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1a7f10ee-23e3-4ba3-9f81-145e34b9ddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d360a3-f834-4a76-a6cc-5898ea7ae9a9",
        "cursor": {
          "ref": "95c0b12f-652c-4079-8440-a8717725310a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c94441ac-8e7c-4f72-a8fd-dc206f98bbcc"
        },
        "item": {
          "id": "37d360a3-f834-4a76-a6cc-5898ea7ae9a9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dbbe3985-8b62-46d9-b09c-1b6ebacf5e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bed1b7-1b17-4de0-ab9c-4bada96d214d",
        "cursor": {
          "ref": "1fa9ab88-59ea-40f4-88fa-6b968523009c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "01086fc0-1740-4a4e-bab6-75c9e9446262"
        },
        "item": {
          "id": "86bed1b7-1b17-4de0-ab9c-4bada96d214d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f3747902-4267-4f0b-b3e3-9bfb8fbf95f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0f8086-b965-418a-abc6-d9bfa57bd43f",
        "cursor": {
          "ref": "79cee7ba-b7a9-4f67-b124-3a44198ce28e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0d9ce547-1d21-4b5e-90c8-0cfe3d9cb549"
        },
        "item": {
          "id": "ba0f8086-b965-418a-abc6-d9bfa57bd43f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "336aea75-1918-4e20-96f4-50db600bbc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa5dbf2-8246-4f3b-9306-ce2586374669",
        "cursor": {
          "ref": "9e25c267-4e9c-4ee1-ae2f-be8aeda6f75d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "44b3b2a5-c3f2-413f-b16e-a8c3b8464ff0"
        },
        "item": {
          "id": "1aa5dbf2-8246-4f3b-9306-ce2586374669",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e5509686-4568-4f9c-9586-d9a6faffed61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6abead-7c34-4544-9775-594e93427966",
        "cursor": {
          "ref": "0a3c65f4-f228-4013-ac5b-681d2f484b84",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "650c06cb-c104-4c3e-b582-06b076a16f9f"
        },
        "item": {
          "id": "9e6abead-7c34-4544-9775-594e93427966",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "22655d3c-1082-493b-86f5-52589ed77826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a79a92b-53c9-4f5b-b3dd-88bd4cc0871d",
        "cursor": {
          "ref": "07dce103-71a4-46e7-9b5a-bfcb08d7c647",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e5d807d-1d49-4cf2-ae6e-dad3ab71aa6b"
        },
        "item": {
          "id": "1a79a92b-53c9-4f5b-b3dd-88bd4cc0871d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9243f855-428d-4d7b-8ad6-8580360e47b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf51fa4-33f8-4126-a2dc-1640c65b5931",
        "cursor": {
          "ref": "3d69d596-218e-4333-b844-16f46c6d7e56",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "78b99339-0911-41a9-a2c2-3aa9eab072f1"
        },
        "item": {
          "id": "5bf51fa4-33f8-4126-a2dc-1640c65b5931",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "861689f0-4527-4168-80cd-2c36f1c5de61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478a4f06-14c4-4993-8a9b-1de3091657d7",
        "cursor": {
          "ref": "02f081e0-b260-4d7b-88d7-c33fab586ea0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d92e7122-3e6b-4965-8cb4-0f22bbfb412c"
        },
        "item": {
          "id": "478a4f06-14c4-4993-8a9b-1de3091657d7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "29a7c67b-38e5-44dc-91a2-8f8742ad2f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28f41b3-666c-4c80-87fe-5f1e0009b493",
        "cursor": {
          "ref": "d5a37ffb-ef95-4906-95b1-ecf8ad15350e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5265ff21-71fb-49b7-81d5-291bde04e64d"
        },
        "item": {
          "id": "b28f41b3-666c-4c80-87fe-5f1e0009b493",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1160d1ee-9f12-42ec-8cdd-d8a1bde3b455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5819a7-74c1-4a11-9c8c-772b985345cf",
        "cursor": {
          "ref": "59f42afe-780d-42d2-b149-7bdb07460d3f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb5bf1f9-98fa-4352-b374-5bd9356342ea"
        },
        "item": {
          "id": "2e5819a7-74c1-4a11-9c8c-772b985345cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d4011b9d-3b90-4300-a245-f72fc4ee14c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6588ed51-1cda-4bac-a311-e956278adc9c",
        "cursor": {
          "ref": "2d1c2732-9880-48f9-bd5d-b700a4a6e0ab",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "180277d6-9fff-487b-96c4-287f7edcc189"
        },
        "item": {
          "id": "6588ed51-1cda-4bac-a311-e956278adc9c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f6999cd9-97a8-4261-884b-16b9597edb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8c3e1b70-8850-4923-a42d-85056cd52bcb",
        "cursor": {
          "ref": "96463268-82bd-4f61-afc2-611a59362316",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "784fd2bd-cb10-426c-a40c-6bfc506eeb42"
        },
        "item": {
          "id": "8c3e1b70-8850-4923-a42d-85056cd52bcb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7c299b8a-1674-4c5e-9f15-cf9429808fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d58d5aea-edc9-4528-a2ca-b1cd960c9acf",
        "cursor": {
          "ref": "aeee8ce8-eccb-4465-8a50-3d42ec88e048",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5a7400a9-694f-460b-b62a-7825a9e2947a"
        },
        "item": {
          "id": "d58d5aea-edc9-4528-a2ca-b1cd960c9acf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "aa3869b2-e6f6-4321-8b02-aaeb9a9cbfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5cfa0616-8229-41df-9f19-043366079698",
        "cursor": {
          "ref": "546e4e9d-3581-4e5d-b21d-84cbd6133939",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e1c00d06-b46b-419b-bc58-c1f119fd25e4"
        },
        "item": {
          "id": "5cfa0616-8229-41df-9f19-043366079698",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "095915ea-738c-4ec2-b399-e962d82d65b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a4da9ac9-8307-4de2-bccb-e5af608abbf5",
        "cursor": {
          "ref": "7596a861-bb1f-4d48-9396-b0432f3b2485",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8bc54291-e260-4ad1-aa4f-ed09d43b9c7d"
        },
        "item": {
          "id": "a4da9ac9-8307-4de2-bccb-e5af608abbf5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "78c340ef-23b7-4383-b6b1-c6e5740168ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "09bb0e9d-424e-4445-bd09-2a855b9ffc20",
        "cursor": {
          "ref": "f3a70a5c-4187-4e46-a1c4-1d4ddfedeab5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8f04a47-7d8e-4fb5-8a71-65997ddef5ed"
        },
        "item": {
          "id": "09bb0e9d-424e-4445-bd09-2a855b9ffc20",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bc9b6ddb-8cab-4d29-9c19-109d25c7b3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ebdc3830-c512-4563-b310-48be6ba22fd1",
        "cursor": {
          "ref": "fe6b49d8-c0af-4c32-ad16-09c70f6b41a7",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "556cf338-059b-4508-9a44-b79984e0fca6"
        },
        "item": {
          "id": "ebdc3830-c512-4563-b310-48be6ba22fd1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9feb5e98-9bc5-4604-94b1-f8478e20a9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1b9dcf14-8bc4-4aaf-bc39-8b2cecdac77b",
        "cursor": {
          "ref": "af6234a2-dde2-49e4-a7d3-76f70213c609",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "75a5e10f-b57e-4102-9442-05ebc81383e3"
        },
        "item": {
          "id": "1b9dcf14-8bc4-4aaf-bc39-8b2cecdac77b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "538ef8f8-0d77-4e12-873b-6517fde916fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44cb2ce-312a-44cb-a71a-120124ff16fc",
        "cursor": {
          "ref": "74ffaebb-d9c5-4ce4-84c2-e14c59222a0f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4de4c0c0-b898-49c8-8e80-0ae6ebdd1e82"
        },
        "item": {
          "id": "a44cb2ce-312a-44cb-a71a-120124ff16fc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7cf116d8-bac0-453f-a90e-04e14e7f9e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b40ff6-31f8-44ad-9d3f-f7993ee48431",
        "cursor": {
          "ref": "05fd45ca-1555-4320-b44c-7bc572798281",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fbc9a554-d295-4e75-8d62-2ccbbd5777a9"
        },
        "item": {
          "id": "c7b40ff6-31f8-44ad-9d3f-f7993ee48431",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "accf4823-4149-44ee-a9cf-43a3790a7363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4b1f2e-3811-44af-8399-dfd0d23619d6",
        "cursor": {
          "ref": "b8f9fdb7-b79a-470f-a5d7-c9dc6d965e5c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "30debb04-6797-4dfb-baab-a449de05dc42"
        },
        "item": {
          "id": "da4b1f2e-3811-44af-8399-dfd0d23619d6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a435b1f6-6b16-4675-9077-cea00e10db6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3057161f-f290-4377-9421-2f3917f6fe12",
        "cursor": {
          "ref": "a7bc2d8b-ddf0-4d0f-9c8b-a4a50b98c582",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "574f5c95-2774-44ba-bff0-76ad499992d1"
        },
        "item": {
          "id": "3057161f-f290-4377-9421-2f3917f6fe12",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "638a1630-983f-4bdd-a81a-03a54b055d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ec459-a397-4139-8b8c-799b7b1a03b6",
        "cursor": {
          "ref": "5167252a-49a6-4ed5-933d-86f1fc2e643a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "64a1a4d6-bdb1-43b4-b7c4-477c31811532"
        },
        "item": {
          "id": "588ec459-a397-4139-8b8c-799b7b1a03b6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "761cb669-011f-4382-a49c-4da4de135264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6d3fff-7687-4e82-927a-7fb7d82a133e",
        "cursor": {
          "ref": "ee26c60f-45e8-4bcc-992e-32302627b6c4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b47c338f-5a66-41b9-88e8-86c407d6f3ea"
        },
        "item": {
          "id": "5a6d3fff-7687-4e82-927a-7fb7d82a133e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "52cb8f62-50af-4829-8ec8-859fb868efb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a8c4f6-3da6-47cf-86be-69bb06c9c95f",
        "cursor": {
          "ref": "4e8e9609-055d-4762-bcd7-6b8d85912302",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e1e2597c-e0af-457e-9f71-4811710869bf"
        },
        "item": {
          "id": "78a8c4f6-3da6-47cf-86be-69bb06c9c95f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6f7808f8-49b2-440c-9761-0bf9cf58aed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0851086-8dad-48c6-abad-96645dae4997",
        "cursor": {
          "ref": "ede9ceb9-9bd9-4256-9e68-fbf4166bd4f4",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ee897cb1-a81c-42b4-a5b9-b74793e7e9ed"
        },
        "item": {
          "id": "e0851086-8dad-48c6-abad-96645dae4997",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7ed5686f-5554-4264-9564-cb2b356a7a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b763e70-e185-40d3-88e5-7498b2d74a9e",
        "cursor": {
          "ref": "dacce258-6c3e-47bd-8837-bd72ef1c031f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "54b0ac35-d602-43e7-826f-a2d3e925fddc"
        },
        "item": {
          "id": "5b763e70-e185-40d3-88e5-7498b2d74a9e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ede27f60-a206-4786-bf36-372d300a64c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c7fcc0-4abd-4bf7-89d9-d211d93a5d9d",
        "cursor": {
          "ref": "637529da-f39b-4281-9637-441b484c0a38",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a1aa8a84-261a-441c-9f38-96304819fedf"
        },
        "item": {
          "id": "09c7fcc0-4abd-4bf7-89d9-d211d93a5d9d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75a9c863-561b-4d4b-97d8-f88b20cd30e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3908cc-2ba8-45b3-98e4-ba60bb546ab5",
        "cursor": {
          "ref": "3f55b038-08ac-47c8-89c0-371a01450de1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "14893968-3480-4ec9-96d0-de8be1a1e363"
        },
        "item": {
          "id": "ac3908cc-2ba8-45b3-98e4-ba60bb546ab5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5713dfd3-1b27-44a0-b10e-22cd1c2a545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0201b0-6653-41c4-9e6c-ea134b98b184",
        "cursor": {
          "ref": "3c89f75a-bcc9-46b9-bddb-535eaf3b343c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a89fd890-7f7c-44ac-b55c-f3972ace4944"
        },
        "item": {
          "id": "ae0201b0-6653-41c4-9e6c-ea134b98b184",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "904f1d14-0bff-4dc1-a23b-64eeeca66472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e09acf-e052-4908-b915-fab67917265a",
        "cursor": {
          "ref": "f20e5706-9e66-4c69-9729-74d447480496",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c363c683-6010-484f-8644-8fceedd51227"
        },
        "item": {
          "id": "d5e09acf-e052-4908-b915-fab67917265a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "82e795e4-5663-4257-8ad7-d53c15568238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd2503c-c113-4404-aa3d-2f164ed37801",
        "cursor": {
          "ref": "d65637e5-560f-4a6a-8118-1e594f3f296a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bd7c5251-15d7-402b-8e6e-ea17ca543a91"
        },
        "item": {
          "id": "8dd2503c-c113-4404-aa3d-2f164ed37801",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dd44f69e-ff7c-4438-8a3f-576f166b94a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199fed60-82e7-4f2d-9fcf-bdac1ac01de1",
        "cursor": {
          "ref": "16470390-7581-4480-8231-76d3e14be3d4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7f5e66d8-0ab0-46f5-84bb-0aebf51a7895"
        },
        "item": {
          "id": "199fed60-82e7-4f2d-9fcf-bdac1ac01de1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2417e876-66cc-4cd4-8858-8140cefb50e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5ce9fe-ea4e-459c-bbc9-0baaf6e88a18",
        "cursor": {
          "ref": "471377b9-804f-4234-b31d-566d2cd12dce",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bf2ef46a-80cf-4c45-b342-f783835e82b0"
        },
        "item": {
          "id": "df5ce9fe-ea4e-459c-bbc9-0baaf6e88a18",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fb082c64-e31a-4a65-96f2-a66bb71e5992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef437176-78aa-4232-a36c-a28b79315dc5",
        "cursor": {
          "ref": "17a3eb93-a4ac-4970-942e-ba93b9b17027",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ac38cadf-ac8f-4730-921d-8aef741b4666"
        },
        "item": {
          "id": "ef437176-78aa-4232-a36c-a28b79315dc5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ad21a637-82cd-497d-a5c8-95c19871c8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9549ba7-0e45-46dc-b607-bbead90f6986",
        "cursor": {
          "ref": "74b00f1b-1f50-4435-953e-2759a1c793f1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aad45526-026b-43e2-a68c-7b109c58d238"
        },
        "item": {
          "id": "b9549ba7-0e45-46dc-b607-bbead90f6986",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "317c6c50-c1b7-472b-ae02-70318a515a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbab5365-9b45-41df-b306-e275b51f3fc8",
        "cursor": {
          "ref": "c0abad98-812b-4428-98b8-30dc5b647291",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "16dd0583-dd85-490c-8d87-8fbf9c58abf3"
        },
        "item": {
          "id": "bbab5365-9b45-41df-b306-e275b51f3fc8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dfdb265f-a47a-429b-829e-0d2314cd9c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80203a0-eac3-4b50-b3d6-74f1743805b4",
        "cursor": {
          "ref": "08fdd119-eb91-4e9d-a3de-f1fda4f433ae",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b6ce4852-6148-46ca-8edc-2703b56fbcc6"
        },
        "item": {
          "id": "d80203a0-eac3-4b50-b3d6-74f1743805b4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5e7c87d5-7c55-405a-924d-c0ef3ae00082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4da062-afd1-4ee8-bc7c-170c4aa599f3",
        "cursor": {
          "ref": "680a5ae3-da26-4fd8-b7ed-3528b5d94777",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "33253a35-16b2-4480-b586-e32d588d3c21"
        },
        "item": {
          "id": "5b4da062-afd1-4ee8-bc7c-170c4aa599f3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e6a51b62-22f6-4b6c-a410-e8edafefab17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4342ce03-7d59-448d-a36d-b8a5071e7e53",
        "cursor": {
          "ref": "66c44ad1-2c3f-4a34-a22d-5e7ea9527828",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cc6be6ed-3776-4f17-9570-fddab8a9d762"
        },
        "item": {
          "id": "4342ce03-7d59-448d-a36d-b8a5071e7e53",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8de176a9-f09d-4061-9735-612bb8c5ef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1d9e08-ea13-4e70-a050-fec5ea420d2f",
        "cursor": {
          "ref": "076c1c80-3191-47a1-91b5-8463dc682c23",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7162ddfa-5d92-4a83-85bb-2ccd73554b6d"
        },
        "item": {
          "id": "3c1d9e08-ea13-4e70-a050-fec5ea420d2f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "da3515be-ff4c-4862-96ea-3fb8ac7d7b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3ea9a8-6bb3-444a-ab9d-c22adb42b013",
        "cursor": {
          "ref": "904dafc9-37fa-49e4-b39f-48aa025f4336",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ec6c54fc-b301-4401-b9e9-5ed4311e06c5"
        },
        "item": {
          "id": "7f3ea9a8-6bb3-444a-ab9d-c22adb42b013",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1cccb430-e885-421f-bf0d-194fa717550d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baffe5e9-f31f-4a9a-ab15-f24f100f74c5",
        "cursor": {
          "ref": "ce8c7b73-e6be-4338-b325-c30fdf59cfe2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ebba782b-9dc3-48c5-898e-ac2032c19031"
        },
        "item": {
          "id": "baffe5e9-f31f-4a9a-ab15-f24f100f74c5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6ec38f1c-4470-4bba-bcd2-20212cf09de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c73dfe-0473-4752-92df-c4870c4c9cf4",
        "cursor": {
          "ref": "cd0501f2-73ed-4ead-a12a-6d86a69ec190",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb51e02b-96ef-48d8-adec-e1be3e49cacd"
        },
        "item": {
          "id": "51c73dfe-0473-4752-92df-c4870c4c9cf4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8cc49200-1603-4abb-b0dd-a90f700f4446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32956940-055f-4dee-a0dc-851801ec2621",
        "cursor": {
          "ref": "8fe29aba-b361-4aef-ad5a-5337b322bb87",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cdeda7ad-4303-4d5a-b90d-34c99720a84e"
        },
        "item": {
          "id": "32956940-055f-4dee-a0dc-851801ec2621",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cfae0c68-ee9c-4e8c-8fc9-bc95086763ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0300e5a0-92f2-4dd3-a3d7-e6407d488887",
        "cursor": {
          "ref": "dc892352-1584-4a81-842c-438cd7091e89",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "91d49d2a-64b5-46a4-9f25-8e0a7a914ebb"
        },
        "item": {
          "id": "0300e5a0-92f2-4dd3-a3d7-e6407d488887",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "522f40de-4ac4-4c9b-8043-cac423d98368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aca3b3-826f-44bc-a41d-f9fa28d40c10",
        "cursor": {
          "ref": "f75e93dd-3cba-4c1c-93ca-152e05a2cebb",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "10042597-b8ac-445d-9c05-8caf437a7f70"
        },
        "item": {
          "id": "c9aca3b3-826f-44bc-a41d-f9fa28d40c10",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "31227ceb-a123-4d59-9341-8135a6c93f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c43ade5-0d4c-4044-83cb-a2142ab05863",
        "cursor": {
          "ref": "71adef05-9fa7-4f04-8f52-1b1153f3ef31",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "980ebe5b-f1ae-40c5-95aa-25eedeca3ccb"
        },
        "item": {
          "id": "1c43ade5-0d4c-4044-83cb-a2142ab05863",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "35707c54-2329-4f74-9970-219441729af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad48a66-f754-4d99-a9d6-7d80bf6c70f6",
        "cursor": {
          "ref": "9f455395-462b-47f2-a015-1a89de47f174",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7cda66d1-2f1c-4f3e-9247-4f9de48d6e5f"
        },
        "item": {
          "id": "4ad48a66-f754-4d99-a9d6-7d80bf6c70f6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f771a1db-ba26-4038-a405-e7e0c59bc208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83356a0-d442-4b3c-944e-d9dfe55b2b67",
        "cursor": {
          "ref": "ec784115-d496-4a1e-8e2e-02c23a8345ca",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4414bee0-5e0b-441b-96e8-d84068034733"
        },
        "item": {
          "id": "b83356a0-d442-4b3c-944e-d9dfe55b2b67",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3a5e5c41-0bb2-4bad-a988-57597fa4d8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43aa5bb-b2df-45e5-b54a-602fddc8273d",
        "cursor": {
          "ref": "e9e360c4-7a7e-4c55-a3d4-7d398e82147b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d6353adb-4939-414a-af5f-94aec131418f"
        },
        "item": {
          "id": "f43aa5bb-b2df-45e5-b54a-602fddc8273d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2a81c168-45bc-4d09-a9d6-d191c42fe180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ff0f1a-9202-48aa-ba7a-1bfe0497b576",
        "cursor": {
          "ref": "6eb55b00-3e1f-4b99-b97a-aec51f20a16c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "34afc668-41b2-4757-a7e3-2b0b3582520d"
        },
        "item": {
          "id": "06ff0f1a-9202-48aa-ba7a-1bfe0497b576",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "656c3e67-9feb-40b9-9479-c278ea0b765f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba3b97d-00ac-4002-bb4f-b95ec04bc300",
        "cursor": {
          "ref": "2d9cfcd7-17d5-4d59-a11e-065fda4d3682",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b4c84521-8267-4a34-85da-8cd3b1805812"
        },
        "item": {
          "id": "9ba3b97d-00ac-4002-bb4f-b95ec04bc300",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "77e359a1-1539-49c9-bf92-ab964fc0c15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1352c2dd-6b38-4257-b4e5-32a9828cf083",
        "cursor": {
          "ref": "3562b82d-8261-4009-b71c-0483c0d8d010",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c272821a-0b5f-47f9-a2a6-1ceabfb063d4"
        },
        "item": {
          "id": "1352c2dd-6b38-4257-b4e5-32a9828cf083",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "67d4de54-4f6e-46c6-9311-18c659e4d857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fe9a3c-ca87-4b11-804d-2b2b977f9e5e",
        "cursor": {
          "ref": "34ff212e-d68e-4eb1-bb57-96c41e1c1398",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dca4bcb5-f2b7-4a69-a2a1-3feae73f69eb"
        },
        "item": {
          "id": "b3fe9a3c-ca87-4b11-804d-2b2b977f9e5e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "017bc12e-e0e0-4f78-9484-0b0a46b735ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8ad843-afd5-4224-a8ca-7f2019e2a7d3",
        "cursor": {
          "ref": "8a37c531-9d73-4562-9fee-3c899879fa47",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "71435fbe-a04c-4eab-877c-a86815877e19"
        },
        "item": {
          "id": "5f8ad843-afd5-4224-a8ca-7f2019e2a7d3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1c4c696c-c95a-4dcb-a1e6-0eee30699650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2c3280-ac5e-4285-ae4a-07d8d2989744",
        "cursor": {
          "ref": "08fe7f69-ba46-4a22-b74b-e683732ad74e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a1737e21-3c2c-425f-be48-c37a329121f3"
        },
        "item": {
          "id": "cd2c3280-ac5e-4285-ae4a-07d8d2989744",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5be2babb-4451-43ee-a46b-f02805299560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f051ae7-1cac-4465-a30c-4fa651ce2da0",
        "cursor": {
          "ref": "142d9c09-f965-45f1-8f30-9f5306f1e907",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f5e0503d-8d5f-48ae-b4f5-7e79f9c5d3cb"
        },
        "item": {
          "id": "3f051ae7-1cac-4465-a30c-4fa651ce2da0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0b5668c5-d0cf-43ee-8c92-b080861b9357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb68a9b-339f-4d50-8c05-ccbdf3dc8599",
        "cursor": {
          "ref": "6706bdf8-19db-477f-8880-4af05336bcab",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2b319db2-742a-4eb8-a0cd-329986511c9a"
        },
        "item": {
          "id": "2eb68a9b-339f-4d50-8c05-ccbdf3dc8599",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "abd33701-fa78-4cce-bf8a-4c936e3c4d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a48861a-d6e8-4f52-9c3f-b8fc0816d971",
        "cursor": {
          "ref": "1e535436-5e88-47c2-a5ab-ad9b4a77dc73",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f14b5237-d152-4959-afa1-9fdbbc4967ea"
        },
        "item": {
          "id": "1a48861a-d6e8-4f52-9c3f-b8fc0816d971",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fa62a777-9225-41c1-b8e6-1fb70c4b255c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381f0654-ec46-4fc6-94be-4074dc9614f2",
        "cursor": {
          "ref": "b2d99a46-08a9-4280-bf2a-b867a4d45a81",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ccd48abb-58d6-4d93-9b6f-bfaf7664b12f"
        },
        "item": {
          "id": "381f0654-ec46-4fc6-94be-4074dc9614f2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a480d3bd-25ec-4105-b930-65ea6d873432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c118f0c-afc0-4104-a5fd-8b51af485564",
        "cursor": {
          "ref": "a59d090d-9c6e-4c2d-97c5-5e0dcc3dd381",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e00eb7c4-fa85-495f-b211-c0c065c7fb75"
        },
        "item": {
          "id": "5c118f0c-afc0-4104-a5fd-8b51af485564",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6afc0783-eaf2-48cd-822e-fedf52e54f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336ec0c7-b176-4ded-baeb-315650b4bf3c",
        "cursor": {
          "ref": "fe9a88b4-04b9-4b0f-8c5f-9e477a3af3d4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b8ea4909-c4fb-440f-902f-785cb7c0c7e4"
        },
        "item": {
          "id": "336ec0c7-b176-4ded-baeb-315650b4bf3c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "082c9751-1f34-49c3-bf99-4389cf52ab3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b95ab9-0488-4f8a-a0ad-f3c57c236dcd",
        "cursor": {
          "ref": "dcab51d7-e80d-4d83-8c34-b8420706abe7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "932fd23d-ea77-49bf-a655-be379a94208b"
        },
        "item": {
          "id": "a8b95ab9-0488-4f8a-a0ad-f3c57c236dcd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "168edf5c-0e91-4698-b565-6a0c0c9467c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f4bf78-9fe4-4728-8b98-4240c8f6da77",
        "cursor": {
          "ref": "2615d9d5-21f8-4994-905a-bdaebf4b135d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "42ca3b14-ad6f-49fa-bfc4-999210ed4980"
        },
        "item": {
          "id": "61f4bf78-9fe4-4728-8b98-4240c8f6da77",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "159ffcb3-d052-4e15-8422-050246f6d80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816312d7-46f0-4a36-ad7d-d4daa18cf487",
        "cursor": {
          "ref": "41922ce6-d303-4262-8033-97307b5a984f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d59fd80b-7d00-42fd-8e7f-b59258555119"
        },
        "item": {
          "id": "816312d7-46f0-4a36-ad7d-d4daa18cf487",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "29256dc1-a72b-4161-97c6-14b1a05429fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cba88c4-1529-42ca-978d-49339b5a59c0",
        "cursor": {
          "ref": "1cd68b01-be09-406d-abd9-7354b0834da6",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "64626368-6580-40c2-8b5d-9cb54e60d9c6"
        },
        "item": {
          "id": "3cba88c4-1529-42ca-978d-49339b5a59c0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "76a9fa8e-3773-4a22-ac91-24f09d278bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f64e43b-8416-469b-a080-abfbb0f2428f",
        "cursor": {
          "ref": "42898b2e-9f82-4454-9f1f-9e7a6fe3013a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "954ec34a-cdcc-4120-98c8-1a7a132aa99e"
        },
        "item": {
          "id": "0f64e43b-8416-469b-a080-abfbb0f2428f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9460cd11-de77-430c-8451-a581bf0a7e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aa28cb-d686-4b77-9c83-934d56687510",
        "cursor": {
          "ref": "a3a91e55-da4c-46a6-a09f-d0b5c2bed379",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c486c6d7-ca85-4d49-b07f-4491918d5111"
        },
        "item": {
          "id": "c6aa28cb-d686-4b77-9c83-934d56687510",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a5c79311-e855-46c7-b5d1-d690adda396d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e95988-e425-4231-9458-c627de15df57",
        "cursor": {
          "ref": "9ce08105-cf61-4dfe-bf68-749ef7f66a9b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ccf14e98-06fe-449e-903e-6f13d007aebe"
        },
        "item": {
          "id": "31e95988-e425-4231-9458-c627de15df57",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a819645d-e35a-440f-ab5b-bb859bce5665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abbe2ed-2e4e-4eae-b537-5f984bfd8c78",
        "cursor": {
          "ref": "633779cb-2886-428f-bcb4-589f1d54f8b1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f9b21333-30bb-42c1-a139-41c235481708"
        },
        "item": {
          "id": "3abbe2ed-2e4e-4eae-b537-5f984bfd8c78",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8902132e-316c-4a46-ac56-df883597e063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a401da-492e-4ecc-b6f6-9f347ece1769",
        "cursor": {
          "ref": "9c9142ce-8ed3-4e68-b335-c7dac4a9bc98",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9a084d72-891e-411d-b2ee-943b52ab0512"
        },
        "item": {
          "id": "c8a401da-492e-4ecc-b6f6-9f347ece1769",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e2a58af4-e840-4b83-9398-26e465678aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb37fd3d-73ac-4353-902c-f06738c02e9f",
        "cursor": {
          "ref": "8ea18f89-9435-49d8-87a8-a278e09e6f35",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "919c80ed-8ca5-4e3f-a6a5-30e9356acfd8"
        },
        "item": {
          "id": "cb37fd3d-73ac-4353-902c-f06738c02e9f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c34684b9-2a9f-4f1b-ba2a-148488113e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d148c14-91eb-4731-8a62-f5c7d63fdc75",
        "cursor": {
          "ref": "ebaf4f60-5310-47cc-bcdb-0b0fa25e9e8a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "58071989-8155-4639-885e-6471906458de"
        },
        "item": {
          "id": "9d148c14-91eb-4731-8a62-f5c7d63fdc75",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "591ac6c7-f6c8-44f8-8778-b10a6986efcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f599d75-1cea-484e-8257-3e18595f35e2",
        "cursor": {
          "ref": "9b3627bc-5868-4ee7-a542-07597a2775f8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "89d4da7e-742e-4c3b-8031-5e94256bc72a"
        },
        "item": {
          "id": "1f599d75-1cea-484e-8257-3e18595f35e2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f26fdd50-e2a9-4d56-b9f6-ba03891edcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04334ed3-5a98-4067-af72-accf918779eb",
        "cursor": {
          "ref": "5b416810-30c1-400d-a820-81538fa1a89e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f1b1c98b-e922-4c57-ae0c-9c4dc7f25da5"
        },
        "item": {
          "id": "04334ed3-5a98-4067-af72-accf918779eb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4bb33ba2-3e20-4960-b2e8-b30231b6fa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cc2f37-51a7-47cf-bb67-6959204411c4",
        "cursor": {
          "ref": "9a61ff70-afc3-4956-a8ad-69c83e3dd37c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "384e1c4a-d618-4d6c-a807-754cfbd5e7b7"
        },
        "item": {
          "id": "a3cc2f37-51a7-47cf-bb67-6959204411c4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "53039d89-f108-4018-9c6c-109b20998f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cecbf4-ed5a-4bf2-8272-a0f8b2e2b209",
        "cursor": {
          "ref": "626fbf5a-ffbd-4667-a19f-6a9cbb8b303d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f896748c-1d6e-4d3a-a0bb-961d1b0372c2"
        },
        "item": {
          "id": "73cecbf4-ed5a-4bf2-8272-a0f8b2e2b209",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a5c8d8d1-a26d-4239-975e-0074c19f8a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70423c8-292b-4c49-96b2-5c026f400723",
        "cursor": {
          "ref": "3a137af5-d733-4944-88d5-9ace4c4a34b3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "72d409fc-6f3a-4440-8ba6-185ffab649ea"
        },
        "item": {
          "id": "a70423c8-292b-4c49-96b2-5c026f400723",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "460127cb-ea43-4c93-8c89-c9e72ecc8ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0a4b38-3149-408a-a237-e8c3c099332f",
        "cursor": {
          "ref": "8ecd00d3-871a-41eb-a3be-3c71ba90428a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5bce3b9c-d4d0-4e5d-bc9f-dad61783f90b"
        },
        "item": {
          "id": "8a0a4b38-3149-408a-a237-e8c3c099332f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f8878094-a09c-497a-b7be-b5596791df74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e4e76e-469f-409f-8861-8a297d64f238",
        "cursor": {
          "ref": "dddda994-0fa1-4471-bddc-242b31d4003a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "007fa949-6790-4da2-95d4-0d2d7583d8fb"
        },
        "item": {
          "id": "e8e4e76e-469f-409f-8861-8a297d64f238",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d7948e8e-a395-4b33-a892-e2a03e8a8c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b832ce-aa19-407e-86d4-b94dde87dd7a",
        "cursor": {
          "ref": "1756c65e-b48e-4234-a671-3262433e1ea0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3afd2a39-9216-4973-bad5-4940a3b8c95c"
        },
        "item": {
          "id": "e3b832ce-aa19-407e-86d4-b94dde87dd7a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b6ee1534-ae82-438b-b2a4-11f6d113628c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6242fb74-5d44-483c-b8b7-6c109d7c0ed6",
        "cursor": {
          "ref": "2f028907-7086-4ace-bc62-256bb2efb51f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8e9ac386-ed41-48cb-8e57-0ac821772529"
        },
        "item": {
          "id": "6242fb74-5d44-483c-b8b7-6c109d7c0ed6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3769100f-de60-44f7-b839-df703c51270d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85276360-9f63-4aa3-96a2-95f154b654c6",
        "cursor": {
          "ref": "2e150732-8bb7-481b-9878-2176178aab3b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b80f2630-76e0-41e9-ab59-6345827d7c02"
        },
        "item": {
          "id": "85276360-9f63-4aa3-96a2-95f154b654c6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e7c2b257-a09d-4be2-ba3f-62df4ff6c088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d81fd41-083e-4f48-bbac-fa7ec1e6d65b",
        "cursor": {
          "ref": "efa07e52-bb3b-48cf-b4cd-60fc68ff15a1",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "884e90dc-5157-4bf0-bdd2-431ee67e5f41"
        },
        "item": {
          "id": "1d81fd41-083e-4f48-bbac-fa7ec1e6d65b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4cca9545-47bf-46ce-a8d4-ebcee6de3782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502aefb4-98c4-4654-9f77-e56e330dceae",
        "cursor": {
          "ref": "e0091f85-0a51-4f8e-b528-87fd5a396501",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "94c22407-1eba-449f-81c6-bf8860eb5893"
        },
        "item": {
          "id": "502aefb4-98c4-4654-9f77-e56e330dceae",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "75e0f4bf-b705-4331-be6a-6de50fa4c81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3112ad2-83b3-4e69-8774-88b19f199e72",
        "cursor": {
          "ref": "c12c95e8-6a2b-4013-b781-4b081b237f10",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f4e8f940-8479-4607-aa8f-fce75447a005"
        },
        "item": {
          "id": "b3112ad2-83b3-4e69-8774-88b19f199e72",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a0183c82-6040-4145-bd74-01dd8bb70511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53484e2c-5900-4fcf-b1d0-324786244ff0",
        "cursor": {
          "ref": "39c12645-bb11-48f6-871c-e872988bc494",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "28b6effb-cf32-4810-a511-acc33df94598"
        },
        "item": {
          "id": "53484e2c-5900-4fcf-b1d0-324786244ff0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "eed585d4-4b2d-4252-a292-209215e1c417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa54d3bf-04a7-4fbc-98ac-eac28461e9ea",
        "cursor": {
          "ref": "2fbe5fd1-8a2f-4576-afee-408cb88d8ff6",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2b697353-b8e5-4774-bc96-3dfaa0692344"
        },
        "item": {
          "id": "aa54d3bf-04a7-4fbc-98ac-eac28461e9ea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8171629f-505b-4169-ba73-efbece8f6335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c20d8e8-63f2-4618-bbb8-a22701b5efc0",
        "cursor": {
          "ref": "a0624c70-ea4e-40c4-804d-99ca1dd0338d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f6f4ae64-d50f-4fac-b05d-36d7a68f473f"
        },
        "item": {
          "id": "3c20d8e8-63f2-4618-bbb8-a22701b5efc0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fb2df037-d628-44e9-89fb-48bd0b2ecec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f0d97-e353-4578-883d-8ced298a4e4c",
        "cursor": {
          "ref": "b37e332b-6883-49a5-b14d-e34de41ef80d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ec3fee12-5506-434c-adf8-d17660ebe515"
        },
        "item": {
          "id": "602f0d97-e353-4578-883d-8ced298a4e4c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f87c0558-c048-4cf4-88e5-cc4186425a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c775d3d6-1c29-4764-b882-4422b06c3f6e",
        "cursor": {
          "ref": "449ff380-5bf0-4b87-b800-c7289351e16e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "697b20a9-ebb7-49d7-9bb4-01f4e817ed94"
        },
        "item": {
          "id": "c775d3d6-1c29-4764-b882-4422b06c3f6e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "720c9ade-1e41-41fe-9e18-39faa93760bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a134560d-3fe0-4dd9-a871-b80c01b08a83",
        "cursor": {
          "ref": "be76fa71-ec95-4d72-8a3c-27fbe14c79a1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e4a87eca-0d7b-4d02-acf2-8e5e8fcf73df"
        },
        "item": {
          "id": "a134560d-3fe0-4dd9-a871-b80c01b08a83",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b118365b-4c82-4ee6-b727-95934b666820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4afa970-78e7-4016-8c7b-092d7538980b",
        "cursor": {
          "ref": "ca25dcc5-af1d-4bab-b49e-67c37416abad",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f43f917f-3d9e-47d3-b476-478f3bc37d0e"
        },
        "item": {
          "id": "e4afa970-78e7-4016-8c7b-092d7538980b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fc12a43b-c8e8-49cc-b777-a4b9d7e64266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b182ca-1765-4034-877a-395a3e5df2c8",
        "cursor": {
          "ref": "33c31b8f-2a87-4087-8dcd-ce455cadf7a8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e5b83649-83c9-4446-88e0-fbb2f1dab1a8"
        },
        "item": {
          "id": "48b182ca-1765-4034-877a-395a3e5df2c8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3aa8a343-a31a-4bb4-84ec-b9e512c75e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768534f7-1965-4fe9-a06a-23cc5c269c72",
        "cursor": {
          "ref": "8c34ff0d-f284-42f1-bd04-4cbc07530526",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a12b956d-58db-4cd2-8992-180b1e42dc8d"
        },
        "item": {
          "id": "768534f7-1965-4fe9-a06a-23cc5c269c72",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "19bd4378-4111-41aa-9ac8-91cd1bce9270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed41d67c-a2fa-46d9-967f-a31de6f28307",
        "cursor": {
          "ref": "dd57e69a-f928-4396-b0bb-424736fd5c69",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "911fa135-4169-400c-8b53-1b5fa1774bd7"
        },
        "item": {
          "id": "ed41d67c-a2fa-46d9-967f-a31de6f28307",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7de4491a-9121-4e38-8031-ed6f21241e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2846d1-48fa-42ae-9caf-123597ceff88",
        "cursor": {
          "ref": "9ddc38a4-486d-4bd8-b875-5f923350db21",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f94d5ec7-7083-48ba-ae3e-4ed7c6c0767d"
        },
        "item": {
          "id": "6d2846d1-48fa-42ae-9caf-123597ceff88",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1a505a15-f373-43d9-b635-2ce37cb7e413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c78053-4d7f-4e04-b47b-5abbd06f74d8",
        "cursor": {
          "ref": "e0e5266a-9333-4a85-98c3-23da43c3fef6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fa822e4f-9ff7-4f16-913a-175632e676b7"
        },
        "item": {
          "id": "74c78053-4d7f-4e04-b47b-5abbd06f74d8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fc3eaec8-bf8e-486d-bdc7-f7a17be303dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df549315-a81f-43af-80aa-f45623280d3d",
        "cursor": {
          "ref": "5df79858-42c1-4afc-9830-7ac2eb3bf916",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bb6bb5ff-b3df-4a80-b75b-a2caeea68fc7"
        },
        "item": {
          "id": "df549315-a81f-43af-80aa-f45623280d3d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b2d262a8-509b-452e-997e-0798241703aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ab5513-14f3-447b-944c-8145d5f588d9",
        "cursor": {
          "ref": "097f1cab-ce5d-4b19-890a-8c52e24a6cb2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "506a3554-5c54-42b5-a1a2-a3f75dd0e220"
        },
        "item": {
          "id": "97ab5513-14f3-447b-944c-8145d5f588d9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5285f2b0-b4bc-48f3-b6c0-2c0c5ac0475c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945c5772-a702-4aea-a4c5-fd8b1f191741",
        "cursor": {
          "ref": "2aa83f63-f359-44c5-abce-91726f7f5f55",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c369925e-4aa8-4472-8241-b150ae55d08a"
        },
        "item": {
          "id": "945c5772-a702-4aea-a4c5-fd8b1f191741",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "21eed57c-780b-4e3a-87c0-5b8bd4023cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18ec16f-7aab-445c-a032-7fc9b53e317e",
        "cursor": {
          "ref": "f8aa77c6-566a-4aa7-86ff-02a8bb7f0ff9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "661f48d9-177e-40dc-86c0-436c0f0a22f1"
        },
        "item": {
          "id": "e18ec16f-7aab-445c-a032-7fc9b53e317e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9b15a8c0-8285-40ba-89ed-4ed62d8fef79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22db9460-8f7d-4711-bdb2-0229ec024f79",
        "cursor": {
          "ref": "1aa0b10e-4ab1-485a-8d28-ca0cf32abcd3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5faac3b4-f77c-422e-a5f8-6be30fb238da"
        },
        "item": {
          "id": "22db9460-8f7d-4711-bdb2-0229ec024f79",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "33cc81c0-de73-4e4e-9245-3f3b9e35c596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d3ed41-5220-4de9-b61f-9480427ecde3",
        "cursor": {
          "ref": "c8573358-2666-42b3-aa6c-71db142ed166",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ad67ad90-4a5d-4150-9a10-10e37c53b217"
        },
        "item": {
          "id": "f1d3ed41-5220-4de9-b61f-9480427ecde3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ddc62f75-05a0-42e7-abf5-ca5f33b73679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8813b6d3-2830-459a-b6ce-e9d2c705916c",
        "cursor": {
          "ref": "3c74e302-d76f-4fa3-8c37-d426c1b08932",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f132c659-65e0-4695-a957-3f9177185029"
        },
        "item": {
          "id": "8813b6d3-2830-459a-b6ce-e9d2c705916c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6931fe12-2f81-47f5-a393-fb6d4b83864a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8032ebb8-8c82-464d-835b-e70b32003fc4",
        "cursor": {
          "ref": "99b5852d-dc91-4676-84fb-cf71ef3f3533",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4481aa84-dd1b-41cc-a56d-d78c7da40d68"
        },
        "item": {
          "id": "8032ebb8-8c82-464d-835b-e70b32003fc4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "237af365-dd93-400e-b730-4ab69d51c0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f02922b-2b97-4a6a-b977-0a0f54c4455c",
        "cursor": {
          "ref": "e0dab366-d62e-49cd-840d-821daca555fc",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cbae66c9-8d81-40c1-ac76-ee24e3ac66b3"
        },
        "item": {
          "id": "5f02922b-2b97-4a6a-b977-0a0f54c4455c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f28b120f-f59d-4182-8089-d4511f6f44ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef18ef24-ff4b-49fd-8895-cea26453c15f",
        "cursor": {
          "ref": "ec23549d-73d9-4b97-8447-f4e3c2a8dbb5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "01f7e21e-e94e-4367-8a23-7e11d1b6e62d"
        },
        "item": {
          "id": "ef18ef24-ff4b-49fd-8895-cea26453c15f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5ccca69b-8066-4700-84e9-9fd11f8084b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a7767e-0b87-48e0-897d-d5c000488260",
        "cursor": {
          "ref": "5696e8ec-2d3b-4e9a-b8aa-5a718d05deda",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3e3fc81b-e1d9-4af5-977f-aec33d809adf"
        },
        "item": {
          "id": "06a7767e-0b87-48e0-897d-d5c000488260",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c7f57aea-b9fc-4c19-a811-b8a1b0b44f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e9d38d-855f-4ea8-b204-be248cca44b3",
        "cursor": {
          "ref": "d33baa73-5f8f-49db-9aa3-f8deeac3392a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "adb9a249-ee75-4ac2-84f6-89977228ff3d"
        },
        "item": {
          "id": "75e9d38d-855f-4ea8-b204-be248cca44b3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bb8ac156-3df1-4b97-b5d0-98c867d5ebe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b74a75e-57f2-4c32-b86f-bfecef856ab1",
        "cursor": {
          "ref": "aa3ff64e-9053-43a6-ba52-5429f32ced96",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8f3a954d-8533-4bd6-8d97-94b7be9c40aa"
        },
        "item": {
          "id": "1b74a75e-57f2-4c32-b86f-bfecef856ab1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0dbc76e8-230e-41d4-8e7c-160938b9eabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2026784-8ca6-4ee1-9045-78dddc65b033",
        "cursor": {
          "ref": "076e7bf9-f72f-4399-8590-0580c97fd8d6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "55ddbe62-ddb5-4944-b64c-67e482893ba0"
        },
        "item": {
          "id": "c2026784-8ca6-4ee1-9045-78dddc65b033",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1f430b00-a30d-4bfb-a753-f1aaaff334e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ab6d6c-6346-4946-83f6-0b335262e898",
        "cursor": {
          "ref": "1f54941e-f914-48a0-aac3-bb6ce0c43792",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dc46188f-fb6d-454c-a716-be91c4a44a7a"
        },
        "item": {
          "id": "f8ab6d6c-6346-4946-83f6-0b335262e898",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7dce05f6-8653-430a-8e15-d7fdaa4eb417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12d7252-fbac-4b1c-b414-4405a105dba9",
        "cursor": {
          "ref": "5c54a4f5-42f0-4ec1-95c4-eb393c74ca35",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6dc21a12-bbec-4825-8c76-fdc5654e479f"
        },
        "item": {
          "id": "a12d7252-fbac-4b1c-b414-4405a105dba9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "67dc9f0c-91f0-43f3-bd54-ba13bb310a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce0c09d-882d-475c-b679-2ecc51ca7926",
        "cursor": {
          "ref": "e89a28b4-fc68-4745-a7ea-cb2fc26d4c91",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "04b7fbdd-ebd2-460f-beb4-2078e8c7c499"
        },
        "item": {
          "id": "7ce0c09d-882d-475c-b679-2ecc51ca7926",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ff87e6a3-aeb7-4f7b-8d4d-f8524a000150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bbd98f-6d96-4ee1-bdfa-1a5b61bf8633",
        "cursor": {
          "ref": "5878aadb-9054-4d82-94ff-2b1f799ad75a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9de6695b-4749-4a8f-9504-6846de4451a8"
        },
        "item": {
          "id": "f1bbd98f-6d96-4ee1-bdfa-1a5b61bf8633",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "03243d3a-c24f-4fc9-859e-42d4f8ed48e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b7b770-2c32-4106-b4b0-73f26a3d21b1",
        "cursor": {
          "ref": "cf483357-b37c-46e5-9b28-2adeb388434e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ff67cbf6-f49a-45c7-87ac-cc4dacb01fd0"
        },
        "item": {
          "id": "67b7b770-2c32-4106-b4b0-73f26a3d21b1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5698f2e3-20fc-4892-8638-7a773fd73537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc66e477-3c3a-4347-b30b-6bb5035b19ea",
        "cursor": {
          "ref": "c2b39c2e-2744-4b84-b787-1caf4a02f8af",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5f370520-97d4-4e04-9f77-dd3b94edff79"
        },
        "item": {
          "id": "fc66e477-3c3a-4347-b30b-6bb5035b19ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c7795120-e1c8-4406-acf4-ab51dfc85b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266963fa-eb94-43a0-be3e-14429ae8ff09",
        "cursor": {
          "ref": "596c9018-e5e5-4244-b1ab-3251ab7b1b32",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "482f70d3-a076-4461-a584-db316aaaf0be"
        },
        "item": {
          "id": "266963fa-eb94-43a0-be3e-14429ae8ff09",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "adbec7d6-dccc-41e5-81ba-35b77e98d089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d6eb95-c48b-4cd9-a4e2-45e92f9d818a",
        "cursor": {
          "ref": "e74d01f1-69c6-4e1a-aa83-7ed9e4d61e24",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0297f037-0368-4b7e-9e5a-590ffba1452f"
        },
        "item": {
          "id": "b8d6eb95-c48b-4cd9-a4e2-45e92f9d818a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eb2215a5-ded0-4f7f-8fe6-c0cf73fc453d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcd839c-33e1-4c7d-8f4d-59bcfa31a3fc",
        "cursor": {
          "ref": "6727d84d-d845-48e4-9a43-29aeec2ffcc2",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d7395d9e-ce6c-4050-a32c-0b4ced479ea8"
        },
        "item": {
          "id": "5dcd839c-33e1-4c7d-8f4d-59bcfa31a3fc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3a9c0aa2-1ef2-4642-b9ca-9823647be35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0f44f0-f103-4799-b8c3-b97c0060ae3f",
        "cursor": {
          "ref": "e09b5fc0-d559-4afe-86fa-f1005024b991",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "317e99ca-a257-48df-b66b-c4c933b2b7c8"
        },
        "item": {
          "id": "7c0f44f0-f103-4799-b8c3-b97c0060ae3f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2d4946c9-0f0c-4b89-bac7-dd3a43696b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55df813a-b2a3-4f19-b20e-dcf0f2208c63",
        "cursor": {
          "ref": "87b3dfa5-37e1-428b-b9aa-85428767c97a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bc481d5a-e7ea-4c3a-8feb-7efa52f3c248"
        },
        "item": {
          "id": "55df813a-b2a3-4f19-b20e-dcf0f2208c63",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b833232e-e7b6-4bae-b8d9-65fe30b751cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca47d62-a33a-44f3-a6b6-e331643ac85c",
        "cursor": {
          "ref": "267c7479-5748-4e90-a58a-7733b9f01bcd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ab3996f7-d5ce-4a86-a713-29a16dd4d235"
        },
        "item": {
          "id": "5ca47d62-a33a-44f3-a6b6-e331643ac85c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "85156ed1-f627-4b04-a14b-629e8d5a9814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0719c0b-9a4f-46b9-8d6f-0edcf258896e",
        "cursor": {
          "ref": "a2b9c356-f32d-48b4-83b2-f538128f21e4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5f4bbe29-b6b6-4387-ac14-611f38c40f9f"
        },
        "item": {
          "id": "e0719c0b-9a4f-46b9-8d6f-0edcf258896e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6cdd8585-00ff-4c85-9dc2-978eb44fc8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d57b5b9-0f8a-40bf-8711-62ee2c321422",
        "cursor": {
          "ref": "37f77803-8833-41f8-bc36-0bd3ee578f7c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ed73b1ab-30d0-454d-b09d-81041f6d2686"
        },
        "item": {
          "id": "4d57b5b9-0f8a-40bf-8711-62ee2c321422",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4fd4690e-9dda-4d35-af8c-f66fc2f50358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d58081f-6233-4f3d-89c9-1df1ba7dd627",
        "cursor": {
          "ref": "a726c2fb-55fc-4214-b3eb-f73ec820ec2a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b5618f04-4a07-401d-9727-6569ec32ac22"
        },
        "item": {
          "id": "2d58081f-6233-4f3d-89c9-1df1ba7dd627",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "65ad1eef-6af6-45ed-856e-0885da529c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816dcc11-100c-47ff-a700-6a52c095e440",
        "cursor": {
          "ref": "8c3eacfc-05b8-4bd0-a398-ed86fcbbe95d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "417183a4-0e62-48a9-8a07-a8712a9f1ed5"
        },
        "item": {
          "id": "816dcc11-100c-47ff-a700-6a52c095e440",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "06289595-31e0-49ea-babf-e5d4934aef5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae710959-2848-4335-8140-a94670b968c6",
        "cursor": {
          "ref": "20afb215-b186-47bf-81a2-5f588400e9d2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "aa8d8095-8b79-4e63-9801-730c12ece3c9"
        },
        "item": {
          "id": "ae710959-2848-4335-8140-a94670b968c6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b82df1b7-567c-425f-b6bd-6cedbe99ddf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b89dee-a6a2-4212-9d45-3bdd8a7de521",
        "cursor": {
          "ref": "97cf421d-ae36-401c-9c26-374a1ca488f6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aa3e0105-f122-449c-be83-0d9445ae8782"
        },
        "item": {
          "id": "32b89dee-a6a2-4212-9d45-3bdd8a7de521",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c80ad526-f4f7-4b3c-bfbf-bd5fa4e1168f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fd8bac-526b-474e-8b71-99aa1489a30c",
        "cursor": {
          "ref": "3026e544-318a-4e36-a281-02ca80bee02c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8d20988b-c3de-49ab-a767-336117d363eb"
        },
        "item": {
          "id": "16fd8bac-526b-474e-8b71-99aa1489a30c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cb30e68e-59de-4053-b0be-f4c0d1b8875d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17bed0a-6150-4512-a542-f31d97c41316",
        "cursor": {
          "ref": "baf8de76-9424-4377-ad34-e4f38d661d07",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "931ab475-55fc-482f-b208-bf5edeec9b4b"
        },
        "item": {
          "id": "f17bed0a-6150-4512-a542-f31d97c41316",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6a397e0b-0334-41c0-ba06-e8f2ba98827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab915ec-f181-4b1a-8fb4-c0d0049ad7b0",
        "cursor": {
          "ref": "f51fc2e1-1f03-49b3-a35e-9aa4bdab139f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "18d4cfd6-7030-4738-9a5b-19bd856a9f2b"
        },
        "item": {
          "id": "7ab915ec-f181-4b1a-8fb4-c0d0049ad7b0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "123988cb-eb47-47df-b6ea-619515e258f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa51dbc4-63ff-4066-b5e0-bc2df7de7c90",
        "cursor": {
          "ref": "9b437f92-13e8-4a34-a032-0708f75812c2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a8a736af-278a-48a6-b22f-d4ca1965f5fc"
        },
        "item": {
          "id": "fa51dbc4-63ff-4066-b5e0-bc2df7de7c90",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "26990ab0-9390-4953-b49e-6be9116fb0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f778ff-4587-4673-ab17-823bf022a9ec",
        "cursor": {
          "ref": "2f5e8f75-e91d-4841-80a1-cf44f9bfc090",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dd998022-e980-4821-8839-57d7991962ec"
        },
        "item": {
          "id": "59f778ff-4587-4673-ab17-823bf022a9ec",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "08163e67-78a7-4125-890a-c489ef889b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5b9327-551e-4dbe-a633-5043a52a8f8d",
        "cursor": {
          "ref": "ca68c411-c3ab-4e78-bebf-71b9d25e707d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cb0ecc1e-bc97-419c-80a1-495ba362cf04"
        },
        "item": {
          "id": "9b5b9327-551e-4dbe-a633-5043a52a8f8d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dda8a4a6-e89f-4582-929a-5ac2f7f419c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae0f882-af7f-4a70-9687-fd4baec89bfd",
        "cursor": {
          "ref": "2e898fd7-353b-41a0-9627-5030047d234d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "348ee0b8-cc85-4357-84df-42e4306ad133"
        },
        "item": {
          "id": "9ae0f882-af7f-4a70-9687-fd4baec89bfd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9873795c-e53e-4b9a-925c-646503d47504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3c5d64-9085-40cb-9128-9acfd3cb803d",
        "cursor": {
          "ref": "af1fb35b-eb5f-4c7a-bde5-3815ea0a11a3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "60783a77-b09a-473f-995e-f50efbc60faf"
        },
        "item": {
          "id": "8a3c5d64-9085-40cb-9128-9acfd3cb803d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "24f0a5c4-bc4e-4fb6-ad03-8f4fdeb91bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7445b421-8bf0-4476-9d09-25c2978ad9a9",
        "cursor": {
          "ref": "4ac2e6df-75cc-4b10-909e-a613c0d5bcc1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "073b48cc-a4e1-42a7-a89a-4e6eff7172db"
        },
        "item": {
          "id": "7445b421-8bf0-4476-9d09-25c2978ad9a9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5741991a-22c6-41ec-95c5-696fe1b0a96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c019a481-fb25-47e7-8ebd-7bfe1fe843fe",
        "cursor": {
          "ref": "f3896b5f-c9c8-4470-b8fe-b743dde5de78",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7e15276e-5e26-4bd4-83ca-556520633a0b"
        },
        "item": {
          "id": "c019a481-fb25-47e7-8ebd-7bfe1fe843fe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d95a5d14-0e5d-4704-8d50-cdc1a61a6331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc403049-45c8-4596-a9fc-2878cf530aed",
        "cursor": {
          "ref": "d42bed15-52fa-437c-b211-ab7da2a25c0d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fa6ae6a0-a661-4dae-8a99-be80eba5ff08"
        },
        "item": {
          "id": "cc403049-45c8-4596-a9fc-2878cf530aed",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fa830f28-16c3-43e2-9138-c1f40eb39c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca538ac-f36f-47b4-93c0-8f97f4368415",
        "cursor": {
          "ref": "971c7674-48de-4c84-bd05-d630e0b665d3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c94c42b0-58e5-4987-9b84-0d8c70b240fa"
        },
        "item": {
          "id": "8ca538ac-f36f-47b4-93c0-8f97f4368415",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "82f3ecbd-19c9-4aeb-b5ca-2956bcec4684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb26ad3-c348-43d1-9141-af66276bc351",
        "cursor": {
          "ref": "b542166c-3b7d-456c-9410-c0d8b32bdb18",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "67d73e52-460f-4f83-95a5-fae8da0c2bda"
        },
        "item": {
          "id": "efb26ad3-c348-43d1-9141-af66276bc351",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1aa05b16-3557-42f8-9785-63a86c216842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61927457-c443-491a-8a88-b8cab508c7df",
        "cursor": {
          "ref": "ffd33d7e-1a20-4fbe-9d12-7e9790cb2669",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5878c233-c04a-412e-8025-1ca3ea158f92"
        },
        "item": {
          "id": "61927457-c443-491a-8a88-b8cab508c7df",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5c522b52-612c-44cc-b57a-7fe4699b3207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dcb67a-abe4-44e5-afa6-93b029f549ab",
        "cursor": {
          "ref": "1d73f1e7-f494-4888-960a-8428483b2338",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a6b5816f-6164-476d-886d-091405948255"
        },
        "item": {
          "id": "82dcb67a-abe4-44e5-afa6-93b029f549ab",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6ff93428-adb7-4202-8c85-2343c6118ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cd1b4b-28d0-45e4-a642-933a4dbe149d",
        "cursor": {
          "ref": "d32fb3ce-7700-4cd9-9f68-da7cb218282f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b59405f3-84de-4a3a-bc3c-33065d82bbd0"
        },
        "item": {
          "id": "a5cd1b4b-28d0-45e4-a642-933a4dbe149d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "95b57a9e-86ed-4b81-9a72-51ae9aae6c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4393485c-041c-4d1a-89fa-5cc7464fcd0c",
        "cursor": {
          "ref": "03066609-0a65-44db-8798-a5917efd4a11",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be466493-e719-40fd-ba94-d3d604246a57"
        },
        "item": {
          "id": "4393485c-041c-4d1a-89fa-5cc7464fcd0c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "155af865-c629-4b67-b106-3a801de0a97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae71d60-3250-4d9b-8e32-fdea9f36a382",
        "cursor": {
          "ref": "008dfbb1-3dfd-45bb-9021-fa62b980137c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9040e284-ca86-4b13-a61b-c1710197220a"
        },
        "item": {
          "id": "dae71d60-3250-4d9b-8e32-fdea9f36a382",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "06ee6b65-1523-4323-a09b-ce7ca3ffd568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb01291-7ba9-4abb-91ca-8a31e69ff1d6",
        "cursor": {
          "ref": "0f29cd3e-f8cb-4024-984c-22c61e36c649",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "15d02d90-d33f-45e2-8af5-76742e3395fe"
        },
        "item": {
          "id": "8bb01291-7ba9-4abb-91ca-8a31e69ff1d6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "be2a756f-ccab-402f-a6a2-6359570631f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b7383f-edb4-4d2e-a39f-c2e2e435d21c",
        "cursor": {
          "ref": "b904a4d9-5aba-4ea8-abf7-608df337bde9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3b7682b4-d356-49f7-92f9-bf26415a7341"
        },
        "item": {
          "id": "33b7383f-edb4-4d2e-a39f-c2e2e435d21c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fea40a46-45c9-4447-a3f4-ef65504f8b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbf89ad-a6a8-4dfe-902f-4c5847f09d00",
        "cursor": {
          "ref": "cff7c182-6fc2-4237-82b4-90457d57c443",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ec6846b8-1e62-4884-8bb3-a24fb8fba086"
        },
        "item": {
          "id": "1fbf89ad-a6a8-4dfe-902f-4c5847f09d00",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "33ace168-4bf0-437c-b229-40afcf951144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749f7c1f-2997-4b3b-85c6-7dc0714807cb",
        "cursor": {
          "ref": "41ba1fdc-09ea-4c2a-9d01-b2eda01226f2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cb0d6dea-f53a-4b18-b842-917b92751c4c"
        },
        "item": {
          "id": "749f7c1f-2997-4b3b-85c6-7dc0714807cb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "447cdf0d-b070-4d9e-adcc-21e85d68b8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57162e76-52b9-4627-8e6f-d6fe5fb7d447",
        "cursor": {
          "ref": "26290643-a5c4-49b9-ab12-24b11915854d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ab052973-0337-4c18-b651-ac29ffd18db6"
        },
        "item": {
          "id": "57162e76-52b9-4627-8e6f-d6fe5fb7d447",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "be952ca9-fdb4-41a6-ad65-b66da2ed497a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "4cdb7079-8746-47c7-9a0d-ccffafe66353",
        "cursor": {
          "ref": "6fa09e25-f0a4-4853-b5d9-6ceda619c319",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f5d38cbf-de9c-4bf8-8d23-f89fc4bac3c6"
        },
        "item": {
          "id": "4cdb7079-8746-47c7-9a0d-ccffafe66353",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7acbfce5-0298-4527-9ea1-eb77e8eb6aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "7cd24c49-6070-4f04-8dc4-02ef5407e476",
        "cursor": {
          "ref": "39ccb984-d44f-4db9-8ade-bfd8df314e88",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "82d9baa7-ed02-499b-92c7-9180dbb98991"
        },
        "item": {
          "id": "7cd24c49-6070-4f04-8dc4-02ef5407e476",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4461af28-0337-4fdb-ade5-38812f25a63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "0f41a550-37c7-4d5c-ae73-c9128dd33004",
        "cursor": {
          "ref": "431a99c6-327f-40bb-8576-619cb7151745",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bb40199b-bb72-4a58-bcc6-960b31c6e399"
        },
        "item": {
          "id": "0f41a550-37c7-4d5c-ae73-c9128dd33004",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c3c659d1-7901-4a4e-aa1c-33771b3c4f82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f41a550-37c7-4d5c-ae73-c9128dd33004",
        "cursor": {
          "ref": "431a99c6-327f-40bb-8576-619cb7151745",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bb40199b-bb72-4a58-bcc6-960b31c6e399"
        },
        "item": {
          "id": "0f41a550-37c7-4d5c-ae73-c9128dd33004",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c3c659d1-7901-4a4e-aa1c-33771b3c4f82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8215a0bc-b9c2-4597-b192-39e100596a19",
        "cursor": {
          "ref": "4cdbd468-9df5-44d0-897e-bffc54367bdc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "40eb0538-0f09-4af3-9ccf-7737152bf498"
        },
        "item": {
          "id": "8215a0bc-b9c2-4597-b192-39e100596a19",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f2c366ab-8d21-4f75-bd1c-f763e9c186be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b08718-e502-4661-a802-a28770d8aaa8",
        "cursor": {
          "ref": "41c78ab9-2446-43f7-abe2-81854dfe8183",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "70b59df9-e0ba-4414-b3c3-c729d991b5ed"
        },
        "item": {
          "id": "d7b08718-e502-4661-a802-a28770d8aaa8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "39c4d3e6-ddc5-485e-8e80-3932c5d87837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}