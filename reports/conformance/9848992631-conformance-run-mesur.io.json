{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ae08f268-1af0-4852-9a99-469c6882faf4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7cda6fed-87a3-49ef-9a1e-fff1c8a9a717",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a78cc7fd-3897-4141-9df4-86ca4963e315",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aab9a995-e051-499c-a7d1-75e14b075a53"
                }
              }
            ]
          },
          {
            "id": "fd9ed501-309e-4f82-b009-072d82b031e3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b288040-3dc3-4ff0-8de7-d9cd775629d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84888b7c-fb84-4702-b5cf-76e711784f24"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "28b7ccf2-a826-49a3-b517-623f08314d54",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0f5f5cc2-27e5-4ab2-a59a-78b6898cfa09",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0726fdbd-28a8-43be-aaad-ad723f5ea692",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41711bcf-ea85-4745-8770-931ff7d33db7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79bac688-422f-49a6-8a51-502afe8d4246"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc806ff3-ada3-40ad-9cdc-f088c3393efb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72823a85-4f3f-4888-9c56-d3769c41a733"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "942cbb90-6795-42e5-9607-86007f35b4a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34d73470-28fa-481f-933d-b07e0b748555"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0507a2b-19af-4666-900a-4bbded683ada",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1d4c7a79-eca8-472a-818a-a314021267b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c11d7618-7673-4799-af80-6f569baf6e4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "945213d5-b4a2-475c-928c-75465b55d38f"
            }
          }
        ]
      },
      {
        "id": "f7890e15-2fd9-4b95-bd9a-7568b033b989",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d4d62ab2-888e-4f67-917a-17e7f2891ca2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bc66b38-36e7-4b1f-9586-3ac04cb351bd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d883b19-d218-4b47-8c96-2efa4c6696c9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c52f24e-4e8e-4ecb-ae10-8895c6b94ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b56ed5c-549c-4ca1-88f3-5fb9a9f17563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2add753e-6f12-4ce1-adb9-7f28a58a485e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e35b95-480b-4f72-a358-7c1e10dc5a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e681e002-5934-4153-a862-64d601bea200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cd0276-10a8-47c5-9383-299f255477ef",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df1869b-c353-4b45-b682-3c07880ebb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0efe1099-e880-4241-8fc6-1915b079346d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "251c5bf9-e8dc-4c72-b4c9-256bec15b73c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bb6d2ae-4025-4461-ab2d-1f8a57719c76",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aa32cf-4f42-4466-b7d0-0404c1eaf57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6063aaf9-db21-4202-9fc5-0c43769e1b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8a2a8f-69f6-4126-9b57-3a3878027d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9a8ce9-f361-4e3f-a537-f1848ef30a43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8787fe78-04c6-4cfc-8597-71fd26614e6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56f01613-36e4-4fe0-8c78-7d667b38aec5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d47f4c-f9f2-47f1-b294-d53c75550a0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a7662cf0-a768-428d-a8de-1ea78b583724"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ca5d52c-95cc-4f1f-8bf9-1e4c4bad6130",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d1e002fb-5f50-4462-bd8a-7e5ddafe9043"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "423f2640-ba4b-4ab5-9dd1-8ad3bbacbdab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef060f3b-84a0-4ab4-ac3a-90c3f8ee5189"
            }
          }
        ]
      },
      {
        "id": "79736a21-1d2c-4894-87f0-575cc2dc1f66",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "96fc7e31-df19-49a4-bb90-fbcbd7edb2c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eeb04ef5-f37e-4bed-bdfe-c66d815b73ad",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c4cd29a0-4a3b-47c0-8595-d5e4a65a2119",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad85b8c-eb67-479a-828e-11f3e580913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba953aa-33d8-40a3-ab16-00fccc00d282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba86ffd-f76c-4426-8feb-83e51333dc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4421c495-e0cc-4b95-9d3e-516227727e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0823fc6c-b92e-4ca8-bb5b-97da4ec4d5b4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f562f5f6-0c56-4639-b741-1339bf5913cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385d7f53-77fc-4069-838e-edaf3d6f5d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2b1237-14c1-4da6-97ff-fcb03dc14b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736b4722-02a7-4ebc-836d-648f652a48b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50063285-7045-4264-9f76-1866b147c17d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1245a0-746f-41fb-9e5d-b4004b34d4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a5a31f-7c06-4eb5-9651-69fbf74e5c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d8544a-0846-4cb4-838d-15523f23ad57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd6a57dc-75eb-4cd2-b45d-c5170a4facdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be171a4-d59d-40cc-b387-407683529f48",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29504182-4fde-42a6-9d66-eed7f7d0ad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7626dee0-b145-4c2d-ab9b-23215ddb4187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd22a39-d799-4e4d-8ad5-37acbc63d3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "917ecb4c-8435-471a-9b8e-00ba811e08ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750758b7-9e49-49d7-b917-389ffbd7302b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eede352-d096-44f8-b6b2-a17ba1a19393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d799a76f-e954-4f7e-af2c-27559f6e4470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40400bd9-fa92-45f7-8ab8-371782998e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc664a1-52b0-4fa6-b91c-0b22902c42cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202681df-2160-4519-8b53-4d9701faecff",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3810381-903e-4ffc-8e51-b35e1b8bbbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3a2479-3995-4222-a325-ba7e4ac6e148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee86737-6476-4000-8eeb-c113238c33c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "962126f8-2cc8-4db4-af68-43cf7126b3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e6a3bc-70f9-480e-a56f-bfed29371b72",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4146136b-8939-413a-a8d9-c36ce97f7574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168d3bb7-0ce3-44d0-b1c2-2e5c791274ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bafd6e-62c9-499c-82df-e05946cbc5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfaea68b-f7c0-4ed4-bca2-0b91417fe2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3507463c-820f-495f-9559-247aab9091da",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1386100-6764-4dba-b7dc-4c7d315550ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d456da6-6981-40d0-bae1-edf29357c8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963b4ef3-92e7-4c19-93c0-4589ae128e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "802dd2aa-e1b6-4c78-ba12-ff505b19a91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c22e7d2-b66b-4a50-a5d0-978a36e56124",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390b4a82-c355-4587-bde7-18dc86b37938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c5b1d6-7756-4d32-b1af-ae0ff1ac4f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4094f6a2-59d3-4064-b569-c64baf05aa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af7a298f-2f0e-4cad-86a7-bcce818a931e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e32fb-2840-4cce-8184-62248b9db97a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1675c0-0a04-44b1-9046-e3f98fc1ca5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92ef10e-240f-4227-a6d2-35092a78b34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de0db06-d10c-4990-8fa7-b76d30f94cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7574f4f1-4d2f-42e3-b24f-56eee4a69415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0d73ee-77d2-4fbd-87d2-71c54162e9af",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666d029a-1932-4cb5-8393-e2bb6b1fbbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aee0f75-011c-40e5-9772-f2ae2c9cfc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0c6ec2-99c1-4da1-ab28-7ef57dfd5350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f38e8aa1-30b6-4791-a9e7-e24dbac4e7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d1d714-2bd2-4bf4-9120-ca2af6e94530",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9a146c-a59a-400d-af60-e8d873ebe1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea9829c-7576-4013-9072-67f68371a1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bf56aa-e7fa-4929-8906-86d364938863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8511b677-0f21-4314-8ff9-68baf8d921ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7580d2a-45d5-47a5-a8ae-f2f217627a89",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836de80e-5427-4ba0-b434-7491f28ae13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a4c1a9-b2f5-4c5a-85a9-414c1642f0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26dd8b0-e339-4770-b1f4-a9ad52d8d855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7005bb3-34db-432f-b6f6-a830ba3b140c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f957282-dced-4fb2-a70b-0aa079d9fde1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb740666-c010-4ef3-8382-719bc5022453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acecc13b-828b-4499-83f8-aaf745114506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a371d28b-ff77-4259-8aac-a16e8e4493bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54d6ea07-f690-4570-94a4-5776c777d0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bb3d3e-5911-4cdd-8021-b7c1b1233519",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601f790a-0847-4444-ab6a-095e2b631209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313f70d5-cc5b-4712-bb66-b0a2022a0160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e16f4dd-f753-400c-97bf-9422796ae139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e20f8b7b-bdbf-4142-bbc4-054cd57bcd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f167ab-5d9a-491e-93c2-0aa0ba682291",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad5fc28-aa23-4117-a474-cebf3ba7d652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bb138c-5db2-4cf3-98ce-d770efb36545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa98549-efd1-47e4-a2fa-8667ecb4741c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d570cf9d-802d-4d18-903d-da2064b1a070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dd4741-8307-45d6-8a39-8dd9b5a1889f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cf0796-ddef-4434-b64a-ff3cd66992ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f94511-fd1c-44b5-9bde-e2d800bc19c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da849bc-9c86-45d2-a86a-cbccce4d9465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4c9a1f6-fa42-408e-a5fc-60c050b8198a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2752810-a110-4213-9613-7c28bb2c9402",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c7e1c6-15f3-4de8-9a67-af4521ea9052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab376e1f-94b4-44c6-b8cb-241bcf1eb76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9af42ee-6b4f-477f-bdba-3393d27fbd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43533918-5b48-4f9d-8afa-8e429c29d568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d13f36-1abb-4467-a819-03d2041934f5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053ed93b-f30c-47ac-bc97-baea0cebe44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7839c204-5329-42a0-99e2-5c26479decc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbe55ac-aa5d-4b75-a529-18047dbb0ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65b9a695-57af-4e9e-86dd-445b88b6619a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df62cdc0-b11c-4a21-996b-c54b60140793",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba03b19-3e9c-48cf-959e-a6b9a64fba57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee97ae22-2d51-4f9b-8cf1-db1bcfdd63f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bfb5cc-ccd6-41cd-a7cb-e4b888b21bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b047830d-b5fd-4c47-9253-867afa3821b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24fd81e-0cb9-4e9b-a2e6-262f89dd7c3d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64edbb2e-5997-47cf-a3e7-707b91b1f65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad81628-0a8e-45b9-9fa2-e6208e2c1f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be54131-69e5-4dbb-9392-fcd1dff67ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c46686-0367-4bb5-b543-08ac6a21ddc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82164012-95a6-463a-b7c2-d840b14fa212",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f0c037-e02e-419b-8e92-859df12ac89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0450cf1d-f32e-4d2b-a2c6-c386ec78dc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312a2c5a-e569-495e-996d-691a3bb8dcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf6b168-b5c0-4b95-920a-55d6a8d0f58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54e20f4-5200-4200-af6d-aa87e4dae771",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4562bdbd-7523-4771-8aff-db2fa82544f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845442a3-c442-4bcd-ab74-30eed5cdd800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411cc78b-4246-4972-8f04-c9592062a4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3405b1da-01fd-4e4e-9ee1-2605de970532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d11853b-f0f8-422f-9fdc-0327ba079a66",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a987448a-35de-4d28-a3f1-a6cae58801b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7e028d-04ce-4d42-88e6-33adbe272e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffec4e5d-a018-4bcc-aae3-69ebfa0d0a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d345376e-b5d4-4f2e-92e4-8be5292783bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5fcd13-4887-43b3-90a4-f9620f8249e2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b96364-7258-4efd-8e2f-d1403481395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dbdcdc-2a8c-4bf4-beb9-e1f83a7b3a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9ff308-41ff-4fcc-82da-8145c50e4294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb722670-3cff-4de0-ad94-65088f2e7bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a224aaf3-7bf1-4692-92ab-4c8474c593f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79f034c-782f-4439-ac19-6b1efded2be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087163a9-da9b-4677-9e24-5989eb14db70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0727c0-7f43-41d1-b9b7-e467a9c004dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "984a3a22-e35f-4ec7-86df-7508d63782a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61c37e7-0ac5-42e8-8219-e1ff3174599b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949c345b-fe84-4ced-9d23-12823ed9423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb864614-03f4-44be-aa8b-2219e30d3ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cffaa2d-9a8d-44c8-b4ca-82582617322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eeb98f2-9010-4771-90b5-da2bba9d4f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1c1c4e-5c53-475a-b4b9-99e141e4111a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d613456f-9f18-4534-b44d-184ecd5e4065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fcc92d-de3c-415e-9978-2d7b6627efdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7398a2b2-64a4-40b6-9793-13173cf7c639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b19831-1859-401d-af0c-623b42f4dcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aecd5a6-5cb8-432f-8879-332c83b139c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed302179-6e6f-497c-8441-2284a19a42e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5876ce7-88c4-4d80-a886-8f815066df4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef7c2fd-7f68-4194-a81f-8c55389eb219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66058aad-12c1-49b2-b32b-b9605546d0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06839433-e260-44c6-86a5-4d15aff37625",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5352d2-b452-4382-b55e-9492453446ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e27710-ea23-4714-84f8-a088daa59095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febef5da-7716-4268-b832-753900456bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "618a37c9-9589-4094-bbef-c206733b5051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06872311-195c-40a0-86bf-7f60e9748380",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2154d711-04ec-4e49-ba06-969264f58bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caa888c-9ba8-4b33-8a1e-5b620186b3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4516bd20-b015-41fa-93d5-9764e3b49f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2250fd82-9962-4526-b295-fd2e2dab5aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ad141e-f178-436e-8234-78c9725305e6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21479b7-3a1e-4f7f-a382-1da75ec92f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0fbed3-6bf5-4a97-9ade-09c65678b09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f4496a-e5f7-4c79-b4d1-0cf281888728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac984e31-0b6e-455b-9953-68f7715e5e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2544a1-1fba-43e8-bfbc-48b4be88d7fb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f4e246-9cd7-40c1-8a83-e5dce9a5637d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0e7a39-6a17-4f94-a328-cb500f6442ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a9b6f9-1a7e-4d16-ae1a-865183967651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb6cdc5-7c16-49f3-98a8-f0b0a859d312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941ccd45-5ffe-44c2-8cac-cd793dafa8e2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb83e939-6ea7-4f48-bc3b-03c7fef2ba2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a677c6-9737-461f-8e94-e0fbd4ea31cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e21be5-9323-4863-9558-37af618f3676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cde6e59-3b2a-4706-9b91-4bb1882f100f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bb9487-febf-4b28-9034-f32e91f22d10",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7362aa-95c5-4d5d-9758-2e8d70a3eefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1526c707-8127-445f-be76-bc6084417e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a7bca6-1d91-4421-8af5-80c389ae6020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ac06083a-7c8a-4d40-97b3-49769ba7201a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91491b8-300f-4b27-8ef6-bf126e644f21",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb16d7a3-63f1-4b76-92ce-f8a406c7cb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "591fcb62-612d-4c80-992f-ff3127ad380f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9fd029-ce03-418c-af27-a5e2edd849df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0452d677-7c05-48a0-ab2e-34da97e030aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4f5fe8-a765-405e-98bc-a7343efac66e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89e6053-2562-452e-b2ed-b153eff5593c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d24dc2-1d2d-4574-87a8-052c973dc17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ea9150-4408-4260-8257-298e8b52b6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb044ac8-cac7-461f-bab4-72e400f2797a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3531dd11-3016-4fd7-a191-1d7e711d0983",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13188e55-316f-4281-9422-5d66e2b1c0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba745754-a421-4ab9-ba58-3ef4b3c27f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaee9618-687e-4268-ab26-833935dad592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d349d64f-f93d-4282-8a31-76830768be0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c91dda2-d98d-48b7-86df-77b6784a7d78",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f71ee15-1766-403a-9bc4-ac43da0cb666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34076c0-e995-4894-8b45-73eb39c86915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31ea736-16f3-4939-a8ba-b2565d9edfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "372ccbbe-d378-4a7f-8cbb-dd206974b2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0375c5-ac9b-451e-909d-1b5aacd1f25c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e830262-de9b-4169-84dd-86ff63877eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbdf4be-d0d2-410d-a869-2fdc9f68bff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13d58bd-feb8-4bce-96d3-86da08a07ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "74142565-d6d1-4345-84e6-f0e12a040712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b988d704-593b-4d08-a8ea-9bb3235458ea",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec16e196-4ca0-49ff-a908-f620e2b24475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d06389-dded-4122-842a-90f0a17c5846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786bb1a9-3937-451c-a1fc-990f2571a36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c479499a-90ba-4ddc-b0a3-e8c0993e23af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e841d1f-aecf-4e22-87ff-5e53667d081e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ef05d4-2aa1-46ba-b8fc-8b026b1b8ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b9c0b4-66a5-49f4-9cb7-9d1ef80fef8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e4373a-bdf0-40bd-8baa-37953b682fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "84c9da31-e2b9-45ce-a3ee-dd31c277f9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6289bdda-cd53-4679-afcf-95b74302ce4c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c04c0c4-9cd5-41c7-8d8a-5a0d8defe219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d53c64-919b-48ae-bffb-fd9b70b29597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7402ab-d939-4082-9653-8ad1b5b24e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b538a79-3928-4928-a2aa-f88f586d8152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e806c8-e133-40ac-b758-473d22b183b2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f112ba2-1622-4b5f-9747-51f0615c93d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4baa6b-bde0-4817-a6b8-1d73c744b45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fc8160-7076-411e-be12-a2f83bc0603d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0508916-d288-4449-9c5e-f5d62a45db15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89924135-e277-447e-b1ab-58c911a80a4b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de20f6c-fa5b-4f31-8606-100149970a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a03439-b761-4db4-8ccd-8a43e5a1c821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8135b5-d111-4817-9c4c-dc849970e7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dcce84-6a88-495c-94dc-7959db3c7f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98553299-c742-4c3f-b41d-c27141d7600d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfde436-f955-4941-8fe6-4db8b041437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfed273-aa7b-4e9e-80ea-1d7d23be25f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426f7060-524a-4e83-8b42-fc06b6a9d1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ac52df-9517-44da-a6be-6c34fe481657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7990eeeb-644e-4320-bc21-00554d30bb90",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542d93da-0120-4a05-b092-eabc74217afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557a58ef-c5b9-45bc-8348-dacaf91ee2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984f7455-e16b-4553-b049-413038d7cfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a6fba4-691d-4eaf-8905-406871944edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357d005e-8171-4ea5-aba0-52fc539a2a7c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62983997-0c42-43de-890f-110b91aa5601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5441404c-fa1b-480c-96bd-0a9c276fa76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3db31ea-08ab-481a-87cb-98b59ec8afbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38dd9f8b-2e07-474c-a823-bfcb95a03bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1183c457-1b49-4419-98d5-a2f12211bcc7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77986190-ede3-4258-9fc6-5cec9fe365ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637d7df9-4cb5-4285-b80b-052649266346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b4a177-7af6-4900-aa23-de1d7e3ef08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "463ed8c2-c196-430c-a467-2f8f87f3e455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f187a6ca-a955-4e11-82dc-80d46f70e3cf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e5de4f-eb20-4e71-9c6f-763b81db6eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d57c8d-94a2-4df5-8e9a-09b7f9d00337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e346694-5f39-40fb-a760-5e7283632ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6582fdc6-ee7a-4d37-a77e-5ceebccf148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a014257d-adb0-42d5-83cb-b48ab3fd0578",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c0f44f-fff3-4989-9657-8bf3ac647137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b0c3e4-b33b-4424-b417-f42ec5e81d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f86ffa4-bd44-489a-9dea-fda0cc08383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3b0c77-4d4a-4662-b5d3-2e085d4c0c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283e95f4-75c5-4d49-851d-2b22afa9b8de",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b02b08-a363-4b94-89d4-30d2a8f1135a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8626a06d-3c22-4f55-8c0f-feb6a657a9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc9c8cf-ce82-4acc-ad4e-c608aaa83a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e8c7c3-d211-410c-ae39-3981593cf58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7fabb8-3a53-42ed-8085-91c68646f89f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d79085c-f5d1-43e0-bedf-b5da04f39144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db3d9dc-83f3-42ec-a97e-dd4ab4cc0706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e0e085-aed4-4d33-999b-f115380ecb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53754cab-3a74-4b97-9e57-0bf5f27a1e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0695808d-bd55-4461-b490-2c83314b7747",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62545966-3ba1-4534-ae56-d1f64ab51775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20daffef-df5f-42bf-976c-7e113bf145f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b815a9bb-d7c2-4125-9399-5dc9ddf9d8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c7e01f-4d7a-467c-ac02-b9ad82bfe89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58393ee-2122-42cc-a212-73e12f862546",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efa2fd1-595f-422c-99a2-4b68a6e98193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66450715-ec8c-42f7-9296-cbad2ade3bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a35953c-2237-44a6-b316-12951bfe7ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0280b8-1058-4f50-b207-e71ff5fd8524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c632e1-3063-4249-b994-2a7c3857c201",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bede2c1-b7ad-4536-99c1-50eaca4e0126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c75a9d7-a7bf-4775-bd5a-66ca0c19e959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9022c449-125d-4d7a-a19b-17f2d6560ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f430565f-850a-481d-ba17-f71f60ee4fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89431020-6adb-4463-b165-dcbd9a4cd64a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c9c22c-f0fe-4771-941b-fb6168c8bc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2444edd0-f5e2-4b9a-ada2-22eb1696ca10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56612dd6-8688-4365-91ef-06ffc8caf686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "02b7a539-8cf8-4bd4-a565-4df9d94b0ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0397de-9f16-4446-95f4-c8debaefcc7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d7ae3d-648a-46dc-aabf-b0641b62c117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e344b78-1eb0-418f-862e-73a9f79c5d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42b9dbb-e53d-49c1-92c6-0fa7c79bafa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df21c81-fd00-44d5-82a8-1fcf89c4b2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c63d07-d4a3-457a-853d-5558eade0bad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999e3509-f027-49f3-bc16-ba73a1b2bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b9d3f4-c867-4a36-b0b2-1158bc293c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33aa6631-7d84-4fa8-907a-a69a05bbb0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc397078-3e6d-4bf5-9657-86cc6cfc981f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea653e7-e84f-48b7-9512-8a931b63f1d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca38680c-26d0-4f31-b2a5-f1dfb5fb1b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6042d613-62bc-48ee-82ff-bf355594c920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64c12c9-154e-4bca-aff5-37d9ea5c2ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a380f683-0699-446f-a8a8-a9b820c9b100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a2f185-548a-45cf-8cc7-eb23c412f347",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644c6d06-f498-4952-9c5c-954cb3c3c6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49683563-435f-4948-83c9-1f1b9f3b55e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7138aade-5ead-48bd-a6e3-f83acdc32eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a09ef9c0-e96d-4536-aa6c-6e5b53095798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13138b0d-a3a8-461b-a791-666c94b6e35b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc3bf3-e992-4d93-a59e-7733465409e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d999472-26cf-4927-8e35-a2e06f131f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e25b65-9ed1-4815-8e77-dd9a8c36be70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "43abab3a-2eed-405f-8d2c-4dd630d7d793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a7378a-2422-4079-8ad8-6816ff8aece6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6408c4a-b4f9-47b3-8cf7-1dfc5dafe8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f94621-d16d-4a06-a69b-2f1d20944556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22476fd-5c36-441a-9f5a-b6b3e91489a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac4e649-525f-41cb-bf7c-cf0b6daecdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c625069d-891c-4ecc-945e-03f8e8cadf5e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685b8cfe-9b2d-4a13-8213-32719ed2fab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7ba23a-3e62-47a8-a836-131eacd9a48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d44ebd-b5c6-4f23-877f-3477b30f1940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca3edbf-c70e-45ca-9a6f-7f5dd12b5534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cd4fb9-3f81-4a85-87f1-b19cccce7ae4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df0da90-aa63-48e6-ac4c-99f38c920284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49b1790-2a97-44dc-9fba-1f6c0df758f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22254bf2-dcaf-4677-a389-7ae34f9c9a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2e08ea-cf59-4b05-ae1e-82c26d5b5e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f761f967-8c6f-439d-aa1d-e45021da62ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d08cb47-97c7-4d83-b1ad-e5768d7478de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79640279-81b1-444f-8036-d8f6225e4f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbfa200-f969-40b2-aad4-ce815db9df24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "713e7cca-e4fc-4689-9fe3-033340403d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210b4ebf-21cb-4d77-a7d4-6702b73bf64d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a50834a-7fee-49ed-8835-e44a17c4a5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e011232-af4c-42d9-87ae-f88de06c8d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1923dcaa-b26e-4927-82b1-72164dce0be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35b01c31-d930-49d5-b48a-809f6f699209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240e9fe6-27ef-42f1-895e-74f9b8c73ed3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b643271-6db4-432e-9b83-d7c6d75a5c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd31e14-8deb-4b24-bf03-2931e073b7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d700db2b-e268-43cf-822b-36d63022cb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8da5267f-4018-4f3d-b77a-3c36cb09dec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c7d167-e19a-47d5-be07-13ab9bec597a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf2a68e-1a96-45d1-a446-05ad5e27b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e9fcd4-0178-4f32-b918-82a00319b35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93cce71-8b80-49b3-9d3e-12646b803307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf3932b-81af-4955-a11b-b7321463655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680673e0-ba9a-41b3-834e-65ab7f3ca528",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a05433-3815-4eba-8384-c71eb9f2555e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e36f6fb-790c-4671-ab44-29583e3f9d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea6e4e1-42e4-4b6e-be6e-c86c44602596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "572aa841-fda0-4ef7-9283-8dd52099f667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b596104-3faf-46b0-a728-a656363b76b2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1736d703-d1ac-4990-b902-317b71f5e561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4111c1cc-6bd5-4fd0-a43f-bb110d2e5a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab2f10e-0f58-4d03-8dfe-a018069e8f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7caf2a-44cb-4fe4-a281-a088d069a1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee8e15f-26f8-4a87-b7ca-29d7f8eb0282",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fbb3cc-1996-47dd-a489-49638d5911c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3627525c-636c-4dfb-bbe6-f52ac804fcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bccff6-eefc-4486-9448-a7a752403fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c21167bd-5818-4c53-813c-bfab5126fd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee284e7d-7100-493f-8142-ea750596bc10",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69606db-9c34-42fd-a0c0-658b69b1438e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76085519-ac95-4c3a-a53e-031fe7fa89c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafa38a9-0301-4f60-ac19-9b2616154e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37c08549-2cde-48af-b344-3b2017cd90a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b07655f-bc24-4713-bd49-4ee8c7d7579e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0243d0c-b80c-45c2-8340-6d982cc78a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87da628-521a-43e0-9c20-04ff5edfda2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2d4c51-4451-4780-9d41-daa1265150cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df57582b-98f4-4f3d-ba78-51918a85e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb2afdd-fac3-4832-8672-e1190abd47af",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ddf2b8-a896-41e7-8334-7b4b52d83be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0db9b4-248a-41fe-ba5e-c78a0fb7d22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb119fd5-7ea2-4afa-a4c8-a516bf35bacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67297d6d-5c8d-4f9b-b013-7aba6fc5a7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3f13be-aa6d-47c0-a6c5-24746f5f4ece",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2d44e7-6304-4955-9e67-989cf4955ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb46daa8-7087-438c-940a-1903a893d92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf2fc77-3ee7-4d60-a65a-7f9228996c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a880475-7c7a-4b27-bef9-1c66d5526fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b1d190-75ba-4ff5-af04-9c3f58227157",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70569eba-e6df-48f3-9648-553f2424d8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952c99dd-a9ce-4651-80fa-6e3b203be088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221a7bfe-1e4c-4eaf-a4a1-e24fca3a2bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e564f1-6dff-4276-bcb0-a7954ce1f067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32347234-dcb2-4b5b-97bc-a3df685eb720",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab906a1f-4e3d-4072-9a93-e7735c099e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751b1722-5cc2-4a37-9abe-60395ba4a786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec595a54-9971-4f2a-bd30-b6c7f298707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2c485f-3e88-424e-96e6-e9b85e5e480a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d7455d-dccd-4d49-be9c-47f95fd6943c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea31dad9-636c-47c6-bb07-3a0c67e6a6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917216c7-7f09-452d-876c-6464dc7e16d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812aaed0-5961-413c-9286-9bf2e4bdaa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a28649-c4a2-4b8f-99cb-15694f06c774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39ee903-3575-43cb-be66-06f4fdcfc3e4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46c0978-eae4-44ff-95bb-df385449b82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3fa7ba-9245-45c6-abd0-ac2e3cfe6091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf115ff4-65d3-49be-bd73-acee6f46196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85eb994e-695d-4580-81c4-b4f9c30a72c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240d96a0-b1a4-4eea-95f2-aaf9eacfef93",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff354d6-0871-4c4b-acff-2f5a8962e605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d78b68-b6c6-4430-9722-cd87824024de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13b990b-fb14-4b98-af9c-d84af81a30de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da9d85e-472c-4638-9cf8-4ab8a07e94ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cf187d-5afd-45b3-a42a-6a126864ad23",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f4237b-3181-4c37-a6ab-b81e7d71a3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e39889-612b-463a-9076-7bebe852027a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d057c7e2-37f7-411c-a459-27012a194b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e973df-724d-4949-ba98-8aab9e4fd73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38ae3eb-a46b-4e27-9d4e-774625171425",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7471738-17cf-4712-b40d-26316e9f26fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f16f8b0-5d24-4c10-b21e-6a941775a809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec26a470-77f7-4fa3-b06b-a7758792911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28daccaa-f011-4c7e-9b81-b55ca7bd1552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dfe4c4-2b26-492a-965a-f9ed21296a4c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548389ce-eb9c-4539-b455-8ec033432388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d632b5-caad-46e7-8e7d-1bdb8b8b94a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d4e6f2-b8a1-4663-944f-4d5db8311ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e42a7469-de53-4a08-bbeb-1cda6b5591ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2409309-f63e-40ed-bf4e-0cb05ed6309f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c349e3ed-327b-42e2-811e-772efaa5a407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7da7616-46df-44e7-8293-5013b77adc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa5d5e5-c946-45c0-b22a-2ebe247c422b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "483a6836-da2f-49bd-9d21-9e7ca562af91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae5dab-1054-42a4-be3c-a4dd6f9521f0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c032f4-a6e5-4d19-8e8b-fc5c1f2acfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fae300b-5f7d-49f0-9129-acfdfc515cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc71f676-eaa4-4690-a7b4-465f12e32121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1cf70a-f987-47f2-ad7a-2cd7a0041ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50399a53-2093-4780-ae10-a637c662fff5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce8efaa-5907-49cc-8ed5-4a1abaff01b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16316127-c3cd-45b1-ac4b-0dbea0ff3d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09a8be2-8842-4a26-a069-afe9af7995ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c0fa63-a22f-4a58-addf-58658229fe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66db1e9-4aa4-4acb-8c29-1640876062e3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12976de-94e5-4c27-9f3d-4d767eafcda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0546de36-9902-4d8a-9734-8018dfaa4620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a119230-2767-48fe-a554-47f840099d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d6d6e6-f976-4884-acd7-7786832b84ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f021d4a-b1d7-4b82-92d3-5f4ce2722c43",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cd7b3b-d285-4e31-b1fe-7c1d865ffb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431aa694-a25a-43e1-a99e-b3acaf1e98b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afefe0ec-ce41-4a05-ae0d-01c3e0586281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d341ee-daeb-4a19-a66b-6b06d810e0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e6f798-dcae-4dea-a2f1-bfb7da97ff94",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9319823-cc96-48d7-b8d7-6724d65832c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4382dd7a-0a4f-4ba4-9060-f0a31276726f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad68eb2-e7a8-468a-b228-9d6806777111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a41c0678-78ad-405a-b553-ef65ee38b5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaee82c-1438-403a-997b-0341472e2f7f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554d46cc-f6b5-4071-aab5-72faf0b1ba7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff29ccc3-8f27-4414-b90f-de1cd7c71fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5b5bf0-1350-43eb-bebc-dd20fe1e2fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "476a3acb-142e-4fde-9098-02984197d6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097b2e60-ac1d-4daf-8c86-9f7dae242159",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f182b57a-352e-4baa-bf20-0e5e4e8c8f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f39b9ace-0154-4c32-a984-5aa9f8adc9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8d552e-ec9b-4149-a823-221048dc38b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1adb1ef3-2d21-44d1-9042-d19e553df363"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54441bf8-c921-431f-ac89-7bf9e14ed5f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f87947f1-2c11-42ab-85de-4b6c508f5f0d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4e9621-49df-45b9-97b5-b11422e7f8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82f57c38-8d67-49a4-9771-03cf6cd09411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64f9ce1-459e-40b2-8565-e52979a7fb4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f4fd0de-6ce9-4744-89ec-04d7270b2b9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d301511b-fdbb-4b9d-8512-a602230c01c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f2a0c7f-bfc7-4581-aedf-76cf56363ea6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63fd2b9a-18aa-48e2-b380-e26554e7f7e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c999567-67f2-44d0-813d-fa0f5b5bb30a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5bfb753-fc8c-42d2-8196-62c76cba051f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ea59da2-61d2-4c62-ab73-d4787637e364"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c458cf1f-8fa1-436a-90f0-ea6ccc14d9bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8caa3d44-714a-41db-aace-ecef93062004"
                }
              }
            ]
          },
          {
            "id": "469bd57d-68c5-4ca7-8e7a-385ba8a45bb4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0be2c171-4578-4809-a7b9-e1ba78a0efb5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3b99eb3e-fe41-48e6-9587-04101694b68f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebce53a2-c8d8-4c5d-89f8-3eb84c66fa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b5aef888-9080-4ac6-affe-127e7d784308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f586b15-44bf-40c0-bba5-168e999aac17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9400fc5-0d54-46be-bf49-b55b9c29c1bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a852e6f-b335-4d74-bba6-47316784e4f3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a63befd9-dbe4-4cfd-b71e-9efd972080cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cac76140-0bd0-4f39-8fa6-3454e8dd5d0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4316c2a3-0e3d-46ed-bbb0-bf9ee8563e4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1e6773e-c14d-4719-b658-67287ba7971c"
                    }
                  }
                ]
              },
              {
                "id": "4ab7558d-7da6-448c-98a1-bd8b1ec54d2a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7211c7fb-2c47-45ab-98ed-5498143e9136",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1514fd85-69fc-4168-bb7c-eea1b5abef2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96132f47-2c2f-41f3-b466-b8c8a2af4ff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e60c6c9-1d80-48bc-b897-aa3d834040f8"
                    }
                  }
                ]
              },
              {
                "id": "f013e0bd-05d6-4c69-9432-6816c9b4069c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa0e5682-bc55-4f25-af94-9905b619bf9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5740098-1145-469d-beaf-8698e6836628"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e2ae009-3d61-4185-a636-4e00324c2dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6831505f-0dee-482d-8b55-979f80f03849"
                    }
                  }
                ]
              },
              {
                "id": "2914b8b3-a110-44d0-963b-65a7ab77945e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dffa6bbb-e838-46cf-84c8-269d006650b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fab8bc71-1258-46f5-88cf-d8f84a14ef06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0ea862f-ec06-4d01-8776-c6e3b6e4d28f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "810542cc-56f8-48d6-aca6-eafd51b7cb36"
                    }
                  }
                ]
              },
              {
                "id": "e403cb62-5882-44c8-a344-391179016cf5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c16c2f48-b313-43f7-9f58-d68a7753dfea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "233eb991-f97d-4ddb-8649-5d6b3dcfa61d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb594910-5ad8-4402-a108-c5ffdc12d6d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "33c0dc17-3370-4689-83cb-90752d73294f"
                    }
                  }
                ]
              },
              {
                "id": "2e53769d-d45b-4336-bc79-ccc473bea974",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e15400d8-6ffb-4ca7-b9d6-8ca282513655",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3485dff-040b-4aab-84b6-c310f0f9acf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bb786f0-404c-484a-98ce-fec2f65c6cb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23ba04c7-fbe2-49d4-9003-63afe983e5ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5571bc52-e1ef-4e4c-bcce-5fc9c03259f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48bb1fe9-b55a-4fe7-b1ea-b5860d7e749d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "462fe4d0-0aac-41ee-b823-ac0275266ff0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28960496-73ff-4e80-a494-964d2f83e9ef"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45687b91-d2f6-4d13-93a4-2358cf3d0a54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e8dcfa4c-d060-4dd3-b13d-531fdb0c083f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c13980b1-a155-48c5-8940-acf149d09188",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e12e395-a80b-44e8-8f91-4cc63e351db4"
            }
          }
        ]
      },
      {
        "id": "62fe45dd-e727-4e9d-80b2-3c6605f54dc8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a0bda9e-0796-4140-a377-7e83e67f43c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cf66603-e4a6-4851-a23c-7642c924c93d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b452ba23-27b3-43a2-833f-2a0c0aef4fcd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104fb3b3-9836-4be4-a9fb-2a7b3311c986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c82cc4c-2315-446e-af7d-acd6e3dccfc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a03287-56be-417d-9e48-011147f8b979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e485b0-c35f-4a87-9b84-d7d50529524d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d049d719-c873-4607-9015-490fd53f27a6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1fe0be-0aca-4e86-9e3e-2fcf22d3491c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad038de-004d-405e-bae9-9ac86edc0994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e641c9f8-6aba-45ce-b9bd-8de144d04cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b436e2a2-c989-43c1-a415-8344b65df29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3513d0bc-5ff4-4c5e-8cb3-44cb8c656340",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70afb98-740a-4009-8545-023bbadea697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b35a62-2c0a-4fd9-ac73-e2d80e92509d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa96cd0-3310-416c-8ce0-76a9162aae5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2269af-ff27-4581-af73-c6f8ec70fed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3731ebc-f917-4788-9664-9b0266e4fbf4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d63131-ca2b-4405-b948-a49ba84be197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2438bf-f749-4e84-ad93-9c9b8a5f95dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1d617c-bf89-4735-9467-01587058337f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a1dcdc-f207-44f2-86d7-a416b6f9c9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e30830-f551-46c7-8148-486b9d45e621",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403738e7-71e9-42e9-9fa9-bacf72665830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eac4cf3-8a87-4b44-ab2e-03568c463c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b26d32f-2450-421f-92f1-86ee1ec3b374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d4b6e0-5b36-4bf2-9a46-8e4f2dc0f1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c224c5ed-6b50-4c4c-b54a-9e72f6c2f264",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c3fcb6-50ed-4bd5-834e-3ea7373f48f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bd4084-6d17-4998-aafe-09bc9e8c28ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706dde63-b45c-4775-858f-cbccd469c176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "710962f7-fbfe-4a27-b6a7-b40c9c6d9b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54094f97-fe35-46fa-bb28-61e7f03c9743",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab19b2e5-b49b-45cd-9fc4-adb5350eced9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b767d86-7cf9-412f-98b1-e182481cd514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1278a0-88a6-4b71-8f7c-54c8d321893e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2162e6a-e8ce-42ef-a157-90cce703788f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9099292a-8a57-4ee3-b36c-2435f3053fca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201dedf4-33cb-4625-911f-d03769c602d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be4a67e-740c-4dd5-a75e-ae393aa1f30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9913fe17-a90d-46bd-8653-03c83b90b623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c4ae5a-1c91-4490-87c5-276bcf7293c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc586b2-2241-4cee-89df-a19f7079f1ea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b9f6eb-90fb-40d4-8f82-d8226d6aac28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040ec1c4-e91a-4645-a3ff-d04ee8150d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa4ac67-323d-4a55-a02e-1f7a7fdc0738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b895b19a-4577-4eeb-8f44-6f374644c132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e079699f-aeb8-44f9-8fa2-409930f25520",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144247d6-0a92-42b8-9e82-7480679c68f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8876ff-d238-4517-bba2-d778ca720fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b196c1c-fa75-4644-a21f-2c9314455ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18288c5e-dcc6-43ff-9e29-98c0968b4c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e94d3d-b033-49ec-82f6-af2afc548345",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81754bc6-c7ee-4711-bcd5-8127a18f9851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d49bf6d-2751-4fd5-a809-acf1aec7f7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7441dfb1-cf9d-46fd-b756-7a6d8bb5d358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aad4db4b-1317-4be1-b794-e9d97b04653c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af209e1-fb56-4fa2-ba4e-dcce08b52856",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338fbfa1-68f5-4520-bc18-2258f0acae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77db4164-248e-44cc-a377-e14e6cd1cbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6594abdc-8031-4f4e-8dbf-700fc7b37ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "706a981b-371a-47aa-b4eb-ae4069919840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2af827-9b6b-42ad-8aa9-987b6794ad07",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbfa445-1f02-4588-accb-9fbc3fd5c781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be7626f-e3b6-45b6-b494-fdf593b7c43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0309d102-b998-4f27-bc7e-7f3642736f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f8efa8-01cc-46a3-be74-fd10644e94f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3859323d-0f71-4552-959c-37865d86bb0a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd720d9-1db4-45c7-a1aa-622f298f7ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25173471-e8e5-4d05-998e-b078eda8f17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5fc04e-3c8d-49f6-bfa6-64818ec0ed71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eff8495-fbd3-4c3e-b934-fd6722bd69aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632025fd-2019-4f7f-8fb9-1500d68e9867",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef5dd55-38fa-4613-91de-63ae4ad78cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbed5933-69b0-44ef-8dc6-8c081e4b7536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d17332-6253-4119-8200-7b9d723f8faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec4a1fb-e233-46d6-9b5a-e6daa27a66b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4850dfbb-3003-4152-9cdc-6d2c2b91c4c5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1545ba71-8654-4e2a-be95-831ed23f9ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b5467e-32d1-4308-a504-24d0ce0abb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093f24f7-0a62-48d5-abaf-0ececc41c2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "384b08da-8459-47e3-9b40-8151d60c27b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc13eb8-4152-485e-8188-b8b3eac4bb52",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a3d6ed-f532-45f1-b105-8af90cdbbd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5e27f6-fbed-49b0-ad60-34546098fce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d049c0-1cb5-46ee-b1af-802839d6a700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfdc0f1-779d-44f9-bdd9-f10841f08b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a2b1ba-c200-4714-977c-5e59e6aa175f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae85d2d-5165-46d6-a369-d6b68aedf6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf4803b-5848-431d-8fb2-92306fab9c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce62d70a-ae58-4a73-8446-e61f68c77e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e38efc-5266-400b-b88c-69b97d381b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1381b7-f03c-4514-80bb-31146a805175",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a6de6a-54aa-4443-839b-3e65065bcd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b317e87-964d-416a-9c1c-1a1d31431fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a4786d-3268-4024-9978-5343a78c7fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccaa713-1a8d-4d0d-9cbe-b9f9eadf8053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d38d35-05c1-48ba-be48-a32a70726c4b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255c480b-5fd0-4119-9e47-25b1d5b97d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5148faec-e56c-459b-adf3-9e16b93fca28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e60e8c7-6134-48f6-8f59-672f39d67bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6743ab-3d1e-4a1c-bfe0-2b0c96a6a363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3770d4b6-0537-49d8-a75c-66d9f87bd7ca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c382e2-3d25-4798-a419-d0ed4a676095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68e3863-a32e-40da-9153-6f8093c377fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c7be7b-900c-4df1-949c-4458cb4e4d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83e33224-f1d8-4e8b-8da6-88bab7704ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bafd23-f1a7-4366-9a77-fe417fa62398",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8459ec53-218d-4d41-9a0b-6f042f47cebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07d56e5-467f-4372-b799-9f8dd7199430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a06ad2e-4957-4ed9-b98c-af91075792b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99da02db-81f2-48c2-bd13-46b0871f08bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099993cd-b061-484d-b41c-e7545f642a7b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbd594e-6533-48f8-a925-8341ac8b162b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1d0b03-d324-41c7-a622-47aa5d54f0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71840fb-68a7-45ce-924a-b8d189607db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ceb885a-fd43-4dd5-90fd-87cde9e14ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9ac4b7-80ff-4ec7-922f-322e72752ad4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021c1e16-6f9b-4a02-995b-117df554bdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d512568e-4895-4919-ab64-8ccb7d0c7229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b44441-0e84-4c4d-9d90-9bcddc853228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d6caeb-fcdb-4dfe-8d5e-64899493c3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d13b593-3c1b-4549-8242-e84e36ea23e7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baae2742-2d61-4123-af7f-5bae61f85688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cc2772-0f8a-4f72-ab39-3c272c3a93c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699fec88-d335-4e24-9f4f-685692665a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29daaaa7-0458-44b9-aa3c-f2deb08d2293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96f7c14-976b-483c-a1b3-b1e355faa55e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa74e3c4-5592-440a-8721-fddbee632fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed966d3-ccbd-40c7-bf34-a8fae299a591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527d7a46-ce47-4270-88cd-a8053eb11a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf817f8-e820-42e4-8b38-91474a245b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e44312e-f443-4402-ab21-e4ecc1f00a76",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098f3b95-e322-4f9d-8096-94c357786dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12f9eaf-1f72-47bc-8453-de907352da1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b71e81-ce8e-47a1-a1e4-c2450af5ec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a168ed-e644-47a7-a7bb-1ba929bc71a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372ae8fe-66ae-467d-bdb7-1cfae719cfdd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b22425d-d0ca-4ba2-96de-32beddb11bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8332f4-f2e9-49fd-9db2-722ffc8de5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ba1bc6-403e-4329-bbd2-5da557130476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03543440-a252-4658-8797-6da765b12fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9f7761-9d5d-48c0-b38d-f6267ef8eb35",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375d8c92-d71c-4103-8a9c-5e3c6d561ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa01acb-53a6-454a-97bd-7befe93b36a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8dccbd-0672-4dff-baaf-b3c80175ffc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c880c06a-6cc6-4d3f-b6ad-62ad5d805cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d3c973-49d9-4a03-9f35-4d03cc82f13c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90f25dd-c7e4-422a-9858-53bacdfebbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa806044-c6e9-415d-9ed3-0eeae4c71de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045d329d-f8d9-493c-88d4-38a0e3b7e52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d58dddb-696c-48da-9d18-8291e707fb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a64761-5323-4b21-bc1e-7213a2f9365c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ad5840-0aca-4691-a167-5f68e8c6d3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125d0dd8-9942-4726-a1c0-775cfbaa656c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b85c35-7f17-4520-9faa-3794beeded5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a22843e-01a4-4e6b-84bd-d161dc31f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb04a2c-cddd-429a-a49f-2256822a4911",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3208917d-68b7-47f7-b5ad-e647837bf51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f60feec-aefc-4c92-ad0e-890f39d6ba67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07eca2a7-3946-4996-a5fd-d3eda8412bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1637341c-c1b6-48d9-8762-664754d7c7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34a11fb-6ea4-4bf7-97dd-31f4d061f4a5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7130f39-d20c-48ea-9329-09b05800a934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2281183-9736-4df8-be61-5986a5a349f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f18b1d0-aee6-4325-b0b7-371e02b9a2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a00d31-bd49-4434-bd7e-3a527325c80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd86e13a-fd42-4f4f-b26c-e7afd5cd971f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46abc75-a607-41d1-89ec-f7b2ee7276b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7e5c24-8bc9-400b-9875-02ff96c2820f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19a9e41-3b86-4a8e-b7cc-f1bdd597cf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59da2e8a-4dfe-40d9-9a93-748ec1fee998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c4178f-80a1-40b7-96e9-7d18942a0f5c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bd9891-6f0b-4449-8ff2-eabe6c3e6b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae370cd-da51-4c39-b3e8-067a3db87ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ed49fb-8eab-4491-8332-3d3d09341a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d47abad-f2e9-492f-9bc2-61023a6f8202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7713581-9233-49b7-a1ad-61d692f546de",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb403df6-4f1b-4c04-9d4c-830999d288b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b20c070-1708-4cb3-b925-dab49d0f0266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56129110-6b6c-4603-b5e8-a2a97b16c47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a75fa3-9b81-4ba5-9bdf-f056c0684c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4e550c-3993-4851-9363-e52dce36ebcd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ac70c2-7b82-4abd-81c2-2ce01e375ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4941e54e-44bf-4559-ab52-869bf994635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62766d5c-3e04-440b-a35b-fa32982d3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6e1525-bc8b-4490-8bd2-a18e49828b1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "914dcc51-5c35-48af-9809-2cf4850bb521",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3097ca37-6348-432c-9cc4-4c849c120fb1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dd9cf1-8fe1-405f-b345-9247670fdc6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0de34d38-1e75-44cb-b2cd-5912b5c2af6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27887203-eb4d-40b9-ba33-cc9c2d57e2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6250bf62-30ab-4ccc-97b1-cdc564705098"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a917bab-994a-4876-9a6c-48078824f7f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d007654c-5ad9-43de-9ee4-22173d2f4573"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6991341-7069-477f-8134-2dc3aba31c47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49d01b86-3c47-43bf-86da-4b09f9c0c525"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e516fb1e-ca2a-4c95-b8c4-734dea353623",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5bb71616-72b2-4ae0-b6ef-15665b6d672d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e750b8f5-a4a9-4dc0-8b10-547404c45944",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84309ee9-a84c-4141-bd85-c11cad787734"
            }
          }
        ]
      },
      {
        "id": "73c13bc1-f963-4333-b661-10dc62484bbf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9e624076-9647-48e4-b700-b8ffeffea4a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c01f9aa-6089-48b6-93ed-84b69597989d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4be5a3fb-79e5-408b-b1b8-7ca76f9380ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88535c92-2088-49fd-86bb-974aa6419eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808b8c37-6111-4376-9f94-5f759623cb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207fc9ff-9fc1-4931-a6cd-c58779681ca6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62a1d0f-237a-40ee-bfd8-d855814a389b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc77c386-1ea7-4df3-b6a0-1707b71dcdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967b79de-cc43-41a3-8ec6-2bcd671acc70",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7664de14-6b17-48d3-b10a-e1a7a7ff6e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96728f66-8257-41bf-961e-30205595bb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80e51f6-1421-4e2b-b339-65ec791bf52f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caf4929-bc9f-4ab7-98ef-b7f5207a74c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9177e83-1249-45f1-ab66-a76cb58d77fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade5a1a8-ca34-4f67-ba07-f76869a1191d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec926070-b083-42cd-bf90-b4903dc7fd8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ba902f-3ddb-4931-b885-674ab1659de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f14da3-b388-4faf-9555-263aadc88b8a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0866d87f-4814-4580-9479-406b2cda0e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c0cf40-23e0-4533-9ead-b5360f81cfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d126fc9-b27f-496e-9b2a-96ad47e9f07d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef260d0-2ac4-47e2-901b-d6a66f16b0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fbbf82-4c7e-436b-ab4d-3de0d6361e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb906f-3842-48b0-bcc2-b8ccb51a3a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecd1112-8f66-4a25-896e-3bcdb49fca98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702bfa5c-c367-4818-b2a1-77e4bf2c44b4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816bd9d5-1c86-4865-b558-064fa496f162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c775837-bdaa-4119-aaa5-a79c55ef3e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69ed69d-793b-488f-a098-83f0f5e73ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a263a0f9-8866-49de-a48b-e949ddd3d4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b26c9b-57fb-4385-88ec-f874ffbcd9ea",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a429c536-d5d6-467f-bae5-1c1ce16d67a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b6491f9-6d51-49af-8cfa-fcfa4c2d8388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362d241c-89cf-4cb4-84ad-1d7f667734e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a44a32-ea87-4ff6-9fd1-36377b4ba0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3c888e-1391-49b3-93eb-861028ad3bb3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1ea835-07d4-4bd2-a033-9ca369aa5e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a73b61-f69f-416a-8b21-5c1e63bc72eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e3afb9-ff5a-4976-bd6c-81176af2f17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafce7fa-412f-4b6e-80e7-0a1b83411cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45abd4e-fed7-4052-a0e5-e3ec42c26fb2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fee6b17-7c88-4148-884a-4581eb42b958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb474c96-2520-4b5c-9490-67e2bfa8c772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42290efd-55cb-4ac1-ba0f-a6cb3bf2b226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945856dc-aa60-4094-8f9e-8dd9fa710641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50de975-b114-40e2-85bb-98a84d6b30b5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192bbf1e-6540-41a9-9c87-0d68475a4069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914f3da3-ded0-4414-96e5-6510beafd64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda4a9bc-9390-47ba-86f9-1ebb7a068f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1904bcb-aafa-4b07-82e3-38d07e02562b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de72a5c-a0a3-4c1d-bc34-1f1f4026868c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b14e762-5638-48b2-b406-8a47f4e0c443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d460b8ee-9bd6-4e9a-a3d6-3e8c6ceba5e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0102e2b-3f8e-47a2-8aa4-4842e210344d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b2b3ac-0c48-403b-b0b6-484c49cfcbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0604c3b2-3e1a-4adf-843a-83d73e30be0b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a64c071-70a7-4aa3-9ea8-314436f2af13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90dc66c-0687-4fee-8ca7-d0eafff6dec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46755f8-2954-47c1-9600-85cb3c2a5ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d218019-d134-4e3e-8e52-d20570cfdc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e579d4b-da2b-43fc-b0a9-21a84bac2908",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d19ab2f-2834-4d40-837d-b25357f7e492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4693316-59ff-4db1-87bd-e506349c48ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97cf427-bfdc-4129-a7e7-c6e083739bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907dfb19-ecf3-4116-b164-0bfc0f93fce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927539d7-20db-4d1a-83d5-4acf3c9e5b9a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dc3101-2019-411f-b251-09c6ac96d76f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e39c79d-3c9b-4a81-9fb6-16ee09b0ac76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbe452a-9358-4450-a7f2-335af06e1116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab3f13c-4edf-44eb-99b1-55d3c1b578fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6795fd3-2501-47a5-b532-e90344415f99",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187eddef-655b-48e4-bfa4-81a7b2aa2e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6403a81-7625-4fa8-a34c-9a67f8a814c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072908b6-d493-4dfc-8247-277e119f959e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dca3a9d-a4d0-42fc-97ad-75c888684afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ca95c2-db9f-4ab9-af7a-6200f82e6a4c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07965bd-7da7-4c52-ac1d-797a3c201001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2277f79-ac9e-4a1f-b2de-e5193ccc1c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b606a5d2-98d6-4575-ac61-2e80c08659f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b18067-01ee-4cbf-b905-7e8ea933029e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7ee680-b22f-4430-afca-d6e20565e867",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64883a77-4de2-49a3-825d-ee1a516722e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064d28e9-5bd3-4a81-9a0d-d4b88391299f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2919ea64-a2a9-4c3a-8187-cf7f51dfa5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a70724-4ea6-46ef-b6e2-815bf1cd7ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c890e3-a5cb-4286-9502-93d674daf0f5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a336455-8238-45ec-91b5-f8baeddf6a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faea0777-eade-49e9-af30-3c80578345b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c495ee-cec6-44e6-ad98-e9e7ce4872d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216582a9-5095-45bd-a5df-620e838619bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2a725a-1871-4976-bbb8-a0f7a78ad9b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715360a2-c2ce-45eb-a4db-f6f12c0fa015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d448f1e-29b2-4291-8acc-d579b68b0721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7f5b91-993d-4971-bc36-bca4ffc9e553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff32f8b5-4a49-4e2c-9b6b-aadd5a4d31e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79afeec1-88cb-4e5a-a175-9e20edce353f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a162b76a-6f96-49c9-afa7-74e04e51035c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbae042-0077-440b-b572-08772bd93a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc6e1f5-126e-4cc3-a4f6-c4ad9fe293d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09347d38-b494-4b45-a56a-01e5633373e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f56dbd7-cf81-4b7b-89cd-3e1c080a1180",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80820f91-a77a-4481-adf8-aa327bed2b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f94168e-164e-492c-b24f-70a3926c5d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedf8965-c83d-49f8-98c0-574cb950539a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf69aa68-83b6-4cae-a1d8-41462697c653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e063bb3c-9087-4214-98ba-6a52b590074c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1669e2-122d-469e-b073-d1f2e652642a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9032ddca-8b5a-447a-ba3f-b406bd716ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc7d692-d2ac-4e1e-8def-3f0665e7bed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff497d5-abf6-41b6-a337-3aa5c733f1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd83c6-9d10-4431-bd19-acce9421622f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6acb6bb-0f1d-42a3-86ad-c7c4a32d38ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7165bdb0-ff22-41a7-ac07-45db31e16066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ea5e21-fda6-403e-af18-0f10ddce0fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136436d5-8d6d-4c11-a613-e8f02ceb9e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3717a0f7-ad03-46d9-b865-7e261708ac60",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85e60ee-7037-49a3-acf6-a3ca9fd1d9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a17068d-7796-4d94-9d7a-9cf5641e60db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4310670-fcbc-40db-a3f7-91eed93f6c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8357916e-d94e-4c58-bccc-930bc841ce0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6c01d9-cdec-4d21-a969-cb6184c706a8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b050f4-d2fa-4c9c-91fd-de2b72861ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53da9e5a-c476-4a1f-81eb-24e8e8bc0c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a123c39-f2ca-447d-8262-a5410881c32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bb7577-74e2-4672-b384-8d7d24aac829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9033f0e1-b04c-4883-9fa4-9b685a76e88c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9132a4b2-3ca8-4e00-ad68-271fb8d275a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f19b8c-704a-4383-9b20-8c4f05966e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d983ac-e4c9-4f8b-b418-dfc873718d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caca785b-87a3-4a7f-acb8-b7140c7f7dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb3a62f-16c3-4709-b324-74e3f5866512",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c5bada-5d5e-4f6a-b857-121fae6973c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e804944e-5a3a-4a44-9d0f-c07bda774a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4a90d0-001e-4b2d-8ef4-0d91ffdde899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f9a8f8-5455-4a11-bcea-544a3868cf9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d6e973-53bf-4955-91e6-f74f0bf26887",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7815d05c-c95c-4409-a32c-ed7ef74552a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ebc397-10ce-4e9f-a4da-a93aaa57b941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a024a20-6ea2-40af-a3a2-d336cf7ad373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bf141f-29d3-466d-8558-0c30f1757a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65759b48-9fd2-4990-b838-397985f2e8c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8b5bbb-d04b-4de5-99de-fa066d7712df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dfbcffd-4cfa-4193-96ba-97eebcc3bcb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e09226-85db-428f-9809-a14089398735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340fba8f-b671-4528-9ddc-571e76bc85c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebcecb1-840e-4f5b-9bc5-1c6d19e22682",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4dcd54-1b4c-4674-80bb-d912f3ca0f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5495366-c469-4ee3-a95f-952a30fb960d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2703c577-80f5-4f3c-bd60-851a56a94cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63ad93a-580b-4aee-9859-4cc916cd8dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc261dc-2de7-4013-8ea5-ee63c0214291",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08db5b2c-33de-4f86-b6cd-8d5c5c3aeea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338353d5-13e1-4b6f-b399-446ac05cb085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638e7091-103e-469a-915d-f14231225273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a39af5-e2cf-48bf-bed1-da1dc88af03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731a3993-144a-44b9-ad28-75f68ec4a70e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d5f449-99a1-47b0-bdae-57b56ffd81f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356e4b63-2626-47b4-883e-e51aa20bf1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cb0555-df6d-4d8d-ba89-4804a68ddacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4877ca10-bcee-4ee5-8bed-7952fada5d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac00c6e-1449-44ad-bf64-b95db5c5bad2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f2da2c-5e34-46dc-92ec-9d3cd98034c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae9d8c0-d540-4b74-888f-4a9351bfbc4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0e97a6-c172-4d97-a95e-6f09eefa05a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a8fc40-8cb8-4bd8-b44b-e67e3bcd35e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56b95e7-4971-4383-b8ac-8de914e753b0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbfb920-5289-4102-bde5-ad9817a8f2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9dde8b-aa79-474a-be40-aedd66b0382a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53fbbd0-aef7-436e-bea2-7814d3efb497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419326ed-ca86-4bbd-bf11-0a372f756815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57aa537-98e8-4083-ac98-bfc84749afb3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67080d89-e89a-4a0e-90a5-c7603fd324db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516618b9-7296-43d6-93a1-162f2e5ef246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f504eea1-0b41-4533-93a2-787145d99d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bfce63-40e8-439c-a8a1-b3258e8d7258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a608b732-c0ea-4cfa-ae66-aeec5d90e3f8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d72136-886e-4af5-860f-34c54f2d361f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f174b66e-9958-4826-bd05-a6950ce13297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38623c7a-afdd-4118-a303-d83622dbc2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca21d5d-1336-447a-9097-6491f27bb13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c08b8a-554a-4b50-9a35-50316ff99889",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0882edd-2a1f-4270-9d25-2f461f1d056b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46e0901-6881-4086-bb48-c8c1c810f63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5566c9-f549-4aea-b7ad-94e68d11b354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7e4886-16ca-452b-bd03-5c585770c948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9938420-5b01-4b92-93d4-2df4698797ee",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85abb457-dd43-4ea2-bdbd-2b4c36608651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf11be56-e551-4b5c-a67e-b31911e47411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14056145-1479-4092-bdba-a87ead3cf09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68e4d85-3732-4324-af39-afe2fd8c7fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ebe8c4-3a38-4cdb-b7a8-a8b543897c4a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74859fb4-a15e-440a-aa71-5dd648d0d781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61f23cc-1393-4350-9326-9752f0f5aca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b06f821-b849-46f9-8aca-678f9a9ab9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d86c04-3911-4dfc-8306-83fa4b74b421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b43c6c-d3d4-48ca-8de6-95e3d3fc66b5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2680e3ca-6793-446e-a891-ed96db8b8638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e6d72a-2c18-42b9-bca0-8ef35585df95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fc2164-429f-42c8-9012-221024609d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c83b0c-0057-42c5-b5c5-ececa482c6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e79b27-1f30-4e12-9504-27c1c929b3e9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038a308a-b6ae-4449-adc3-4c2b07135f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1207ce7-a34d-45fb-8663-bf725be4bbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1850ab9-9796-4b08-9a3c-2c5ca6248c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce0c856-dbb1-4cbe-84fa-0ad6e01fe228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b45404-ec32-49af-a720-3bee0392e0f8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc28edf7-56a2-4f77-b6c7-9d9aa9e7293a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dfa0f9-d7b6-4397-9d0a-226c57de0b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ddb31e-caae-4b87-a00a-e76e970aafc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddb48c9-7837-4a98-a33c-b7bf3f8225f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9fd882-2e67-4e3a-adf3-9f353aa5ea93",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e944df73-8a1e-4b19-b5b7-080a923a4f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e232411-ac75-4d1e-85df-67c5821b43ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11867360-3b4a-4850-924c-3b850cd184ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b14d3e7-4bc4-4796-b114-16f07c196624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2190eb8-4113-4f0e-9cce-45031bb7f423",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c343d247-b022-45dc-b95b-2f32f3bc0030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6514d1c8-7e1e-487c-8913-d32367fc12b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c699c8-d234-4735-9398-2da3d5e0ac54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a311df3-f6c7-4369-9f01-652ef06e5b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca0d04c-1059-4833-87aa-86f0d5ea75c0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf90b9c-1d15-495d-8fa7-8115dce456b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f956d0-c406-41de-a9ec-1591d6d85a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2f3652-71fc-4717-a069-9167acb7015b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca76cf84-c9c0-4b93-8245-dd0ca61528c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7763f01-dbdb-4510-9bf2-6592328ccced",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007c16a3-78ed-43a1-b8cc-26a36b987b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0390890-e950-4510-9037-e41651203492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01794aeb-f082-4a82-a68e-0c561d389d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41eac4d-45e5-4626-b855-0f7305946940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a08257-21ec-428a-90e4-39087fa4daf6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a1125b-744b-4f25-bf43-c38816cd3293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5265fefe-e7ea-4603-a179-2cb0562b8cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045fd100-93bc-4e71-9055-e6d48dba1b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50255fb-b466-4c6a-b86b-0f1f9f3d6601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd84fb03-1e37-4cf5-9bf8-dbaf8f32ac06",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450bb19f-ae15-4fd0-94ab-1a2da409640e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8147f82d-c60a-405a-9cc4-807e1429fa41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a613723-59dd-4145-915d-472d7f650da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bf83f1-9c60-4488-adba-11a59fc50f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca2e969-ee0b-4664-b4d4-aa55d81495a1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a5c740-0394-451b-89b1-bc0d93126e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d26b511-abf8-44c4-b47e-00ad9361edba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1712bd55-76f4-4743-a590-40e05e29bacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ce2849-af60-4397-9a3f-e41af1c5ec15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54829b9f-b6a6-457a-b55d-e53ff35bb3f6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa19f591-6f1a-4ff6-b6a7-c3e764fc07eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f983e57-73e5-4b5e-bec2-709bc8b65a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b89787-0350-440a-b2c4-c30f0c65a925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114022cb-7d0e-41eb-ad6c-c650f09ba02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0de8f1-c217-4617-8320-01b23b9ddc8f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193167a1-78f6-4727-b8ca-d8f222b2399c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2049b664-8ecd-452b-99c0-0355389967f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4706f2-704f-4fd4-946f-eb1b80f0b6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bdfef8-6bab-4bdb-9539-8c03d5a69ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec42c36-496e-4c5e-9044-2e232dfc0315",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfc6d99-e2bd-47ff-a4fb-13d484a693d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d05b82c-0b3a-4bd7-abf5-c3387e89a2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbe9b4c-6aa3-410f-a6a9-c643b7a7d4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae7bb2a-63c0-474e-9593-b9e9d8f42fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e9ac2d-9621-4bc3-b098-39ecb91e24bd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eae37e-c875-44f8-b18c-00e5c7976c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bcb6cc-a04e-4379-933b-6529dca1b231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c374a3-ddd2-4121-a095-cd34a5326914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9bfc4b-92e2-4d83-be9c-1a3e3382779e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079e8b96-c1f8-419d-a516-c11c4063ae08",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124deb66-3423-4be6-a6c8-d617d4165376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101a8eee-a5a2-4200-a069-48881edfb60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9886e6be-7ea0-4387-988c-08d892bd5b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2536d5b7-659a-4a08-9b18-ee7620be6ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a6bd7f-7ec3-4b44-8dfa-318e588acbfe",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0b3b23-284a-4cf1-aa0f-fc9fed8043c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff222f8f-3b92-4611-b221-a62a2a620f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d7abec-3420-4bdc-9a02-5b2987d3c92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74c47e5-2956-4972-b86e-da5ac67154bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf81c8ca-9585-43c5-97c1-0fcd7e06d520",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e4e7a0-650e-497f-ac64-22461d12dd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4d72e8-fdab-448a-b953-cde6236b8c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b904e67-2a7a-41c1-8469-0e7583c8eb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff47fa3-9f2d-4cf5-b065-76a74217ce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7501807b-d103-48a8-9215-45f9dc155d09",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef51ef4-bb7d-476a-8281-1008eca52327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b9592-d1cf-4cbe-b62c-d55b556e880d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c9650d-df4a-4a1f-bac9-012a47c57753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb57b720-5d07-45a5-aff0-c17f50096923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0242bfa-ec98-4134-b729-11dd36314746",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07655ece-d97b-4699-990d-ebbbbb3a06c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943fc584-8f7e-4397-93b5-f159ddba0a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be6cc48-6c73-44e7-824e-07f2d32c5278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cbeb70-e284-4dd6-b5c4-51d04a4f1582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea9be7a-b27d-42cf-b0f1-a47407e0796e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4af9f7c-28a5-4f7c-af86-97689801b707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96a0d36-91fc-414a-a895-e1b8ea17303f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61280bdd-4e46-4b2d-971d-e85f69d6fe32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb587dee-ab89-4978-98bc-f29c186f606f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711764cd-e320-468b-be51-ecf65793736f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bbc3b0-028c-4432-8743-0182f45218c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f65bb3-8d6b-4ed1-9476-7a55dec7ad7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b369f9-7485-48cf-9bbe-d8b11f8fb5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5000b7e1-4a4d-43b8-aa4e-c2c00ff493d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00d8ae9-e449-464f-b8e2-1e172006e016",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff3fe34-a401-4005-b19d-d295f79cfde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe87d43-3ee7-41b0-bb0d-21120ca50ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225cdd92-f31c-4b24-bc90-5ed2ca6e6b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc049e6-960a-41e4-a49d-618e6e20f126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4694e19-cf48-4325-9abe-5845ca340f25",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55e1dfb-020e-4161-bb1a-e4b497d5089f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "132748b7-00ce-4580-9ab8-7adc1c0c1cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e00f2a-898f-467b-8c71-f918c0fd57e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59804ca7-324f-416c-91bd-bea5bc5ae3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c51e0f-68f9-444a-be85-dabf5e231b4b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b31ced5-27e6-4d87-bcf5-16cc71616d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67db7fdd-fcdc-47b3-9ff7-e20f9cad7ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2097b6f3-e568-4806-8149-cc8d2862485f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daddbe00-e705-4d7b-90fa-2cd8831613ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13d0cf8-ea9a-40b4-9846-69c528b27c56",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4359615f-2b65-4101-93c2-c65a5f0341dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "588c9b06-458e-4dfd-a9e2-abf25e9b88a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b871227a-d682-4659-9a6e-536643e4cd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888c83f0-8aac-4091-b886-5feb02207e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9afd9f-c6ae-41bd-a98a-fb555760505c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3c61a4-bf97-41be-8a77-6cde888ac54e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1658baab-e756-4d6a-8734-f0990e5c4b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf94a16-3e65-4b59-97e6-edc6d94538d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfb7c23-fad4-4b45-b0f4-add8267a4a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d16fcf9-720c-4976-949a-bae0319a5e00",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e44f8e5-7d8a-4cd6-86c7-862d77a24a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a6c166-402e-43be-bd4f-ccd65304c944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7028bac-b186-4cb1-91f7-42dceabf57b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31880c87-9c8e-4795-a3ce-8cdad99205f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1979743-2d18-4087-bb2d-1096f9100c85",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc7da04-36e4-4f18-995d-3b81ffe9f322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05fd1766-37a0-4a48-b116-84ad18a5c1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f3a7a0-3cbc-4c6d-8aad-67fa13f4faab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39f1e66-b6e3-499c-87dc-eccc157d489b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e10a653-9d36-4095-b0fc-3d7aad26955a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4790da4c-0ee9-4299-9957-085c4ad2d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18250df-04ac-4893-94fa-8288064603c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8094f8e3-1fdd-4b47-b009-34c743b4530c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e062bb6-af39-4fdf-9ab0-c521a10e72da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad000ff4-770c-4143-bbd3-5faf10357f33",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3365853a-a94b-4f50-922a-7e7569464c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8db830-f3a4-4703-aaf3-af247b2fa43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1308056b-c3c1-41d8-8a06-0097c9d38334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1242b9c5-d6d6-4ce9-8695-c581a1dee1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090b1830-538b-4810-abe1-c9c35c57e7aa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b842cbe5-5496-4a02-ae39-55e96413a074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "971d6e2a-7d8c-45f9-bec1-571923a0d7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e23205a-6076-4610-8bf8-99fc005eae96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85e7f13-1477-42ca-a45a-8e180871a6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3e3379-72c3-481a-8e0c-e6a83ad10c29",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf27c74-a79d-4891-a374-144977f0f99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fdec147-8ca2-4764-b729-14cb2e18a9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165e0110-cf53-44e6-a821-fb0823052f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf6eff7-08cb-4190-b592-ce418cb7be2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1b4a0d-589a-4f3d-912e-06b1e3396944",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9793b87-f094-43af-a146-a296493a9c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5ca7bd-f00a-427f-acb8-b0218ec55cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c4670-954e-4eeb-b881-684ae23034d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1053566c-4366-4f20-9b1d-3e68c00c2bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d34f8be-4d90-433d-80dd-883e71d22b48",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f3dae5-185a-44f3-a472-45941def80d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a7e080-3419-4db3-844a-296365ae4ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1357d7-e0ad-4b7b-9573-65f1b17a118f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9415f77a-6f1c-4a8e-9dd1-928f6a90a773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a126bc7-948d-41d5-9068-4ca37c17e5d6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e5b431-6555-4171-921d-b2abd4b04621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75e22e3-53d9-4adc-88ff-ac8e7cf78baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e3c7a3-0b6e-42d5-bf4b-f55054ccac4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cd2f17-3598-4ee3-b242-cf027aafaa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791d2024-3e60-44a7-8e00-95338ba12c25",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea08fc2-9265-48f7-8faa-9c9f78269898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4cedd54-afda-402d-9eb7-9d49be8abd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dde9896-56f5-4059-95bc-daf5a6632c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad80a30b-e106-4055-ac16-a28acb091b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0867d28-dc70-4bab-82ed-d355f983c0e4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a2e787-ddfe-46c0-8364-47872c95753e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b3663e-d630-48cf-b03d-a220329e933f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19373e87-77fd-491c-bd6b-0f2950462c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eabaa51-6887-4a2d-8f30-4ec9d8b36417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae99304-e441-4b16-b35a-95679c32252b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6d27a1-9a98-4338-bed4-0ef69f640d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "771e317c-880c-4b4a-a4c1-51d262283c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bd1592-4f8a-45da-b764-d08ea7bdf04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa76768-2250-405a-a766-33569e44dca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8418e7-c4ba-4e67-b9e4-d9e1a3fd9da0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9600d10e-4ab4-462d-9d3d-e1203ca75fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b43d605-09b3-449b-aed9-ccd2e46d31e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86afd144-4f33-436d-956c-ce4f7b1da253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d5086e-b8ba-4289-9075-ad4660d39538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0593389-904b-4be1-95df-57ce6f4d97b4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5639324-6687-46ff-83a8-6586819ea41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e935b446-746a-4094-923e-ebec5dd3428d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a62f6c6-ede4-4b56-9414-e3ca4f53c211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7a56ab-b958-49d7-a8b0-2f2fbd5e9a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0815d828-8027-4133-8c35-f313d872db3e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de574c0-84bb-4151-ad7e-94c26642dc2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b4ef738-95c8-4962-ac1a-a46156514959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfba1b6-1533-45d2-b19a-2b5cabfc1686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b38046d-5dd7-4741-9a67-bcfd23c13362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251fef0a-93e7-4213-84f3-7eeee0321b6c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0636f1e7-ef9f-48fb-a294-4c809f1c5886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc34efdc-bb06-4f6c-9e6c-b37058885ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cb4f19-09d5-4e9e-9582-23de0e1bfcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a3ed4d-ca0f-411f-a254-dabade20f6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d686d1a6-7582-40d2-be96-24f354e5ff7a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c1a4dc-8a15-43bf-8c55-2bb9187d8587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2cbe1ad-1e16-45d0-92ac-158d67264dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954b3bda-0112-4aa8-b97b-82f17c33b4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee90b4ea-46f1-4e03-a1e8-2a82c907c3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e6291c-a927-4d26-a07a-9bc533d75a9b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d29ee98-0d41-4e79-85ee-dcacec542266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f58b1c6-5b8b-435f-a4e8-f892c2013a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756474ba-c3b5-47c4-b698-41848552cc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329f2f0c-e207-4873-9a95-67374651f8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d900cb-096d-4ebe-91a3-cb9bffe061ca",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff11c94-ad7d-45e6-9ea4-83ce4e0fc277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0391adf-8b35-4db2-8be4-b76f432b24fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264352c3-ca75-4c95-ab13-f0fbae12ca80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a479f1-2670-4a0f-b657-d33dd2c5b97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a89c08-0732-4cf7-b484-171293258640",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd257516-4504-430c-be61-914a06296d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fb9ee1-e122-4024-b183-c71c4a95a874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09170191-6c8f-439d-8471-8b79803eb0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25350648-3f0b-47e0-8b0f-04f5752e77af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86acc6ad-0b71-4d79-ac0c-77e4751d62f4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285f1a29-1d34-4ab4-ae1e-7d500b7eb612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5081e5ec-f40e-4057-ba38-2a17b3f25b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85e32dd-e58d-4d76-9df7-2a5bb2b21883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac972990-ad94-4a72-ae5e-1aabf0735b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0c7764-17a3-49bc-97ad-15985c12eb01",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358005f1-f7ea-43ad-96c2-be9839906f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456a39a2-f3ba-4fe5-92d5-fcd59017d9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265ab991-1674-4388-ae81-0cc50f725c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c9c532-f9a8-4372-81ff-c402539249ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d694f2-c679-412e-8edc-a74434faaf10",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe6bee2-f107-424a-81df-b6a0433b88cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db9b756-f196-4040-a8ec-8ec09dba766d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b93f15f-04b5-475f-a509-6746bf6df236",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d200c1f1-3319-437f-9457-4bff272054f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced5bea7-c208-480a-9b81-3ca8555f6ac4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9590cc60-606d-4b27-8ded-e4668f7af288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2dbbee-aee3-4e56-96f3-6729388e476d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb6d585-dc22-4051-8729-7bfab9c60e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0f743b-5550-4580-99a0-2231bd4c229f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f60dd6-8f3d-4911-b74e-cbbd279b177f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e386e6d-d6c1-4568-a04c-db1d91cdaaf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9ca7c3-236c-4477-8520-9d555a9ff0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3f34cc-3569-4a68-95b5-e21d3154ee20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846a2ba5-4499-481a-b8ea-55064aeae630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bd2a17-d6cc-4358-bbd6-83fd46b7741f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8ee23d-c96d-4c4d-bc25-078a0dd6a0eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599cc959-05c0-4517-ab29-1b7f8b006455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617760e0-0efc-4541-b6cc-4dd0f956d0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2814529-2f72-44a2-be42-4f74bbd94bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde2fedb-f5fa-474d-8001-0ee4fb976848",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b33b14e-1dec-42c8-a268-07b75beec6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50a7288-c42b-4608-83de-f0c21e56d544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac6c7f8-5eed-4c3d-81ac-024b2b1c44c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938a7028-845c-4375-b36b-c019f8c31224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f39df0-217b-4f8a-9055-c41089339c75",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ced15f3-2f8d-4955-b853-fc53112d9bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd13fd6e-95c9-4013-8b0a-62d8de33e00c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb58d9ee-0145-400b-acc6-33838c267e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cbcb32-87e5-4a18-b7bb-29d41c2d4c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5478a83c-2508-4fe8-812d-7f2d5e2bb80d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e71c8b-95e4-4412-9261-cf71fb4617fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7f599b1-9ed8-48b4-a8d8-8d30c095a361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece99230-10bf-48dd-8831-68b926e3e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e257ba35-32ab-4ae8-8c94-9ffa1090f2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ed0595-7cc4-408b-81e3-2dc95b871228",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95293c6-fc42-4a5a-b4f1-1e4e4aec7700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1848cd4d-cf2e-4719-b323-10cd8b1879d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d062f013-ed34-42b2-9507-7df765cd0407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be71a9a2-4487-43a8-9097-66bb966e5280"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fac486e2-8d5f-41ac-bffd-7a84e19842b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4847a0e0-909d-4ff8-ae91-d8d0590b65b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c115486d-5a14-427d-9257-12113c52ce41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b081dcf3-1b74-45b8-8c41-cab9c28ec3a4"
                    }
                  }
                ]
              },
              {
                "id": "abe61525-284d-4bc2-9cc3-eb83bf1c0ed0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23fb3610-5f03-44ed-82c1-d4232c7a2591",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62437970-dd6a-4203-b731-ef628d06c499",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7cf90a42-7011-4677-a298-119b507c4619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7674b8c-b1db-4957-8baa-19ecc5e3545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9902130a-12e4-4e81-ad17-566e7eee2675"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c685ce4a-58fc-4b04-b2d9-fc3f1b982c75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d875c8f-7f31-452d-ad61-f492fca19f13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "743cfcd8-0282-4340-a7bc-d9fcc98cc293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f469455-0a73-49ed-a5c3-dd7209ceac57"
                    }
                  }
                ]
              },
              {
                "id": "deb782b6-3ebf-4448-9fb2-797af62faf68",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9c021bc2-0185-4062-a288-ad65cd74228f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8f41c4-74f8-4ec7-bb96-bc49ac7f5737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2040a240-37ba-4436-bbae-75b49913b636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae2e90f-4faa-4339-a125-5c805e38f18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b383aa8a-8345-4ac4-b531-5a92d0a6facb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17119655-3403-4a45-8b9d-10b7ba978360",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e084e753-009c-4397-a311-cfae5a967290",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dd1ada8-20e0-406f-8d73-faed540260e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd30dba1-4121-4273-b2bf-876d72dcd00f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b12499e-3222-43ea-aeda-41371e4a3741",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1edc8912-f695-42c0-a958-3d4c1ef224ce"
                    }
                  }
                ]
              },
              {
                "id": "7c413e6d-8544-4443-a88b-3d6d69696b73",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38e4c850-de72-4155-b39e-3cc68bbc8c6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2ee0ddf3-d461-452e-9726-87195099b8d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b18488b9-223d-42a8-9230-22b06d1c754a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4035c90-c376-44ac-8876-202cb0459376"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63409a09-899a-43fd-9152-617f57a7e6aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "572b0cfe-7ff4-4353-a0e7-d111f2c45bf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcd6134c-44f9-4564-9e6a-f48d4d58b440",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d176b8a0-4041-40cc-84c8-cc67fc4120d4"
            }
          }
        ]
      },
      {
        "id": "4a3cdeec-b13b-4b0b-a598-7a2a936e0a30",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c7b69cbb-0af1-4992-a49f-74b4a90f29f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "400f41ae-c735-4ded-b70d-1da8aea26042",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "833b0b9f-3745-428e-bbb0-7f72275a1283",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035530d9-ec97-4803-82db-9172ae909ee7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "57687584-b27d-4c20-b45a-af3c37e33dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975c270d-9d18-4d43-8825-0c65fb67f960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59c119e4-d196-4b38-9725-a6681ba70359"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21193b5e-3a10-4c80-8ece-c2345df81a7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17ab954f-d957-426d-907b-dbdec0869b3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d04844ed-4423-47b5-bf6c-3904e58fb861",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7a9cf01-ec68-4c6a-af12-6a8a697b7c00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82dcf499-c0da-432d-94f1-9c989687cdf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "92882fa2-e69c-43db-9d0e-d657d3281f6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0caee88-4a9d-48a7-9292-9ee9a3420ce3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8e8d927-481f-4ccd-a4a3-1838647cb8cf"
            }
          }
        ]
      },
      {
        "id": "7f205a96-9b41-474f-8407-f2445972cee6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "968087fa-24f4-40e1-beb9-82e4e17562c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a67b641-fbe8-4093-a52a-ec0e982f6c95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da0e9ee6-00e7-4afc-a76e-8b2fccbddf47",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ed1c6e-4958-432d-a89c-175ab5403469",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6f9a221-1f01-4aca-9187-f893b3045c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1469190b-e224-4664-97de-c3615ebc59b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aedea104-7f3b-4e89-a6bb-00eaa9440087"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "436fcba2-d999-419c-a508-9dd3751815ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba13c5b4-c764-4102-89d1-e77cca8cb4be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af66568d-b9f6-4a04-8268-903bf98a2bc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5bfd3b4-2ad0-41ae-b37b-d682f176104c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a1c585a-d53c-4e7d-bb56-51935f036234",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01c30d56-d328-4d78-bec4-bccc59268d59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0684763f-d132-41c0-85de-13f7b6220bf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f52cbbaa-5049-4974-9959-d223dd864fd1"
            }
          }
        ]
      },
      {
        "id": "a4e97205-0e89-48ca-ab1e-6dd15f0e71ab",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c1c51101-f5fb-41ef-8b10-5b4fed5473c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ef58c8e-0c8c-4031-9054-fb803fed7d99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10158bde-fda0-4a9e-a4ab-138589e3774e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c8ca7d-16b9-46e0-a323-f91b481361a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08bea6e9-855d-40d7-9c64-78d8a4d966bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48c8244-92ba-4ad9-9374-aa1090d36ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "272762d2-7f73-44e4-b1f8-e80622224970"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73f9faeb-8657-42ca-821b-ea26b2c65a82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f65d81e-5f11-46bc-8e4b-f9c2c1d89461"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ed243b9-9f65-4298-b617-f82a92c9b560",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25d712ce-55e2-42a9-8eba-4fe3cbfab5a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04b43b1b-7e62-4cfe-964c-11f1fab434a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4858b5bc-bf48-4cf0-9272-5834ba2d2804"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a40440b-48cf-4d31-9b0d-8bc030743155",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18219759-a805-4dd9-bbe0-816ab4feb5b5"
            }
          }
        ]
      },
      {
        "id": "2ef6f51e-3a61-4cf6-89e0-28435966852a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e9bbd90-94de-4ca8-87f1-0e446735ffcf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5ca9457-3882-42f0-9e2e-28b324d2fe89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "906b2e23-9bfb-477c-af4d-bea7b8ede6a5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75a3cfd8-46bb-4e8c-aaaa-7f413ed05253",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "988b9eb2-5e14-4b9b-861f-77aeac74457f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 55.40873015873016,
      "responseMin": 22,
      "responseMax": 222,
      "responseSd": 19.060149235084555,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720485549786,
      "completed": 1720485572159
    },
    "executions": [
      {
        "id": "7cda6fed-87a3-49ef-9a1e-fff1c8a9a717",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "52c6f19e-e74c-4eee-bb03-96fecdb502e7",
          "httpRequestId": "4449f4f0-7921-448f-98d3-25ab5835eeab"
        },
        "item": {
          "id": "7cda6fed-87a3-49ef-9a1e-fff1c8a9a717",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0cf92d1f-24ec-41a2-bb81-4afb0eeb29f5",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "fd9ed501-309e-4f82-b009-072d82b031e3",
        "cursor": {
          "ref": "7ea772e0-4844-46a0-a05b-a676da8c3088",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "80c794b8-f9db-44fa-a6a6-5895e28df9d0"
        },
        "item": {
          "id": "fd9ed501-309e-4f82-b009-072d82b031e3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a3425172-388f-4238-a7f3-856263732362",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "0726fdbd-28a8-43be-aaad-ad723f5ea692",
        "cursor": {
          "ref": "b265b84b-6770-4af0-b79a-e37288d26876",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3eb4483d-4d69-4cb8-b561-e8379dde4f3d"
        },
        "item": {
          "id": "0726fdbd-28a8-43be-aaad-ad723f5ea692",
          "name": "did_json"
        },
        "response": {
          "id": "43aa003c-faa4-4925-a64a-89014611ce12",
          "status": "OK",
          "code": 200,
          "responseTime": 222,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d883b19-d218-4b47-8c96-2efa4c6696c9",
        "cursor": {
          "ref": "356eeb45-509e-418f-b1c2-a03976d7753c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d3262028-48c8-42d3-b13c-26c19260134c"
        },
        "item": {
          "id": "5d883b19-d218-4b47-8c96-2efa4c6696c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "950242a1-6c21-41a1-abff-6a9ba9135bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d883b19-d218-4b47-8c96-2efa4c6696c9",
        "cursor": {
          "ref": "356eeb45-509e-418f-b1c2-a03976d7753c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d3262028-48c8-42d3-b13c-26c19260134c"
        },
        "item": {
          "id": "5d883b19-d218-4b47-8c96-2efa4c6696c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "950242a1-6c21-41a1-abff-6a9ba9135bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2add753e-6f12-4ce1-adb9-7f28a58a485e",
        "cursor": {
          "ref": "c36beeae-33f9-4cb1-865c-5591c2f2574e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e6464a3a-d8e7-4d89-b60e-ceea0a514317"
        },
        "item": {
          "id": "2add753e-6f12-4ce1-adb9-7f28a58a485e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9418fb11-0d9b-427d-b00e-edffd451a58b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 222,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cd0276-10a8-47c5-9383-299f255477ef",
        "cursor": {
          "ref": "526a8bab-b5b8-42b1-b036-b989ed33fb72",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f0e56751-7bd3-422c-8799-0ad725b2f9c4"
        },
        "item": {
          "id": "f0cd0276-10a8-47c5-9383-299f255477ef",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5f82e7fe-2763-4a7d-9458-161b3c9479f8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb6d2ae-4025-4461-ab2d-1f8a57719c76",
        "cursor": {
          "ref": "6c98ae52-c5c9-414e-ae2f-15c997fa6059",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4e58fa16-0d4a-4345-8b0c-59d3bcb5c4a0"
        },
        "item": {
          "id": "4bb6d2ae-4025-4461-ab2d-1f8a57719c76",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7a93826e-9542-41cb-b9a3-d673dc02e44f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f01613-36e4-4fe0-8c78-7d667b38aec5",
        "cursor": {
          "ref": "6dca9d62-dadd-41b1-97e3-fef824bdfcf6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2df9246d-ca38-4acd-adc1-4d53eac46b6d"
        },
        "item": {
          "id": "56f01613-36e4-4fe0-8c78-7d667b38aec5",
          "name": "identifiers"
        },
        "response": {
          "id": "d32790c2-8df2-4e07-8d32-f79434108716",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cd29a0-4a3b-47c0-8595-d5e4a65a2119",
        "cursor": {
          "ref": "05b38651-ec9d-42ef-9d26-7d83f8861e02",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9cb7b7fe-8e23-4503-b468-6c64cc217a2b"
        },
        "item": {
          "id": "c4cd29a0-4a3b-47c0-8595-d5e4a65a2119",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "93bf6cef-9112-4a16-b971-ca7e777ca1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0823fc6c-b92e-4ca8-bb5b-97da4ec4d5b4",
        "cursor": {
          "ref": "97061659-f386-4147-92c0-e57ca59fb991",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24e5ee8b-1c88-4a4f-8c78-665ae6d18386"
        },
        "item": {
          "id": "0823fc6c-b92e-4ca8-bb5b-97da4ec4d5b4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "728f7c9d-4a43-4c58-9311-eaef933c8ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50063285-7045-4264-9f76-1866b147c17d",
        "cursor": {
          "ref": "2a6b434b-420c-4c8d-b5e5-026ec9533b5e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f1bed48b-8926-4b5b-94d8-5d9bd9389ef9"
        },
        "item": {
          "id": "50063285-7045-4264-9f76-1866b147c17d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e4ec1ece-6ccd-4ab8-968f-037e1439bd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be171a4-d59d-40cc-b387-407683529f48",
        "cursor": {
          "ref": "73b91776-3884-44fe-b330-2b5ecc231da7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "46334ef6-ed18-42fe-b9c3-bff72d35f3ff"
        },
        "item": {
          "id": "3be171a4-d59d-40cc-b387-407683529f48",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fa5184e9-3bf4-4196-90ba-15b772f38492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750758b7-9e49-49d7-b917-389ffbd7302b",
        "cursor": {
          "ref": "10234590-ca8c-41a2-8873-d5872af852e4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bf59e245-dd07-48d4-9353-5cc3a23e639d"
        },
        "item": {
          "id": "750758b7-9e49-49d7-b917-389ffbd7302b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7a671a2c-6ece-46ab-8612-85519a9efdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202681df-2160-4519-8b53-4d9701faecff",
        "cursor": {
          "ref": "e90fb944-5ca0-452b-b1d8-22a684b67908",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "638dc95c-da90-4f4c-a0cf-f11813f3bbf9"
        },
        "item": {
          "id": "202681df-2160-4519-8b53-4d9701faecff",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dd099c4c-6c27-4bc0-8549-df2b01169ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e6a3bc-70f9-480e-a56f-bfed29371b72",
        "cursor": {
          "ref": "dab499f6-d09e-4c8b-b1f5-efe7a75c5b71",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a5cd41cb-691a-480b-b64f-bd76c5cdea43"
        },
        "item": {
          "id": "c5e6a3bc-70f9-480e-a56f-bfed29371b72",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "80b9dac7-2e64-451f-a7d8-89dcb1957b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3507463c-820f-495f-9559-247aab9091da",
        "cursor": {
          "ref": "ed67c4f8-cdc8-4ecf-807b-7f39bc5193f9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "92aff28d-4cb8-4ed9-af55-d8849da6829f"
        },
        "item": {
          "id": "3507463c-820f-495f-9559-247aab9091da",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "abfd83c4-96c7-4531-bd23-b66a3dc85b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c22e7d2-b66b-4a50-a5d0-978a36e56124",
        "cursor": {
          "ref": "7969ff60-3f1a-4203-8717-b0f2b62c529e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "94f65270-d19c-4d7f-b96f-a0ff16f42a4c"
        },
        "item": {
          "id": "8c22e7d2-b66b-4a50-a5d0-978a36e56124",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c113016a-02d0-4c63-ab76-07de94e5d1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e32fb-2840-4cce-8184-62248b9db97a",
        "cursor": {
          "ref": "f5129174-55e1-4727-b987-95d2b86d8991",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c16ce51f-6180-4aed-847c-0f9c92824df5"
        },
        "item": {
          "id": "d20e32fb-2840-4cce-8184-62248b9db97a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a455ea3f-e398-4fdb-a3e4-182453a64939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0d73ee-77d2-4fbd-87d2-71c54162e9af",
        "cursor": {
          "ref": "2d836a3e-8966-48f0-af87-e4d289441d2c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "25675e3f-9dd2-4eca-aca0-7247bf086902"
        },
        "item": {
          "id": "ab0d73ee-77d2-4fbd-87d2-71c54162e9af",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d20761e2-e92e-40b4-bf2f-4d53b6680bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d1d714-2bd2-4bf4-9120-ca2af6e94530",
        "cursor": {
          "ref": "10f3b2b2-5b6b-4f9e-809b-b9dfb9b9c1c3",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "83716589-692b-49bd-83ab-46cfcad576e6"
        },
        "item": {
          "id": "45d1d714-2bd2-4bf4-9120-ca2af6e94530",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "19019fb5-9717-4c70-96ab-2e029f7926aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7580d2a-45d5-47a5-a8ae-f2f217627a89",
        "cursor": {
          "ref": "1ccbf6a4-722b-468f-88e3-b4ecaf6d54de",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e8c44636-44e5-43dc-9abe-a4cf56980d37"
        },
        "item": {
          "id": "a7580d2a-45d5-47a5-a8ae-f2f217627a89",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e0a72542-76c4-40c7-9718-b383ce7a16b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f957282-dced-4fb2-a70b-0aa079d9fde1",
        "cursor": {
          "ref": "2b1f72f1-c28c-4a81-ba3a-67813637306d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7076313b-8619-4969-b301-9441ff44dfce"
        },
        "item": {
          "id": "3f957282-dced-4fb2-a70b-0aa079d9fde1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6f4e5da2-abfb-41f5-9d10-8fc9488253a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bb3d3e-5911-4cdd-8021-b7c1b1233519",
        "cursor": {
          "ref": "b9dd92e0-eb02-47b6-ac4e-6778c1effac9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3ea94987-f98d-479d-a2c0-3af2f53295f7"
        },
        "item": {
          "id": "03bb3d3e-5911-4cdd-8021-b7c1b1233519",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6ac21711-c7df-43f4-994b-19b51dbdde94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f167ab-5d9a-491e-93c2-0aa0ba682291",
        "cursor": {
          "ref": "6c7d3932-103d-410b-bb47-8d3313d92564",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "95dd7754-594b-4c61-aab4-ac8734d1bbfa"
        },
        "item": {
          "id": "12f167ab-5d9a-491e-93c2-0aa0ba682291",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d68864ee-563d-40b2-b02a-52322d7b8c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dd4741-8307-45d6-8a39-8dd9b5a1889f",
        "cursor": {
          "ref": "ecbcc895-fe3e-40cc-acca-d0bdea887626",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4eb7f033-dc44-4c6f-b80a-cd7017dde2d9"
        },
        "item": {
          "id": "67dd4741-8307-45d6-8a39-8dd9b5a1889f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "59dcd877-6426-4a8f-94b7-0fc1ef4bd1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2752810-a110-4213-9613-7c28bb2c9402",
        "cursor": {
          "ref": "7d1be1df-246a-4692-ab20-2c0ddff03a6e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3257e69e-834d-4d41-9268-1d9be49df204"
        },
        "item": {
          "id": "d2752810-a110-4213-9613-7c28bb2c9402",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ba50cfad-af33-454b-83bf-177a5744cb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d13f36-1abb-4467-a819-03d2041934f5",
        "cursor": {
          "ref": "7adb3b48-ba42-49e9-a8dc-d433d7d8393d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "72f1d480-2bd0-4049-ab04-c741a641b0de"
        },
        "item": {
          "id": "95d13f36-1abb-4467-a819-03d2041934f5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3cae0044-1334-4f6e-a220-5de255810ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df62cdc0-b11c-4a21-996b-c54b60140793",
        "cursor": {
          "ref": "7082b558-817b-4f27-be1e-c85f864269a6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ff2a4a7b-4e6a-40c4-bb20-5a1e872af288"
        },
        "item": {
          "id": "df62cdc0-b11c-4a21-996b-c54b60140793",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7a634dc2-6f5c-4a36-aece-4f3c12c41d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24fd81e-0cb9-4e9b-a2e6-262f89dd7c3d",
        "cursor": {
          "ref": "56a42c4c-3305-49b8-97d1-acd9ec3dcb99",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1b826405-49d9-4db6-9353-e196f910dac9"
        },
        "item": {
          "id": "e24fd81e-0cb9-4e9b-a2e6-262f89dd7c3d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9b9558a1-66ce-418b-8186-9b96ed576b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82164012-95a6-463a-b7c2-d840b14fa212",
        "cursor": {
          "ref": "a5d04f63-64e9-469a-8c1f-a72640bcfa76",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "840efa83-4f17-4bf6-8e73-c29f15272193"
        },
        "item": {
          "id": "82164012-95a6-463a-b7c2-d840b14fa212",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "22107a7e-2b2a-40fa-903d-b3303218748c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54e20f4-5200-4200-af6d-aa87e4dae771",
        "cursor": {
          "ref": "88c300d1-71ad-43e0-bdc8-62b8cd7d8aa6",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fe6356b7-9d21-4531-a0cc-891fb882fd1f"
        },
        "item": {
          "id": "b54e20f4-5200-4200-af6d-aa87e4dae771",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "896c0b89-65d7-45d2-bda5-e6dd50473f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d11853b-f0f8-422f-9fdc-0327ba079a66",
        "cursor": {
          "ref": "c02ac08d-f51c-45bb-83c1-dd20a860e190",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e0a7b9ee-df79-491e-b913-e1dce4443485"
        },
        "item": {
          "id": "2d11853b-f0f8-422f-9fdc-0327ba079a66",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bf55795a-3d90-4af7-aa1b-7a71d91e4fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5fcd13-4887-43b3-90a4-f9620f8249e2",
        "cursor": {
          "ref": "ec924311-d30f-4d0f-b936-4664f2a79d88",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "69c6bf09-8fb6-40b2-a757-8c540835b60e"
        },
        "item": {
          "id": "0d5fcd13-4887-43b3-90a4-f9620f8249e2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7c4731cf-6a6f-4be4-838f-6259b53863d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a224aaf3-7bf1-4692-92ab-4c8474c593f6",
        "cursor": {
          "ref": "c4337c86-0a44-457f-97dd-871668e24e01",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "84a97cad-7ad8-423d-bd02-c4ef7e6fc945"
        },
        "item": {
          "id": "a224aaf3-7bf1-4692-92ab-4c8474c593f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3de66cdd-20db-4b0b-92e7-47f92ad93694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61c37e7-0ac5-42e8-8219-e1ff3174599b",
        "cursor": {
          "ref": "c3d6603d-7649-4554-8a0c-cd3251c6c546",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5a6c0d38-201c-4511-941d-a672f3241197"
        },
        "item": {
          "id": "c61c37e7-0ac5-42e8-8219-e1ff3174599b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7c4301e5-e1f2-4777-bf49-e7e14155aaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1c1c4e-5c53-475a-b4b9-99e141e4111a",
        "cursor": {
          "ref": "d2017c42-7809-4de3-8b67-1102324d1ed3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "348ff67d-9138-42bf-af0b-aac10f018bb8"
        },
        "item": {
          "id": "be1c1c4e-5c53-475a-b4b9-99e141e4111a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d8efad99-090c-4dea-8482-db36396fb769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aecd5a6-5cb8-432f-8879-332c83b139c5",
        "cursor": {
          "ref": "dba3ec0c-eaa6-4436-a79b-bd86db8df479",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "589d1979-de8a-420d-b224-952fb386ff19"
        },
        "item": {
          "id": "2aecd5a6-5cb8-432f-8879-332c83b139c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "17725697-8987-48e9-920c-3f1b3d05a6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06839433-e260-44c6-86a5-4d15aff37625",
        "cursor": {
          "ref": "e8a57413-e436-4e5b-8f67-c0545cff5f36",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "31fcad87-7977-4e29-96d9-1613cf7e6f7b"
        },
        "item": {
          "id": "06839433-e260-44c6-86a5-4d15aff37625",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6abd1876-5c56-40a7-9e1b-590ed695e7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06872311-195c-40a0-86bf-7f60e9748380",
        "cursor": {
          "ref": "a93e612b-edc4-4200-9eca-98e1cae46c9f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4c0205da-dc0b-4854-8a32-14e32532b28c"
        },
        "item": {
          "id": "06872311-195c-40a0-86bf-7f60e9748380",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "460f1a09-cea8-401a-b57f-6d10369f058a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ad141e-f178-436e-8234-78c9725305e6",
        "cursor": {
          "ref": "d3189ea1-2eb6-464a-b5c8-50d1589bfee5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "acd535af-754d-4b03-b1f5-75ed0c7110bb"
        },
        "item": {
          "id": "d7ad141e-f178-436e-8234-78c9725305e6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e1cbaa35-aee8-47e8-b9d1-23996ce95345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2544a1-1fba-43e8-bfbc-48b4be88d7fb",
        "cursor": {
          "ref": "97db3106-3095-4dc7-b0e0-58ce947fce89",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dca0d900-14a8-44a4-9026-5ad1ee0fe584"
        },
        "item": {
          "id": "cd2544a1-1fba-43e8-bfbc-48b4be88d7fb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "03f5865a-12c7-4cd4-96ff-74f4ec4f16e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941ccd45-5ffe-44c2-8cac-cd793dafa8e2",
        "cursor": {
          "ref": "0517220e-12ec-462a-b9a6-66b894dbcb74",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f0adec0a-e747-4b3e-8154-e49c5050c3a3"
        },
        "item": {
          "id": "941ccd45-5ffe-44c2-8cac-cd793dafa8e2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ec959214-7897-4ce6-97a5-fb56ee1ecd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bb9487-febf-4b28-9034-f32e91f22d10",
        "cursor": {
          "ref": "daec6cc9-200a-43d2-bf83-f75c0dc36029",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b7c318d6-06d3-40bb-a213-aacea281c253"
        },
        "item": {
          "id": "f7bb9487-febf-4b28-9034-f32e91f22d10",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "03b83d3b-80ea-45e7-9672-617b9324d366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91491b8-300f-4b27-8ef6-bf126e644f21",
        "cursor": {
          "ref": "d6b258b8-c63c-4132-8f50-bc25f34e01e4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4bed4bc6-2902-419f-8b23-4b4738c121bc"
        },
        "item": {
          "id": "d91491b8-300f-4b27-8ef6-bf126e644f21",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fbf4bc93-99cd-4464-9ed9-dd72af78a23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4f5fe8-a765-405e-98bc-a7343efac66e",
        "cursor": {
          "ref": "d1481a81-9ce1-43da-819f-d80067f8a574",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e2658df2-5bfb-432d-9729-099232ff9a61"
        },
        "item": {
          "id": "7e4f5fe8-a765-405e-98bc-a7343efac66e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cf16eb04-1f24-42e8-95bc-5ae5451370a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3531dd11-3016-4fd7-a191-1d7e711d0983",
        "cursor": {
          "ref": "1e44aa49-508e-4612-aeb6-a4fff5f68df8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8e965d52-93b5-43f8-a138-c83b6eb70066"
        },
        "item": {
          "id": "3531dd11-3016-4fd7-a191-1d7e711d0983",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f44ff3a9-c7b9-4bb9-8b44-a32e5c48ed24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c91dda2-d98d-48b7-86df-77b6784a7d78",
        "cursor": {
          "ref": "556d29c0-5631-4405-b0c3-3979a53c4379",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "79eb37b0-165b-42fc-9df1-5ae37613fbbf"
        },
        "item": {
          "id": "3c91dda2-d98d-48b7-86df-77b6784a7d78",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2954e5dc-58ad-4350-9236-db3af2d5dc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0375c5-ac9b-451e-909d-1b5aacd1f25c",
        "cursor": {
          "ref": "97f2c4e4-c417-47bf-bc37-25b4a9a504a8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e239c1d8-fa9d-419b-b71a-cafc490886e9"
        },
        "item": {
          "id": "7b0375c5-ac9b-451e-909d-1b5aacd1f25c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "38548d06-ad90-43b2-918c-5350ed5f5ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b988d704-593b-4d08-a8ea-9bb3235458ea",
        "cursor": {
          "ref": "51daf8fe-ddeb-4ad6-a094-c52e4928df82",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "26df0588-d905-4a94-a3a5-99d42e9fdabb"
        },
        "item": {
          "id": "b988d704-593b-4d08-a8ea-9bb3235458ea",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fa034d5a-7e01-440e-91f7-7bca4522378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e841d1f-aecf-4e22-87ff-5e53667d081e",
        "cursor": {
          "ref": "53cd4b05-7240-458d-b424-c0bcc832109b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4fcf9cd1-9826-4765-a6bc-9243185b9f31"
        },
        "item": {
          "id": "9e841d1f-aecf-4e22-87ff-5e53667d081e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5e3e92f7-2484-41a2-9c61-9834a869577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6289bdda-cd53-4679-afcf-95b74302ce4c",
        "cursor": {
          "ref": "55bc0e47-0c59-4839-b0d4-ce48a5c4ec98",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "13a457ad-6536-4619-8116-0eb804f2e517"
        },
        "item": {
          "id": "6289bdda-cd53-4679-afcf-95b74302ce4c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "744af372-4353-42e0-9ffe-7fe7303f401c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e806c8-e133-40ac-b758-473d22b183b2",
        "cursor": {
          "ref": "2545494e-452c-4b55-9cdd-a27469d90cf0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4a63b9b9-8254-44fa-8ed1-3ba8b32aef83"
        },
        "item": {
          "id": "21e806c8-e133-40ac-b758-473d22b183b2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5bea12ac-9065-4d98-93b8-501c9a5fc6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89924135-e277-447e-b1ab-58c911a80a4b",
        "cursor": {
          "ref": "02d0dcdf-b88e-4987-93a2-ac40bf5a7e37",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "63674c47-edd0-41db-9374-2e62548d6ebb"
        },
        "item": {
          "id": "89924135-e277-447e-b1ab-58c911a80a4b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1598e9c8-8018-4182-a385-cf9af054f2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98553299-c742-4c3f-b41d-c27141d7600d",
        "cursor": {
          "ref": "30ffa06a-192c-4a60-8cb4-f319486e25d1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dd4aeddf-c699-4510-a48e-c8081a9bbd61"
        },
        "item": {
          "id": "98553299-c742-4c3f-b41d-c27141d7600d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4ede3d8a-e52a-4a5d-8321-ecac4b1da99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7990eeeb-644e-4320-bc21-00554d30bb90",
        "cursor": {
          "ref": "58e6c4cd-c1bd-48bc-9c4b-49ab71a52e35",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4a4c5daa-bbf8-483e-9d9a-9a3c966e9f30"
        },
        "item": {
          "id": "7990eeeb-644e-4320-bc21-00554d30bb90",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "df059c2e-6ae9-4a6c-8ee0-971e576e94a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357d005e-8171-4ea5-aba0-52fc539a2a7c",
        "cursor": {
          "ref": "5e861106-a2d5-4006-bf78-686789fb5f92",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "98dbb1ba-289d-42a6-9756-752274ffe854"
        },
        "item": {
          "id": "357d005e-8171-4ea5-aba0-52fc539a2a7c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8e1e6dfc-7df2-4a46-8356-d04b492ae317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1183c457-1b49-4419-98d5-a2f12211bcc7",
        "cursor": {
          "ref": "a052f434-66d3-4336-89ce-2299c5a4bdbc",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "30af0f3f-c3a7-4224-a455-b4912820b922"
        },
        "item": {
          "id": "1183c457-1b49-4419-98d5-a2f12211bcc7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d7498f5f-c135-4b84-8b08-fa1751591ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f187a6ca-a955-4e11-82dc-80d46f70e3cf",
        "cursor": {
          "ref": "5a74218a-8589-461f-99f8-976dec14d058",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7b712092-0988-4d9d-ab6b-24e66024826d"
        },
        "item": {
          "id": "f187a6ca-a955-4e11-82dc-80d46f70e3cf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f1acd661-0987-4deb-873c-ab7c65a6d56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a014257d-adb0-42d5-83cb-b48ab3fd0578",
        "cursor": {
          "ref": "a13e6978-90ef-47b9-9d95-f5b561fd3db5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "63ec1f73-bbcc-4e65-b003-be69ab8b29a6"
        },
        "item": {
          "id": "a014257d-adb0-42d5-83cb-b48ab3fd0578",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4944d8c-1f4a-4c4b-92c9-944f6fb66fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283e95f4-75c5-4d49-851d-2b22afa9b8de",
        "cursor": {
          "ref": "016a32ec-c2ab-492c-8827-7ad5d0cafb9b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce064144-fc2e-4c67-8bf9-cd6d08eb785c"
        },
        "item": {
          "id": "283e95f4-75c5-4d49-851d-2b22afa9b8de",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "141d9179-35fc-4c6b-8226-87598de47d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7fabb8-3a53-42ed-8085-91c68646f89f",
        "cursor": {
          "ref": "0fc408c7-6d62-407e-b254-c2cfda5f0bf2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0b4fe85e-fc61-49dd-bbf5-4803d6213b5a"
        },
        "item": {
          "id": "6d7fabb8-3a53-42ed-8085-91c68646f89f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "131cf275-b057-4562-9880-2dd57b96c7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0695808d-bd55-4461-b490-2c83314b7747",
        "cursor": {
          "ref": "c2363941-7c07-4026-b8bd-d02c2d88941b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9f01ae53-90d1-43da-99c1-13d028413539"
        },
        "item": {
          "id": "0695808d-bd55-4461-b490-2c83314b7747",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3f7d8369-9e3c-49fd-b4fb-3900f6021494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58393ee-2122-42cc-a212-73e12f862546",
        "cursor": {
          "ref": "e1b707fd-08a6-4d4a-8809-0428ddc23005",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "99479e8b-ba17-4a6c-974e-5254c3d31efd"
        },
        "item": {
          "id": "f58393ee-2122-42cc-a212-73e12f862546",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6c441ed8-6c4a-491d-8b71-4a595e3b87bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c632e1-3063-4249-b994-2a7c3857c201",
        "cursor": {
          "ref": "7abcf3bf-a118-417e-a1e3-c1e087dfcf00",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0045a1d1-79c0-493a-aa64-2646e885dd98"
        },
        "item": {
          "id": "e9c632e1-3063-4249-b994-2a7c3857c201",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "32d4a21f-5589-46ff-9fb0-3430020c1c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89431020-6adb-4463-b165-dcbd9a4cd64a",
        "cursor": {
          "ref": "b99dc543-b1aa-48ac-974b-a6a0ea694c36",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cf26d811-9c41-4700-8bef-da8f6a065d03"
        },
        "item": {
          "id": "89431020-6adb-4463-b165-dcbd9a4cd64a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e4d8ea73-ce50-4788-9a00-daa5c3808b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0397de-9f16-4446-95f4-c8debaefcc7e",
        "cursor": {
          "ref": "599e0111-7ba5-4b94-b86b-bea68624d2a1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8e3c464c-4f93-4825-8dbf-9361566b9e3d"
        },
        "item": {
          "id": "1e0397de-9f16-4446-95f4-c8debaefcc7e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "813bfc9e-9d51-43f0-9098-b6818cc9f445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c63d07-d4a3-457a-853d-5558eade0bad",
        "cursor": {
          "ref": "c8e6bfb4-db62-4dcc-b381-895f9fee8da1",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "38594100-d9a9-4937-9398-4a46f199b245"
        },
        "item": {
          "id": "30c63d07-d4a3-457a-853d-5558eade0bad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d6033fa5-fbfc-4a5a-a956-42c024b5b520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea653e7-e84f-48b7-9512-8a931b63f1d5",
        "cursor": {
          "ref": "77cb814b-1a18-4fac-b562-b6ecc04f9fd4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e03ed11b-6c92-4393-a3bb-ec0050e38ab5"
        },
        "item": {
          "id": "5ea653e7-e84f-48b7-9512-8a931b63f1d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6fb5066c-1a54-43e9-82f9-53d0bac9190a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a2f185-548a-45cf-8cc7-eb23c412f347",
        "cursor": {
          "ref": "4a39c06c-0fd0-421b-a228-cbcf4b7367f6",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cef1dec3-4004-4f60-9996-b58878370e0d"
        },
        "item": {
          "id": "79a2f185-548a-45cf-8cc7-eb23c412f347",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7bd820fa-8db4-412c-b247-afa08dbf5fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13138b0d-a3a8-461b-a791-666c94b6e35b",
        "cursor": {
          "ref": "96df8cc9-4390-46cb-a5ce-c700c57aebaf",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "262cd275-4c4e-44ae-b440-ae9a13f7dd5f"
        },
        "item": {
          "id": "13138b0d-a3a8-461b-a791-666c94b6e35b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2d2e2309-6667-44d3-9724-ddaf7e59573a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a7378a-2422-4079-8ad8-6816ff8aece6",
        "cursor": {
          "ref": "9451593a-edbd-4d82-b80c-34bd4efdea83",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "efb2bf0b-6104-48ad-8110-ae90777d8a6e"
        },
        "item": {
          "id": "c0a7378a-2422-4079-8ad8-6816ff8aece6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fe7a417e-42bb-4f95-ab7f-3dd3f9daa957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c625069d-891c-4ecc-945e-03f8e8cadf5e",
        "cursor": {
          "ref": "e4689ae8-33ab-426b-974b-d7f7cbff0e6b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a11d3584-a801-4773-b670-1ef507675a95"
        },
        "item": {
          "id": "c625069d-891c-4ecc-945e-03f8e8cadf5e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "be88eb86-be93-4237-bfd1-9b2a2230ae02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cd4fb9-3f81-4a85-87f1-b19cccce7ae4",
        "cursor": {
          "ref": "8e455b89-bb5f-4a6a-b329-f93fa80febde",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5bf799c5-03c6-4140-b647-470ab8b7bfe7"
        },
        "item": {
          "id": "54cd4fb9-3f81-4a85-87f1-b19cccce7ae4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "23fb17a9-72ee-486d-aabb-f7ffa98acd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f761f967-8c6f-439d-aa1d-e45021da62ca",
        "cursor": {
          "ref": "2b2a053f-989f-468a-a5ce-71f2f9858c7d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a7c9f63e-6d30-454c-89f7-0b227f2b3af8"
        },
        "item": {
          "id": "f761f967-8c6f-439d-aa1d-e45021da62ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f751d14b-7767-46ec-a2ae-7d9b0b706ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210b4ebf-21cb-4d77-a7d4-6702b73bf64d",
        "cursor": {
          "ref": "16e6d420-6af9-482d-8511-4d7273dcc495",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8c979909-d1bc-4cb0-80b8-26eac95cf339"
        },
        "item": {
          "id": "210b4ebf-21cb-4d77-a7d4-6702b73bf64d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4192b7bc-7080-4e75-b892-676a41aad5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240e9fe6-27ef-42f1-895e-74f9b8c73ed3",
        "cursor": {
          "ref": "09af81a3-8a90-49c3-be25-f56f5cf06a53",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0e1934de-30e1-4a74-bdfe-0d208b0f7bd5"
        },
        "item": {
          "id": "240e9fe6-27ef-42f1-895e-74f9b8c73ed3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7a41871d-dedb-4d2f-a8fe-d68790f9469c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c7d167-e19a-47d5-be07-13ab9bec597a",
        "cursor": {
          "ref": "0124c9ef-8377-4a8d-acd8-9876be16c67e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dc206f47-b56d-4f32-bbc4-e8ad17ca344a"
        },
        "item": {
          "id": "71c7d167-e19a-47d5-be07-13ab9bec597a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b6bfc92d-b7a1-4924-bcd1-4901227aede6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680673e0-ba9a-41b3-834e-65ab7f3ca528",
        "cursor": {
          "ref": "3c8f2570-33dd-49ee-a46a-fe5bbdfb6675",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f38f9e5d-b14b-4339-9586-55325d83147d"
        },
        "item": {
          "id": "680673e0-ba9a-41b3-834e-65ab7f3ca528",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3108543a-13ea-4e6e-89f9-183054fa72b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b596104-3faf-46b0-a728-a656363b76b2",
        "cursor": {
          "ref": "66f4322e-6df5-4add-8827-642b2d2546c5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e90cc122-b959-4fb1-a9c3-68c43229d17e"
        },
        "item": {
          "id": "0b596104-3faf-46b0-a728-a656363b76b2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f429566d-981c-4a27-874f-60cbde36af20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee8e15f-26f8-4a87-b7ca-29d7f8eb0282",
        "cursor": {
          "ref": "bcb34a85-0c6b-4740-a76a-04f213cde2f4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fcaa3fd2-a135-4248-a87b-40e66b977640"
        },
        "item": {
          "id": "6ee8e15f-26f8-4a87-b7ca-29d7f8eb0282",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ac3993aa-8e39-4853-97d4-20a178d5012b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee284e7d-7100-493f-8142-ea750596bc10",
        "cursor": {
          "ref": "613393a7-6764-4585-90db-08cfedf92c88",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "baae06c4-95f6-4263-b7cd-df1d570f9d67"
        },
        "item": {
          "id": "ee284e7d-7100-493f-8142-ea750596bc10",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e2a37c0c-72e5-4502-acf1-a87b73ab0918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b07655f-bc24-4713-bd49-4ee8c7d7579e",
        "cursor": {
          "ref": "2b082bd8-2eea-4895-b35c-6b8e7574177f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1b5f28c8-44c9-4471-ad62-28bc9a011e69"
        },
        "item": {
          "id": "0b07655f-bc24-4713-bd49-4ee8c7d7579e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4e9e98e6-07f3-4a55-9aee-16f11f6ff282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb2afdd-fac3-4832-8672-e1190abd47af",
        "cursor": {
          "ref": "ba34658e-1a84-4b7e-947a-4359c07766c1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2f37671a-0b4e-4da0-8c31-17b3d82da86d"
        },
        "item": {
          "id": "4eb2afdd-fac3-4832-8672-e1190abd47af",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d1a939b8-a901-46a3-b0bc-cfadbd607608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3f13be-aa6d-47c0-a6c5-24746f5f4ece",
        "cursor": {
          "ref": "f7de574c-b715-4755-8693-7b07bc361831",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d9f7b66f-69de-4327-89be-dada3f2462e7"
        },
        "item": {
          "id": "2b3f13be-aa6d-47c0-a6c5-24746f5f4ece",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c9979ae4-b3a5-4d90-8105-f62d41542b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b1d190-75ba-4ff5-af04-9c3f58227157",
        "cursor": {
          "ref": "dadadc01-9ed5-46a9-a708-601992ef5ab0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "32cd7cb7-6140-4a43-9fc6-08ff48a6b91a"
        },
        "item": {
          "id": "07b1d190-75ba-4ff5-af04-9c3f58227157",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8c1b08ba-3513-49d4-aab3-b72566be7c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32347234-dcb2-4b5b-97bc-a3df685eb720",
        "cursor": {
          "ref": "811a082f-5d53-4f1a-a82a-d056d3048e6c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7934b8f3-e89e-4908-b854-41968602dc13"
        },
        "item": {
          "id": "32347234-dcb2-4b5b-97bc-a3df685eb720",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "84d2db84-63fa-47c3-bcb1-53d075613e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d7455d-dccd-4d49-be9c-47f95fd6943c",
        "cursor": {
          "ref": "e72d95a0-97e4-4667-b4d1-2f37cbf47acb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "337cea3f-9a16-4bb0-ae44-173d72690f13"
        },
        "item": {
          "id": "f1d7455d-dccd-4d49-be9c-47f95fd6943c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6b815b86-e23c-44e2-96bb-ae865f0c8cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39ee903-3575-43cb-be66-06f4fdcfc3e4",
        "cursor": {
          "ref": "0a037694-310c-4fd6-a458-465447589ffe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e488de5d-d528-4557-aa5c-4e1eed7905a2"
        },
        "item": {
          "id": "a39ee903-3575-43cb-be66-06f4fdcfc3e4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d19b849-fb73-48f2-83f3-b0d7b279fd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240d96a0-b1a4-4eea-95f2-aaf9eacfef93",
        "cursor": {
          "ref": "e49705cf-ff82-4927-a6a8-1467bccd049e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b87cedcd-0f5e-40d5-b83d-f165544534c2"
        },
        "item": {
          "id": "240d96a0-b1a4-4eea-95f2-aaf9eacfef93",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "990a1535-b214-4939-a851-9b4a66216402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cf187d-5afd-45b3-a42a-6a126864ad23",
        "cursor": {
          "ref": "c1dd1bb6-54f9-4b7f-a26d-f4ef4f8bb293",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fc407878-2f7b-47c5-870a-7171fb2180d0"
        },
        "item": {
          "id": "01cf187d-5afd-45b3-a42a-6a126864ad23",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "968f4ac0-70f2-4224-8fef-a48ca393997c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38ae3eb-a46b-4e27-9d4e-774625171425",
        "cursor": {
          "ref": "2e51bf80-aea1-4508-b8bc-2a908ee0e292",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ed65ca3d-320c-4e65-bae1-a90f8da0b73e"
        },
        "item": {
          "id": "f38ae3eb-a46b-4e27-9d4e-774625171425",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "997a9968-91bf-4f47-bcda-dba63ce04bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dfe4c4-2b26-492a-965a-f9ed21296a4c",
        "cursor": {
          "ref": "bd054236-a9b2-4ced-ab22-6d11d9481ee9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fe47b1a9-a58d-4d32-b268-9f45eb7bb6d7"
        },
        "item": {
          "id": "c8dfe4c4-2b26-492a-965a-f9ed21296a4c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eb946315-d7f8-4388-a5d8-36876a104fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2409309-f63e-40ed-bf4e-0cb05ed6309f",
        "cursor": {
          "ref": "84b2cafc-c672-48a7-abd1-9f0c007adacf",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "37e47ccf-a7c1-4cb6-ad92-befcfdb49d49"
        },
        "item": {
          "id": "b2409309-f63e-40ed-bf4e-0cb05ed6309f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a9323625-bd1a-4638-8c99-3f2b5449b030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae5dab-1054-42a4-be3c-a4dd6f9521f0",
        "cursor": {
          "ref": "5176272d-9ca5-4a27-b92b-ec8f1dc7b0e3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0fff6450-9752-4ead-ade7-0248da73b98e"
        },
        "item": {
          "id": "afae5dab-1054-42a4-be3c-a4dd6f9521f0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d3f9e410-7413-497c-a02b-a3271697830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50399a53-2093-4780-ae10-a637c662fff5",
        "cursor": {
          "ref": "75d055c2-2019-4850-8a88-c0a83efbe18e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c40fca91-98bb-421e-9602-7b744fe4298e"
        },
        "item": {
          "id": "50399a53-2093-4780-ae10-a637c662fff5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e56d6058-4401-4707-9c7f-a911a3287797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66db1e9-4aa4-4acb-8c29-1640876062e3",
        "cursor": {
          "ref": "bdbed3b5-8024-4aa2-9211-a5b3f0ef9e5a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f6392d7f-b48f-4f94-8a18-878c253df6b4"
        },
        "item": {
          "id": "a66db1e9-4aa4-4acb-8c29-1640876062e3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "08ccb716-1f6f-44ea-949b-1ed71c05aad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f021d4a-b1d7-4b82-92d3-5f4ce2722c43",
        "cursor": {
          "ref": "4e3bcca1-9160-4a23-a8a3-ab16bdd3bf22",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ee302bf0-bc68-4672-9ab3-cc7714732ecf"
        },
        "item": {
          "id": "2f021d4a-b1d7-4b82-92d3-5f4ce2722c43",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "acd940f9-b7f4-4c06-bf5d-0edd587be23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e6f798-dcae-4dea-a2f1-bfb7da97ff94",
        "cursor": {
          "ref": "f27b172d-143a-4849-beb7-953595120f8a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "082d6921-3c4b-4805-946f-f81104303ecd"
        },
        "item": {
          "id": "22e6f798-dcae-4dea-a2f1-bfb7da97ff94",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2eb092d4-66eb-4df2-a97a-a4f79e6c5601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaee82c-1438-403a-997b-0341472e2f7f",
        "cursor": {
          "ref": "3aec4622-8344-458b-9ada-698b714f700a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0c40d113-4788-4469-b88e-b6a66777d410"
        },
        "item": {
          "id": "cdaee82c-1438-403a-997b-0341472e2f7f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "63a09b04-747f-4c58-b916-0649f8349e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097b2e60-ac1d-4daf-8c86-9f7dae242159",
        "cursor": {
          "ref": "b446e98f-557b-494c-9944-4ea5bbf44319",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "68f0705d-42a0-4585-8ce4-a165aaa2d02d"
        },
        "item": {
          "id": "097b2e60-ac1d-4daf-8c86-9f7dae242159",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "98bc86a9-1c94-4abc-9f00-9b17d4ec2638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87947f1-2c11-42ab-85de-4b6c508f5f0d",
        "cursor": {
          "ref": "95ae362f-10cb-48c1-87b3-36132f4e52b4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "774fc8a2-aadd-4620-b53e-fb722e5e430f"
        },
        "item": {
          "id": "f87947f1-2c11-42ab-85de-4b6c508f5f0d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "803f38e2-5698-4ceb-bffd-f510db68135b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b99eb3e-fe41-48e6-9587-04101694b68f",
        "cursor": {
          "ref": "50661e25-b696-482f-b47e-293166ea0398",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8a74294-d400-40c8-95f9-25ee1bcdc652"
        },
        "item": {
          "id": "3b99eb3e-fe41-48e6-9587-04101694b68f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "24b0ad41-cd01-4723-b84f-9525d3727600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3a852e6f-b335-4d74-bba6-47316784e4f3",
        "cursor": {
          "ref": "0743ba33-6bfb-4e62-bdaa-224fd3e2e340",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0fe5bdc9-1ff6-4bbf-b18b-3b0f9ff03460"
        },
        "item": {
          "id": "3a852e6f-b335-4d74-bba6-47316784e4f3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a40b4a68-1aeb-4c8a-af13-15e76e0d4486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4ab7558d-7da6-448c-98a1-bd8b1ec54d2a",
        "cursor": {
          "ref": "6cdf64e8-9fb8-4480-bb0e-b986524a134c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1adc7186-7b3c-4ac7-838b-664c2e3baabd"
        },
        "item": {
          "id": "4ab7558d-7da6-448c-98a1-bd8b1ec54d2a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "48274858-976b-4d2d-98d9-8628b280153d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f013e0bd-05d6-4c69-9432-6816c9b4069c",
        "cursor": {
          "ref": "7986688b-8cb4-4f1b-97a8-7f9ea78ebf8a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e36a6fd2-14a1-4d97-935a-8e14e431781c"
        },
        "item": {
          "id": "f013e0bd-05d6-4c69-9432-6816c9b4069c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6509454c-f805-4ff5-9002-f0647bed35b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2914b8b3-a110-44d0-963b-65a7ab77945e",
        "cursor": {
          "ref": "82a1ef06-83f1-47fb-a22a-94e703cf9fe7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "04626bbf-4316-46dd-ade3-c6f327f39383"
        },
        "item": {
          "id": "2914b8b3-a110-44d0-963b-65a7ab77945e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8228ca27-675f-4f3f-9403-04315a0578ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e403cb62-5882-44c8-a344-391179016cf5",
        "cursor": {
          "ref": "e249d00e-99a3-4a4e-8317-be0e9a2c2eb6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "10efe148-785d-4711-83bc-c17b6fb854e1"
        },
        "item": {
          "id": "e403cb62-5882-44c8-a344-391179016cf5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b4e29e5-35ca-4f10-9f86-03cdcb45bc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2e53769d-d45b-4336-bc79-ccc473bea974",
        "cursor": {
          "ref": "9362667c-adf6-4bbc-a0da-1c1380a7a67a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "31cedf07-c576-4a76-adb8-41701a0ea5f1"
        },
        "item": {
          "id": "2e53769d-d45b-4336-bc79-ccc473bea974",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c628b4f2-2205-42a8-b231-07fdf6b14d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b452ba23-27b3-43a2-833f-2a0c0aef4fcd",
        "cursor": {
          "ref": "4a23565d-2a79-44ee-bebb-172f580349e8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8b2d9a94-b142-4053-97fe-2a3cd172765a"
        },
        "item": {
          "id": "b452ba23-27b3-43a2-833f-2a0c0aef4fcd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "30bb62ee-5b75-4a33-b6fa-43a3d364482e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d049d719-c873-4607-9015-490fd53f27a6",
        "cursor": {
          "ref": "77004fda-75db-457d-9bad-8f03b2eb9764",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e19fa2ff-1376-40a0-9a68-96d8834132ef"
        },
        "item": {
          "id": "d049d719-c873-4607-9015-490fd53f27a6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ccbc5750-60b0-44ae-aaf5-4d3b7b5c54a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3513d0bc-5ff4-4c5e-8cb3-44cb8c656340",
        "cursor": {
          "ref": "31bedde8-8afc-497d-a3cb-8290c5652c50",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "121c7ed2-f5a2-4b2a-8a1a-d3a37b3f1f0c"
        },
        "item": {
          "id": "3513d0bc-5ff4-4c5e-8cb3-44cb8c656340",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b0606ce0-8054-4734-be8a-d11396c6ba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3731ebc-f917-4788-9664-9b0266e4fbf4",
        "cursor": {
          "ref": "5484cb31-6ab7-481a-ba0c-9d671a76477f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f7f131ee-7581-403e-bc41-c5a5e3be0509"
        },
        "item": {
          "id": "a3731ebc-f917-4788-9664-9b0266e4fbf4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7c61023e-0544-4d43-8822-bb6cccaec93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e30830-f551-46c7-8148-486b9d45e621",
        "cursor": {
          "ref": "597155cb-b26f-49ac-95d6-815c669ab4e0",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "10fb4631-709d-4031-8344-d37fb26cca3a"
        },
        "item": {
          "id": "f0e30830-f551-46c7-8148-486b9d45e621",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6be722aa-f6bb-4cd4-b90a-45e72b719617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c224c5ed-6b50-4c4c-b54a-9e72f6c2f264",
        "cursor": {
          "ref": "8236bc27-487d-4671-a97a-ba271cf12a94",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4c11d8c8-f8f7-4270-b746-900d954b9c2b"
        },
        "item": {
          "id": "c224c5ed-6b50-4c4c-b54a-9e72f6c2f264",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "37bef523-ba75-4be2-a3c1-101165d8d402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54094f97-fe35-46fa-bb28-61e7f03c9743",
        "cursor": {
          "ref": "152808ee-fef8-4df0-a485-685b3415f128",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "109a916c-1751-4880-bf1a-d7a7174287fa"
        },
        "item": {
          "id": "54094f97-fe35-46fa-bb28-61e7f03c9743",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5d71ea2e-d1f0-4bb1-93e4-78f6f94cb9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9099292a-8a57-4ee3-b36c-2435f3053fca",
        "cursor": {
          "ref": "26c6f1e1-26f8-498e-872a-c5ddcf36b2a2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "94e14d3d-1b27-444f-80f1-c0bf2ab574ad"
        },
        "item": {
          "id": "9099292a-8a57-4ee3-b36c-2435f3053fca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c4281409-5ad5-4814-bd95-4a95374b32a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc586b2-2241-4cee-89df-a19f7079f1ea",
        "cursor": {
          "ref": "70ec1e59-6848-4ba2-a8c8-96fdc496b873",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "867f5f7d-92b0-42ea-bff6-9a6d2b1d4965"
        },
        "item": {
          "id": "2fc586b2-2241-4cee-89df-a19f7079f1ea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cd970258-fb22-47e9-9604-9070aed2f676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e079699f-aeb8-44f9-8fa2-409930f25520",
        "cursor": {
          "ref": "2a9a5d9d-ab49-4f39-889f-44ff3aa0a6aa",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b4c27802-164a-4a80-8d29-67fc6f8e2b2c"
        },
        "item": {
          "id": "e079699f-aeb8-44f9-8fa2-409930f25520",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41a24585-86f4-48fb-b293-8e704e1f6279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e94d3d-b033-49ec-82f6-af2afc548345",
        "cursor": {
          "ref": "06e017fb-160f-4cf2-b7d5-92e8f4bb1056",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1ec0b25e-4360-47df-875f-95f4f03aaa2a"
        },
        "item": {
          "id": "67e94d3d-b033-49ec-82f6-af2afc548345",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dff6851e-b007-45b7-9f1c-2f8e934af7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af209e1-fb56-4fa2-ba4e-dcce08b52856",
        "cursor": {
          "ref": "9f485044-282b-4257-ab11-771baa0ac3f0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3c699637-78a8-4fa2-b257-cf87626c18f9"
        },
        "item": {
          "id": "5af209e1-fb56-4fa2-ba4e-dcce08b52856",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "78606b8c-431e-487c-9936-71234508205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2af827-9b6b-42ad-8aa9-987b6794ad07",
        "cursor": {
          "ref": "8799edee-443d-4fa8-b90d-2329eb9cef61",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "46187950-3a95-467e-b1d4-75a8b396cf8e"
        },
        "item": {
          "id": "2f2af827-9b6b-42ad-8aa9-987b6794ad07",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d57e3617-d80b-401a-b3e2-44296fd1787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3859323d-0f71-4552-959c-37865d86bb0a",
        "cursor": {
          "ref": "798ce751-bc2e-4c0f-8667-8abcf84d8051",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e693a3d9-518e-4561-afbf-a9560f9fe0a0"
        },
        "item": {
          "id": "3859323d-0f71-4552-959c-37865d86bb0a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "566c5ac7-4d7d-4e12-b0b4-76fb58e6306f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632025fd-2019-4f7f-8fb9-1500d68e9867",
        "cursor": {
          "ref": "f0654424-283d-487c-ad17-c3e0b5191cf4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c597c1c8-82ed-491b-8bbc-d022eba02a01"
        },
        "item": {
          "id": "632025fd-2019-4f7f-8fb9-1500d68e9867",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ee702ec-8e72-4609-a83f-754f1279cd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4850dfbb-3003-4152-9cdc-6d2c2b91c4c5",
        "cursor": {
          "ref": "07bdde03-97c3-4a39-b4cd-6d553dc2b330",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9db87ab1-db65-4725-b852-3302995f4306"
        },
        "item": {
          "id": "4850dfbb-3003-4152-9cdc-6d2c2b91c4c5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "64802605-78ed-4ad3-9534-eddbdbb530bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc13eb8-4152-485e-8188-b8b3eac4bb52",
        "cursor": {
          "ref": "782836c8-a94b-4147-a250-6720e66f933b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1f67e9d9-a4a8-432d-ad7d-0a8809f9afd2"
        },
        "item": {
          "id": "0fc13eb8-4152-485e-8188-b8b3eac4bb52",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "819bfebb-4816-40ab-bd54-1ea92c21f3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a2b1ba-c200-4714-977c-5e59e6aa175f",
        "cursor": {
          "ref": "9753d3f4-7e89-4b6a-8e06-1b8ca5ee64a3",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "babd58c4-2cdf-45e4-8865-6819377e1352"
        },
        "item": {
          "id": "55a2b1ba-c200-4714-977c-5e59e6aa175f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f4eed979-f996-42ab-863b-2e7013b7cafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1381b7-f03c-4514-80bb-31146a805175",
        "cursor": {
          "ref": "c6975ddb-6d19-49d9-ba76-657b6303ba09",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6df474ff-da1e-4368-8ce4-01119e213939"
        },
        "item": {
          "id": "2b1381b7-f03c-4514-80bb-31146a805175",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2a4d3d9c-8e03-4cd0-ad9c-351729749a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d38d35-05c1-48ba-be48-a32a70726c4b",
        "cursor": {
          "ref": "a6349cfb-f6fa-487c-831d-b6e371b70323",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "44f26eb3-0a72-41e7-9c0e-0563783ad091"
        },
        "item": {
          "id": "b8d38d35-05c1-48ba-be48-a32a70726c4b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a1fee1c-28c5-48ec-aa8e-18186d00e554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3770d4b6-0537-49d8-a75c-66d9f87bd7ca",
        "cursor": {
          "ref": "886a721f-9352-47b4-a331-59b980af6604",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0b294c9-cf7f-4b96-ac4a-7911156c586f"
        },
        "item": {
          "id": "3770d4b6-0537-49d8-a75c-66d9f87bd7ca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ff20f4b9-c2e3-4329-bf87-b29f70bdd666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bafd23-f1a7-4366-9a77-fe417fa62398",
        "cursor": {
          "ref": "55d700f6-75dc-4a17-8038-9f80270647cc",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cf60bbb7-8161-4b02-b896-d1c9642c034c"
        },
        "item": {
          "id": "33bafd23-f1a7-4366-9a77-fe417fa62398",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "26cfe347-d4f2-4ae4-b67c-241a199e0401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099993cd-b061-484d-b41c-e7545f642a7b",
        "cursor": {
          "ref": "5a8ffaec-4112-47e7-abb8-529e37b7f75d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "66c056c0-f8b3-47e9-a880-b3b3931e44ae"
        },
        "item": {
          "id": "099993cd-b061-484d-b41c-e7545f642a7b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5342f680-5db0-45b1-a8f6-4615d09a298d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9ac4b7-80ff-4ec7-922f-322e72752ad4",
        "cursor": {
          "ref": "36a0ee04-8f78-451d-b60e-5688cd99a872",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b849cbb3-9bf8-4879-81a3-15814bcfcd98"
        },
        "item": {
          "id": "fb9ac4b7-80ff-4ec7-922f-322e72752ad4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1c0e8c76-b855-4ee2-b1f2-d6d946a77e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d13b593-3c1b-4549-8242-e84e36ea23e7",
        "cursor": {
          "ref": "4d2670ca-d06b-471a-bd3a-e10a8c7ae83f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5141b927-2967-4a1d-a318-e84c72b3b918"
        },
        "item": {
          "id": "9d13b593-3c1b-4549-8242-e84e36ea23e7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5dac6ce9-f93b-4e8c-8b40-321b73f4af41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96f7c14-976b-483c-a1b3-b1e355faa55e",
        "cursor": {
          "ref": "d1eb2c2f-8952-48db-ad95-c2832497b3c9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8eaca391-d665-4183-8c0f-aa388faee24c"
        },
        "item": {
          "id": "f96f7c14-976b-483c-a1b3-b1e355faa55e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d2489f34-ae01-4428-b82c-e49dfaf2fbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e44312e-f443-4402-ab21-e4ecc1f00a76",
        "cursor": {
          "ref": "094674e4-bd22-4867-aab0-353571917139",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b3f97c20-3f66-454e-a9f8-b68a24ebd676"
        },
        "item": {
          "id": "2e44312e-f443-4402-ab21-e4ecc1f00a76",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f4a90d88-52c5-4f96-b24f-c6a5f2c54ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372ae8fe-66ae-467d-bdb7-1cfae719cfdd",
        "cursor": {
          "ref": "b95bea79-2873-4875-88f6-13740f94dc04",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f96fdbb9-517c-4985-b8c2-566557d30c63"
        },
        "item": {
          "id": "372ae8fe-66ae-467d-bdb7-1cfae719cfdd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "74730b63-f5f4-4bcc-9f33-aebfba8e4708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9f7761-9d5d-48c0-b38d-f6267ef8eb35",
        "cursor": {
          "ref": "2d282e3e-6101-4d51-9d39-13489a43a3d7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5bff6758-be24-41b3-adc4-2a06179431ee"
        },
        "item": {
          "id": "0d9f7761-9d5d-48c0-b38d-f6267ef8eb35",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2b29a965-55c2-41c2-9f43-43f70055b129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d3c973-49d9-4a03-9f35-4d03cc82f13c",
        "cursor": {
          "ref": "8e40bacf-f9dd-4b91-ae63-5a0b566f9169",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6b259d53-834d-41cc-9add-0324b0a5219b"
        },
        "item": {
          "id": "02d3c973-49d9-4a03-9f35-4d03cc82f13c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "830b9ee8-a79f-46d6-ab88-4f2446e34b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a64761-5323-4b21-bc1e-7213a2f9365c",
        "cursor": {
          "ref": "b09862c2-dd39-4392-9b99-37348419282b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ae8f391e-770c-41a1-b6fa-e54a2a61f054"
        },
        "item": {
          "id": "86a64761-5323-4b21-bc1e-7213a2f9365c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0351fc6e-023b-4ee9-a56b-14157d49f075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb04a2c-cddd-429a-a49f-2256822a4911",
        "cursor": {
          "ref": "b21f2118-e931-44c1-8250-74a259815cec",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d4672526-8242-4ffc-97c3-fd45eb62d092"
        },
        "item": {
          "id": "3eb04a2c-cddd-429a-a49f-2256822a4911",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bf56a020-90f6-459c-b6ef-2a3931fb8b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34a11fb-6ea4-4bf7-97dd-31f4d061f4a5",
        "cursor": {
          "ref": "e23107d0-1350-4193-8453-23fd5a6490e6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7ba94fa4-2e06-4c34-97c9-1748e936fc71"
        },
        "item": {
          "id": "e34a11fb-6ea4-4bf7-97dd-31f4d061f4a5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ce6fc185-b832-43f3-9209-9979b77174d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd86e13a-fd42-4f4f-b26c-e7afd5cd971f",
        "cursor": {
          "ref": "43614023-e3d6-4f2f-9b7d-fd889aab8d0b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "59ea40d7-510a-497a-90ae-15c80ae51ba9"
        },
        "item": {
          "id": "bd86e13a-fd42-4f4f-b26c-e7afd5cd971f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2a6f21af-4c1a-4fc1-98c2-94062c183166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c4178f-80a1-40b7-96e9-7d18942a0f5c",
        "cursor": {
          "ref": "cd2b97b5-82f3-4dd6-842d-277242881734",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e49c7a3c-74fb-499a-97c7-202443f85654"
        },
        "item": {
          "id": "74c4178f-80a1-40b7-96e9-7d18942a0f5c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c580121e-dd8f-42d7-864b-a57a1ecbf4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7713581-9233-49b7-a1ad-61d692f546de",
        "cursor": {
          "ref": "893ffb8a-ad48-4b84-9b84-712cca141eb8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7a10e6c5-360a-4dee-aaf0-9ac78eeb075c"
        },
        "item": {
          "id": "e7713581-9233-49b7-a1ad-61d692f546de",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "563bb204-56f2-4830-9f83-4b62fd35f7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4e550c-3993-4851-9363-e52dce36ebcd",
        "cursor": {
          "ref": "a781402b-7ff2-4c49-a201-524294c3c506",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fe7c7ab6-90d6-478a-9ca6-7d3a7e6cf454"
        },
        "item": {
          "id": "ea4e550c-3993-4851-9363-e52dce36ebcd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f92608f3-939d-472e-aa8d-ed4dba56bae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3097ca37-6348-432c-9cc4-4c849c120fb1",
        "cursor": {
          "ref": "3d4981a9-1b36-42f7-9abd-dcaaa4564dc2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9371e8da-f222-4161-bddf-bffa23ac0495"
        },
        "item": {
          "id": "3097ca37-6348-432c-9cc4-4c849c120fb1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f1508102-d89f-43ee-a9f6-dc6c1cbebf23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be5a3fb-79e5-408b-b1b8-7ca76f9380ef",
        "cursor": {
          "ref": "4a15f849-6c67-47cc-b334-23eb5f01ed55",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d236d67b-91a9-4597-8c25-d6fe09a74c5b"
        },
        "item": {
          "id": "4be5a3fb-79e5-408b-b1b8-7ca76f9380ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9bc6d7dc-49b6-4a6a-bb47-9ae8b40ed37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207fc9ff-9fc1-4931-a6cd-c58779681ca6",
        "cursor": {
          "ref": "f165cd21-9c66-4e63-9c3a-22f792b99bec",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "59cc6a0e-dc67-4448-bca6-e659da2a8119"
        },
        "item": {
          "id": "207fc9ff-9fc1-4931-a6cd-c58779681ca6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e8e69b6-cb39-4376-a5e6-55423b43675d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967b79de-cc43-41a3-8ec6-2bcd671acc70",
        "cursor": {
          "ref": "64c6bd89-f916-4cd6-a6ab-66c26508b707",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7a6a7afb-d102-4033-ae07-17ab60a9d3df"
        },
        "item": {
          "id": "967b79de-cc43-41a3-8ec6-2bcd671acc70",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "13990748-f6b0-4e0f-a88c-5c266172f1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80e51f6-1421-4e2b-b339-65ec791bf52f",
        "cursor": {
          "ref": "37918226-655e-427d-a980-70211736dce3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4c84a4cf-b111-4b08-8802-cfa1d638919b"
        },
        "item": {
          "id": "c80e51f6-1421-4e2b-b339-65ec791bf52f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dfa7c184-a910-47e7-9dbf-3e29190c2d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade5a1a8-ca34-4f67-ba07-f76869a1191d",
        "cursor": {
          "ref": "0ff67335-1522-4e8b-ba16-fd2022b1747b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "15479429-28ce-4adf-bc12-20d6647a4dd8"
        },
        "item": {
          "id": "ade5a1a8-ca34-4f67-ba07-f76869a1191d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cfef533b-7ddd-4fe4-b549-f5569aab5f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f14da3-b388-4faf-9555-263aadc88b8a",
        "cursor": {
          "ref": "9655d3eb-7f74-4540-8fca-a43c57be8c40",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c826d371-0576-4b54-abae-a420d6c8736b"
        },
        "item": {
          "id": "b6f14da3-b388-4faf-9555-263aadc88b8a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cdc817af-0f4a-40e3-ac97-4a2f4245ad82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d126fc9-b27f-496e-9b2a-96ad47e9f07d",
        "cursor": {
          "ref": "a2b33456-4113-4764-941c-9dbc27a85547",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "53a872e8-6fae-4f11-bc98-5b70b43abbcd"
        },
        "item": {
          "id": "1d126fc9-b27f-496e-9b2a-96ad47e9f07d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c34fc8e4-2e7e-406a-a7be-aedeeedd9815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702bfa5c-c367-4818-b2a1-77e4bf2c44b4",
        "cursor": {
          "ref": "4ae25966-d7fd-4cb3-9b54-5c2ec68fc743",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cdfef2f3-db26-4a84-bfab-466afa9a88ed"
        },
        "item": {
          "id": "702bfa5c-c367-4818-b2a1-77e4bf2c44b4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b575dd08-6ac4-4663-a4a8-d305bbc4d55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b26c9b-57fb-4385-88ec-f874ffbcd9ea",
        "cursor": {
          "ref": "bbbccef8-a8a5-499d-b19b-940363721ce4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ea70fce4-d6ae-4076-ba59-144b912c8c2f"
        },
        "item": {
          "id": "16b26c9b-57fb-4385-88ec-f874ffbcd9ea",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "63e2de6a-c6f5-4db7-9479-781de129f93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3c888e-1391-49b3-93eb-861028ad3bb3",
        "cursor": {
          "ref": "2ed8beaa-d3d2-42a1-9faa-d71c4715c8f2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dae458da-7e6d-4eb0-be36-85cf4fef8c39"
        },
        "item": {
          "id": "cd3c888e-1391-49b3-93eb-861028ad3bb3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "70d4c3d0-9bb4-42f9-8b74-eff5483949d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45abd4e-fed7-4052-a0e5-e3ec42c26fb2",
        "cursor": {
          "ref": "829a7ecb-2414-4064-ab59-3420577556c7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b91a1fea-1d0f-4177-b551-c17e6bf8b850"
        },
        "item": {
          "id": "a45abd4e-fed7-4052-a0e5-e3ec42c26fb2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2f0a79d9-cd04-429b-9d8c-74d33734d8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50de975-b114-40e2-85bb-98a84d6b30b5",
        "cursor": {
          "ref": "01df853f-e62d-4f51-8bc0-5e275e55f186",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1aab6f30-acf5-4995-bcbd-241455a1ee7f"
        },
        "item": {
          "id": "d50de975-b114-40e2-85bb-98a84d6b30b5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6fe49659-55c4-4d44-91d3-a1462dfcdd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de72a5c-a0a3-4c1d-bc34-1f1f4026868c",
        "cursor": {
          "ref": "4fd790c7-e1dc-417b-8286-827220c80ed8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d26f6d85-8522-45c7-a49d-29907e28c6a4"
        },
        "item": {
          "id": "9de72a5c-a0a3-4c1d-bc34-1f1f4026868c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1318a6ea-2a42-495e-b80e-e5628607291d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0604c3b2-3e1a-4adf-843a-83d73e30be0b",
        "cursor": {
          "ref": "c9ad1ac3-0d51-49c9-a7f0-c4aa79a3e6b0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8dd4bfb5-25a4-4c9d-9a06-f856ef30d1d7"
        },
        "item": {
          "id": "0604c3b2-3e1a-4adf-843a-83d73e30be0b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "85250e76-e7af-4273-9661-2e3c66e30611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e579d4b-da2b-43fc-b0a9-21a84bac2908",
        "cursor": {
          "ref": "5c14ec0c-f267-4959-8fc7-32d9d230a909",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1cdf0026-5d1d-4d28-b987-f5aa1e525339"
        },
        "item": {
          "id": "0e579d4b-da2b-43fc-b0a9-21a84bac2908",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "90acd1f3-1f59-4289-a6db-84848b9879a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927539d7-20db-4d1a-83d5-4acf3c9e5b9a",
        "cursor": {
          "ref": "db6e9185-3956-4e7c-b363-1fb6be43feb5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5bb1a458-e6bd-4df0-903b-72591da532b8"
        },
        "item": {
          "id": "927539d7-20db-4d1a-83d5-4acf3c9e5b9a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "abebb5da-a66d-4c87-a32f-057521abd7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6795fd3-2501-47a5-b532-e90344415f99",
        "cursor": {
          "ref": "71a789de-de72-461a-aaf7-2c2e58ed2add",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ddab208f-96cd-45f1-8cb1-c1fec923a4fc"
        },
        "item": {
          "id": "e6795fd3-2501-47a5-b532-e90344415f99",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "51578896-51ee-4297-9937-3c189f922279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ca95c2-db9f-4ab9-af7a-6200f82e6a4c",
        "cursor": {
          "ref": "84bce023-e7eb-4f80-b7d8-cabdbe7b0552",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "131a084f-3db6-4b31-99b3-d40c27e437df"
        },
        "item": {
          "id": "c6ca95c2-db9f-4ab9-af7a-6200f82e6a4c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "de185943-3aa1-4b9f-82ce-cd81267e1fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7ee680-b22f-4430-afca-d6e20565e867",
        "cursor": {
          "ref": "52f3b8b1-31f5-40a3-b307-85b23b44b4cc",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8d5e978d-81df-4e7d-9048-7e1864686af2"
        },
        "item": {
          "id": "6a7ee680-b22f-4430-afca-d6e20565e867",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6f1f4f6f-55b8-4e2c-ab94-e28b8dc8393f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c890e3-a5cb-4286-9502-93d674daf0f5",
        "cursor": {
          "ref": "c52a99e5-471d-4d14-a6a5-478d0010552f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "22e42ab9-a65d-4751-b7c8-20b6e25a0f1c"
        },
        "item": {
          "id": "c6c890e3-a5cb-4286-9502-93d674daf0f5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "19b69ded-0396-4b94-b5cb-2d44adf45d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2a725a-1871-4976-bbb8-a0f7a78ad9b8",
        "cursor": {
          "ref": "32e57703-0710-4292-be4f-581dcb3f1185",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2658ffae-0f8b-46a2-9700-0b19ee4e05bd"
        },
        "item": {
          "id": "4f2a725a-1871-4976-bbb8-a0f7a78ad9b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1c85f1f5-8141-4d62-aa37-f18cf891733e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79afeec1-88cb-4e5a-a175-9e20edce353f",
        "cursor": {
          "ref": "f4173c18-a3a6-4f85-b9cf-a62b7bd07476",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1413aada-a60c-4264-a4ac-8c83b5f369f0"
        },
        "item": {
          "id": "79afeec1-88cb-4e5a-a175-9e20edce353f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b95556b4-9373-40b2-84db-b69d54bff357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f56dbd7-cf81-4b7b-89cd-3e1c080a1180",
        "cursor": {
          "ref": "140bc6fd-97ed-4207-9df1-0ebe7f1e6ae0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8dad14e5-610e-495c-b023-6a743a5d4993"
        },
        "item": {
          "id": "1f56dbd7-cf81-4b7b-89cd-3e1c080a1180",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "26ab8b9a-c76b-49b5-9b72-44cd3a81880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e063bb3c-9087-4214-98ba-6a52b590074c",
        "cursor": {
          "ref": "eb6af853-48a2-48a9-92d7-1025f8b1720d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "47a30b27-8fc9-425c-95f8-ed76fdbf2ba4"
        },
        "item": {
          "id": "e063bb3c-9087-4214-98ba-6a52b590074c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "04dc4a0c-ab24-4e31-8ebc-6e7b39a865d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd83c6-9d10-4431-bd19-acce9421622f",
        "cursor": {
          "ref": "7a388ea3-1725-4ca1-8861-eaa4e72a5144",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "85999b5d-13ab-4c2f-afc7-11fdeecce03c"
        },
        "item": {
          "id": "d9cd83c6-9d10-4431-bd19-acce9421622f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bab3b43e-414f-4514-8663-3f8527814d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3717a0f7-ad03-46d9-b865-7e261708ac60",
        "cursor": {
          "ref": "558fce86-d67a-40af-b206-cf866e233b6b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9339507a-04fe-41e6-9b26-1599692c0f27"
        },
        "item": {
          "id": "3717a0f7-ad03-46d9-b865-7e261708ac60",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "16dc5435-5a88-4055-b559-3458f6cfd1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6c01d9-cdec-4d21-a969-cb6184c706a8",
        "cursor": {
          "ref": "405651db-bb3f-4ce7-bca5-97a7efb3f3f2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eaa82e47-d01b-4845-8144-1cf26b3640f2"
        },
        "item": {
          "id": "9c6c01d9-cdec-4d21-a969-cb6184c706a8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ab9b424c-979f-4579-b31c-80f7fb553932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9033f0e1-b04c-4883-9fa4-9b685a76e88c",
        "cursor": {
          "ref": "4fc9133c-78da-48a6-8333-e792336de1bc",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bb86b25b-90b3-47d8-852a-05b38fca102f"
        },
        "item": {
          "id": "9033f0e1-b04c-4883-9fa4-9b685a76e88c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6ace4a10-b11f-4234-a8f6-d21d3be7e423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb3a62f-16c3-4709-b324-74e3f5866512",
        "cursor": {
          "ref": "7afbec94-155f-467b-a04e-392a34c8186d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "86576679-c7be-4938-9c56-810cfa7a6440"
        },
        "item": {
          "id": "edb3a62f-16c3-4709-b324-74e3f5866512",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b16b3e9c-2626-4a14-8eec-10aecf9215a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d6e973-53bf-4955-91e6-f74f0bf26887",
        "cursor": {
          "ref": "380c8850-156a-4b8a-95e1-5aa5a1bdbef5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bfbbd100-45fd-457e-895d-2dcc2c4b6e2a"
        },
        "item": {
          "id": "75d6e973-53bf-4955-91e6-f74f0bf26887",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fdc5f259-a890-4735-a124-e15525a6f1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65759b48-9fd2-4990-b838-397985f2e8c5",
        "cursor": {
          "ref": "419b091d-0d3e-4e86-bb54-fb6ec11633c4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9c156729-13e3-4733-8d78-23b27cab1458"
        },
        "item": {
          "id": "65759b48-9fd2-4990-b838-397985f2e8c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a7306f7d-388b-420d-ba6d-f54538db074f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebcecb1-840e-4f5b-9bc5-1c6d19e22682",
        "cursor": {
          "ref": "8ee789be-32df-4eb6-ab1b-fe083b80085a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f11e52cd-fa76-474a-9220-51d285976798"
        },
        "item": {
          "id": "1ebcecb1-840e-4f5b-9bc5-1c6d19e22682",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b16d87a4-4d59-4e9a-8629-34cf990565d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc261dc-2de7-4013-8ea5-ee63c0214291",
        "cursor": {
          "ref": "8d1b7a06-5fbe-482e-ac3f-293ca5a3d03c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7b3f7b6b-a9a7-4547-99f2-1f2d0bb99b8b"
        },
        "item": {
          "id": "3cc261dc-2de7-4013-8ea5-ee63c0214291",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dd68aa29-53b2-4755-8ffc-c973c22cd701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731a3993-144a-44b9-ad28-75f68ec4a70e",
        "cursor": {
          "ref": "d09ccd46-45d0-4088-a0a2-008dd8a7fae5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0871aef3-0b71-4f84-bda4-b52e3728ccff"
        },
        "item": {
          "id": "731a3993-144a-44b9-ad28-75f68ec4a70e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3af3daed-e232-427a-866a-894be8e4a708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac00c6e-1449-44ad-bf64-b95db5c5bad2",
        "cursor": {
          "ref": "247ee2d4-d4fd-4c2e-b2b5-0380898876f7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dd57babd-f266-4197-816e-e95138e8c10c"
        },
        "item": {
          "id": "3ac00c6e-1449-44ad-bf64-b95db5c5bad2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5bffe056-2087-4c99-b0b2-73b4cceffec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56b95e7-4971-4383-b8ac-8de914e753b0",
        "cursor": {
          "ref": "ca924298-cf04-4dfd-8693-2fca7db532de",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5f782b75-46f8-44e5-89c5-03145072c3bb"
        },
        "item": {
          "id": "c56b95e7-4971-4383-b8ac-8de914e753b0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d5ca5d35-9b9e-453d-81dc-01e9e2428e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57aa537-98e8-4083-ac98-bfc84749afb3",
        "cursor": {
          "ref": "65dbdc02-95e6-41d0-9f69-c06f049a543d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a1c69abd-5e83-4a14-b94c-6ecc258cf88c"
        },
        "item": {
          "id": "e57aa537-98e8-4083-ac98-bfc84749afb3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "aa84f8a3-a817-4e86-97fc-110c61811f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a608b732-c0ea-4cfa-ae66-aeec5d90e3f8",
        "cursor": {
          "ref": "cc10d8e9-0c87-48ff-9818-c56d5d71d803",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f82799ae-7d61-4ec6-9310-ff33deec9def"
        },
        "item": {
          "id": "a608b732-c0ea-4cfa-ae66-aeec5d90e3f8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c63473e7-5c8c-415a-b486-a176d6d22dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c08b8a-554a-4b50-9a35-50316ff99889",
        "cursor": {
          "ref": "b9ddbe97-326f-412b-861d-202bf8655371",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8334fecb-2894-4940-b48b-9e54bf1e47d8"
        },
        "item": {
          "id": "f2c08b8a-554a-4b50-9a35-50316ff99889",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "064bb8b4-56f4-44ae-8063-7cdee68526b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9938420-5b01-4b92-93d4-2df4698797ee",
        "cursor": {
          "ref": "9c82202d-5dc1-4de6-86d8-6d74d04434b1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "46a2b427-448b-47f4-9c49-926c1d262174"
        },
        "item": {
          "id": "f9938420-5b01-4b92-93d4-2df4698797ee",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fb983f89-5537-4bc4-9729-707fde7d1c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ebe8c4-3a38-4cdb-b7a8-a8b543897c4a",
        "cursor": {
          "ref": "1c0675e9-7009-4dcd-984b-d5807a60e43a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "10c72613-472a-41e7-a2e8-76cbad96af40"
        },
        "item": {
          "id": "36ebe8c4-3a38-4cdb-b7a8-a8b543897c4a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3e0f293a-ccd2-4b2b-aa4b-0eab43808fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b43c6c-d3d4-48ca-8de6-95e3d3fc66b5",
        "cursor": {
          "ref": "a0dc6368-71c3-41d9-8a5f-54422c7435d1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bd036e9d-fc42-4328-9b30-50b33508a41e"
        },
        "item": {
          "id": "c7b43c6c-d3d4-48ca-8de6-95e3d3fc66b5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f8e5c4c0-e5df-4514-8797-c3ac240bdd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e79b27-1f30-4e12-9504-27c1c929b3e9",
        "cursor": {
          "ref": "1e2833a7-fcef-4fb5-8509-557368f6d1fb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "43e5865f-b2e6-4878-837d-5f5d6eee7faa"
        },
        "item": {
          "id": "90e79b27-1f30-4e12-9504-27c1c929b3e9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1f14951b-48aa-436c-84ac-c771ba6ae3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b45404-ec32-49af-a720-3bee0392e0f8",
        "cursor": {
          "ref": "bb5a27ae-e77c-4988-91c1-c75a94bc91b0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "375a7407-10b0-47e7-912a-7fcde3e13500"
        },
        "item": {
          "id": "c4b45404-ec32-49af-a720-3bee0392e0f8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ef08f7e5-ba30-4e9e-b622-1654702dc83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9fd882-2e67-4e3a-adf3-9f353aa5ea93",
        "cursor": {
          "ref": "2b15e575-0d0b-4d4a-8baf-2ca3a89f03bd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9bd4e43a-30e1-4f2e-9f7e-c79da79e38c2"
        },
        "item": {
          "id": "ce9fd882-2e67-4e3a-adf3-9f353aa5ea93",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "624f7d8f-78d2-4af6-ae7a-bd2dcb79e899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2190eb8-4113-4f0e-9cce-45031bb7f423",
        "cursor": {
          "ref": "16247fa9-5291-4982-8d45-ff989f28f7f5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "633731d8-c99d-47f9-adb8-066db576167a"
        },
        "item": {
          "id": "b2190eb8-4113-4f0e-9cce-45031bb7f423",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "619966f2-46d0-4f96-9939-29fc4a3822a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca0d04c-1059-4833-87aa-86f0d5ea75c0",
        "cursor": {
          "ref": "ccbaa5ec-5534-409c-a7cc-398e7eed87f1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19d7a1dd-b79c-4d19-b0d2-7f6ee92055c4"
        },
        "item": {
          "id": "2ca0d04c-1059-4833-87aa-86f0d5ea75c0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5b23c5ef-85d0-44a1-92b5-4cfd12245056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7763f01-dbdb-4510-9bf2-6592328ccced",
        "cursor": {
          "ref": "cb105797-1ba4-449a-b14c-ddb4406e1c87",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f41aef7e-093e-42bd-94c6-94fbb610cde7"
        },
        "item": {
          "id": "d7763f01-dbdb-4510-9bf2-6592328ccced",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "85bae743-1e62-40ca-bd24-4917f5ca701b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a08257-21ec-428a-90e4-39087fa4daf6",
        "cursor": {
          "ref": "258e5507-bda6-466f-80bc-8034159c736c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fcce069d-c2fc-4736-a4ef-033f7baeffcf"
        },
        "item": {
          "id": "51a08257-21ec-428a-90e4-39087fa4daf6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a93b972-818f-474f-884a-04e41988a029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd84fb03-1e37-4cf5-9bf8-dbaf8f32ac06",
        "cursor": {
          "ref": "ddb2e5f8-d0a9-4902-83e0-55d09392a7f1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7cf15c94-07d4-4119-825d-e2e21426334a"
        },
        "item": {
          "id": "fd84fb03-1e37-4cf5-9bf8-dbaf8f32ac06",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6f22c181-958c-41d2-8a8e-53de2255fa0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca2e969-ee0b-4664-b4d4-aa55d81495a1",
        "cursor": {
          "ref": "14d62ed6-5b9b-4af6-ac9b-c7b8c77a827b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6a5223ab-c5a6-4c08-8699-90d9003b96cf"
        },
        "item": {
          "id": "fca2e969-ee0b-4664-b4d4-aa55d81495a1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a1357e49-8275-4a8e-9c53-8f0c5e96e836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54829b9f-b6a6-457a-b55d-e53ff35bb3f6",
        "cursor": {
          "ref": "120068cd-5c23-4580-beda-d9f05a419ec2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "998272c9-3e2c-47f3-8850-fb3274b9e90c"
        },
        "item": {
          "id": "54829b9f-b6a6-457a-b55d-e53ff35bb3f6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "308255a7-18f8-4afe-9bbd-ae20b57d5bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0de8f1-c217-4617-8320-01b23b9ddc8f",
        "cursor": {
          "ref": "b5e4a988-f485-4afc-a57e-a2d4bd3fd4da",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6c52fe74-cdb0-4106-895e-34b0aee5bff9"
        },
        "item": {
          "id": "2a0de8f1-c217-4617-8320-01b23b9ddc8f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "33159eed-f153-4d63-adfd-c1b2b669a393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec42c36-496e-4c5e-9044-2e232dfc0315",
        "cursor": {
          "ref": "2aab84d2-bd24-4e3b-bf10-4e31ca3aa82f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8f34dadb-c970-4a32-ac57-6d1ca4091db4"
        },
        "item": {
          "id": "aec42c36-496e-4c5e-9044-2e232dfc0315",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "17414d69-b455-43b5-aaad-40ff3713f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e9ac2d-9621-4bc3-b098-39ecb91e24bd",
        "cursor": {
          "ref": "b73dacaf-4123-43a6-9a4b-9b2035544317",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "53ba5fa5-06a7-41c7-be2e-53bf18f5605e"
        },
        "item": {
          "id": "11e9ac2d-9621-4bc3-b098-39ecb91e24bd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "aa389198-a24f-407d-8bf8-a93a4b2ec27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079e8b96-c1f8-419d-a516-c11c4063ae08",
        "cursor": {
          "ref": "35df7e3b-ee14-4d15-bdfc-d002014aca3f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2872e206-1468-4f36-8055-822c3f92fc4d"
        },
        "item": {
          "id": "079e8b96-c1f8-419d-a516-c11c4063ae08",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3181a9cd-9778-4974-8587-7924359c3d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a6bd7f-7ec3-4b44-8dfa-318e588acbfe",
        "cursor": {
          "ref": "ab7317c7-f610-49ec-a6af-78c4f8fd9330",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8ee24e7c-dd63-4813-bb8c-e9046eef9ae9"
        },
        "item": {
          "id": "c3a6bd7f-7ec3-4b44-8dfa-318e588acbfe",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ecd6ab0b-5b69-4bd7-bec1-d877ea6030da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf81c8ca-9585-43c5-97c1-0fcd7e06d520",
        "cursor": {
          "ref": "7e5bbc31-ce43-4fd4-96d0-88d315bde425",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aeb5319d-efe8-4feb-8cb8-c9b68f6cbd7e"
        },
        "item": {
          "id": "cf81c8ca-9585-43c5-97c1-0fcd7e06d520",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1c02a33a-fd34-4d2d-9aa9-282397d08253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7501807b-d103-48a8-9215-45f9dc155d09",
        "cursor": {
          "ref": "fb6cb11b-3046-487b-9506-54e4e66af41b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4bfcf103-0c77-46b8-aebc-3ebf8f44ecf9"
        },
        "item": {
          "id": "7501807b-d103-48a8-9215-45f9dc155d09",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9dae2b38-e726-4e74-9e93-877ed21c098d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0242bfa-ec98-4134-b729-11dd36314746",
        "cursor": {
          "ref": "5b6cd128-aff0-463d-ac40-852eaa9fdb56",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "28faf3fd-61a9-4c15-8396-c5889665cde4"
        },
        "item": {
          "id": "a0242bfa-ec98-4134-b729-11dd36314746",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b76012a3-77bc-4780-8940-baccb9973860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea9be7a-b27d-42cf-b0f1-a47407e0796e",
        "cursor": {
          "ref": "66d491b1-e4b0-48d9-bd72-022c53eaae14",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "508b3f5f-e71f-478b-a516-d0dcbe62b985"
        },
        "item": {
          "id": "6ea9be7a-b27d-42cf-b0f1-a47407e0796e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dc808bf7-ffd8-49e5-9ed5-65561d7fa40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711764cd-e320-468b-be51-ecf65793736f",
        "cursor": {
          "ref": "589523bb-713d-4ce4-a58c-fe78a99e0bc4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c9b3de2b-dad1-4127-8eaf-5e0dee34d2ac"
        },
        "item": {
          "id": "711764cd-e320-468b-be51-ecf65793736f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "570d7a52-2958-446b-bfb5-ee4d1869c517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00d8ae9-e449-464f-b8e2-1e172006e016",
        "cursor": {
          "ref": "e2df6e74-f619-4e75-9bd9-4a12f83f08bd",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f644e12a-9c14-412c-9fec-2975827206a7"
        },
        "item": {
          "id": "c00d8ae9-e449-464f-b8e2-1e172006e016",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "35c1b057-1feb-4b86-a93c-b9e13362706f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4694e19-cf48-4325-9abe-5845ca340f25",
        "cursor": {
          "ref": "18644311-fde9-4fc3-a61c-c92bae6c42be",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fcf311f9-c74f-46f2-a0df-9124342215e8"
        },
        "item": {
          "id": "f4694e19-cf48-4325-9abe-5845ca340f25",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "91706b91-943d-4ecd-97cc-c462f365691a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c51e0f-68f9-444a-be85-dabf5e231b4b",
        "cursor": {
          "ref": "62fc6068-af96-416b-bf70-ee18c645d4a9",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3c78f669-01c1-406e-8506-35ed2156b069"
        },
        "item": {
          "id": "45c51e0f-68f9-444a-be85-dabf5e231b4b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eb7ad215-9681-4c0a-a2ca-b3317264bef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13d0cf8-ea9a-40b4-9846-69c528b27c56",
        "cursor": {
          "ref": "709fbec2-91ad-4375-8eeb-c835bb73e168",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4ea9649d-13fe-4e72-b9ad-ff5ab4a090cf"
        },
        "item": {
          "id": "a13d0cf8-ea9a-40b4-9846-69c528b27c56",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "582d1e13-2804-48a0-80c7-d5eeeb29815e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9afd9f-c6ae-41bd-a98a-fb555760505c",
        "cursor": {
          "ref": "4f282b3c-7c53-4705-95fd-998891c113eb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3a919633-5c5e-4167-b795-e81dd37ce852"
        },
        "item": {
          "id": "8c9afd9f-c6ae-41bd-a98a-fb555760505c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7677188e-8613-4fc8-8a72-c89025d5fd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d16fcf9-720c-4976-949a-bae0319a5e00",
        "cursor": {
          "ref": "a8332ceb-fb5d-43b1-849f-6b01a4c6793a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fcaf25ac-7ca9-4a49-ac36-c63b1148673b"
        },
        "item": {
          "id": "3d16fcf9-720c-4976-949a-bae0319a5e00",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4b8e8626-7024-4066-9f90-e332c8fba1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1979743-2d18-4087-bb2d-1096f9100c85",
        "cursor": {
          "ref": "160b729d-d542-42f7-8b2c-84f368461b20",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1996ea00-8f03-431b-9af7-5fcd855d68a4"
        },
        "item": {
          "id": "c1979743-2d18-4087-bb2d-1096f9100c85",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9960fbe7-ca3c-4d89-9641-02a9a3f8b2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e10a653-9d36-4095-b0fc-3d7aad26955a",
        "cursor": {
          "ref": "44c14e80-848e-4238-ad99-0b8a62ea50f8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4b3c45ed-c812-487c-ace6-f05d56c354ed"
        },
        "item": {
          "id": "2e10a653-9d36-4095-b0fc-3d7aad26955a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e6c41882-ced1-4d66-b086-57a152baf9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad000ff4-770c-4143-bbd3-5faf10357f33",
        "cursor": {
          "ref": "8b64f5a8-e7d4-4ed0-b6af-55e75d2c160b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c67e2512-e5dd-4ca9-9029-0fde57b84131"
        },
        "item": {
          "id": "ad000ff4-770c-4143-bbd3-5faf10357f33",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9d06d628-b63e-40d2-86cf-2805d9f066e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090b1830-538b-4810-abe1-c9c35c57e7aa",
        "cursor": {
          "ref": "5ce36ae1-da5b-42ed-83a8-de9706f3a4a2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "83e6967b-0427-4864-b813-2e3cb3ab7f48"
        },
        "item": {
          "id": "090b1830-538b-4810-abe1-c9c35c57e7aa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c8ff3334-6769-4336-91e9-556182f49a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3e3379-72c3-481a-8e0c-e6a83ad10c29",
        "cursor": {
          "ref": "b8962645-80f8-469a-bce1-07964d20a8fd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "adcdf991-803e-4b1c-9a99-732093eecda8"
        },
        "item": {
          "id": "dd3e3379-72c3-481a-8e0c-e6a83ad10c29",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "743ff91a-37eb-40c0-a7cc-a3de27dc88a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1b4a0d-589a-4f3d-912e-06b1e3396944",
        "cursor": {
          "ref": "13c7bc2e-160a-4fd0-a0b8-9d48d22f24c2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b2ca238a-8c0d-4426-a569-174ffbf8cdf8"
        },
        "item": {
          "id": "9a1b4a0d-589a-4f3d-912e-06b1e3396944",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "13fffbc9-189f-497d-bf14-d688a78c6fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d34f8be-4d90-433d-80dd-883e71d22b48",
        "cursor": {
          "ref": "fd7f001b-efbb-46c6-8066-884d90d5d0ce",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fd8d2b7a-6edc-476a-8921-47b1fd7a8576"
        },
        "item": {
          "id": "4d34f8be-4d90-433d-80dd-883e71d22b48",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a0268851-3d4a-487f-a5e3-931622e0eb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a126bc7-948d-41d5-9068-4ca37c17e5d6",
        "cursor": {
          "ref": "ca17e8df-ae8c-4d80-8ace-27438026f46d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0b901f72-ff4a-4684-ac70-1d52e0e1fe8d"
        },
        "item": {
          "id": "3a126bc7-948d-41d5-9068-4ca37c17e5d6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d7fe81e0-9620-4b05-879c-ea87867e8d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791d2024-3e60-44a7-8e00-95338ba12c25",
        "cursor": {
          "ref": "eff7e83f-4d0e-4cd9-b7ea-a1c7c1aff0c3",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1504c36e-db7a-45fa-9d59-3b0f9b525df0"
        },
        "item": {
          "id": "791d2024-3e60-44a7-8e00-95338ba12c25",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5f539f62-83e5-4b5e-90dd-1de695811939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0867d28-dc70-4bab-82ed-d355f983c0e4",
        "cursor": {
          "ref": "11e58549-b44f-4831-bf2a-2c53fe448782",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "635ac322-d346-43fc-8082-7e4489954718"
        },
        "item": {
          "id": "b0867d28-dc70-4bab-82ed-d355f983c0e4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9e7c85f3-f2b8-4702-a663-d4bea1503dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae99304-e441-4b16-b35a-95679c32252b",
        "cursor": {
          "ref": "20e552b4-5575-42bc-829b-54faf6182ce7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "432a8f13-d1a7-4173-b753-93778a40d6c9"
        },
        "item": {
          "id": "aae99304-e441-4b16-b35a-95679c32252b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "79f29276-e280-45df-ab80-9f6438a63889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8418e7-c4ba-4e67-b9e4-d9e1a3fd9da0",
        "cursor": {
          "ref": "02add906-b38d-4709-9d11-0c0c99693db4",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b8d6765d-e9ff-48f4-9cb9-d56b24fb9998"
        },
        "item": {
          "id": "db8418e7-c4ba-4e67-b9e4-d9e1a3fd9da0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6e29086f-8cf0-4aad-a0d2-f890a9057070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0593389-904b-4be1-95df-57ce6f4d97b4",
        "cursor": {
          "ref": "c2ac5b5f-145c-4594-b29b-12a4801cf67a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "54f2ca38-35c9-42f9-bca4-48f703d353db"
        },
        "item": {
          "id": "e0593389-904b-4be1-95df-57ce6f4d97b4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "af4a7e54-6ade-4f53-9f7c-cb81990c061b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0815d828-8027-4133-8c35-f313d872db3e",
        "cursor": {
          "ref": "813862d7-192d-4dde-ba67-75e4d9afa3c9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6a454385-5eeb-401a-a8f2-b138e33dbaff"
        },
        "item": {
          "id": "0815d828-8027-4133-8c35-f313d872db3e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9114b933-96d5-440f-a99d-c622df0b455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251fef0a-93e7-4213-84f3-7eeee0321b6c",
        "cursor": {
          "ref": "f826db44-9d9f-4060-a813-b0ce64b30110",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7180e9e5-6830-48c1-a93b-34fdf8cbe4df"
        },
        "item": {
          "id": "251fef0a-93e7-4213-84f3-7eeee0321b6c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "47e53a7a-17ea-42ff-8eed-191275e5e397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d686d1a6-7582-40d2-be96-24f354e5ff7a",
        "cursor": {
          "ref": "0169e575-dcf4-46b4-9450-5150777c8e72",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2c93deca-06b1-4deb-9740-0dd271c6d424"
        },
        "item": {
          "id": "d686d1a6-7582-40d2-be96-24f354e5ff7a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "84d3f8d5-5bc8-49ae-9b74-bbae360c4356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e6291c-a927-4d26-a07a-9bc533d75a9b",
        "cursor": {
          "ref": "cf4976b4-16fe-400c-ab75-3b43187e86ff",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5aff1418-1953-4ca0-a360-ed71eb91da1c"
        },
        "item": {
          "id": "f2e6291c-a927-4d26-a07a-9bc533d75a9b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e6cd01da-992e-4b4c-b682-08f23f4b4801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d900cb-096d-4ebe-91a3-cb9bffe061ca",
        "cursor": {
          "ref": "00df9678-5be6-4a1f-9897-1b2db16b73d4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a5040cd9-87c8-413c-833e-c091ede8a5cc"
        },
        "item": {
          "id": "89d900cb-096d-4ebe-91a3-cb9bffe061ca",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e7e822be-b545-44b4-a978-3ac34687cec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a89c08-0732-4cf7-b484-171293258640",
        "cursor": {
          "ref": "bf93b833-ff85-4885-a4c8-1872f037fd5f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cf696e80-22f7-4c4f-bbf5-e96cfe2c7cb6"
        },
        "item": {
          "id": "d2a89c08-0732-4cf7-b484-171293258640",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b49c4038-bf08-4d3c-899d-061b6be95348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86acc6ad-0b71-4d79-ac0c-77e4751d62f4",
        "cursor": {
          "ref": "ebd1362d-8153-4e69-90bb-4ae7bb4c7ce0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0155660f-2e8e-4f70-a4ca-07044ba43f48"
        },
        "item": {
          "id": "86acc6ad-0b71-4d79-ac0c-77e4751d62f4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a98604de-7a61-4fa8-968a-0a073bbfdc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0c7764-17a3-49bc-97ad-15985c12eb01",
        "cursor": {
          "ref": "d66c3d1e-bc11-4cae-b0c7-dc2c9fa3f79c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9d308747-b851-473d-bd3a-44d0ae4d7bff"
        },
        "item": {
          "id": "7d0c7764-17a3-49bc-97ad-15985c12eb01",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a0dbc885-0147-4b91-8c53-335c683ec643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d694f2-c679-412e-8edc-a74434faaf10",
        "cursor": {
          "ref": "5740194a-0e4f-44f6-9c3b-dd96881a944e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "059f9565-55f4-4cfa-b755-b50245d4daab"
        },
        "item": {
          "id": "82d694f2-c679-412e-8edc-a74434faaf10",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b0479764-24b0-49ff-96a3-89b582097b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced5bea7-c208-480a-9b81-3ca8555f6ac4",
        "cursor": {
          "ref": "cd03ab09-c6d8-491f-bfd6-3283a261eaa4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "789834b9-e381-48c3-a080-2bb91dc0bc4f"
        },
        "item": {
          "id": "ced5bea7-c208-480a-9b81-3ca8555f6ac4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ca55b135-b320-4a72-bc80-71257fc4642f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f60dd6-8f3d-4911-b74e-cbbd279b177f",
        "cursor": {
          "ref": "d28aeea9-463e-481f-affb-51e1dca73b49",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d3913500-7139-457e-baae-4b866666a46c"
        },
        "item": {
          "id": "21f60dd6-8f3d-4911-b74e-cbbd279b177f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4ae923c6-c342-4597-ad2c-b230fa0bac27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bd2a17-d6cc-4358-bbd6-83fd46b7741f",
        "cursor": {
          "ref": "468a87f2-1082-44f2-9f9e-4cf0da0f21fe",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7737b974-e083-4194-9dc7-bed37901520c"
        },
        "item": {
          "id": "a7bd2a17-d6cc-4358-bbd6-83fd46b7741f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ea6aa702-422a-4590-9a5d-2155e2234622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde2fedb-f5fa-474d-8001-0ee4fb976848",
        "cursor": {
          "ref": "09ad23c1-c4ca-4167-a5d7-a0d238802b4e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a878b313-18eb-4571-95c2-f4eb021b568a"
        },
        "item": {
          "id": "cde2fedb-f5fa-474d-8001-0ee4fb976848",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "727c32d9-12e3-4afc-8806-00e96016f63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f39df0-217b-4f8a-9055-c41089339c75",
        "cursor": {
          "ref": "2377ca44-0c2e-48ee-a2f6-101cd6656ef7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f89222de-7233-42d2-a112-cca31c6bb4aa"
        },
        "item": {
          "id": "f4f39df0-217b-4f8a-9055-c41089339c75",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5d0dd348-9351-4628-b2dc-8607a640f485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5478a83c-2508-4fe8-812d-7f2d5e2bb80d",
        "cursor": {
          "ref": "cd25f8ef-c9c3-41d8-ba8e-133060bbf61f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6b05514b-200d-44d9-9a83-a4392309babd"
        },
        "item": {
          "id": "5478a83c-2508-4fe8-812d-7f2d5e2bb80d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a3f1ae9c-fbdd-4133-8ed7-0f1a058239ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ed0595-7cc4-408b-81e3-2dc95b871228",
        "cursor": {
          "ref": "52927e20-3cca-4f8d-8819-5f7848bf736e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "000c5dac-b38b-42b2-b5d6-c5a4e57a3a8c"
        },
        "item": {
          "id": "64ed0595-7cc4-408b-81e3-2dc95b871228",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cf9e4540-713f-48ab-af8e-50dfae483987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fb3610-5f03-44ed-82c1-d4232c7a2591",
        "cursor": {
          "ref": "5178e8d6-14aa-4458-abe5-0c1e751bf4d3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "49165dc9-ab6b-4e31-aa0e-b8f26daf52ea"
        },
        "item": {
          "id": "23fb3610-5f03-44ed-82c1-d4232c7a2591",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9afa18ed-0b08-4577-a863-534d8fb6fd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c021bc2-0185-4062-a288-ad65cd74228f",
        "cursor": {
          "ref": "2782965c-413b-48f6-89e2-1e33142d9deb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d1d986bd-eb77-4daa-bcd8-2f24ac6f6db6"
        },
        "item": {
          "id": "9c021bc2-0185-4062-a288-ad65cd74228f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3784617e-c584-44e8-8130-bb5c9fee2f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "e084e753-009c-4397-a311-cfae5a967290",
        "cursor": {
          "ref": "883edfd9-5996-4ead-a2c8-65e767f12d41",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4c422d9a-37a9-472d-9fdc-956c55aa958e"
        },
        "item": {
          "id": "e084e753-009c-4397-a311-cfae5a967290",
          "name": "credentials_verify"
        },
        "response": {
          "id": "10d7ed74-34f4-4544-a53d-10c995a2fef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "7c413e6d-8544-4443-a88b-3d6d69696b73",
        "cursor": {
          "ref": "109c88e2-1d7d-48f7-975b-6375ccc5e199",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5823c4b0-55fa-4c4e-b23a-c03c061eab2c"
        },
        "item": {
          "id": "7c413e6d-8544-4443-a88b-3d6d69696b73",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7362aa17-9c87-421e-a70c-631c3cf14ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "833b0b9f-3745-428e-bbb0-7f72275a1283",
        "cursor": {
          "ref": "b55b4980-070a-4bc6-b78a-b823de15845c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b828b62e-c4ae-4e8d-b719-36a21ab7ad9d"
        },
        "item": {
          "id": "833b0b9f-3745-428e-bbb0-7f72275a1283",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eca024e8-2d71-49a2-809e-4c9debac6774",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833b0b9f-3745-428e-bbb0-7f72275a1283",
        "cursor": {
          "ref": "b55b4980-070a-4bc6-b78a-b823de15845c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b828b62e-c4ae-4e8d-b719-36a21ab7ad9d"
        },
        "item": {
          "id": "833b0b9f-3745-428e-bbb0-7f72275a1283",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eca024e8-2d71-49a2-809e-4c9debac6774",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0e9ee6-00e7-4afc-a76e-8b2fccbddf47",
        "cursor": {
          "ref": "5cb413f8-7a1c-4936-a920-071b4eee7c3e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "341dfd13-7c4c-46c2-96da-240173405f4f"
        },
        "item": {
          "id": "da0e9ee6-00e7-4afc-a76e-8b2fccbddf47",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "67d06f2a-3b35-4475-a025-602cd264fe13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10158bde-fda0-4a9e-a4ab-138589e3774e",
        "cursor": {
          "ref": "a5734709-4a1f-45d6-abed-42a9c6875e19",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "352f0ac5-f577-43b5-9d3a-db32b16a0b74"
        },
        "item": {
          "id": "10158bde-fda0-4a9e-a4ab-138589e3774e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bdf75ebd-10f6-4619-9705-de5c7e46698a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}