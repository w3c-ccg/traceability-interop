{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bbe1ec9e-dcfb-4540-9543-7c0c89417c2b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d713a4db-169e-4b34-9e55-ebe3bcc2bc06",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9af5f37a-c7b3-418c-b643-ea13f5f1553f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "154d3ce0-d9f8-43d9-81bf-170b59a0b59e"
                }
              }
            ]
          },
          {
            "id": "2ebd9743-abfc-4d4d-b521-fe60d253568b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40852878-155c-422c-b0dc-37d272c8cfa4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "951315eb-5049-4941-93cd-a1cc3560ccf7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8f72afa2-fee3-4580-82a9-0f3ff2128383",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e5254363-25cf-444d-aae9-a5b0cfc545e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9b3f5c1-1ad9-49c4-8c34-c147d958162c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1777d3f-5187-4ad8-853e-59f1b79a0c4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb96f268-d24a-4c3b-9ee6-0ebe9a490337"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e6231ab-f749-4331-808b-9a483a6d44a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36761a3b-0c18-4639-9f80-b9bf66692a07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0aba1bb3-6d7b-4112-907b-72f3fcc46293",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0843c57-be23-4801-b32a-2a397564535f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e84ad1df-ffd9-44e6-a72c-92c84442e098",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "40d98c5e-fd45-453f-b28e-7c5d6a61d3a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a120765-0672-4081-bb90-cc9e1b858f19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fccdb011-1ff1-4121-846e-585a5c849650"
            }
          }
        ]
      },
      {
        "id": "a7e24ab9-2a5e-4829-b357-e759dd53b605",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "83ccb066-9384-4782-ad34-af276f5faab9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c8ff30d-1c4d-4881-9b6f-58e4969729c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "51236f88-9aef-4049-b7b7-4b73c3c44f71",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4a6f7d-0005-4a01-8c62-9246314f2261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e398a76-9df2-4e17-958f-f0ceb451a971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84698b4-417b-4fbf-9500-8c12b1a708aa",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b32dbe8-3e6b-4dfb-8d31-1344e6ead3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b81a75c-cb2b-443c-ad51-8d01e56239c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcc1859-63e5-41ba-a5a0-e7f9755615e1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1d4bc7-a1a4-4cf7-9230-7d7f91276996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "199c3c51-d4aa-4365-9795-bd55ddd0f1ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8a403d8-3a98-4a18-b06c-ad8efe438427",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59f79825-950f-4fe4-a57d-00c0f74a78a5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7fe1b7-f397-43ba-aa49-210c43cbbfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af0b9cb1-4d4b-4f89-a95b-d7ba4a331b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b0f767-d9fb-4e5d-b5d1-922f53e08164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db62e79-92e9-4ba4-badc-e354b9937ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47f6001-7300-4390-a49b-97713a4a84d9",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e094e65-6624-4f77-a7a2-f0f627a7caa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc8a2193-f943-42b9-9528-cc31d70aaef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed67449b-aeb9-4e78-90dd-16d87c6c98a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "06f4813d-502d-4074-8545-b0f893d06191"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2dc99db3-81ee-401d-af15-c1e041b7e7d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9be6fc8b-e815-471e-a345-63ec00e3ecf1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddcb1ce3-6908-4618-b670-a64cb2bde121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "06384573-3660-4c0e-a8bb-9c9c8861bb59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2de129a-5be9-4f90-b81c-df4be1156406",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "54701912-b3d8-4e2d-afa0-47a1c671716b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c16f13dd-08d2-4096-94bd-86fb401984cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17ccb75d-915a-4e73-a5f0-867c19f4b4c9"
            }
          }
        ]
      },
      {
        "id": "1d45f501-2ba0-45de-92e0-bb70b6d1d5a5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8638094e-4416-4737-b93c-80fba727a678",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3d64ae8-38b4-48d1-8a14-c2f01171b2b7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4f98385d-3b55-41f8-a482-06e7709908e6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f107f4-69c1-47ad-9e48-61f5c5160f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f081ba-32b6-44aa-943b-0aae8b6781a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a33ed7-5539-4908-a81e-d642d5ee5f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad9459ea-a463-47fa-a4fd-0b3ed45ba92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea2338a-fd8a-4015-bf81-60a71d0f73a1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e519f213-2fe3-4a04-a5fb-02da29b0058b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52429cd8-b1fe-4258-8253-e8e67204861c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985b0977-bd48-4a73-9c28-e7de86404e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6dd9bbe-0dc0-4cba-b3bf-c77a2617c365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09731601-4bbe-40e9-97fd-72ab4a8bb7d9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359f0b69-1097-4fda-a459-dc3fd8d2e7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1436deb0-f0bb-4c7a-94f2-8ca768814a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c817f2-6804-479a-985f-9467b31a448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9477ee77-bef0-477e-ba66-380c0134437a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1aa4ee-1db2-4fad-94ae-83b1b660aa86",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e72d6d7-f1c7-40c0-aed7-c74e36f46b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e2410f-6cb9-4c8f-9922-c06173331215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99efb1b1-c63f-4378-89e4-1910f8bd4d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82ce71ec-7ff9-4303-a803-ebc1aa4344b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c2e409-ad66-4065-ab5d-5573f3f377e2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5e0a47-e64d-4157-b740-d7ef05277cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137c3014-258e-4bf0-8a36-72c391b31973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef779dbc-4c62-4e18-b8d4-4ed8aa879163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89546b44-7c88-4b9f-a4f6-f810a741d476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2c01c3-3885-4ded-9095-fc04d1fb4aa8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbe2afd-cf48-4dd2-97e5-b2f92c4a631e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6900ee0-ed00-428e-a543-69ba31218d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1eec3a1-5e71-4367-a00f-edfed771214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06d54d9d-f93d-4258-b7e1-8becce0f7d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab3b30f-44a1-4c97-a890-e057426a501c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefb1533-d2c5-4e49-a1f7-2a92c95d4a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a2780f-e74d-4dbd-97b5-790ad4e21833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912741bf-4510-4316-be5e-e971d856aec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d2239c-ee48-44ab-a97e-c2ed71783192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaa7bce-f68c-4940-898e-8d977da842aa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9e16a5-bfb1-42fa-8bd6-923dc5bbfa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a29f77-256b-4321-8ae0-81e7ec267f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9845931e-2532-4908-b28e-3a9e7fec371a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f81e5aa7-3b4a-46a1-8e00-4cf04e45963f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25447cb8-5bb4-4b73-8239-3c018b613037",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71afc382-6704-4fa4-a6b5-414bef3ebd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581139b1-da3f-4021-bcd0-e5c42fcf8f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d12f510-ffe4-4fee-9f7d-18bd6e0fe7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cf2deaa-d3e9-47da-b320-7f6f867b6982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313ed13a-4644-4315-a983-45a627bd1c46",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d36111a-0e87-4b0a-8ab2-2a57085a66aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d890a276-b484-4b1f-b905-43c0ef1a74db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eb112f-192c-4320-a4c8-28f222a462eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93eb5175-c899-41a3-9298-141f39ba7f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529b92a5-4064-40d9-a61f-5d7ecd0ed0f0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23051ff-1b2e-49da-b4a1-485c73e6e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0d679a-fb54-466e-9c9a-685319e044b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4538f247-8837-4040-972e-60ac7fb3621e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "942cf94d-346c-4f53-894e-873dca5e21ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bccc132-43e7-402b-90db-2b5c0da71a32",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad75c73e-c16a-4622-8e87-ed0547ecae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95cbc3c-a755-454b-9d28-01a4d80337aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e86f27f-9fdb-4eea-a58b-57fe68f2b978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2fbc722-c907-4818-88d0-62339e954cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec59147d-b11c-4db2-87af-b7a910cedc5d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b869fad2-3454-4436-9c34-4d30554f72a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2d197e-5a2c-4adc-a0e3-74c22821f3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6285b7ce-33ed-443a-9cc5-138b2f20a72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de34b364-722e-4dca-9d29-e7a2111e6a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaae84e-1983-4591-85ea-687dd978dfb3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9abad27-8e06-4b13-a9d7-9888777b1ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640373ab-f195-49a1-b7a0-dd2cfbdd695b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aa9b41-fbe1-417c-b454-65c21e836520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ab8d7fb-4c09-44a0-ac8e-56f68ad9e20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4efef87-4587-4eb7-ad45-e2652d53d582",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb5528a-e66b-4a23-b11f-0ac198f9f1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42086f8a-33be-4d52-a13e-425aae1b5d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3a8152-661e-41b1-81e7-cc2894ebd5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edafd00d-5006-4a84-a10f-3bcbb5603f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae446e75-6baf-450d-992f-76791abd0da3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539dda53-1e80-49bb-bf13-7c1527ba670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864fba0c-cb49-4fbb-a243-41aa4443dc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ace7426-6d63-4ad9-ba99-df08cb59f4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30f845f7-89fe-43ec-9639-eb1588fceea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475cb694-08de-4196-bf8b-5afbefbcd3d9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2941d4-ceb2-44c0-8407-93f250d76fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f159b97-401d-4c47-a1d6-e3dd0fc387a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e7cd81-a117-4653-aec9-1e6b9a5cd348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1879bf0e-dcee-499b-a91b-33afda439da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5af87f0-4ac8-44f2-92d3-d758998111d9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e53801c-949a-4f7a-b48a-28174c163f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed74ada-ec27-4755-84b2-7230e7a4656a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80de9b4-0006-4328-a2a4-756da658c70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8f6183-0172-41b2-923d-58420b7101fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf044b4-52be-45b8-851b-3a752298e0af",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97088b7-a01d-4c10-9156-d570b2431b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9becddaf-8da5-4f79-ac80-d349848b32d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5136a71c-02e4-4a1f-a252-5f64847aa512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d871ad4-da27-4d4d-a4f7-528bf85f181a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f025c2-7f27-47a6-bf59-331dab7121bd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dffca0-4472-49d5-9cf8-d31d024904ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3e8957-fe38-4732-96d7-706e9bd4c89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adc4c53-b128-48cc-acf5-77075bc524a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfa579d-4caf-4df1-8527-a7aff536e929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a008c5-b95f-4577-8931-a10f870dc86a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815841d4-52f0-4f2d-92cf-96de31cd9170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ecb22a-2ccd-490c-bc98-89bf1ea834b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe67060-a603-42c5-b554-c28598ceefe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d39386-95c1-4344-9b49-fe330149946c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae2b25d-fef0-4a90-9680-6f68fd7a6367",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c2f27c-1d5a-4f60-985c-dafc6708e66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbd24fd-94e6-450f-8598-ec2af05473fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849e54a9-11e8-4b80-85f8-a03ba3562d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "201955be-a899-4440-98dc-65107f564e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77709403-e082-42a3-bd29-549cd064c087",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9542dd74-4675-490c-8ab6-b6ffa5f801ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a48076-ecf9-4cd7-a748-f01dd640b29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb87c0fa-6a84-464c-9c38-29901ddf994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2df8df-4cfe-4a59-ae1b-561daa7152fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df217247-a010-4f85-9389-df90e50aeda4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91592cab-8166-4e99-bbae-043f4151b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2141c50-d12f-456b-9683-d8a93f058709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ffc92-8838-4d1e-add0-436ee53efb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cc0c75-c538-4488-9be2-944b1a5a8ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e5eb5d-9f10-470c-ace4-3384c437bf86",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b0ecc0-da99-4c3e-b8ac-a1e685bcc06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fd08ad-435d-4d64-bc7e-ff6f256f15fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354318bc-2cc8-472c-a73d-04d763e13b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4180715a-97df-4d6c-85cc-bbdce18922af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9f19d7-e0ae-401c-b827-307ae1834f21",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd52eed9-83fe-4f75-95e1-a3fd697c6adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a24377-b5c3-4ca8-b6b3-7b0602dfc72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae73809d-6e21-4571-957e-d96f230efcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "309f85a6-6daf-4dea-8c8b-2348762cea18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b63829-35a8-48ce-8530-a1943274e1c9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f309d5-e008-4ddb-8340-e341ba53954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0ea439-6e47-439e-a0e9-67242a881a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5439b77-cfbc-4727-900d-610fc983c09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98189c12-a59a-4e87-9997-85c019dbc382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fe8fbb-ac03-4738-bef6-c6884b084ec7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10371090-daf2-4d9e-b2fb-f819f1f63cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618c3e6e-1a37-48d8-aa5e-320b57dbc0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64e0569-df7c-4cc5-b3eb-501698a9e1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8538df27-12c8-49be-8759-c5652a96b934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83ebc1c-6149-421e-abcf-7d12a396376f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8e1be6-4489-4044-97ed-a8f748da2e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89afdd8e-e10e-417b-a37f-32afc3f50722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9239d1a-720d-41a5-bf8a-e755a13e2257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c72751bf-aa29-4dee-afeb-d95714dcfbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcfffc1-3e02-4b1d-bf59-3aa6274bbe8c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c889d2-7ad4-4827-8b9d-0f7a79fb982b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb67fdb-9f3d-4265-a02d-3b8d6186cdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52192a8e-1b36-4901-8d61-babb22f47ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd00ffd5-530e-4cf1-b840-daa370c9d566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61c7b4b-ef93-4f3f-8715-50899ff6ff5a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc28b2b-656c-4969-9e39-2cd52244e2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd8ecf5-3af7-4721-92f0-0db4d2528266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6273c21-ec77-482b-9ad2-b16ee6f046bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0664ce-733f-4e5b-b34f-976b13b80024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87bbee5-4af0-4e8a-836f-6a4f6810e058",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628d41c7-74b7-4bf1-8b14-5ec508bae576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f0aaa6-ea0c-47db-a996-a0b12588470f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649102da-1834-4c5b-a9a6-74f870592408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f464373-c04c-40aa-8528-b44a98a8131c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44907783-8c91-47bf-a86b-f18e74148b52",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aca39e-587d-4c74-9a5e-991282488eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1348a71e-686c-4b4e-a178-3f413df825c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a31927e-dc8b-4d9a-903b-d711350061c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f97863c-332d-4e94-b57b-17671397bf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf3dddd-b4d3-4e28-9f89-377ab18293c9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1fc916-2125-4bf5-a6d2-22618ebcd3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d42d9e7-96ed-4d0a-a007-8970cf52c181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7405c05f-1f87-45d0-8855-53190ee38731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a03cf5-80bc-4669-8c0a-385ac40dcaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247a1842-40a4-42a1-a19a-4fcbc791e1e3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df80f721-516b-4c59-aca3-8f9934a868b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd0bbaf-491a-40fe-819b-606261b7bb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eec0c2-f2ff-455e-91ce-247d9090fd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2aedd67d-0daa-43d1-ad1c-ec4138822813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfd1785-28dc-403c-803c-aa5b01277d2c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04678250-db06-4c79-99c0-18cb994be0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9ebb8fc-1feb-448a-803d-46440e552d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf2948a-8858-43ee-893a-3f166e99f410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfd010d-c592-450f-a3ca-df96cb31251c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83f1848-37f9-4be0-8b31-d5bd2f99684e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b6af6-a070-44d4-8cdf-39d707c711f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f13c48-e057-44a6-bd8b-9e775dca98e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688c2289-cff2-4823-a4f0-3f37bef49a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf09268-7687-438b-971b-9ee3b79a2512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921a0177-be1e-4516-9f4f-0d7b15ff4a83",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d10fce1-39e9-4cf4-a7b2-2d251c80be3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcc0277-9f84-4c0d-8493-0ae01c01bed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc7ce3c-8860-4cae-9139-5dad65fc53a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9d2816-16fc-47d0-8710-4492d995cd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd8139e-71bc-4e66-b50e-b717630cf722",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e29642e-a9af-4e30-a098-c6da6c7191a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae600e7e-617c-4b29-9d85-4a11f4891f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83addff4-40e2-4277-a5ce-6d1561994b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3117705b-00ec-4ae3-8a05-84a23d16f40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a164c333-e38f-4c9c-993e-e6a1ff69cc30",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce1033d-9217-4b28-acd1-f8c70baca18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987d9f4b-f462-4cc3-aa33-2832bbdc1d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a983841-7d57-4b29-8d1e-32a0b887b298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0adf120-0cd3-4b1e-a026-507799423784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422fcf86-53e6-46a4-b9eb-4ce04658d173",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590ed557-5269-486f-bf5d-e328c8968e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a4d7fc-2b87-436a-ab42-ca80401fd12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62782c60-ee6b-4702-8334-a90b7814970f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b6f930-d9f8-43c6-ab7d-415e33e1bb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fbcc87-b8ec-44f3-bb63-d2815a9b24d9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa393c93-4520-4c77-a1cc-43a03d0ff94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d80cd61-de83-420c-8e91-fb4cf21eba05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e08362-ac74-4a3e-afe6-c5953f7fe2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fc9f9a-e195-4772-9d43-7f0d28c5c55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ce20c2-31d1-4c34-b691-60efad6471b1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b3f845-64e9-4bdb-b15a-ddb83801d695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740e2e4b-77a6-44c9-9643-a78a03e47d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6f2821-c918-4d3e-b502-88bfcf24e984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "284f7e5e-0aa8-4c04-8dc3-fe7093475ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70d1fb4-5d0d-44cb-a6ee-1f26e3a8d4a1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf2baf7-299f-40c3-b5a5-a766f121c59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d0fb2a-d7ff-4424-9bee-a2fcfc5e6d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3355cda8-dc94-45bb-8e24-86cf3f5f1757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee71b045-bed7-4be0-949b-520356abd802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45354eb2-eb78-475d-8af8-557b99fcd9ab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6edf857-5615-4023-ad66-4feb29f6037b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0447d3b5-644f-4e10-ab56-2b01f8104f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c68b41f-db0b-49c2-beac-d1accdd9a646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "270d1558-e368-4567-b1ce-e10a817a66c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9b4337-bf2b-4ad0-b821-90a08a2704a8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0712ef16-c231-4339-b76e-7601f59147db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a36a3f2-837c-4261-9e1e-20b0f38ed70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452f54b1-4445-4998-b5f6-5ec0bc74d46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "572ee24d-b9a5-4135-9116-16663a9d88cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7897bb5-4e36-47e8-9708-04544cb917c9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cf7037-96e9-45ec-8fed-397695026088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be35b02-2826-489b-a1fe-9dd8c3a46eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313d95e7-39e0-4391-a2dc-0fb1e8643329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b170491-25c9-427b-b929-11968e8066c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd6af47-c3f1-4083-a6c8-c2fee40dc82f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180261ea-e26a-462c-b07b-7c05b7b8118c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd2ff2c-c590-4322-8828-5f0442775b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2006754-10d3-46bd-bff3-1f7932336921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9fc4a7-56f0-4c57-aa32-76abf6ec7fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61e8d14-6f77-4ef9-9641-2ee99c9ee2f9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd9cfa7-6e72-4033-a4f2-f41af97df682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4349d3a-6da6-448b-976a-11802354ad78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db737218-e06b-4602-93f1-c9ccbcfb2fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d90209a-d925-4d04-ab70-d1298c93923a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f33f894-1d1c-48a9-937a-4faa41d9b362",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5e91b6-6ded-43f4-91b0-f2b78d7b6d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7b8fb7-bdc6-4a26-a05f-a98ec6dfaefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe9b102-da14-4906-8019-3d2baca3f031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edc20e2c-f343-4e1f-88b9-b2ac7e54147e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272aed48-21ef-46ab-a3fc-ea4ed0f1341b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb187ae-ae57-4b6c-bd64-e1c666c0723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a9bca6-4d5b-48cf-8212-3eca537ab7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dac142a-cff9-4bed-a2e6-657aa13dff6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4432b213-a8f3-4313-b1e4-433566dc1b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d9de37-deba-45b3-9ddf-787d15be3e55",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719b1e7f-1e80-492a-b81a-9d411202eaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1ee154-146a-45a2-9b93-18871006aa55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a16abd6-3cba-4590-af27-aaad81e5ba1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2415c56d-585b-42de-a540-44badbe528c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8ca2b9-f2f5-4f09-aa6c-a05525c0ce8a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1321f8d-79da-4603-bf2f-63600df8f249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21178c83-39b1-445e-ae0c-02bf400fe392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdba04f-fd0c-4e2e-8041-14683f218c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68a05672-71bb-4a83-86d3-d5850d605bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df1237-7700-45c0-923d-dad499eb416d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c6b929-0058-4cff-9136-463b5f58eaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9407d33c-ef31-4d4c-bcd6-a5a6c3667ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b1a737-98c6-4e5d-b5ab-8b50c5702973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22ffe13e-453f-4864-9a10-99f851d67c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a0c602-757f-460a-9d71-7ac28d8cd647",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aa0063-702f-4fba-b73b-cdfca93f154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8ab660-6f39-44a3-99a5-a21c83809c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f6d751-d20d-4448-8d3e-64b030cb79a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac08824-184f-4461-93d4-372d32682500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727ff943-0fba-47f8-a691-54a705b71da0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d860f79a-aeb0-4eaf-bdf8-d408879e0039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed73c128-6156-4de6-9a46-fb1cae5466aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92372c6f-b049-491b-8ec8-a17e83150331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f60ef3b0-30cb-4f5a-aae7-4abad6e4cca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6153940d-8ba4-47ba-a0c6-6b8e15c40863",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d8334d-d7cd-4b32-9119-31b14625e875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa846fb-1d27-4b01-8d78-d53aaa4c9997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09799c5a-3648-423b-829d-b29d90dc8e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3686f789-eb8c-483c-8ee0-e130f8fea2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7203351-f94c-4d95-8e8e-57bf7db44a9c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c257664d-c0c7-4505-b825-c2e9bb8f30c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66eaaf81-8e02-4a17-880c-897a390a46e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067f897f-2cbe-4077-b843-b612e663180a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e471eda7-9a8a-455f-8ce4-5bc32538bf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af6fb02-9f5b-44ab-8570-e4ec3ddc6df2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467650d9-51ce-4f5b-b59d-0a0ed7d0b36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394dd575-b64a-407a-acae-291661c7650e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a086a66-a096-430c-8f74-44f553411aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a000dc8-dd3a-49d2-8d33-d3d158ca63a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1cb2bb-10c3-45c2-a1ed-01a69ffaf2b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fb3b48-b773-4608-bf6b-495910f16ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ff1670-fc08-4e4c-a67c-fbfd8c8a3b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50903179-75c1-4451-98ba-01f219e1f1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7481385c-9b97-4f69-9d73-0bd36dea8c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b41bde-378a-4bd0-9800-ac5058109b62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1314ec0-708b-4abf-94a0-044f5a540860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d4df35-b103-439e-8010-f590fd36aec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd2a347-7036-425c-8bc2-0c3109eabc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "37efb972-ad1e-41a6-8f20-abf37b77f8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbae63b-07e1-40d5-9fa5-d67c9bbee844",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884ff4db-7e60-4546-b07e-f4ad89f81dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93479dec-301f-4c29-9272-bc1c0dfa8fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed287ca3-5b68-4523-b660-44821e037874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a838d3-007d-43fa-b3a9-a41e3672c948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be89c7bb-7e71-40fb-8969-410286e56943",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505cbb79-0706-4a33-9c69-e7e63dd64a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465a70d8-3323-4d6e-8de4-ff53f5bbcff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2294a5b-d165-486d-8a6a-9945eaddb685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1731f5-cbd8-4a1e-bab5-b143ece3eb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067b0e1a-315e-40a5-8a1b-59d6846135ee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171a3282-4482-44ce-87f7-25949c24c429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f9e29a-c12d-4339-84d3-c1171496065f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9d83fa-28f0-4164-9b02-4be484672edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e888e3-63e8-4d89-a00b-6171b56e8b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b5647f-b014-4d75-8af3-ec02c08a9957",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5e9998-fc49-4f3f-9f69-f70015a5e73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5489550-3fec-4aa6-a3dc-b13c0957726e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f94621-62e0-4531-bb04-12a6abdb3ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59183d88-1acb-404f-b59c-7552af12b100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f28985-5265-44d2-88e8-0bd1d24c278a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8671b70f-de08-4f77-a0ba-7ab5ba17e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aec3250-5e49-49f8-97cd-39faaccf186f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2830c5-7187-41dc-97e8-f1b9fd4e4725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea82bfb-b6f3-4f63-8b89-7c8f408b8740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d223e064-c3c5-45f1-a6ae-d91cf988a90d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f023e97d-aa0f-4e3a-9c40-1e65574d2e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf33817-efd3-4ffd-9d5c-283a2920ef7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34435cc2-f7ae-446a-bb59-dfaf7253c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62d11f7a-2f7c-4a31-b9d3-0ca0ab0a8104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0873d22-98fd-4d05-9167-a4f0e9b4b321",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442914c6-5d08-4409-9cd0-b948c2238496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8679af23-2c1d-4c78-a0b9-47e11c833743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69be15d-f18a-48bf-97fa-e246aa629453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "788219c2-b04e-41e2-9760-65e442edd261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaa1b82-de8e-47b0-889f-1fd172429403",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8043321-cb2b-4545-beb9-f27094d98744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449e0041-ec0a-410b-a86e-f9bf4acdb5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8025b83c-f0bf-4680-867b-be9f01464e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "383e7be7-0f37-4036-b97c-cce83efa865d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204857cc-53b2-4785-9aed-c45ea3ddd997",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5b82a2-af47-4b75-88f2-b16bb60f4830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f2c419-7f0d-481e-a2e2-10902b73153b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5881865c-4587-4fba-8eb1-7d015019eb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aec3d463-4bc2-4914-b83d-01ea178b5e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0b8574-0783-4a95-8234-e024ad899746",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f490c7-9fdf-4b4f-9ff9-58345b2d7d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336aaff6-9191-4816-a5cd-6af12d018378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f048bb-ad8b-44e2-9446-cdfd447fa198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "986393ea-fac2-43b7-aa21-eb6d202110c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd893f50-9e8c-4864-9b10-fef6a55959e6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ea3ccd-428f-4000-b593-13096c4c3207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2cfa1b-92d5-49bc-8e64-9899117b3bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667a8ccd-fd91-4a4e-b85b-b4c8aea4ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07fa46c8-7dd0-4101-ae88-354cf035e0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097d3a2a-acbc-4ad8-8664-c1af949665d5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e9c3e0-92d0-482e-b794-3ea48700d983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286c1a11-f022-430d-afaa-ce0b24dfbd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9718f2-0af9-4bdd-a3fe-c9ae5cb3e5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc97d1a-ce26-440b-a26d-22509b69d22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23947c4-e547-4ea7-aad8-7c870aebafc6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f529a46-d22a-4043-83b6-c29de7e84785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94fa8a6-8dc9-488e-a769-c59c89700cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc25af89-edaa-4a62-9c41-7d703af70146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac66d2d9-ba7d-4b82-9af6-d2e8092b5eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05a8e05-ae6b-417b-af7a-c91b429db38d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c64e02-6743-4bc8-b437-0ba9b6c62580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab861d5b-7f7b-4043-978b-acfdbc98e837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2127f7cf-31a8-44ad-9961-9fa8c46d09bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec915a8-a1bc-4e8b-a3ba-2966c24a7175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472fa8b0-8b35-4a0b-8026-7a045a2c3055",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee38c87-dc12-4b34-ba24-37a61e505104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6596518f-a2c5-482d-8a50-025576ac0a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f7032a-509d-437d-9f7c-21eeec13c0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4aa850a-a582-4f13-9f9c-a4afb55306ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9e690d-3f46-4462-ad8c-2386a1cc78b6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200aef00-2b4c-4d34-9b3b-16f01bf333cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461abfbb-58f3-4883-94f9-9fdefe4f4ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb24eba3-b6e8-404f-bdbd-8ff6bfb185b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d135b3-ca6c-4905-b269-200b15b1f98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f09c08e-b176-4d3b-8ff6-44f94e7a3ae9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8e0a7a-af30-4240-993e-9bf8aaa3382c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7864011-33a7-41c4-9b0a-9524de0af8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39aac55-61f0-4bbc-b046-b15931309161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c805bfb9-bba3-4459-9153-0dfe9e8bad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecec82e9-6a72-4f8b-8d36-e8cf8c1e6dda",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961821f4-e8d8-45e3-958f-d33d30b334af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c109e991-6042-4e97-8052-09d7e13a14fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b95ecf9-41af-4e4c-af52-fd5b0b306631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d53f144-1874-42bb-b52e-15704a2f185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e24652-d8e4-430b-ba7a-9056b6d9bccb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdb6ca8-0bf5-4a0e-b7e6-c2fa1a6eb5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da711fe9-2e13-4576-bfe0-28ca93feb842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9f25da-2ef4-4280-b18b-92b5ee44e546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0bf6ace-d253-451c-960f-4c05adb5130c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4185a345-9d08-49c5-ae4c-0debc7e3dc36",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159329ae-8b5d-472c-aba7-074c469bd465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d229bdc-7eaa-4e7a-bbfc-9d781aa915e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d6e04d-7ef2-49e4-9731-1967580caaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ecb693-cdf2-4a7f-9d3a-ae94291c9db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d30faeb-dfcc-45ed-aa9b-f1844b8bce8c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1c048c-3ee0-43c0-97c2-7089cf9b26ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cd0827-ebdf-4c11-bb7c-cef68e274bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48816229-53e7-4827-95d6-cc63f2c3233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fffff6-7880-41d8-af9f-291de927b0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d0f1e0-0acb-4b1d-b22e-72222fc77e25",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafbdda4-f3f0-4238-8fc2-92cbf44eb800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6628aed3-9528-4e9c-9c74-a6020b7a636c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d430b4-0ecd-4fd4-bc40-2a55cd14af06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5313d721-91b2-47e8-972e-1babd13c7b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1464db08-0cd2-44a0-8fc5-5dad3b5c56d5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38bc166-49c9-43e9-8e96-4c38181592fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44a5b93-b393-4c70-bdb6-7b90f30a8e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1314d708-a0f2-45d4-9a20-0fc364d7d450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3a76e5-2d49-4fe6-a423-d6bd2203141a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe4f8b1-8c8c-4ec9-b591-5b2f5e5f254a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4170e75f-43ca-4cbe-83ee-4c12212ffba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baac89ca-2b66-4669-a73c-0e4075ec31fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5134e426-80f1-4619-8c2c-100a79db65f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc483440-aa96-4493-b5cb-dc21dbc431d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41aac5a5-0469-43d3-915f-1b80d4a2297a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae1d717-8190-4f10-9168-c92eaaf84ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a496460-8c74-4234-8a7c-7c54dcb7951e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd25ea7c-2d58-428b-a775-ad946e2a6020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec67e5a3-7116-4996-9617-6ba3dcafb27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f9e8c7-730e-4b71-8e4b-08590d00d0db",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31afc692-b86f-4c4b-ae71-12fc41a862f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2b298f-ae72-4656-bd78-8eb5a853a095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e17f5c-d1a3-4a98-99e2-8c75e04ccb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9267df-7ad7-43eb-83a8-ccf39f4c4997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efccc16-4560-4e74-9d1f-50f87dfb56f6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bf4b0f-d508-41dc-a867-8856d0f0b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741329c4-2986-4256-952d-4ce8854ec36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c6f7bd-a172-4ccd-8f53-4d17eaf6e91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15f2764b-8c42-4268-8df1-61ea60127737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fc819d-6390-486f-ad84-df5fc1ff0263",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6412d27e-d964-475c-81be-77940514f2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd80971-6e46-4657-bd37-d3efb0e170b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cc8b38-d88b-4a5c-bd7f-1020dc8a9a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1a107e-1f49-4c71-90d7-ece79d63abd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d307d0-f555-4408-b586-4e9087c2bbc7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a691f1cd-8440-4138-ac8c-d498667e3de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bbb929-cac9-4963-b810-8560afa5b767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61790a2-9ad7-4e33-9886-97f91c9c6a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7846e11-3e7c-4a4f-a81c-60cb467f25e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53de579-c59b-466b-ab73-9a79e6d01627",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b63b75-6eae-41e0-be8e-8489633790e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548da0cc-850d-4ba4-b0f1-8737203013c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd6d737-8ce9-476b-90d0-519db7f26924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fca2e256-68da-4bd0-a1bc-d1d8654ef529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0360342f-461c-4e56-a162-fdf6446896f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6923f567-f300-4d90-89fb-98267878be4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1bab089a-5b07-46ad-b42c-88a63ba558d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ec1593-8b81-411e-b46b-7c92cb95ad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "923db0c3-4664-475f-97c2-59b79f564ed5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "514f9a40-a8c4-42aa-ae4b-78702c939b61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97baac18-9221-4716-86bd-b65bdfea656a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7bbb85-1110-435a-9529-8489fa99a681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0795ff58-24ba-49e8-a5b7-4d1c48b370c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4454390-5d2a-4c94-af93-e3f2401ed6d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94152e84-d361-447b-b42f-1ca535963702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f412c69-7d66-4560-b02c-ae231d81f39b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bc47ce-c4a9-4a37-8645-c0442e3091b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1b9acaf-b770-499e-bc43-cc99619733ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c0ab73-adf3-4a84-b5b9-51e9cfdd10d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff1d0a82-5f7f-478c-95d4-399557cd1219"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da5931c5-30a4-4f7f-813a-043624e79cf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80e3b45e-d94b-4caa-a326-dec7f96eb300"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50aaf7fb-242c-4839-9502-75cbab5c0ddb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04eab0d8-76b1-431e-b540-a8ed2b3bd130"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e854af3c-92f6-4582-8269-7852c1d5d22f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4d726a6-7bc6-4b22-ad13-7593ef928a0c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "047dcbe7-3ae8-4d74-8e4b-c51701ce337a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c21657dc-4c4a-4277-89e4-29706cc85fea"
                }
              }
            ]
          },
          {
            "id": "77daf732-9716-4a77-9d47-467beb5a32c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c31fb346-5769-4792-90f1-b5137317a9f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "996662b5-4ca4-4ff1-bb8d-b9336941de65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c1564a4-fa2c-41ef-a3ba-c9fc6cb4c8d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f5d31c2-15b6-449f-b8e3-bcb7cc51459d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5fc473c-1598-42b4-8378-5933584dea42"
                    }
                  }
                ]
              },
              {
                "id": "f4d87057-43aa-4204-bf90-d6b86f97f430",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91db0388-06c8-4864-a0e7-f27c48c58651",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32531ecd-e24e-41e3-a8f2-7910deb44e07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f964e587-8403-4643-b0f4-5970ea798a72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad8cc772-d5e6-404d-90fd-9f9d4c97ab4d"
                    }
                  }
                ]
              },
              {
                "id": "91123f10-a892-4926-b92c-4be1d5c60b7d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d00a84c8-a190-4eb2-a167-2d73d5d345c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b9bab3e-ee7f-4ffc-9124-107ea68b1bdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48f9d106-be81-459f-92d0-09fd846a02c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18fdae90-01b4-4d33-8d41-93a399a2fb50"
                    }
                  }
                ]
              },
              {
                "id": "27b8bafc-aada-4097-b577-8cf2e8aad712",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "205fe7db-14bf-4957-93d9-3ece6c7dcff2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c1af736-7e33-45e5-a571-24b83122b169"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc364c35-a0b1-47f4-9da6-c71d3fea472c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "28ba05e2-54e3-4d47-b1f9-3514700b6fe8"
                    }
                  }
                ]
              },
              {
                "id": "f59de45b-430f-4832-94ba-8fab6ba7f6dd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9d07e7a-e8a9-4a40-a1e2-149706f19439",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2c4cc12-bb86-42d1-9013-8888e31ad615"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad581046-97e6-4860-8a50-a9c7f4b9b09e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "54525f33-0831-4555-8539-475a601f1889"
                    }
                  }
                ]
              },
              {
                "id": "dee2caeb-1a79-48ea-b202-f92d9a1e1b5c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb3bda06-016b-4749-8d11-16180aaec106",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0df62530-b6db-4cb3-8544-3e9802e32868"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e949ff28-07bc-43b5-b660-051b85f299ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f01e154-f1bb-49c4-9f3f-8c9bc75b57a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7cf93b3-5aef-4a2a-b6cd-43655afd78cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4631e55-fc97-42eb-9a95-7ff47cf0aa4a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "268d15d0-8d78-4e67-8d36-5233d008c687",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42806e84-3680-4933-a430-d7346734398f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1e69a6b-3838-4f41-a600-6c611cdb3ee2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8f8c3423-aae1-4617-afd2-5237ee65756a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c805f0a0-3e4e-470e-bc6e-569ea0e6df3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86a37ab7-df46-44cb-9b01-b7636b84748c"
            }
          }
        ]
      },
      {
        "id": "883358c5-bce6-4dda-9af5-29658250c5be",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "baf8b28a-31f4-442f-8483-fbecc9c61a9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d71e04f7-09af-4979-bc17-042f71f0bcd9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ff2e816-da79-4c93-a25e-572a9966cfc4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0540c40-f676-4379-a69c-5bcec7209cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922a3fee-8823-4e18-8243-450460d41ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc6d43c-a1bb-48d1-8c56-d1fb22b61e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a57b4526-106b-4e34-ba2a-f8be665165ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bdfb7c-1368-4365-95d5-7f89a83d3083",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e77b1a6-80ee-431c-9e66-703526a0804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67d1e16-225e-4ed3-8a88-1b961cc3fbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fdb925-b7e0-457a-98e7-122827f4a300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9546248-174a-46f4-855b-41d416e9c1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236ef9c2-bddc-490d-9c71-8b0a6e7167bd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e012780-7d03-4727-9ea0-a6ff6ae17e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbfe1b0-804a-49f7-b12c-66c2419708e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec44a6cf-b3a6-4ce7-8a9a-f51156d44865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edcf2655-01c1-423c-bd52-a97f475a9fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8699a7e0-c63f-450c-bec8-897b1054bdeb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925f4812-d813-4c38-828e-578caf5afec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800fd179-1833-45b7-9c63-e16f7e0b7695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7942e69-a783-4585-9dbb-5b9d2ac7b09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfca71cd-f1db-4e28-a77a-225b642abaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ed8c76-9359-4f41-8de0-cf69bd8d5e47",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e65cf-ade9-4cfd-9ef2-60db3d7de143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2361f057-41cf-4d80-92ba-77f53cd77da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4020e33-67e8-4bda-9c59-8cb9a11da80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e35841a-9622-4cee-9e2e-e395aa8def4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08822d7-9e72-496e-a4d0-db19870ead52",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8e16d7-ae22-487c-a39a-3ddae5e56b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aade4282-0ef0-417d-8f1b-81a20b3eb7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8836d7d-0e61-4b40-aea4-afb320ddbbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "480e0fad-38b3-43b0-a088-fca4121ba1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d8bff8-ecf8-4f49-806c-dc448de2c8f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054862c8-2979-4229-b896-b98434a5f140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450c6694-d13c-466c-a2a7-9da613870288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37021b1d-c92b-4afb-9bee-70afe49b7700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd3e38a-f7a8-451a-bd3d-89619ed0793e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ad8159-3de9-463a-8e63-b6b26c5fcb23",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc9bf0f-666c-44bc-8902-99a187c484bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecc3d93-72c6-44b6-b3dd-202434eced34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e321d4-b4e1-47d4-8d2d-22f7739f158d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40efcc8e-9a2f-4f97-81df-f331026cfab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586984de-9fc4-4021-a340-e9ba2380f45a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac2e50e-6680-46c5-b608-ca12f4e59867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fff2cfd-11f5-4c25-854d-3d19f9c65c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f9511b-414d-46e1-b5f9-ae367ffd254e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52baca4b-8a3b-40d0-88e7-ec445a51a06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c1425a-c31f-4fd0-81b9-a6c89b4b37e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a827940b-cdcd-4e84-8274-d592f6a86022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1435c0-bcf1-47df-a5c8-0e4d303d8cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3d3ee5-7568-4bf7-90d3-eaa764a5e223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89fda519-e73c-46f5-a20e-6162056aef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f606861d-bcb6-44ee-8343-f33291796846",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2b3174-d289-42c3-8715-ad0f590138fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97358bfd-423d-4d39-82e8-a78d6bb622d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4f1a5a-5dc5-4078-a5a2-2b3f71d9d834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbc1627-f0a5-4bb8-bd45-bbb009be88c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854085c0-6977-4cb0-ad68-8cdb75cd673f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433e3153-9003-427c-907f-64a890237705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc3a4f1-50c9-47b7-8466-4c935f1ce36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee8b065-0222-4c54-910b-c47639b42d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "832d1dd2-8c22-4ec0-9da5-24619efd172f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb2f135-91d9-41ae-82f5-87c5dd94b7aa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec035730-3983-401f-8761-b10ec28fb538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d384c9a9-831c-40ef-a7a8-04a4b09c055d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261416d7-82f0-4e55-a149-db5a215326f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e942de-c9b1-439a-b07d-e81b101c6254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4174576-5def-429f-8550-b8a04a039956",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88870ca-fc9a-40af-b16b-212994799e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e72fe9d-1090-403d-b44f-8a9afb656b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d4e825-ec29-4fbe-a4a9-c7e60f3d0eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "764c8229-8557-48c6-b920-8b405c6386b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfdd27f-7aa7-471d-8635-f8e63a4157b9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e8a9df-d0b0-42e5-873d-ff816bc787bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3a1b3f-3aee-4a1b-b5a8-3ef91b8fd4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5798eee-fd06-40a4-b613-621f933e2867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "62fc22bd-3a4c-4e1f-95f9-f1d58b2027e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35194ed4-3507-4a8e-ab2c-c34c77190412",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a05b66-6340-4604-bdd8-5451df4b2906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182ebbdc-5aeb-41cc-9587-d42bc31ae038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824226ea-96e9-43b2-9977-6eea91e3a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcd9c48-d32b-4ab4-ab81-1c2cb6bcccf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f4dacf-08e7-40a1-a749-b14a51fc91f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c626de1-6a7e-4395-a2d8-0eab382f8f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7177ba97-3299-4010-8f09-4320d2e784f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2308e810-a3f1-4897-b63a-78d6a0e55f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66d3d59-a69a-484b-847c-786794cab600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e03fa5-7cb3-4fd3-a8a3-14d71ae89fef",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e3a2b1-579c-4dc4-befc-35be6d25d812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c9542a-664e-4890-a4b4-b555718aadfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abe2ae6-068f-45ab-85e8-8e4f04e91650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaac569-465b-4156-94f3-99842bc66ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63667eb5-b764-4756-93f5-4edb66090a2d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1a933d-39b3-49ec-b17d-fecbb626bd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f607463-3248-4d3a-b5c9-9e9a649cdb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404175a0-50ce-4e19-8e44-97953f8ee181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "492d561f-3c96-4b74-964b-0cea94b3f660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7a388b-c697-4383-9e2c-e158dab9d6c6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060f94c2-45a4-4870-994c-cb7f85f7fdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77056df2-144d-4616-acef-1753b971abc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf86242-9399-4d4d-8804-31195309191e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a4d093-471c-4695-81bf-dacc044f9723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a70214-0716-4551-a0e5-66301a1d5797",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ee7338-2729-4543-ab20-22b4000b75be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4e7970-635e-4703-8d77-a4614ba9c788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66883ec6-1f34-446c-b4f4-2f76a68a1290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c728ab66-d226-4e85-b573-ce0d6110bb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08630ee1-31c0-4e70-bb8e-8045caa35a5e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29be3a3f-61bb-4def-a956-2fae7b5c01ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6540e5b8-6b9e-41d2-9b08-00f6ceb63dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bcaa21-84bf-4156-a7e3-5a53f8412006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3dcd9d-c42c-4c23-b83a-2000d53afe86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca87e4b-37bc-4dda-8b2d-cbfe53b2b454",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9595b4be-edc8-4bf0-a07d-2d608bd2542e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0218e5d6-b04f-4b74-8d35-b2012ab94fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af4220c-8871-41d1-9617-c2862ab81d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9790029-cb15-44b0-becb-d583d6a79a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe79634-c816-4408-9392-c8004f3a32b3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46447f27-d9de-4682-ab37-6a2484218ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43f00a2-9855-45a9-8ac9-03a406c4da63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a51054-33ae-488e-b183-8737e1796e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa83ea1-2042-436a-a1d9-37e62861fce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfb2266-eb81-412a-a572-e5ae46f66c28",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7751ecf-4a24-495e-8217-202cb62faa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a57dbc-9ca3-4f2d-9469-8a85b55765ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabd1199-f2b5-4d69-b7e8-cf01887f0735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68b90f1b-4dad-4508-aae9-e342303eb1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3224ba1-8afd-455d-994f-d48184ea6e83",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a53928-cbb4-499e-b865-2768269a880e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983bf058-9291-4422-ac9c-07292fde8320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaa568c-52b5-41e3-98f0-7af099d0b8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fc38ee-0110-48df-ad83-8d533a357a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db4ac7f-9786-40ed-b468-1feb3ad071b5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73eb292-f569-4fdb-9e4f-8327d860273b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f892a0-7b91-4218-b28a-cc9746811b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d585208-ac07-46ab-98f8-566532446b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d3c484-b001-4d94-8e3f-44a4d5d38f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d9beb9-1928-469d-a57c-ed9846061011",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6d6f02-ada1-4be3-b703-d0bd20c1db29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff64005-eb1e-4e23-be61-9e5ab72f798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1d6d0c-52b8-4976-8213-b35f54ffc27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e01bf4b-b574-4863-9599-7bbedcd39768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7e667b-0cea-4419-826b-9db3295965a5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770197a1-92f4-412f-9fb5-afc36ec84f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32aea337-7ded-4ee1-9137-cd1103abeb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a14b1e7-4531-4881-8300-4595d671e9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3c2c49-e651-4137-9364-a3a19db2b19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b49ac3-9a53-4592-ae05-0a89bc98c808",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d28ad1-3e99-4f0c-9210-d0769af804ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3237e21-2515-4bb2-b3ae-20233686739d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5e5259-af40-456c-94d7-7b62c5f59fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c618bc-977a-4e6d-8329-a6539d9b911e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f60250f-8d18-4e42-88cd-b4d85aa7d4c8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe95971-7459-4b47-97e2-8237cb2b42ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf94a7d-2c18-44f3-b2e1-7dc8dc2bbc03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7ba5da-1220-463e-85f1-676a1fe9f6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f471d449-29bd-4dda-9902-db5a5370cd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f4fe4b-db09-465a-9915-65116a8a0496",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb568105-e54f-4945-b330-23d858eeff78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8046c611-2a5e-4a81-a44a-da76d75a0467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03813399-8c6d-48c2-a775-82a68ba18cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ef0f40-5065-4d1a-9453-5fa4d5caf8d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6228256-9194-4d18-a8fc-c938655d8f04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a5c364f-23e3-4fe5-9b91-04ce0ad248d1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3152e173-6d7c-4aed-94c5-747aad5bee5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6acf0eef-db7e-42a1-a4b5-17599e70a4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a63457-3eec-4bda-98df-1ec18b78da4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd43c602-1484-411e-b5c7-bb2530d8fce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9543649-3e8b-492b-8874-50e62d2df054",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516b315e-bd6f-4100-99a1-2e81442915c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbeb2e8-ca67-4cb7-87dd-83dfebb3a575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdae9bd-c617-448b-9012-ec1dc19f2b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b62fae63-6271-4110-b212-e9b9c1a154ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49fb802c-6551-463d-9728-9e264ba3ffe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e96341f9-9b44-4a20-8398-2ad141ceeee1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9497882f-5a3b-4742-b648-baa8805dfdb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae76c66b-94dd-4018-82ef-3bca30b3bf2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4500554d-b259-49a9-82bb-83cf2d0f6b10",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e1c2177-d016-4686-b65f-48ec3003b62d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cafafeb-f61e-4fcc-824d-c6dc5be2c6d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0305d760-8db5-470e-a0ca-33920f2a0413"
            }
          }
        ]
      },
      {
        "id": "5bd518bb-0f8d-469e-97e3-483af834ddaa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "25f94de6-e482-4069-ae79-da5a25db555a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00a660b7-6d3e-4dfa-ab0c-75cf318de234",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c05ddf4c-9335-49ae-8bc0-a4ffc8b62d15",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d2347e-8b47-4890-a1b1-8b4f4325eeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d6a59f-3bac-4f28-b67d-158c9134c6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dde8d96-503b-4272-a944-419443d5dfd1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dc0a0f-e1f6-478b-b9fd-70f0591b2ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0354ef45-8f2e-4cf0-8995-254eda3b922b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd53b26-e9b1-4b10-9392-b0a7d4118643",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b0913f-6115-4b98-8503-b3861a8a0b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502a22e8-9eda-4470-95fe-266447e421fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950c86f0-1dd5-4222-8eea-4d3db730bb30",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b468dfe-55c9-4528-b02e-0f1f6cbe9ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d80924e-1fc5-418f-884b-3729070ca0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef65a24-f934-42f5-aca9-6552ce747c09",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2461887-db18-4109-a027-089f4cd538bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0523e0d7-bde7-439a-8991-32d3172cc3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd557d1-dac3-4688-951d-0f48d6f32035",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cef6e2-9702-423a-b23d-7c6133e02ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7742b39d-d2c9-451b-8ea6-6a8308dabeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bdfc2d-7205-4ef7-b4b3-448c4f680756",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3628f9f1-8fd1-4479-84f0-fb05102afc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd10673-41b4-4c5a-a339-fe6b8c5d1fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df30292b-cfe5-41c6-aea7-eb84cb2fac12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e4139d-dc66-410c-8e26-a1918c4d15b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc4f6b0-d8ce-41d7-915a-597212cb045d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb7956c-79d1-4c6b-a92b-a03457218774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c03df7-ea1c-43af-bcc6-a10b56c0ae30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fe90a9-8022-42a6-ac60-6ccffce0a60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef447d8e-8014-49cf-ad9f-c490efd3bbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47a1746-63b1-4850-9b26-e4d72263f99a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d2300c-84b8-47c4-8d4d-e426b4f3b559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a5fae4-ec7f-4017-9fcf-3e8b5c7be6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d4820d-298a-4d2e-8ff7-2ebc40c0cf53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf0057f-1dbd-48cd-8a58-d0d9b2d66dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271d3c7b-68b4-45dc-b12b-046abec8bdc0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04993bbf-2d79-4662-b676-219a885da552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a260e5b-e70d-4019-8a7d-8e7db882e081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a36a313-3bb7-4754-acc8-3303d14376f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc0d388-cbca-4e34-8cdc-00da8bce11b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d66c576-cfa9-40c8-a283-44d0adc6b394",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e34f165-7a06-459b-aa00-86882d57e650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a4f1eb-4599-44a3-8f29-58adaedd1695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9a4d42-2fba-4c7e-be00-03580e204f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a91b87a-8f28-44ab-8651-a11c2bb47942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2864af08-89cf-419b-a299-00954891b25e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a049ed24-3b83-416a-93f9-8a4baac2f171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20bb0dd-2724-494f-9034-4340901f1fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61190768-cab7-4a85-8844-ee256329f92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4de2a8-c189-44a7-afee-16faef63cc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4720c9c-bfe6-4ae8-b74e-8e255abc96c9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb7d91f-bf68-421e-ac5c-e20f6a39ea06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac8a2d5-fa57-4355-bc64-6783375096e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774c7c22-e45e-47ff-a724-71921df8e8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b4949f-0c57-45a8-9edd-ebc383a16edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392d57ea-415e-45e2-8f45-7f078e161d34",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111f66e5-04a6-4658-a9cb-157e87c316b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896afdde-19cf-4547-a019-88498c2b97b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324e306f-2b18-4c08-8de7-01439a049da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88324c93-c210-46ea-94f0-a60216248a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf937b9-52da-40f8-8cfb-6e5090139312",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ceefda-6075-400b-b5d0-9351db2a4578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a503132-3fa5-4dfb-a953-d28362b57e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52989727-1666-4caa-b2b2-1fe2327db548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af869d06-b062-4a2e-bc3d-74bb1a238bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaae7df-e221-425f-99d8-4ca7fae721df",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f613172-1cc8-4c21-ba3c-b5b9a8a97f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e26ea5-9c6c-407f-94c4-791164ec0885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc69d7-1f51-4c97-85ac-b67ebb8f5d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3627ad75-3912-4e75-a5d1-4d4c8584c22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c632097-8af2-4b9c-b160-87805bef0bc5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08184ef-dd24-43a0-ae13-b23b7be86038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046f4918-b014-4b0b-9e83-fc4c55a93476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489dc8f8-57ce-47f7-af34-06b450b73b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64788ae6-051c-4f23-a002-b97ec670244b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df39ad6-1cc6-4c80-9f80-29bd673052ab",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bcf9bb-363b-43e4-9857-257f8c70f21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9157f2-74d8-4b03-ba0d-ab91bd564504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64286189-b962-4a43-99d2-392113129050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557d5324-ab79-4289-bec0-97093f91de1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8d0a69-49e8-4eea-a879-2a915993a5f8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729951cf-3396-41ba-b1d8-6869ba9820fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632f0ba7-6e1f-4c40-af95-e9ba7b8482f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afe8c72-a8ba-4944-a869-233404e87abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dc7722-d6dc-4a04-91e7-e4caa3b22777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9802a0dd-a2b1-4fc9-9662-5b4f45ed3ec9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e52326-012f-4bb8-8c75-56a692579aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5c8da8-4520-43f2-8d1f-f1709dd5a1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af068683-e632-478b-8287-e66031f0b145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca51980-48ff-4b2e-a193-391e61001a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2f67d6-8e19-4b42-8366-b515141708d3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a396e74d-ae7f-40ff-96a0-8e50646eb638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781e382a-dd09-428b-b23a-f7e8cba510e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909fe89-a261-4458-a421-68abf6ef4af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8b1fd1-004d-41eb-9959-2a1ace66d6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb7437d-3b0e-4466-b302-3142b24451d7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b20afc1-76d5-4e9d-b3df-2415ffb0d826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1be77d-160c-4499-b3d5-de4adf9f4e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245fede0-6d1e-4cb8-8066-924a656ab8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2980c47-3d29-4ad1-9cff-7053c66ca64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6e8342-c5b4-4bae-adda-f5080d2033e4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82542a8-7ecc-4651-bea6-053f4625f2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541f980d-f10f-4f44-a66f-a6b9195ef15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e40f7ca-b114-4dc1-865d-b5fed10f52ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca87b3f3-e4a6-435b-b55b-985d90ab0ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9dcc5a-8529-45f1-8546-f8ebfbdb721b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d267bb4-c9f8-4d9c-a4d4-5309acdac6a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acea51c1-0000-4f0e-9ce5-13c05d455394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085ad204-e93f-4220-a9d6-cc85f337d04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedf2690-c881-42cc-b16f-4eccb4b7e13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9787df7b-d293-460b-9599-84a7b5e31c1d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8be96e-2a43-4867-8cd7-0570465abf19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14c48bd1-9908-48e5-a645-32ab7441f56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45812f83-bc0f-4d23-9e72-f3d75ac90d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101c0b54-50ae-43eb-9e9e-54ad2e8cb41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5a2448-ce44-4ecf-9b47-a7cb7ea5800f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b04078-d2b3-4f13-90d5-3b1470832c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a804d579-657c-4093-ac78-6fe4813ee670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a43beda-ddd2-4f0d-a00c-4c277647a375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a827daf-dbab-4d29-87df-5ef7693833de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8059430-f552-4ee0-a5dd-170e9e27dd56",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2ead27-c35f-4afb-82b2-b0a7684fbcb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97619a02-7099-4b03-be32-4e6a98825c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe4cd82-e710-4801-bfe4-26e62f29ba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977678ff-fbdc-4483-bce8-686db9bfeb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f477ef-12fe-447e-b3d7-2ba3462dcf30",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6128583-767c-4c22-927b-45515ba13786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c08c35-88a2-4e65-ae3a-48fdecd16c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c2b024-3bbb-4d26-9201-32b657a0185b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8cbef9-1960-4f52-879f-4355d62f9bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b46d38-a93e-4ccd-8f1c-c5b2a9cf2ca6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0a155b-5ab9-4b86-8cd0-fef198dbb770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3f6ff5a-2dcf-4829-87eb-bbda429c0fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17585d73-4642-4f27-9ff9-22ddaca271ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6453cb2-b97a-4c3a-b4cd-a7f1bda73f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208f4393-ec28-4ec7-b8a1-b3e4f822d330",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaf5c9b-a39f-4816-8519-753aeb94d9fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc573f10-d3d9-4f5e-9185-56a9ed664222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4159440d-9972-4500-b6d9-2e83885fb2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f10fe9-e2c6-4441-b209-fda48269b70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb8f068-6664-4bb5-b655-185bbe1ac623",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb13f922-c227-472a-ba2f-3e166df210cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29738ae2-62d3-421d-969e-4515d7636233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8679f45c-814a-4fd3-b974-66094873874f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70068c67-36d7-42d4-9c5e-27b5d778cc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e52d65-6464-402f-94dc-fae06760cd8b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794ab27b-ef60-42f6-9569-7e5c0f5f9508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d84a327-9f58-43c8-a320-8978ccbc2738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15779322-934c-47c8-8bbe-530f06981b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6716ca6a-cbf5-40a1-aaf7-c88d0a8ca194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9eb4a3-abba-4404-bf58-9c33544390f4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93223237-7b58-41ee-b7a9-9e5e02fe9fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db674c0-180d-4829-978b-00f1e1f75267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734c4180-04de-442c-8a4d-2b202f4676c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68889c33-83b9-4f50-9332-04a01df82351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3503473f-05c7-407a-af20-fd5525ba3f88",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a0ed15-ddaf-439b-b355-596c92d62d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "053bfbc8-c59e-4705-acc7-7106e9a2f978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8290105d-ce8f-47bf-aeb5-8b2fe5aa930e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b34f034-3790-4af6-8d3c-e96a75715f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bee58ef-5c1d-4f1a-b734-e261ad4b5eca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8945c362-d222-408f-af07-4fdef4d4e9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b327d7-da15-4778-9ad8-91959acd476d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d15df-b9d6-4a95-8dc0-662d43c0eca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2e1cc4-efc7-45e6-b3af-449f4231e59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c93d74-19c6-444e-bbb1-dd88aaf77709",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b1680d-65df-4254-8448-3d8808a04712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0d34c9-d07c-41a0-8654-c9567d94e3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0f5cbc-d3f9-4707-a90c-7133a1028cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d906dc2b-9408-4dec-9603-6c9c64a6b95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83e82fb-5754-425a-b7e6-05e9f40b8e76",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995f0fe1-8ca8-4806-9252-bbbca64e42a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b59f23d-ab7d-4109-b841-c3d4af74a698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234bdbf7-bb51-4b06-9c1f-f6d9bc88d641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc0f9b3-24b8-4c06-8301-fc19c11b31c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f28347-6089-4cd0-97fd-11d8cfccee9b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c9d41b-5206-42cd-831d-b1a2c51bcc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af77aa18-1afd-47d2-992a-159d1a82ec02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec75e8d-88af-49a1-8125-7a2e3f16b46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d57055-fee4-4537-b8d9-3b5b4f96c923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a415f9d2-ab81-48d3-a987-ec570b1ff8f3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57beebe9-510f-4a58-a62b-8a3734e1178f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e0d95e-dbd5-4e61-a910-7b76498292a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9f6c60-ba02-4648-a8a3-9435b04c0ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc47e1ee-023e-4b5a-8d26-3250c7b762c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aaa093-de8e-476a-bb53-64de4b3252b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bf990e-cd42-4c81-ab10-7fec4859b8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5fa45e-35eb-4f42-9656-a47d610261f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498164b2-f560-45e4-a432-b9937e4335e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2671e3-cd89-4aff-8f28-1a8659e29541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7c5965-b144-4746-95e7-4ca9003a0aac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88ed2dc-9cf9-4cf4-b2b0-68793824d0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbeafc6-588e-4527-a2c0-b57ec00600cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739133aa-6d9e-4a68-a948-5b08b65642ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e16ed41-5c16-4503-8528-85b96faf0a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba1c3eb-aad7-44cd-912b-3f41469ddfba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231c90ef-7627-4b6a-aae9-3886458aa7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377cbafc-edf1-4add-a887-2bec8e7310bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ab40f0-9514-45aa-8d04-7356c57b0f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deeacddd-21ef-4bce-b1e5-04d66f064719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e455b6a-6cce-4544-9a50-6b7dcda1b3c6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7c0b8e-f38f-47da-b90a-1d3aa9490123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0442ac8-5063-40ac-ae1c-3f4832d626d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236fe9a3-ddd8-419d-9bc7-8c7fd5053ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162a2d7b-54b9-43ef-be63-1c02f7df669c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e15870-e4fa-44d0-b8d0-70fc0c44338e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca6b891-227c-4b9b-9285-899374fd9899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb6beb5-3109-43c0-8e76-bd2db37cb2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfab529-488d-47a8-b2cf-43acda4f2406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf15928-918e-48af-94d6-e6282f249d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbee93c7-03be-46bc-b27f-86c243f87637",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5bbcac-30bb-4bca-a101-037ed2fc44d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ddc7a7-3388-4668-ace2-9ed93a890150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc710833-1866-4069-9c1a-d957f20fe6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4546809b-dd6d-4604-8242-cf5a2e3641b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc37bde2-1fad-4137-b29b-22de79cdf84a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744fdf10-b712-44dd-977d-e1893d09e5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cb85a9-8d3b-415d-bf2d-477b28118f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7320a23-9265-4f14-8639-869a0a6ac4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321e2c08-c80a-4ca4-b013-ae820d3c1816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0d427-109b-4cc2-bfd5-77ccbb1480d9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bbfe6f-6758-4b05-961c-9a7472ed9cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa31f87d-9ca9-4056-ad65-9e609e4417cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcf5532-87c1-45b0-9373-c45094f0faa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e956f03c-cdc9-44b1-9c82-5c1ce01d1a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c01e0d3-cad9-4427-91a2-1a06e7597e72",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9252674a-ebe9-48c6-8fb6-0abe87d57719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6f0f8a-bf80-4b94-8e1d-ec2de953999a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cac12d-b16b-4984-b5b8-b83d2c6d9110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81533f6b-b4f1-495b-a38d-f5c2a674780e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b1a052-3789-461d-bf55-ef91e7ccb9c2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dace31ba-4bc1-4334-b1f9-320f5ee001e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d8cf6a-ecf3-4f6e-8846-b09b8080baff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2134f60e-f7fb-43d9-b421-6954ef9c2b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8781b1c4-79a2-4bdc-87c4-a33c68a0eed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416f46dc-46cf-4254-a68b-41608acbb87b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb0e625-108c-456b-93dc-dda09601a7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce6388a-40c9-490b-81ac-1aef5ee9ab95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111d8a59-e5ba-48a5-9d6d-310d77ff2bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7060ff3-1158-4a5c-b78b-b600508293ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624f3c88-6590-4d8a-b038-620b254a08e8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6794ea1c-3d0a-4e7c-b111-d7880e22a9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81666e4-a5d1-4817-9001-e78b483733c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a517636-91fa-4c69-a171-a922f0ef7e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cb61c1-452e-4a70-b057-aaed2b9d40e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c2192a-1212-4184-9940-d44c16ab3327",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7146f125-26be-4fdb-9891-256c68fef77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86078ca6-4b2f-436f-8e8e-a2b619ba5202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182a5887-4916-4cf1-9a15-928ce8de8759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c576d650-d052-4594-a39b-78beee4efe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1768004-3c05-4db5-b0a0-48c1cbd1c201",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2af06f-6ca2-4313-8737-60505e905dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f52530-a292-446b-9c1d-ede675743f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf8da56-20c3-4a42-ad40-3d0255700f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e596e1d4-9e16-4f96-987c-331872982b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee9a192-d0c2-4f92-8350-1aacf78d87c8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d488432-7387-4322-9881-d417e9f449f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c595b32-cf66-4f6c-a2e7-33c254d5471e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc985b86-f727-4f97-9267-4a0d96155397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace1c609-7dfa-45a7-9d1c-aa2083a01ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf137cb-4374-42f0-b159-9b614fdf8db3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3692fc-c3d7-4e15-8ea7-1e136ba20850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a40114-929d-4b4e-9b6a-047b96a6ed42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefdba9d-2193-4090-b80c-0996e0362245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a506200-9235-4d3b-80dc-d9931455a7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fef7f9-787f-434d-ad33-0591c9c0f4c9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8bd545-b695-4087-855e-ed8c5c131fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce8877e-58cf-4949-81de-81f32235c79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfbf105-4ba0-4446-b428-22c11eb3ddd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fee3d20-2319-47ec-a1c9-51008c1ded1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f71c6d-6c26-4e1d-9912-ecdfe3237875",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a9f5f2-664d-420c-b19a-dff952acf659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f71b5cb-7df2-4889-8b32-340dfda2c8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ce47e0-d7bb-4b1e-a0b7-54be8e5c24fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a73192-fe7d-48a6-9c84-8ee287509c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b535802-69fb-45c2-94ef-eee4cd849a4a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdd32fc-c250-4321-85b3-ac19fbafdc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec825e7-8ce7-4234-b286-718acf8ccfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e53ab8e-05b7-4efa-ba78-5a09b387c70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837ef31d-989f-4e94-ae51-78444eed7b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca3328b-f92f-47c3-8609-3b2c270dd8dc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469081b-1499-47df-b974-6f18cca24b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf35d6ea-4069-4906-93e5-0e832cbe06dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c2969a-1986-468a-8722-e089cb771fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdaf156-a6a6-4e6a-94df-c06eb9dfb0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838b225d-4045-45df-8421-adbdb59a5700",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b3cd5c-ef53-4556-a871-9950fdb91e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d076a9-41a1-47e9-a415-d22bdc8b56de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808d1f9b-8119-40c4-a507-1158ad7ac786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16520924-39c0-45a5-b1a6-dc2e1f8aadcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f31696-c453-4781-8625-ee1dbddf4da5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a24e39-1afb-47ac-ad78-9e9fe9f5e194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36ba54f-56d4-4d47-8127-448b21c0706b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffad5c0-fb09-4527-a1ca-efa6e9afb15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11221dfe-fd4a-42f4-ac58-fafb6c4ec674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9304dd9b-9aa3-46d7-97a0-d77aa721ecb5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018779af-9dd1-4c9d-ad0c-7ddc64a99a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9c649e-00b9-408e-a413-a9d7bf534261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047bae0f-e59e-4917-9871-393a9953ac8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa40f65-0c68-4825-a222-c31eb44f4f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d784a159-1c3f-4212-8132-d7a82b88ed5b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9762a35a-4dc4-4d9a-bc25-22232d4cfe86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbcfeaf-1205-46aa-ae01-4237dbbc1123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acdcfe9-015f-4a4c-a2cc-0dd797a1105f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceead17-e6b1-4730-8980-3064dfa501ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd942a76-e70e-4884-8d50-61fc6879d1f1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb04307-6e82-461a-87d6-57d49f835c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e414a35b-80c9-4ce3-be1a-0fc3d45f362f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cd052f-ab07-42dd-9e1e-469fa1b87818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532360b9-4d68-48f7-ad24-373824e36084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ae7040-57b0-4b63-9cf1-95baac2311b2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72beda23-d54d-430d-a52a-a6c9eeccfa94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353b20e7-6a78-4c4f-8e59-ab96cebc56e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632651ff-f55a-46a9-9d29-663add204a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fdf4f8-206b-4aa2-9c03-d06589e742b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34949dd-ec7d-436b-b7b8-cb0abdb14520",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f185855a-354f-4151-86fa-5ad6ebcea4b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81a6a531-31ae-4d37-b1ba-6d226ee3ac67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da838632-3e43-4a99-840a-2ebe7b2738c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abd5acc-041f-4479-a507-9fe07e864190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f94258e-fdff-475c-8939-4e10623f25b0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203a7464-2f00-4ef0-b96c-091844c083fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6336abc9-3781-4c66-97ff-23f29c4c9d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9191b5d-3b9d-40e9-a3a3-6f3c23d4caf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e415c2-a936-4315-b8ca-4bd71eacf57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e4c695-37ef-427e-8249-073d97ff6cfa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1b41bd-c2cc-4733-807d-64b6224e9d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee12e0d-9629-45aa-8dad-37e799323581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e1e3ff-6828-44b2-a677-f06401eaeb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e945169-894d-467b-84cc-ae64ea6e98a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a64bf24-cf2a-40cf-bf71-1e45e4e38d42",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98292db-bdf1-43b3-818e-60db651afdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6d3b20-d2f5-4ed8-a574-0763c1593296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e1568c-1514-45f2-9a03-2bbc1eb4e374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c540c0-25f1-460d-a9e3-fb6db84f86c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d618a19b-8d7d-4987-82c8-9778892b95d8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424aca5b-5cae-4c6e-af74-4b23e290b9fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b722335-9f0d-4ac9-bdeb-b769a750361e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323579df-4e19-4746-ba47-a540329616db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e812b8-fbfd-4814-845b-a29794a444d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015351c6-f547-4a37-8983-e6b2faef01a0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e5d44b-2467-4a53-9eb4-e15ebcdec096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972dec70-8155-4540-8b0f-254f4d656ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c44e0d8-dc69-48ed-b218-4d5aa2d19d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef304e4c-a47a-4262-b2e7-48f038c601bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d4696d-f646-456f-8096-0f7bba827f78",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561da3be-7f05-4ec0-b8c5-0270e9c4e710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b87f55-d4c1-4140-97df-8c3a4049184a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8240e4ac-69cd-4c16-b02f-e659278b8c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6080511f-2173-4460-bcde-ecee52c98ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ac74b7-5548-4a98-ae73-c4e95b3cdaa1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467d266e-abda-415d-9196-734e9c02720a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bff62d-ecf8-4ff8-89d1-bbb812697d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cc5b95-1df7-4eb2-97f1-c6dde14a6067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab091a6-6784-4b6e-99e3-3fa12bf88367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fa0040-b4fa-4af1-9de5-c5744afdb4dd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451bc80d-779a-4371-8624-4d0c52906126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d3f9d56-af75-4d8f-b0fc-ab2f5e29c4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d440d9-3269-45ec-88b2-a3b180d191e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c28c88c-e900-4025-bef6-f617f3c300aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332fbc17-8dfc-46e5-96f2-39ade45f1d66",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61389191-0068-4409-b635-c18251a2d615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6934907b-fc41-4d9e-b3d2-393ff3a497f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed4c2db-a42a-4acf-984e-791dafb94b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99783127-f3fc-4a28-90fc-d57ca29f216d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c5d643-5f12-4784-ae73-10dd5746e96f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10401c99-f9bd-40ee-a421-fb1908dfe2cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8956211b-b9ca-40af-a869-17d1e6dbbb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9171cc46-383c-40ca-94ed-88083fdf7196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ce429d-41f9-48a6-94f5-b4f4722437e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab80fa1-0052-4f39-b2b7-14f6d3831d49",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cf29b3-88fe-4517-8c9f-0070bb8d378f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acf7397-505c-40a6-a169-8c8dab2dac07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d29a4d-7483-4a7d-a864-0c281024121a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9795261e-c1de-4202-8f88-ed29e6e0d623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1e1148-a9cd-4d29-96ef-8efd3bded54f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a080c5-0f7b-4a8d-9fa9-715f59d32f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2098fee-ca4b-4b2b-98c9-4c12fb788925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108b0b8f-5321-4f27-ad2f-7b26e8c2ec8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d29a89d-2331-4d57-95da-8f8f2f793444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e03f7c-ee5f-4407-8b14-4e596cbe5272",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c6b110-3a74-4a29-89de-2e56e58a517c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e94071e-4ce5-4d16-bbbc-360061a2e0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c651694-b3fc-4f1d-8273-c40dde8682eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded482ae-4b20-4ee7-8c91-2504498f3fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39979542-8009-4ab1-be7e-2ed7da0c47fe",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7838b172-595e-44e0-941d-9a3540512b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a7dc8ac-f95e-4d4d-964d-46ab100e1526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a099f84b-fd7f-4f35-a554-0ae5e49c5672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288534b9-71e6-4e3a-8190-f63915226998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75db2db-8251-41a6-9048-0f30ac47a696",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5860be0-cc04-4acf-8dae-33046535c234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f39b284-9fe5-4f28-8bbb-e4562f5e90d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbe2076-3a64-4163-a98a-ef904d6985fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4803f1-3f75-4275-81e8-30afdbe12790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544f4eb5-2334-43a4-8c4b-7bd09cbb36a6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026cc639-35d5-433b-bdb3-0d03e554ea4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bab63b5-fa05-48a1-a05f-06792b610597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2168ac3-eb27-4d9c-aaa7-1b6b4a55d8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316cf6d0-f975-4aae-b1d6-a24eb1848edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c9ce90-d82e-4eec-b032-1b3375ada3af",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dd2fe6-3baa-4e8d-b5d7-725041bcbe69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956ad0cc-7557-4cd0-a0c3-3d93925b45e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a73028-071c-41eb-9eb9-431edfeac863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aff869e-3865-417e-ab01-36ea1190e189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9701cde7-e187-4e5c-8ce3-b631a10c07fb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c899472-cb41-488d-ae9c-83b601da02b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3996bdc2-f54a-4438-a0ae-2f89950a2af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da46731-3e24-4e21-baed-955d9804b6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55bcb70-30e8-4ed4-b9c8-6eacb77c4784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba50975-91aa-4f54-afe0-2584337a3b85",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0be53f0-3c4d-44b9-8bbd-100f59364da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a03e16-db5c-44b5-ad73-1cb28a5c8ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac9b040-5768-43cc-b520-2335eb604e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4150b1-8c15-439e-8852-6d39d97a3f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2f9745-67e3-463b-a6f5-5bdcad58b100",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020a44be-769c-4661-a0cd-175008d909c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c456b9-2a76-4e7e-a38a-6f5128f0a44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71eb639-ce6a-4766-aeaf-db3b5e95527e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f1ad36-7bec-46f3-8d1d-a0567255497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71126ba8-dafa-415a-baef-f159ab6b1c1a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7270a3-8253-43de-a917-5e08da44924b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bf25a33-ca3b-4adc-bb44-c437c86bc2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a9a639-51c2-4be5-a699-b38dfdf25ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6decc924-e0ed-411b-98a1-7e4b87a70eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b23ae5b-d6c3-4009-924d-2bd58a6a8b7c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd500304-d2f7-41cb-ab43-be9a808cb1b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c103d80f-cf49-4a63-ac4d-e5d2c22adec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e9c879-c075-45d4-a6eb-a43c35ddb32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90013d9-22a5-44a3-9dfb-0aab4fdf9ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aef0dd2-53de-4a5c-a899-2f0b1258dc73",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ca2884-6d1f-4b09-87d3-c945e052f4db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743d48a8-0192-4ab1-90b6-3d5db85dc089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb88c103-175d-4e72-8fb0-315570ca6e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c562bc-23d4-42d1-a064-3096ebf711d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0033ade-cc7b-427c-bfc9-7c5c9d9aa58d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49ecd45-53b1-42d9-98af-c26497ff096c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2369cef7-81d4-4fc2-8ffb-9239fa73e526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150524a-a9ea-4c0c-a9b8-ee713a3fa300",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e083ed2-dfa0-4113-bba8-4b40cab49ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a7d67d-2d73-48c5-83c5-72ed1c4215c4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0369e775-1334-4c77-baaa-19112bcf4681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b2f587-6ffc-482b-b492-6986802427bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f22fc5d-8cd3-41a2-a539-a45ef6391ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ade5bd-96bc-4246-859c-9773cf1eb642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c76a50-108d-4569-ae0f-71eacb57b114",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55a15c9-7ae8-48b3-8759-c068c53cb0fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b181f5d-862a-427c-9153-3d92da06f773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fed700-8cfe-4114-af1e-e8e09168e1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb7bc11-ece0-4546-8e0f-990f29a8ffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873b735d-a143-408e-9daf-56d5da4b0e22",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5f6968-db4a-404b-ba14-643cf982518d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e8c354-7b69-4f34-967f-56f9231e45e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926cef4c-9419-42fd-980c-5d27097cf035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c4f692-5566-48a1-bd1b-387d8bd76d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731f702b-670d-4054-a723-732bfd7c4728",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26231515-ccf9-4818-8145-e6320e073cf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce59e6d-4fd3-4dac-aeb4-ead50f93af38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b324636-84f4-4c3c-ad2a-19b03f4f247f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af4b651-da4b-4c42-8780-f1c837914414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad61592-c19f-40a7-a963-e7996293be07",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69312b8-0f2c-4746-a8c7-62eb120d4b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9308d9fc-4b69-42b7-9073-f39b4d472838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76392dc-ca7b-46dd-a9d6-85f3a805fa36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7d3471-8a66-471d-9df8-db76d589a5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2725751e-e5bd-40a1-8022-2ebbd4bb46e2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bca83f4-6d6b-4115-ab9c-7fec5900ee80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d4f276-4916-47ee-94fa-73d9827c88c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bf41e1-e9f5-46af-ab6f-31319f66186b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b8e980-ef0d-4604-9776-b86c6cc4c7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83140b71-eb3b-4571-bc17-652d72a147e1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325d238f-8c86-4b71-a6c6-0f3f19eb23bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b06124-803d-4ace-bb32-8de9d6aceb95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89350352-1f2b-4e59-be81-f277315c0de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1f43bc-8a54-42e1-bf5c-ab95e2dad4b2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0784bed-f104-428e-a12e-6f9b59f3cd0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c45fec3-e7dd-4c4a-9c07-b909d8f9eb0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a2fa81a-7165-4bed-a764-2be997fae915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afe682ae-6d28-440f-8923-b7b8343ddf9b"
                    }
                  }
                ]
              },
              {
                "id": "01a6dfef-58c3-4560-9d48-1810bb2f0477",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1806cd6e-7945-47ca-8c8f-64c0c79e6c99",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc38def-9df5-4137-bbf9-278f223f393c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1af16f30-21a8-4a03-82cf-379c9c45f1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78e8f34-1a3d-4d67-a706-8dbfe0a6ff6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d26b509-b595-4db6-92ae-04626920d671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b99c216-207f-45d6-ac00-5f6f379a8083",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007eb979-d164-4d19-b91c-2bca8c3a9d4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d2a00ece-b7ee-4654-b079-d8ca374f2035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c6fd1c-2e67-4056-b5ef-0107763a1c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90109d9c-842b-42ee-81b8-1b01d65615cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dde9d3da-11d7-49d1-8856-01e839cbde19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42a0d720-987a-44f1-9a9c-f744806facf0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81cf1abd-f304-4216-8f4a-566d1b6598db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bca4d67-3021-432c-a674-0d36e74ce0a8"
                    }
                  }
                ]
              },
              {
                "id": "91754367-3fd4-489b-a008-76fdc4e206e5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "224c9661-4ab9-40fb-9ef5-fcd9eff82ecb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493793f1-9e4e-4ce9-bfc2-7249f9d8c414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cd8aa713-b04f-4679-9660-525532a50f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efffab72-ca4c-48c6-a990-b15122eaa1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a0ea9c-dabd-4b6c-a843-074d97213e18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "855202f8-643c-43e1-8b35-f6418c37bf3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69b3b29e-e803-417a-92f9-0425346aa1bf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b331bbb4-db8b-42a2-aa2d-21d088d6232f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "777406e0-1c78-4c2b-ba4e-0378e848801e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13b29498-6c6b-4aa2-8a74-5c9880a074b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6968e71-48a4-42da-aa00-d97b56fbee74"
                    }
                  }
                ]
              },
              {
                "id": "66eb027c-60db-44a4-83ee-d015c99923bf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b27522d-5e58-4eef-86b5-332fb0aa49b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c49ee54d-36ba-4cc4-b7ab-4b16e1ee161c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1262c85e-610a-4e49-bf12-79d500b3dc47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d980df8d-d724-43a6-929f-0ed6610a88e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1198365-7788-4cdd-9d65-14a677d2b867",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "424bb7db-abe9-4860-ac2d-3d02b2732641"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41b6c4ca-ee98-4680-828f-98b42dd9ecd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8f038c4-8e68-4e3f-acb4-86c225a96799"
            }
          }
        ]
      },
      {
        "id": "2c5f04e0-94ed-482f-b96e-11570ac4cc37",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "35edcffb-6007-454b-9987-9620450d469a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "457022b4-85c9-4cf6-b898-fc30d625e7cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cd687aa-cdf2-445f-9d57-259169d089a9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3733a8-abc2-4bac-b7cb-7331f47ca2ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32c9d71e-f256-4a17-8dd0-38d39dfbe793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1392566-04ad-4680-bf67-11a0e94803b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5555e918-8eef-4c25-a1d7-f6be0b9390ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf16a271-72e7-4412-9b84-d6f99ef21276",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa43f8a5-3dbe-4d71-a947-0b74d02c3904",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0efb2a32-352f-4e33-9c56-292ac65eff71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6f2b3a-f2fb-434e-8910-2ff18eaf08f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e00e3f7f-de0d-4359-a167-0d3eec05263f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab12b3b5-0912-46c3-956b-119d48d0c5d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e71e050-3ae6-439c-bfa2-77d099b4e58c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c1da0d7-3f49-4411-8ee9-d05aa1167e6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5eb94d34-dba5-4d40-af78-b3733834264c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ef7acf3-10e6-4730-8949-35c060585c21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fa6e6f64-46bc-4fd3-b431-9df34c77fd0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3eb3e27b-9a4e-474d-9ec5-92b84d75dbcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec5ef3ea-228f-4144-9da5-1e2dce778af3"
            }
          }
        ]
      },
      {
        "id": "ec688ece-4dba-4993-854b-6bcdbd729d54",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3ab22a07-4129-4a22-a6be-29a9affdc611",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b2f8527-87ce-4d16-8b5c-92067bae7b0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8a86de1-3584-46cd-ba26-e38918da9f6a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609731df-bb76-4dee-8cf8-32207be000ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7bd800c-007c-4c7f-a307-e3cb4e4c6db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a48a6b-6076-4324-9195-a404735d71df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c74f1fc-251c-4598-8849-477769bf9855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19271071-2327-46ae-8acd-c5a8f38dac5d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dfec37-5415-4d3d-9337-2ce01fb90757",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e3cfb2-56ba-418c-96e1-b68164424395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e50782-f066-48ed-bfa6-57229fd6840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23954c22-27a4-4439-b5d7-d2e4f7eaa32b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6c8ce21-2142-4a97-8831-da88ce947d4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56322710-a2d4-4e72-83db-3f250fe60423"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05b53e15-2d59-4b9b-8af8-d51840e41885",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70673374-dc40-4c7f-b3fe-d8dd9923ecbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4460d9f5-a1d3-4e38-aee1-24c44e605222",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8b3ef6b-a4a5-4f59-bda8-7f0b72677479"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7d34b87-45e1-4f17-b8ac-c8eb5ac22296",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33a2341b-74fe-4849-8d5c-068bb1cef0c9"
            }
          }
        ]
      },
      {
        "id": "4aedbfdd-3012-4e68-acae-a4d109c92e83",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3035e747-ffb2-4574-af9d-d0d1c2a7b40c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ae27088-e7f4-4bac-abaa-29febc178a3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c41028c-b7ab-4d22-90f3-c34ab8598eb0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52507451-d1fd-4618-b900-1315650899a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f8ec538-9a62-4efa-9b0e-647cbec6f309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2e0e08-3245-433b-ba19-147f64002b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb8bd068-6e35-4282-adfd-9ce3f5d1e20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33c7953-87b7-49e9-a07d-33a6cfa9e10e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4890426e-5297-4838-9aaf-a89d6ba647fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd12820-f491-4623-af99-6ba5956ad6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede46279-9549-49ab-ad4b-e586097a96b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ed831cd-00e3-4b9c-aa43-19c69c9759fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4700138c-9716-4f68-8971-45d346355d1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "736d9bf6-901d-4b35-886f-75248234d4ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0a00c82-fd4e-4460-834e-950b863b2856",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea70df53-1c99-4df2-8462-8b9758be21f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1faf1832-54b5-49cb-95cd-76c85f9250b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "990ecf50-e77d-400b-9e73-f0b471b3dca1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47db730d-e323-4241-bc90-00195810bfb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6261f378-859c-42e0-bb95-17d7278fb93e"
            }
          }
        ]
      },
      {
        "id": "89d775b9-812d-4b0b-8e26-9551d9fcef76",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49a161fa-d241-4daa-9706-fca9d1356e69",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa336f37-2d95-406c-9295-661ecd0fe899",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3a62d9a1-87a1-4a21-8726-26b8cdbb2d67",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99412505-d7c4-4b04-bb02-3f0e4c183a5b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96718e9c-3896-499f-913b-09502b99f1b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 752.1538461538462,
      "responseMin": 16,
      "responseMax": 7855,
      "responseSd": 912.7657291613009,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680050550791,
      "completed": 1680050761055
    },
    "executions": [
      {
        "id": "d713a4db-169e-4b34-9e55-ebe3bcc2bc06",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cca1d579-9880-404d-b09a-725c67a0f32d",
          "httpRequestId": "0cb2ccab-ca28-4a24-9a5b-e77ab28c3cda"
        },
        "item": {
          "id": "d713a4db-169e-4b34-9e55-ebe3bcc2bc06",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9d351be1-6d70-4667-8c93-402dcc580b19",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "2ebd9743-abfc-4d4d-b521-fe60d253568b",
        "cursor": {
          "ref": "0f26cdd8-583a-43d4-a5ee-7c9eec2317c6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "79d60c3c-8ad1-4184-b074-46716de25f65"
        },
        "item": {
          "id": "2ebd9743-abfc-4d4d-b521-fe60d253568b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0803a835-4f09-4448-ba3e-8caffad7b21a",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "a9b3f5c1-1ad9-49c4-8c34-c147d958162c",
        "cursor": {
          "ref": "628209e8-f5ab-43dd-9f33-fb565eb96746",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "feaff14b-74d2-41bf-b753-f1500a6fb182"
        },
        "item": {
          "id": "a9b3f5c1-1ad9-49c4-8c34-c147d958162c",
          "name": "did_json"
        },
        "response": {
          "id": "3ae6a56d-f2d3-4857-913a-ed3aae128e41",
          "status": "OK",
          "code": 200,
          "responseTime": 1304,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51236f88-9aef-4049-b7b7-4b73c3c44f71",
        "cursor": {
          "ref": "dbca00ef-26ae-4cbd-a37d-19e824a91da9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6158aaad-1018-4f18-a5ba-5fdf5b21f779"
        },
        "item": {
          "id": "51236f88-9aef-4049-b7b7-4b73c3c44f71",
          "name": "did:invalid"
        },
        "response": {
          "id": "ddf9857d-9a9b-4b38-adab-2ce46aec99b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51236f88-9aef-4049-b7b7-4b73c3c44f71",
        "cursor": {
          "ref": "dbca00ef-26ae-4cbd-a37d-19e824a91da9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6158aaad-1018-4f18-a5ba-5fdf5b21f779"
        },
        "item": {
          "id": "51236f88-9aef-4049-b7b7-4b73c3c44f71",
          "name": "did:invalid"
        },
        "response": {
          "id": "ddf9857d-9a9b-4b38-adab-2ce46aec99b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84698b4-417b-4fbf-9500-8c12b1a708aa",
        "cursor": {
          "ref": "fc1c14bd-9555-4297-8be4-85d57c2a5cf1",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0e580546-d7c8-4465-a8e6-19cb8307273d"
        },
        "item": {
          "id": "e84698b4-417b-4fbf-9500-8c12b1a708aa",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "606d59fb-6d6e-41fb-ad7b-a00e6a20f039",
          "status": "Not Found",
          "code": 404,
          "responseTime": 889,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcc1859-63e5-41ba-a5a0-e7f9755615e1",
        "cursor": {
          "ref": "65b31cd4-a8d8-44dd-aa67-eed5937a4f7b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d3cfe76-f5ff-41dd-aab9-7fa732e8fa23"
        },
        "item": {
          "id": "edcc1859-63e5-41ba-a5a0-e7f9755615e1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1ea83def-7fcf-4c6e-9f65-0740a33dccae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 588,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f79825-950f-4fe4-a57d-00c0f74a78a5",
        "cursor": {
          "ref": "7fab708a-3fe4-4230-852a-f8b33db81d02",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "87078ec7-d7c0-42c4-a02a-aad449273304"
        },
        "item": {
          "id": "59f79825-950f-4fe4-a57d-00c0f74a78a5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8ac87c78-2d42-4e95-b71e-5fe0f260fcd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47f6001-7300-4390-a49b-97713a4a84d9",
        "cursor": {
          "ref": "beea29f5-0daa-4057-a204-c22093126c84",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7efbef4f-2091-4066-af29-edf41634549e"
        },
        "item": {
          "id": "a47f6001-7300-4390-a49b-97713a4a84d9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "38c32c12-3134-4605-a536-207246553526",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 576,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47f6001-7300-4390-a49b-97713a4a84d9",
        "cursor": {
          "ref": "beea29f5-0daa-4057-a204-c22093126c84",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7efbef4f-2091-4066-af29-edf41634549e"
        },
        "item": {
          "id": "a47f6001-7300-4390-a49b-97713a4a84d9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "38c32c12-3134-4605-a536-207246553526",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 576,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be6fc8b-e815-471e-a345-63ec00e3ecf1",
        "cursor": {
          "ref": "2188728f-08ea-4e3a-85d6-c9c57623066f",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c8ddece6-066b-42f6-822d-928a66ce5325"
        },
        "item": {
          "id": "9be6fc8b-e815-471e-a345-63ec00e3ecf1",
          "name": "identifiers"
        },
        "response": {
          "id": "b6a7dc30-a01f-46b1-964a-31805709b2e1",
          "status": "OK",
          "code": 200,
          "responseTime": 1016,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f98385d-3b55-41f8-a482-06e7709908e6",
        "cursor": {
          "ref": "363cfde2-44d6-4255-90d5-42c0ef5e5752",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "331fa2ca-e684-45d2-aeeb-9cfd76fe98f4"
        },
        "item": {
          "id": "4f98385d-3b55-41f8-a482-06e7709908e6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c0c1714-8502-455e-9167-d02acaef30f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f98385d-3b55-41f8-a482-06e7709908e6",
        "cursor": {
          "ref": "363cfde2-44d6-4255-90d5-42c0ef5e5752",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "331fa2ca-e684-45d2-aeeb-9cfd76fe98f4"
        },
        "item": {
          "id": "4f98385d-3b55-41f8-a482-06e7709908e6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c0c1714-8502-455e-9167-d02acaef30f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea2338a-fd8a-4015-bf81-60a71d0f73a1",
        "cursor": {
          "ref": "ffe68914-84a6-4e9e-a7aa-daa67408cfe2",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "90cabc15-57ab-45d2-930c-06c59d69035e"
        },
        "item": {
          "id": "3ea2338a-fd8a-4015-bf81-60a71d0f73a1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "df86a5ed-4b10-48af-ac0a-b73890d9d524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09731601-4bbe-40e9-97fd-72ab4a8bb7d9",
        "cursor": {
          "ref": "77944a38-acf8-4a36-9154-83cb8b3a4f42",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "27f4fd29-2e89-4be1-9791-f09c6ff74fe3"
        },
        "item": {
          "id": "09731601-4bbe-40e9-97fd-72ab4a8bb7d9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2a1a97a4-28d9-40fa-a282-7e67bbb5d136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1aa4ee-1db2-4fad-94ae-83b1b660aa86",
        "cursor": {
          "ref": "6cebeadc-1175-4e0c-a64d-ac1cf6411707",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "55e85312-8819-4b0e-b497-163bee4b585a"
        },
        "item": {
          "id": "7d1aa4ee-1db2-4fad-94ae-83b1b660aa86",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "00f9d394-98d5-422d-8028-20ac480d7973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c2e409-ad66-4065-ab5d-5573f3f377e2",
        "cursor": {
          "ref": "006a2af5-640c-4361-b980-19ebe3c00d95",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fd9a9b99-7075-46d9-a158-695de347edca"
        },
        "item": {
          "id": "15c2e409-ad66-4065-ab5d-5573f3f377e2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c03903b5-b866-4c85-bad6-19d436c839fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2c01c3-3885-4ded-9095-fc04d1fb4aa8",
        "cursor": {
          "ref": "f066a75e-bb6b-4691-b4a0-101afd14accc",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b3dd23ad-6b34-4e1b-ad04-547b0c895daf"
        },
        "item": {
          "id": "cb2c01c3-3885-4ded-9095-fc04d1fb4aa8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8a57cb63-5cbf-4858-8a8e-12c7c58a8a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab3b30f-44a1-4c97-a890-e057426a501c",
        "cursor": {
          "ref": "44f78cd1-01c7-4f5b-97b2-a055f923dd9d",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc4f0e3f-b9a7-4170-b9e8-78af42861b73"
        },
        "item": {
          "id": "2ab3b30f-44a1-4c97-a890-e057426a501c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "db8327a6-e9af-46ca-b987-fc510b6228b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaa7bce-f68c-4940-898e-8d977da842aa",
        "cursor": {
          "ref": "400ccbd9-09b9-4ea0-af62-752dfa2be8c8",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2bf6e717-ec9b-4d77-982f-63baf3ba011c"
        },
        "item": {
          "id": "7eaa7bce-f68c-4940-898e-8d977da842aa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "74aedaf8-111a-4a79-b8c1-2df44c81d1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25447cb8-5bb4-4b73-8239-3c018b613037",
        "cursor": {
          "ref": "8779d2e5-48cc-4927-9c49-9c8d1c1eaa3b",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8ab602c9-ad98-4ad0-becf-fc3a382eec88"
        },
        "item": {
          "id": "25447cb8-5bb4-4b73-8239-3c018b613037",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e5f82547-2ffb-434e-a436-7d8a1d07c62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313ed13a-4644-4315-a983-45a627bd1c46",
        "cursor": {
          "ref": "ec1f3da2-c268-423b-8d4c-ff716190426a",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "294b979a-912d-4c7c-b5c1-40e585c77351"
        },
        "item": {
          "id": "313ed13a-4644-4315-a983-45a627bd1c46",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2561dbd7-a355-4dc5-8086-70465a95b919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529b92a5-4064-40d9-a61f-5d7ecd0ed0f0",
        "cursor": {
          "ref": "d023a83f-cda2-439c-82e8-db81ed7408b9",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "85fd4ca0-bb10-426f-a6a1-91694c83f823"
        },
        "item": {
          "id": "529b92a5-4064-40d9-a61f-5d7ecd0ed0f0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aa3475bc-71fb-40fe-8b67-598dc2fbfd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bccc132-43e7-402b-90db-2b5c0da71a32",
        "cursor": {
          "ref": "75077854-f5b0-41c1-a457-32dce77aa679",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "46087245-9def-4c12-968a-623eba3d502f"
        },
        "item": {
          "id": "3bccc132-43e7-402b-90db-2b5c0da71a32",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ec99050e-9157-47f4-9768-7c4eaee93146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec59147d-b11c-4db2-87af-b7a910cedc5d",
        "cursor": {
          "ref": "b6c7e562-d202-4a60-87c7-855283195b7c",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "11b0d4c1-7192-4662-99db-0356f4d42cce"
        },
        "item": {
          "id": "ec59147d-b11c-4db2-87af-b7a910cedc5d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5f6b1bd4-e7f0-4daf-b961-f4395bae7914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaae84e-1983-4591-85ea-687dd978dfb3",
        "cursor": {
          "ref": "0b97462d-c3f5-4e10-9684-9db851d7030d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e1241fb5-7ea3-4023-83d6-68c5b9819642"
        },
        "item": {
          "id": "abaae84e-1983-4591-85ea-687dd978dfb3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0264f560-ae6e-438c-81f3-bb6bcb04a98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4efef87-4587-4eb7-ad45-e2652d53d582",
        "cursor": {
          "ref": "66beb244-d17c-479c-b9d9-3dc4dcba029e",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1e8ad420-abac-4759-b044-0e7ff1afe7d5"
        },
        "item": {
          "id": "f4efef87-4587-4eb7-ad45-e2652d53d582",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b21fa7bd-53a1-4d5a-beff-644f8026ee07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae446e75-6baf-450d-992f-76791abd0da3",
        "cursor": {
          "ref": "ac2c04a2-d146-450b-8ff9-ba7cabdd19bc",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c841c290-51b2-4d1c-90de-f229a2460bc3"
        },
        "item": {
          "id": "ae446e75-6baf-450d-992f-76791abd0da3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d5601770-0aa4-42db-bdfd-635f5b9bbf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475cb694-08de-4196-bf8b-5afbefbcd3d9",
        "cursor": {
          "ref": "cacec594-31d1-4793-8fce-968596f0f62d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bad3fb11-7031-4d58-a604-be26f0a30d8f"
        },
        "item": {
          "id": "475cb694-08de-4196-bf8b-5afbefbcd3d9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4b8df73a-2232-4ba9-b8c6-7519616691df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5af87f0-4ac8-44f2-92d3-d758998111d9",
        "cursor": {
          "ref": "94563ab8-9b3c-4c70-96b0-ffff6f6c06ab",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a028ab6d-bf51-4157-89a3-c5e77a726531"
        },
        "item": {
          "id": "d5af87f0-4ac8-44f2-92d3-d758998111d9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c654ef33-4688-41e2-b90d-7794836a988e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf044b4-52be-45b8-851b-3a752298e0af",
        "cursor": {
          "ref": "fd689a09-38c2-4f8f-89fc-66b3fc545be2",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1979da93-3091-4828-96a5-97a9b040cd77"
        },
        "item": {
          "id": "1cf044b4-52be-45b8-851b-3a752298e0af",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aa17e2f9-d604-4e1b-a66e-f96d9e4c21ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f025c2-7f27-47a6-bf59-331dab7121bd",
        "cursor": {
          "ref": "0fd7ed7d-8482-4e59-bfe6-774b2b4eb607",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d86be028-7aff-4166-ae81-14af24995191"
        },
        "item": {
          "id": "f2f025c2-7f27-47a6-bf59-331dab7121bd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b86275fe-a6b3-4ec9-aed6-798be68d9b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a008c5-b95f-4577-8931-a10f870dc86a",
        "cursor": {
          "ref": "356799c4-f863-429c-a9bf-57d020149e9c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d5014aa9-db28-4d74-8af9-d0b4478df1fa"
        },
        "item": {
          "id": "21a008c5-b95f-4577-8931-a10f870dc86a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "280e39fb-b1de-4675-be20-20e9b521a381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae2b25d-fef0-4a90-9680-6f68fd7a6367",
        "cursor": {
          "ref": "9357b2a0-552c-4359-bd30-9c6ffd50e5e1",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "15177a2a-375e-4f7d-8893-33c337305853"
        },
        "item": {
          "id": "5ae2b25d-fef0-4a90-9680-6f68fd7a6367",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21194f91-ef85-4548-8fcc-282bc3741142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77709403-e082-42a3-bd29-549cd064c087",
        "cursor": {
          "ref": "aa930f9b-9248-4905-a3e0-b0c2954caa54",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ef39f79c-2e89-40cd-9927-139df2e75ef0"
        },
        "item": {
          "id": "77709403-e082-42a3-bd29-549cd064c087",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "39ace346-9980-4592-a367-10dc2b95b873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df217247-a010-4f85-9389-df90e50aeda4",
        "cursor": {
          "ref": "02731a3b-2ac2-47c1-997e-e932df35b8d8",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c8e33b53-fb43-45d0-a438-4689ecba4bb0"
        },
        "item": {
          "id": "df217247-a010-4f85-9389-df90e50aeda4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bbacfc17-b5ab-4ce8-aca0-4060a8076d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e5eb5d-9f10-470c-ace4-3384c437bf86",
        "cursor": {
          "ref": "6c8a5441-c0c0-4508-b131-8e37c8221373",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "703e34e4-d6be-444b-b478-b47ab0816fc3"
        },
        "item": {
          "id": "82e5eb5d-9f10-470c-ace4-3384c437bf86",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4a6ceee4-7606-4eee-8f14-95718afcf65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9f19d7-e0ae-401c-b827-307ae1834f21",
        "cursor": {
          "ref": "a7cdbdfb-1bda-4f9c-a345-da8007dc337e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "afaf6f94-9a69-4f2e-8c73-3bd67c019568"
        },
        "item": {
          "id": "6d9f19d7-e0ae-401c-b827-307ae1834f21",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5aa90e48-97df-4a72-9c58-139fd3b562d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b63829-35a8-48ce-8530-a1943274e1c9",
        "cursor": {
          "ref": "a28a5935-0d94-42a7-a389-b1fb1fd168f4",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "16db3271-c84c-4210-9c9d-1fbaf7384edf"
        },
        "item": {
          "id": "99b63829-35a8-48ce-8530-a1943274e1c9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9e30c4ea-1885-4039-b9e4-5ee1d0c670d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fe8fbb-ac03-4738-bef6-c6884b084ec7",
        "cursor": {
          "ref": "ff57e136-5e8b-4e89-a996-586d897a679a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7c21908c-47ea-4e9e-8875-b0d03747ad50"
        },
        "item": {
          "id": "06fe8fbb-ac03-4738-bef6-c6884b084ec7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e4ca30de-e9b4-4573-98b8-3532f04b130b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83ebc1c-6149-421e-abcf-7d12a396376f",
        "cursor": {
          "ref": "625e9462-a5cd-44aa-bca2-d45c581d11e6",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fa6dfc02-c95d-4386-b4f1-c2c6db461588"
        },
        "item": {
          "id": "e83ebc1c-6149-421e-abcf-7d12a396376f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d66b3b68-eed8-497e-8e14-55aa443c6b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcfffc1-3e02-4b1d-bf59-3aa6274bbe8c",
        "cursor": {
          "ref": "b4c05b9b-d6ea-47bd-93da-4c824064159b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a413a496-59ef-4c06-9914-06a8af48693f"
        },
        "item": {
          "id": "0bcfffc1-3e02-4b1d-bf59-3aa6274bbe8c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cd5438ee-93e3-42d5-883e-f41aa6d88cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61c7b4b-ef93-4f3f-8715-50899ff6ff5a",
        "cursor": {
          "ref": "b43d4db8-776b-419f-bb2a-fab0af029777",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2fbfba63-b08a-4abd-96a6-bd783e0d4418"
        },
        "item": {
          "id": "b61c7b4b-ef93-4f3f-8715-50899ff6ff5a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "098a15eb-d564-42e3-a95f-addb77c136f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87bbee5-4af0-4e8a-836f-6a4f6810e058",
        "cursor": {
          "ref": "f67055c3-f082-4a33-b56f-dc1db162e37a",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f9be568f-5a42-40cb-b8a9-7c1c1e3cafa4"
        },
        "item": {
          "id": "b87bbee5-4af0-4e8a-836f-6a4f6810e058",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d603b77e-837b-4a47-8b0f-fd9bdd1229c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44907783-8c91-47bf-a86b-f18e74148b52",
        "cursor": {
          "ref": "d91e6a37-4a1f-4e15-89cd-a92e27900781",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "26721962-ebb1-4fac-9376-4ed8cb0fa662"
        },
        "item": {
          "id": "44907783-8c91-47bf-a86b-f18e74148b52",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9dd22641-fd46-46b6-ba21-609fe3bf1beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1000,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf3dddd-b4d3-4e28-9f89-377ab18293c9",
        "cursor": {
          "ref": "4e5f13f5-b370-431e-bc09-54dd4fc205e0",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "674da201-140a-409f-a539-4b3fb26c0e0e"
        },
        "item": {
          "id": "daf3dddd-b4d3-4e28-9f89-377ab18293c9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "134e3830-2c0c-4dbb-85d7-d194a36cf0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247a1842-40a4-42a1-a19a-4fcbc791e1e3",
        "cursor": {
          "ref": "fcf16c0d-c4bc-4f60-ac89-95fd68a2022a",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0b93e6a2-0bbf-4c2c-86e7-3aeafb9dc196"
        },
        "item": {
          "id": "247a1842-40a4-42a1-a19a-4fcbc791e1e3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3a31d0c9-34ac-4171-8613-534bdaac7220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfd1785-28dc-403c-803c-aa5b01277d2c",
        "cursor": {
          "ref": "f2147e91-16df-4b7b-b5b4-360157d5c056",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "51f216eb-ce8b-4bcb-8d65-ca7e8b84682c"
        },
        "item": {
          "id": "8bfd1785-28dc-403c-803c-aa5b01277d2c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cc54e057-2eec-420c-93c4-991b026e158e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 699,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83f1848-37f9-4be0-8b31-d5bd2f99684e",
        "cursor": {
          "ref": "bbe119c3-0aa4-4b62-897a-2458d9feb0fb",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "92670148-b2f9-4f5f-bb4a-4c2aa5346fce"
        },
        "item": {
          "id": "c83f1848-37f9-4be0-8b31-d5bd2f99684e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a0d9a18c-3b6f-48eb-9f2d-92223f6324c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921a0177-be1e-4516-9f4f-0d7b15ff4a83",
        "cursor": {
          "ref": "a0858d21-8877-48c8-8d1e-e8b13fd61c13",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "943427ce-4063-4940-aa8f-c4cf9149eee1"
        },
        "item": {
          "id": "921a0177-be1e-4516-9f4f-0d7b15ff4a83",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1eabf8c9-239a-4d44-a698-7001d637bd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd8139e-71bc-4e66-b50e-b717630cf722",
        "cursor": {
          "ref": "8c8a16b9-210f-48e0-94da-c8af96337202",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "03fb7865-e806-4622-83ae-8b607d3553a3"
        },
        "item": {
          "id": "0cd8139e-71bc-4e66-b50e-b717630cf722",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "af554657-60fa-46f3-9f0b-2c7daca6bff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a164c333-e38f-4c9c-993e-e6a1ff69cc30",
        "cursor": {
          "ref": "c8ef901f-08e4-4bc2-9d3d-683932b6322c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "535272f7-9b1c-494e-9bcd-dc889b884bf4"
        },
        "item": {
          "id": "a164c333-e38f-4c9c-993e-e6a1ff69cc30",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "35bf939c-6b60-4eb8-8d31-b6f171fb5bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422fcf86-53e6-46a4-b9eb-4ce04658d173",
        "cursor": {
          "ref": "51df4efd-67b1-4825-abe0-679c0db640a2",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "25560af4-92e3-4c10-b004-d57397646ab6"
        },
        "item": {
          "id": "422fcf86-53e6-46a4-b9eb-4ce04658d173",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "eed5efe7-fe81-4766-a5f2-58ca93d0ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fbcc87-b8ec-44f3-bb63-d2815a9b24d9",
        "cursor": {
          "ref": "9a288bc5-ca61-4d41-bf71-4a33615ba6d7",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d52ac29b-7315-45e4-965c-1cd7e7e51534"
        },
        "item": {
          "id": "86fbcc87-b8ec-44f3-bb63-d2815a9b24d9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a0bdc371-7b9f-4f76-bc6f-38cd5347a83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ce20c2-31d1-4c34-b691-60efad6471b1",
        "cursor": {
          "ref": "d0fcdeee-65de-4951-8a23-dcade0c1879e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bb5969eb-fe13-45b9-be13-e2a50af07415"
        },
        "item": {
          "id": "55ce20c2-31d1-4c34-b691-60efad6471b1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a2ed0020-21bf-477f-8166-5ff3a7d3a231",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1566,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70d1fb4-5d0d-44cb-a6ee-1f26e3a8d4a1",
        "cursor": {
          "ref": "765b08ee-92f8-48d4-8828-e13206cd5545",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "51964591-ea63-46d4-ad42-8e9a83fa01a7"
        },
        "item": {
          "id": "d70d1fb4-5d0d-44cb-a6ee-1f26e3a8d4a1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "44489989-53ba-46ed-a3de-bf20b349e0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1602,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45354eb2-eb78-475d-8af8-557b99fcd9ab",
        "cursor": {
          "ref": "37defcfd-3965-4f81-9402-a84f4667e674",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dc485936-d22d-452a-bc9d-b30c375afd61"
        },
        "item": {
          "id": "45354eb2-eb78-475d-8af8-557b99fcd9ab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4173a7fb-a65d-4461-ac12-9f5a80445dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1477,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9b4337-bf2b-4ad0-b821-90a08a2704a8",
        "cursor": {
          "ref": "b9401714-2e6e-4c44-833a-8c3085153183",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "191429fc-2e98-402c-a2fa-5b8a41e088d8"
        },
        "item": {
          "id": "de9b4337-bf2b-4ad0-b821-90a08a2704a8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "abd4cc98-33a4-452b-ae47-9fbf571aeb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7897bb5-4e36-47e8-9708-04544cb917c9",
        "cursor": {
          "ref": "e65c99a0-c4ef-4616-8b9e-ffc57d25bb35",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a2ac482a-e09f-46a2-a9db-abd35f0a53f2"
        },
        "item": {
          "id": "e7897bb5-4e36-47e8-9708-04544cb917c9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "52574398-1c6d-4cc1-9e58-17d2a90c215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd6af47-c3f1-4083-a6c8-c2fee40dc82f",
        "cursor": {
          "ref": "c265461e-bb08-4b16-a6ec-f8b7b2d1c230",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "98d61b86-0e20-4e00-93d0-3454c56174c1"
        },
        "item": {
          "id": "dfd6af47-c3f1-4083-a6c8-c2fee40dc82f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a043d375-a1eb-42c1-9319-0796cbf057b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61e8d14-6f77-4ef9-9641-2ee99c9ee2f9",
        "cursor": {
          "ref": "b85ce324-bbb0-4418-82be-72a88e9ede76",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1a8ea83a-6589-462f-ad96-9a0d59ce067f"
        },
        "item": {
          "id": "d61e8d14-6f77-4ef9-9641-2ee99c9ee2f9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d7641674-0e74-41d5-aeb1-cb28b952c0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f33f894-1d1c-48a9-937a-4faa41d9b362",
        "cursor": {
          "ref": "63741697-dbd3-44ed-b59f-32a01faabf2f",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6ff59ca6-6e1f-4f11-8802-eccb048d52b9"
        },
        "item": {
          "id": "5f33f894-1d1c-48a9-937a-4faa41d9b362",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "745e04b1-7334-4231-86dc-9ea853fac6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272aed48-21ef-46ab-a3fc-ea4ed0f1341b",
        "cursor": {
          "ref": "281051e2-137f-4a98-a64b-85bf2bd83fa8",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ff575bea-1b7a-4651-84af-61345e7e35c4"
        },
        "item": {
          "id": "272aed48-21ef-46ab-a3fc-ea4ed0f1341b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "39416f24-9ae4-4707-9a61-a61f11fd4680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d9de37-deba-45b3-9ddf-787d15be3e55",
        "cursor": {
          "ref": "af950ac3-f875-4acc-a252-51b49fa04df8",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fe8db8d7-42d6-437f-8cf6-ccf0fe61eede"
        },
        "item": {
          "id": "65d9de37-deba-45b3-9ddf-787d15be3e55",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "18c5168d-d676-4c1b-b1b3-7001bff1812d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8ca2b9-f2f5-4f09-aa6c-a05525c0ce8a",
        "cursor": {
          "ref": "af86f854-a59b-46e3-92e3-49e415cdc80e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "19fa097f-48b2-4abf-91f4-67a7171a0a0c"
        },
        "item": {
          "id": "ce8ca2b9-f2f5-4f09-aa6c-a05525c0ce8a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9ddebc4c-8dfe-498a-a9da-7304e464f38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df1237-7700-45c0-923d-dad499eb416d",
        "cursor": {
          "ref": "9fc33639-c779-418e-b742-0df454475faa",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "920e6d55-54f5-4bb6-945d-dfb79e8a7b63"
        },
        "item": {
          "id": "23df1237-7700-45c0-923d-dad499eb416d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2c1f18a0-2fc8-47f4-bdc2-a488c9a5fdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a0c602-757f-460a-9d71-7ac28d8cd647",
        "cursor": {
          "ref": "6fdbaeaf-1650-4eae-bcd8-2952d4970e80",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "44e5867b-f3cb-45e2-b7e8-e5b8c630d802"
        },
        "item": {
          "id": "80a0c602-757f-460a-9d71-7ac28d8cd647",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "91f1d25d-9c9a-4b12-9492-21efa3e5085d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727ff943-0fba-47f8-a691-54a705b71da0",
        "cursor": {
          "ref": "61dd6211-e296-48b4-b5bc-ab209e39af5c",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "db0b6594-0e64-41b7-82da-4846319137cb"
        },
        "item": {
          "id": "727ff943-0fba-47f8-a691-54a705b71da0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a7f62bbf-aac7-4181-824d-ccb0511ea444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6153940d-8ba4-47ba-a0c6-6b8e15c40863",
        "cursor": {
          "ref": "d0a13352-69e3-4107-8827-e75211f321b4",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fecb7708-34eb-4d1c-8511-c650d9b283fe"
        },
        "item": {
          "id": "6153940d-8ba4-47ba-a0c6-6b8e15c40863",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "273f788d-2e5a-49be-8eed-a3723c5a229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7203351-f94c-4d95-8e8e-57bf7db44a9c",
        "cursor": {
          "ref": "5164c987-4f63-40e7-8426-e14145f5a746",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3215f40e-b562-4eb7-9335-9a42714a98bf"
        },
        "item": {
          "id": "d7203351-f94c-4d95-8e8e-57bf7db44a9c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "76163bbd-4492-4f1d-942f-339c518097cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af6fb02-9f5b-44ab-8570-e4ec3ddc6df2",
        "cursor": {
          "ref": "b2859c9b-e46a-4c4f-8e80-8c835346c998",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f8220d15-c980-4815-925f-775e8ad6dc58"
        },
        "item": {
          "id": "7af6fb02-9f5b-44ab-8570-e4ec3ddc6df2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4e240983-78a4-4111-88b4-c4d52533de7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1cb2bb-10c3-45c2-a1ed-01a69ffaf2b7",
        "cursor": {
          "ref": "c9181f1a-444d-4449-839c-38127a33dc51",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ba4927d6-a78f-4d97-b3f8-4920f110ef5b"
        },
        "item": {
          "id": "3f1cb2bb-10c3-45c2-a1ed-01a69ffaf2b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98febd7f-8e0f-4b72-8245-3d24e92e2215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b41bde-378a-4bd0-9800-ac5058109b62",
        "cursor": {
          "ref": "8ca36ba4-8866-4274-b1b5-903b4ebb676c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "43547c15-92aa-4aad-88d9-f3b90104a6c5"
        },
        "item": {
          "id": "a6b41bde-378a-4bd0-9800-ac5058109b62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "70b22bf2-9a20-4645-8b8b-41cb77d7e092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbae63b-07e1-40d5-9fa5-d67c9bbee844",
        "cursor": {
          "ref": "063a1232-833b-42b7-a560-c6b59ea3125e",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e50d678c-9d54-48cd-acb5-18f6e9b9729c"
        },
        "item": {
          "id": "2bbae63b-07e1-40d5-9fa5-d67c9bbee844",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "95041ba6-33f5-4a62-8118-b855c93c2edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be89c7bb-7e71-40fb-8969-410286e56943",
        "cursor": {
          "ref": "84c5d532-c402-44d3-bd38-7e7d6289314d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "60bb9c6f-1fa7-49cb-af4e-4b787cc3d431"
        },
        "item": {
          "id": "be89c7bb-7e71-40fb-8969-410286e56943",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0585d203-25a2-4d05-b639-b6b3cf8e1d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067b0e1a-315e-40a5-8a1b-59d6846135ee",
        "cursor": {
          "ref": "7820ac5f-a85a-49b4-a1d2-db8af925856d",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "68a32898-6208-4a93-b217-afbe5f07ce8c"
        },
        "item": {
          "id": "067b0e1a-315e-40a5-8a1b-59d6846135ee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ab77f829-fba0-432c-9284-2349044098c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b5647f-b014-4d75-8af3-ec02c08a9957",
        "cursor": {
          "ref": "b88df41f-1d47-448c-b446-d472368efada",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dc52a631-cefe-4602-b8b5-a718fb9b7a3b"
        },
        "item": {
          "id": "60b5647f-b014-4d75-8af3-ec02c08a9957",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fffb3bc1-c69c-4efe-9207-d662f446aa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f28985-5265-44d2-88e8-0bd1d24c278a",
        "cursor": {
          "ref": "c61cc75c-afa3-4686-94f2-7ac5e70425a9",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cfed4ec3-e82e-4c36-830c-d23d69e08b80"
        },
        "item": {
          "id": "62f28985-5265-44d2-88e8-0bd1d24c278a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ec3e496a-5228-46a4-9bc3-121f08ba41c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d223e064-c3c5-45f1-a6ae-d91cf988a90d",
        "cursor": {
          "ref": "a7a44c2b-1920-4574-822d-81837c7496c0",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7530035b-a8fa-4f3e-aefd-c903e7f49710"
        },
        "item": {
          "id": "d223e064-c3c5-45f1-a6ae-d91cf988a90d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0dc605af-24f4-4b5b-801a-d09242c39d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0873d22-98fd-4d05-9167-a4f0e9b4b321",
        "cursor": {
          "ref": "2916211d-c727-4859-8c3e-97570cfdc420",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "28e50ace-828d-4e8e-bbb2-aa2ed34d1b36"
        },
        "item": {
          "id": "a0873d22-98fd-4d05-9167-a4f0e9b4b321",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3205d197-5e86-420b-834a-b06292bb02ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaa1b82-de8e-47b0-889f-1fd172429403",
        "cursor": {
          "ref": "168d6ece-8452-4022-962c-5ede8e44cbaf",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5e456c49-9e06-4207-8718-77bbef514d27"
        },
        "item": {
          "id": "3eaa1b82-de8e-47b0-889f-1fd172429403",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "34a4c538-830f-48d0-b713-f0477e2f37be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204857cc-53b2-4785-9aed-c45ea3ddd997",
        "cursor": {
          "ref": "3283921f-941f-49ea-a85c-8a94e1a2653d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6679808c-fb0d-41f2-b926-bdcdc16f1b58"
        },
        "item": {
          "id": "204857cc-53b2-4785-9aed-c45ea3ddd997",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "61378fdf-d613-46e7-961b-a58a756a23ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0b8574-0783-4a95-8234-e024ad899746",
        "cursor": {
          "ref": "b4b86e49-f674-4b64-b69c-e4077539be74",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "95798996-575b-46b5-9b96-e9dc617cd7fd"
        },
        "item": {
          "id": "1a0b8574-0783-4a95-8234-e024ad899746",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "90bead77-05c8-4e59-8330-fa8bf41e5923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd893f50-9e8c-4864-9b10-fef6a55959e6",
        "cursor": {
          "ref": "6bdec8c2-a666-4bd6-83a6-2ae3288feec4",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e3c4d00a-bc0a-41a4-ae46-8c1d7d7069b7"
        },
        "item": {
          "id": "cd893f50-9e8c-4864-9b10-fef6a55959e6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f992658f-5c97-42bf-838c-b964b7a18e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097d3a2a-acbc-4ad8-8664-c1af949665d5",
        "cursor": {
          "ref": "6ea23788-ae53-427b-bcf6-f82c50c9e99d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "18cdb1b9-41cf-4871-bdcd-21867e6a5849"
        },
        "item": {
          "id": "097d3a2a-acbc-4ad8-8664-c1af949665d5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c3f7094f-5f89-4c24-be1d-613e0dd54c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23947c4-e547-4ea7-aad8-7c870aebafc6",
        "cursor": {
          "ref": "ac4110ba-2097-4e42-aef9-6490d4bbb685",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b91a8218-6cbf-49bb-ad4d-e84ec6a47c31"
        },
        "item": {
          "id": "c23947c4-e547-4ea7-aad8-7c870aebafc6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0cb188b5-2c90-4571-9471-19ffa397f786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05a8e05-ae6b-417b-af7a-c91b429db38d",
        "cursor": {
          "ref": "38cdf04d-671b-4606-9917-e733e855f2d5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "58b934c7-c9ff-4bed-a40f-9578e6998619"
        },
        "item": {
          "id": "e05a8e05-ae6b-417b-af7a-c91b429db38d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fa7b569f-41da-4170-b481-cf4aa4ec6e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472fa8b0-8b35-4a0b-8026-7a045a2c3055",
        "cursor": {
          "ref": "8e4d1de4-70fc-4427-983a-1e66957cec01",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5394a721-e406-4eb1-bffe-f0886f2affa3"
        },
        "item": {
          "id": "472fa8b0-8b35-4a0b-8026-7a045a2c3055",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "22537364-0433-470a-bc89-3c700d05f2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9e690d-3f46-4462-ad8c-2386a1cc78b6",
        "cursor": {
          "ref": "c1f46035-bef2-4526-b104-0f02c5bf9b45",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bec71733-2525-485d-a776-40adf77cfd6b"
        },
        "item": {
          "id": "fa9e690d-3f46-4462-ad8c-2386a1cc78b6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "acfb6c76-39bc-4537-8071-a8148024edee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f09c08e-b176-4d3b-8ff6-44f94e7a3ae9",
        "cursor": {
          "ref": "174e3d69-5a3a-46cf-94f9-b9997b41bb6d",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "37b36635-9363-4d77-aee4-59ef42f8944a"
        },
        "item": {
          "id": "8f09c08e-b176-4d3b-8ff6-44f94e7a3ae9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a832e33e-e122-45cc-bfda-657bc1bb6733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecec82e9-6a72-4f8b-8d36-e8cf8c1e6dda",
        "cursor": {
          "ref": "0a42b1bf-f3c2-4426-8c3b-2dc22ab94b72",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4f4370c5-f096-4763-89e6-422e368946f2"
        },
        "item": {
          "id": "ecec82e9-6a72-4f8b-8d36-e8cf8c1e6dda",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "111ef6f4-2464-4879-99dc-c80aae162f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e24652-d8e4-430b-ba7a-9056b6d9bccb",
        "cursor": {
          "ref": "81094cce-73be-4ec1-9bff-0dae0efc3aad",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4cc1ba20-ee81-49e9-9eb1-6ee6719c6c3f"
        },
        "item": {
          "id": "60e24652-d8e4-430b-ba7a-9056b6d9bccb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "518e3b10-b7ac-469e-a0a4-30ec59ef909a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4185a345-9d08-49c5-ae4c-0debc7e3dc36",
        "cursor": {
          "ref": "75a3305e-9fab-4f1e-9320-213871ef0008",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "af36970e-1b3a-4525-b2fc-f27b75c509b9"
        },
        "item": {
          "id": "4185a345-9d08-49c5-ae4c-0debc7e3dc36",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "14278af4-0685-47f5-b962-53f5f182fb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d30faeb-dfcc-45ed-aa9b-f1844b8bce8c",
        "cursor": {
          "ref": "1cb99006-3d28-45a3-bfb6-10a1517d02ac",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e0f18baf-d54a-41bb-8dec-634bb8468459"
        },
        "item": {
          "id": "2d30faeb-dfcc-45ed-aa9b-f1844b8bce8c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6623c368-e633-4afc-a9b5-3298eb131460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d0f1e0-0acb-4b1d-b22e-72222fc77e25",
        "cursor": {
          "ref": "d4777316-8f8d-405d-8683-98379245d523",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f469ff9-148f-4cdc-a4b3-d4dd85431eda"
        },
        "item": {
          "id": "f0d0f1e0-0acb-4b1d-b22e-72222fc77e25",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fdee8f65-c35a-4117-94ad-d0ae3090c48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1464db08-0cd2-44a0-8fc5-5dad3b5c56d5",
        "cursor": {
          "ref": "9acce48c-4054-496f-a811-fd6237365245",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d2fa0f7f-d0ce-4cff-9e18-e4b47259b1e0"
        },
        "item": {
          "id": "1464db08-0cd2-44a0-8fc5-5dad3b5c56d5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d6cb0998-0240-426d-a002-ddf26fd01df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe4f8b1-8c8c-4ec9-b591-5b2f5e5f254a",
        "cursor": {
          "ref": "395b06a1-6b68-4616-9c81-22e84d23809b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "07174609-7652-4278-a295-c123fd2714c1"
        },
        "item": {
          "id": "5fe4f8b1-8c8c-4ec9-b591-5b2f5e5f254a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cb0a62ff-5f74-4081-8d23-6483899546a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aac5a5-0469-43d3-915f-1b80d4a2297a",
        "cursor": {
          "ref": "e355fabb-9b92-47e9-82d6-34e1ba904954",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6eef4525-dd41-41cc-9590-5febe874bf61"
        },
        "item": {
          "id": "41aac5a5-0469-43d3-915f-1b80d4a2297a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bd9d7d37-2ba7-4b2b-9221-80e72183fdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f9e8c7-730e-4b71-8e4b-08590d00d0db",
        "cursor": {
          "ref": "6456e9af-096b-4032-8a47-cab01ff6dda4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8da72be2-8a2f-4880-8217-684d3865ae37"
        },
        "item": {
          "id": "11f9e8c7-730e-4b71-8e4b-08590d00d0db",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "62426301-4e56-49cb-81c3-ef000b23021b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efccc16-4560-4e74-9d1f-50f87dfb56f6",
        "cursor": {
          "ref": "12942188-511f-4211-826a-d85f8119d92d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d3c506e8-c301-4ff4-83dc-bf05e3a181fd"
        },
        "item": {
          "id": "4efccc16-4560-4e74-9d1f-50f87dfb56f6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "47c48d25-3071-4da9-b122-935a69b43c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fc819d-6390-486f-ad84-df5fc1ff0263",
        "cursor": {
          "ref": "d0ab97e2-40d2-43ce-9266-f683c0b31950",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7057481b-6d1d-4145-a6e0-5cc7a41ba840"
        },
        "item": {
          "id": "b6fc819d-6390-486f-ad84-df5fc1ff0263",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ad727aad-fe63-4903-82a5-f863aac77b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d307d0-f555-4408-b586-4e9087c2bbc7",
        "cursor": {
          "ref": "a287797e-6c8f-4c99-897e-3ad7e2e8f085",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "095d4729-f56f-4fa8-b4fb-ae0ba650289c"
        },
        "item": {
          "id": "f5d307d0-f555-4408-b586-4e9087c2bbc7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "012b9115-1354-4a83-906b-c444181f2972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53de579-c59b-466b-ab73-9a79e6d01627",
        "cursor": {
          "ref": "b79360b4-eac1-443e-bd5f-73a633cf5464",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c9197b54-f335-4547-8e0d-c1f8f5136071"
        },
        "item": {
          "id": "f53de579-c59b-466b-ab73-9a79e6d01627",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "18422e30-6424-4977-bd88-b2eb3ce9b8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0360342f-461c-4e56-a162-fdf6446896f3",
        "cursor": {
          "ref": "1f68d1f0-8838-4f49-a37f-b8030f829a20",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "521452cd-ab31-4ca6-82b6-8a411643867f"
        },
        "item": {
          "id": "0360342f-461c-4e56-a162-fdf6446896f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fceb1227-12d4-43f4-8dcd-82825fd979f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97baac18-9221-4716-86bd-b65bdfea656a",
        "cursor": {
          "ref": "978b6874-6e11-45d3-ae48-7e23ab992344",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3649b7c4-0ec1-414a-9a1a-bee72a00f509"
        },
        "item": {
          "id": "97baac18-9221-4716-86bd-b65bdfea656a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "78516326-e7b4-424e-9d0f-79d1345c85eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f412c69-7d66-4560-b02c-ae231d81f39b",
        "cursor": {
          "ref": "afdf2c2a-d3a4-4353-8a75-71cf337a6b87",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aaf85b5a-4b05-4b4f-b8cb-987a24b9d07d"
        },
        "item": {
          "id": "5f412c69-7d66-4560-b02c-ae231d81f39b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3b88865b-6b7a-4045-a633-dc58cf2742f9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 654,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31fb346-5769-4792-90f1-b5137317a9f5",
        "cursor": {
          "ref": "7c3ff13f-1f20-4237-a946-c946d2bab9ff",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d18511c2-d3d3-44d4-abd4-f20b48ae1ed2"
        },
        "item": {
          "id": "c31fb346-5769-4792-90f1-b5137317a9f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7686b544-370f-46aa-86c5-ae68acbbace4",
          "status": "Created",
          "code": 201,
          "responseTime": 7855,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d87057-43aa-4204-bf90-d6b86f97f430",
        "cursor": {
          "ref": "8f536851-e7c7-48c1-83d0-1993aff4f3bd",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "007ca9cb-7d6a-4280-ab27-798dfdab1e74"
        },
        "item": {
          "id": "f4d87057-43aa-4204-bf90-d6b86f97f430",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b815eba0-134f-4ab7-a0a4-6ca30e301520",
          "status": "Created",
          "code": 201,
          "responseTime": 4764,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "91123f10-a892-4926-b92c-4be1d5c60b7d",
        "cursor": {
          "ref": "40a79820-2bb6-4532-bf46-ba44d7bbb022",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f9e361dd-19b3-425f-9fa2-5163ca7a003c"
        },
        "item": {
          "id": "91123f10-a892-4926-b92c-4be1d5c60b7d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8bbec990-8044-4f25-85a5-7a17c38456ce",
          "status": "Created",
          "code": 201,
          "responseTime": 4957,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b8bafc-aada-4097-b577-8cf2e8aad712",
        "cursor": {
          "ref": "2379255e-227d-48a4-9f93-5802fd26727f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "78051cdb-e47d-4bdd-86cf-c041f9b3b435"
        },
        "item": {
          "id": "27b8bafc-aada-4097-b577-8cf2e8aad712",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9c3dd2e5-fd3b-40ae-8b7c-519cee031714",
          "status": "Created",
          "code": 201,
          "responseTime": 7207,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59de45b-430f-4832-94ba-8fab6ba7f6dd",
        "cursor": {
          "ref": "112282e8-47ad-4bd8-b6c1-6d0f467ffc3d",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d006efc4-d3f0-44b4-b89b-25a2a70f5728"
        },
        "item": {
          "id": "f59de45b-430f-4832-94ba-8fab6ba7f6dd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "af15ba22-f136-4e59-9dd5-5678cd343d24",
          "status": "Created",
          "code": 201,
          "responseTime": 6242,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee2caeb-1a79-48ea-b202-f92d9a1e1b5c",
        "cursor": {
          "ref": "f610297d-96bf-44c8-92a9-a52872084f44",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "810318fc-14db-478d-8edc-1c941c09f3a7"
        },
        "item": {
          "id": "dee2caeb-1a79-48ea-b202-f92d9a1e1b5c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b7e0470c-7d64-4c45-a687-3c2e8e08b755",
          "status": "Created",
          "code": 201,
          "responseTime": 7014,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff2e816-da79-4c93-a25e-572a9966cfc4",
        "cursor": {
          "ref": "8f90e738-5af4-4bd8-b256-d249e6f6ebd4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b85ac386-6873-40b9-9e22-9ddd269117ff"
        },
        "item": {
          "id": "4ff2e816-da79-4c93-a25e-572a9966cfc4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c924195a-1fb7-4215-9745-52617c27fb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff2e816-da79-4c93-a25e-572a9966cfc4",
        "cursor": {
          "ref": "8f90e738-5af4-4bd8-b256-d249e6f6ebd4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b85ac386-6873-40b9-9e22-9ddd269117ff"
        },
        "item": {
          "id": "4ff2e816-da79-4c93-a25e-572a9966cfc4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c924195a-1fb7-4215-9745-52617c27fb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bdfb7c-1368-4365-95d5-7f89a83d3083",
        "cursor": {
          "ref": "8a5abe26-9141-40fd-8733-580034071c58",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d26df7b6-79fe-4930-aef8-9054aecb3482"
        },
        "item": {
          "id": "e4bdfb7c-1368-4365-95d5-7f89a83d3083",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "033aa212-186d-4d32-b894-0bac5ca2b6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236ef9c2-bddc-490d-9c71-8b0a6e7167bd",
        "cursor": {
          "ref": "61cff256-bd63-41b4-a20d-f288818464ce",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fae679ea-a6c6-41db-bec0-2e5e0998ee61"
        },
        "item": {
          "id": "236ef9c2-bddc-490d-9c71-8b0a6e7167bd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8cf173f1-7263-4b48-b1c2-d0e975bbeffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8699a7e0-c63f-450c-bec8-897b1054bdeb",
        "cursor": {
          "ref": "64d96884-7f99-4a74-8f44-9a4fc66c224d",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1f7aa58b-34f2-4631-bf88-a2ec79da0127"
        },
        "item": {
          "id": "8699a7e0-c63f-450c-bec8-897b1054bdeb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0ac7d21-1747-4ae5-93df-b250a07e93f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ed8c76-9359-4f41-8de0-cf69bd8d5e47",
        "cursor": {
          "ref": "1f621c8e-4489-4465-a466-72448bbec676",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "574c130d-7809-4c2e-9f32-524757ee7213"
        },
        "item": {
          "id": "00ed8c76-9359-4f41-8de0-cf69bd8d5e47",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7041833b-9643-4c5e-bf5a-f59bada4bb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08822d7-9e72-496e-a4d0-db19870ead52",
        "cursor": {
          "ref": "ad67149c-2ced-430b-a48b-29afc1dfdcfd",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f982157e-e67d-4d98-96ad-5da2652109c0"
        },
        "item": {
          "id": "f08822d7-9e72-496e-a4d0-db19870ead52",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "56f4b843-43aa-40e9-a32b-11e9f9d53156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d8bff8-ecf8-4f49-806c-dc448de2c8f9",
        "cursor": {
          "ref": "0395d602-1243-4ea8-b6f4-237eaf47554d",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eefbf0ff-56dc-46ec-9ca4-985178e0effc"
        },
        "item": {
          "id": "09d8bff8-ecf8-4f49-806c-dc448de2c8f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e32bcda-e653-45fe-a186-194bd949f54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ad8159-3de9-463a-8e63-b6b26c5fcb23",
        "cursor": {
          "ref": "7df027c9-940f-4f11-a015-232ab6747a7d",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0e8780cf-433e-4bbf-ad71-e2a8a3ee9d70"
        },
        "item": {
          "id": "71ad8159-3de9-463a-8e63-b6b26c5fcb23",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "732a550f-7560-455c-99c9-0ca6fcdd17ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586984de-9fc4-4021-a340-e9ba2380f45a",
        "cursor": {
          "ref": "e3a9610a-eb2c-4886-a2c3-24499c28f1a0",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8b07d0b5-52b2-4bf7-bd2a-154a492df20b"
        },
        "item": {
          "id": "586984de-9fc4-4021-a340-e9ba2380f45a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bf7ee9d3-b748-47cd-9a78-03b80420702d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c1425a-c31f-4fd0-81b9-a6c89b4b37e4",
        "cursor": {
          "ref": "9d845e6c-c7be-45b3-9579-5e45ff4eccb6",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a46a6609-63b8-401c-983b-9f20991f24ae"
        },
        "item": {
          "id": "f8c1425a-c31f-4fd0-81b9-a6c89b4b37e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "51bffe29-8a32-48cc-a818-908ce0f33769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f606861d-bcb6-44ee-8343-f33291796846",
        "cursor": {
          "ref": "148f406c-7656-4cc5-9a09-ba698bf73fda",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c51c483d-9a98-46c1-abfc-e903c1b2a233"
        },
        "item": {
          "id": "f606861d-bcb6-44ee-8343-f33291796846",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f67c993-96f9-4a79-b570-bc95c3303c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854085c0-6977-4cb0-ad68-8cdb75cd673f",
        "cursor": {
          "ref": "982a681b-5c90-466f-9e96-b43a35c5340e",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "df174b6f-9601-4518-bb72-6d9bf98f3585"
        },
        "item": {
          "id": "854085c0-6977-4cb0-ad68-8cdb75cd673f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b30f06a1-bf34-46d3-b45e-053283dcbdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb2f135-91d9-41ae-82f5-87c5dd94b7aa",
        "cursor": {
          "ref": "ce5affde-3907-4fd6-b5e9-7fc2389f046b",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b0966c0c-f7ee-4923-9e50-64c31bcfd4d2"
        },
        "item": {
          "id": "1eb2f135-91d9-41ae-82f5-87c5dd94b7aa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34e6b0c8-6c28-4b20-a427-403ecd9db3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4174576-5def-429f-8550-b8a04a039956",
        "cursor": {
          "ref": "d56cc9c1-7757-4b30-b83b-405321881847",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0e5ca0fe-0fd8-463a-b59c-b780b82e953f"
        },
        "item": {
          "id": "e4174576-5def-429f-8550-b8a04a039956",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "30628c85-a67a-4948-9cfa-8435178c69a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfdd27f-7aa7-471d-8635-f8e63a4157b9",
        "cursor": {
          "ref": "3122c7e2-8795-4300-a728-f3ace1fe0dd4",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b07a06b6-dd6d-47a4-b6b0-3043b9ebf923"
        },
        "item": {
          "id": "1cfdd27f-7aa7-471d-8635-f8e63a4157b9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8689a24b-4f3e-4752-8ed1-94ec87379179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35194ed4-3507-4a8e-ab2c-c34c77190412",
        "cursor": {
          "ref": "96afcb26-26c8-4fea-9401-8c44c7efe26d",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "741f4b0a-1881-46fa-858b-bba247c52448"
        },
        "item": {
          "id": "35194ed4-3507-4a8e-ab2c-c34c77190412",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bc05cc83-e192-4062-a8cf-04bad947e225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f4dacf-08e7-40a1-a749-b14a51fc91f9",
        "cursor": {
          "ref": "ace7e740-cbff-4dc3-aba2-53eb6f09b5e8",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d7fd4f23-87ed-4343-b7bc-8c6d9bf21b65"
        },
        "item": {
          "id": "29f4dacf-08e7-40a1-a749-b14a51fc91f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7d9d1607-5699-4197-9ab4-403ed29e8536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e03fa5-7cb3-4fd3-a8a3-14d71ae89fef",
        "cursor": {
          "ref": "43cd6ea9-36db-415d-a3a4-d1d13451b89b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "841bb2f4-b7b9-4ed6-b213-07e320e31417"
        },
        "item": {
          "id": "c6e03fa5-7cb3-4fd3-a8a3-14d71ae89fef",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7aef37f0-1ad8-4cac-9bcd-15ba5955d181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63667eb5-b764-4756-93f5-4edb66090a2d",
        "cursor": {
          "ref": "b9bd5f46-615c-42e1-b399-79718fd56320",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "985aade0-3eb4-44ac-b00b-70f9a5b34f0b"
        },
        "item": {
          "id": "63667eb5-b764-4756-93f5-4edb66090a2d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c898a5d-f40c-4a8d-ab92-04f0a1dfb2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7a388b-c697-4383-9e2c-e158dab9d6c6",
        "cursor": {
          "ref": "444b0552-ecfa-49c2-9f77-9066e42ba131",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "56c4dd9b-334a-4af0-8cc1-a3258a378006"
        },
        "item": {
          "id": "ac7a388b-c697-4383-9e2c-e158dab9d6c6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd46ad1f-6042-4024-b7f1-436e844327cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a70214-0716-4551-a0e5-66301a1d5797",
        "cursor": {
          "ref": "92cd3523-b4d6-46ec-9914-aab4652f6de6",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "12088e13-f9ef-4d93-a404-61b1623f3159"
        },
        "item": {
          "id": "89a70214-0716-4551-a0e5-66301a1d5797",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dfad7a23-c149-4a4e-b921-bc9ad64886dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08630ee1-31c0-4e70-bb8e-8045caa35a5e",
        "cursor": {
          "ref": "4b577397-88f6-4f72-8b4d-e03ce4e17e1e",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9da3eb6d-a2e2-4671-a41a-5c0695a5cb2a"
        },
        "item": {
          "id": "08630ee1-31c0-4e70-bb8e-8045caa35a5e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "41ee5dbe-15ee-48ce-8450-b49d5c8620d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca87e4b-37bc-4dda-8b2d-cbfe53b2b454",
        "cursor": {
          "ref": "b73006e0-2789-4afe-b6e3-59374c895010",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6f7916ac-eacd-443e-9b83-e53b86ee8767"
        },
        "item": {
          "id": "8ca87e4b-37bc-4dda-8b2d-cbfe53b2b454",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "080f3e1a-bc9a-47d4-8197-d791f6da08e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe79634-c816-4408-9392-c8004f3a32b3",
        "cursor": {
          "ref": "7d630618-5dfb-4715-9706-b1398ccb0a3b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "07e4f607-c7c0-495d-b54d-d1255f643431"
        },
        "item": {
          "id": "8fe79634-c816-4408-9392-c8004f3a32b3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "79238053-c528-46c3-8b39-28e7a11f400d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfb2266-eb81-412a-a572-e5ae46f66c28",
        "cursor": {
          "ref": "dc18efbb-7639-4876-b62b-cdd015b9cd67",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7fb98197-11ec-4cd7-a735-dd6593e71f4d"
        },
        "item": {
          "id": "5bfb2266-eb81-412a-a572-e5ae46f66c28",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "04fd6892-d74b-4cb0-bce7-09af2787f538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3224ba1-8afd-455d-994f-d48184ea6e83",
        "cursor": {
          "ref": "44cc3c14-d956-436c-ad91-8197b22ee88b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4b52c642-2efe-40a4-818d-c9add0c46a7a"
        },
        "item": {
          "id": "e3224ba1-8afd-455d-994f-d48184ea6e83",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60e8de67-416d-4c8b-94b7-436967bb82c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db4ac7f-9786-40ed-b468-1feb3ad071b5",
        "cursor": {
          "ref": "99eded04-9753-471c-aac8-3bd00c009634",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "836cf844-cdc3-44bb-97d5-bac067d3e930"
        },
        "item": {
          "id": "7db4ac7f-9786-40ed-b468-1feb3ad071b5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4dbfca2c-7e3d-4d93-ab66-2ee8a97f3b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d9beb9-1928-469d-a57c-ed9846061011",
        "cursor": {
          "ref": "58fabcd4-45cc-4fff-95d6-0b179be73a2a",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6facfba9-11bf-4590-814d-95b7cc917914"
        },
        "item": {
          "id": "83d9beb9-1928-469d-a57c-ed9846061011",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1188ce0a-7959-4d6f-9b16-bddda864f39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7e667b-0cea-4419-826b-9db3295965a5",
        "cursor": {
          "ref": "752a3b7d-0e37-4dbf-81fd-c74297e402d9",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f1b196bb-94ac-4543-8553-b22bc9a957ad"
        },
        "item": {
          "id": "ac7e667b-0cea-4419-826b-9db3295965a5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2593e8d0-3d4b-45b4-bb1a-636444989595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b49ac3-9a53-4592-ae05-0a89bc98c808",
        "cursor": {
          "ref": "63d96540-6f8d-43c8-bea4-93c453f2e2b0",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "510da5c6-6887-4907-ac4b-6033bda2d427"
        },
        "item": {
          "id": "d3b49ac3-9a53-4592-ae05-0a89bc98c808",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "50a95379-a995-486c-b4ff-a856812d9446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f60250f-8d18-4e42-88cd-b4d85aa7d4c8",
        "cursor": {
          "ref": "5e980439-5e61-4557-854f-fbefb25a787b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "070505d2-1da6-4423-a55a-bde88686cc32"
        },
        "item": {
          "id": "1f60250f-8d18-4e42-88cd-b4d85aa7d4c8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5a6172cf-2c1d-41a9-932a-5d85fc3b0bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f4fe4b-db09-465a-9915-65116a8a0496",
        "cursor": {
          "ref": "29d11549-f118-42e8-91ab-ecba543aed17",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eb35dde3-b7d4-4165-8a8d-676b75ba3713"
        },
        "item": {
          "id": "92f4fe4b-db09-465a-9915-65116a8a0496",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a3bdccef-9277-45fe-9bcd-cfd15f549c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5c364f-23e3-4fe5-9b91-04ce0ad248d1",
        "cursor": {
          "ref": "ec9f2959-aa76-4974-beff-22c6f4508f00",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6859064d-df73-4b30-bb74-6a6d7a223ad9"
        },
        "item": {
          "id": "6a5c364f-23e3-4fe5-9b91-04ce0ad248d1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "17b468fc-6162-4a58-9fa8-d94c4751e20e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9543649-3e8b-492b-8874-50e62d2df054",
        "cursor": {
          "ref": "39300edc-a9a4-421b-8132-0976f547a77a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9d76207e-d496-4750-beda-eb6de1604f9a"
        },
        "item": {
          "id": "f9543649-3e8b-492b-8874-50e62d2df054",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ee52acfd-e655-43ba-b265-f89470b5e3c4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05ddf4c-9335-49ae-8bc0-a4ffc8b62d15",
        "cursor": {
          "ref": "ba8a9c70-fa3b-466c-a22c-1b15fc76059f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "05c6e432-a68f-4336-a4e8-0f4988cb08a2"
        },
        "item": {
          "id": "c05ddf4c-9335-49ae-8bc0-a4ffc8b62d15",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2fbc878f-e3e7-43d4-abae-d849452ac0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05ddf4c-9335-49ae-8bc0-a4ffc8b62d15",
        "cursor": {
          "ref": "ba8a9c70-fa3b-466c-a22c-1b15fc76059f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "05c6e432-a68f-4336-a4e8-0f4988cb08a2"
        },
        "item": {
          "id": "c05ddf4c-9335-49ae-8bc0-a4ffc8b62d15",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2fbc878f-e3e7-43d4-abae-d849452ac0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dde8d96-503b-4272-a944-419443d5dfd1",
        "cursor": {
          "ref": "365ef302-b620-4c6b-bed6-ee03aa4d7ce2",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e8fc5342-1e21-4af5-84c9-d84bdf62ad89"
        },
        "item": {
          "id": "4dde8d96-503b-4272-a944-419443d5dfd1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "01cdbcff-1374-4577-9670-a76f1932ebb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd53b26-e9b1-4b10-9392-b0a7d4118643",
        "cursor": {
          "ref": "4650be8b-19bf-4c46-b7dd-1c70edbc0cba",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ed91cecc-6bec-4767-8ccd-f3c476d84dd5"
        },
        "item": {
          "id": "6fd53b26-e9b1-4b10-9392-b0a7d4118643",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "492b8786-9b82-4a54-82f9-463a95513912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950c86f0-1dd5-4222-8eea-4d3db730bb30",
        "cursor": {
          "ref": "34f5856a-1648-4ded-b5c2-79d1837f79ed",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "866abeec-0d8b-4fb6-8b13-e3b3ab00970e"
        },
        "item": {
          "id": "950c86f0-1dd5-4222-8eea-4d3db730bb30",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e7229527-c77c-4091-849e-4dc543c71b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef65a24-f934-42f5-aca9-6552ce747c09",
        "cursor": {
          "ref": "acdf7d6c-bf61-4be6-85f5-25a0857e27fd",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7f8f9aca-b2ef-4164-abea-76ac523d2fdc"
        },
        "item": {
          "id": "3ef65a24-f934-42f5-aca9-6552ce747c09",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a858dcb-e602-41a2-911e-3c2a27956f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd557d1-dac3-4688-951d-0f48d6f32035",
        "cursor": {
          "ref": "108a055a-ccb8-459c-abd1-f45ce0016865",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5eb5a77e-ae5d-4410-a755-3064f29763ff"
        },
        "item": {
          "id": "ebd557d1-dac3-4688-951d-0f48d6f32035",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "27d6b5b1-5825-4863-9c6a-5ee9c97af961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bdfc2d-7205-4ef7-b4b3-448c4f680756",
        "cursor": {
          "ref": "bba9f839-56dc-4914-b240-301de309538d",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0be5f36e-9697-4ff7-a105-0dfe3476faed"
        },
        "item": {
          "id": "65bdfc2d-7205-4ef7-b4b3-448c4f680756",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8e467b1c-0899-4cfb-bcb4-4d9b39d20fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc4f6b0-d8ce-41d7-915a-597212cb045d",
        "cursor": {
          "ref": "21c2c3ab-fa3d-431b-aeac-3f0b83e72032",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "43199ebe-a15d-407f-9a76-2d416abce4d0"
        },
        "item": {
          "id": "9dc4f6b0-d8ce-41d7-915a-597212cb045d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ce5c1c9e-d1ae-445c-b893-b0254e60ad6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47a1746-63b1-4850-9b26-e4d72263f99a",
        "cursor": {
          "ref": "5e05d9c0-5e41-472a-821b-68bb1b945276",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "80f82f2f-c5dd-489d-9855-17bf618b61bd"
        },
        "item": {
          "id": "a47a1746-63b1-4850-9b26-e4d72263f99a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9a286f4f-abdb-46bb-9887-e6b9c1be2621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271d3c7b-68b4-45dc-b12b-046abec8bdc0",
        "cursor": {
          "ref": "f20dd425-4b84-4e73-a6f9-f7c958d996e2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c596d3ca-5cc3-4cfb-8e07-fdd8e70b61eb"
        },
        "item": {
          "id": "271d3c7b-68b4-45dc-b12b-046abec8bdc0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de22da43-8f06-4474-8546-d9bf808bc3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d66c576-cfa9-40c8-a283-44d0adc6b394",
        "cursor": {
          "ref": "bc785d7b-ac41-43af-8300-c7667d61d2ce",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3c8d7c21-a839-4924-ad67-fc2d2d57a868"
        },
        "item": {
          "id": "5d66c576-cfa9-40c8-a283-44d0adc6b394",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "708761ec-10c1-4909-ad53-ccefbbfa1fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2864af08-89cf-419b-a299-00954891b25e",
        "cursor": {
          "ref": "a0c909ce-33ee-46e7-8dd3-9d0896476e14",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "600bc371-6128-47db-8c0b-26de4a3ce728"
        },
        "item": {
          "id": "2864af08-89cf-419b-a299-00954891b25e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e9ec3381-0662-48e0-9eb5-8f5eeff1ba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4720c9c-bfe6-4ae8-b74e-8e255abc96c9",
        "cursor": {
          "ref": "5b43c9ab-a4ba-45b9-9d47-12b6ecea687a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2511237c-be29-4e67-8ba2-022c8f844691"
        },
        "item": {
          "id": "b4720c9c-bfe6-4ae8-b74e-8e255abc96c9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "434c72b6-2948-48da-a075-a5dcdd6e6cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392d57ea-415e-45e2-8f45-7f078e161d34",
        "cursor": {
          "ref": "c34b4128-b148-42b3-951b-67da001010d8",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c88257c7-4453-424f-bec4-6b3fced57257"
        },
        "item": {
          "id": "392d57ea-415e-45e2-8f45-7f078e161d34",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b7d4b3a5-1246-4b06-9029-7bf623570437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf937b9-52da-40f8-8cfb-6e5090139312",
        "cursor": {
          "ref": "09906182-11ce-4300-b2fa-c7d91c723720",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8a88dcea-e305-498f-99c4-975a79f0ef93"
        },
        "item": {
          "id": "0cf937b9-52da-40f8-8cfb-6e5090139312",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "22c18df5-65c8-44ee-964e-c1590083d20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaae7df-e221-425f-99d8-4ca7fae721df",
        "cursor": {
          "ref": "08fdc933-86c3-4f8e-b836-002624341fd1",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e6c6b8f0-d76f-4967-b87d-bc2e24cbba96"
        },
        "item": {
          "id": "0eaae7df-e221-425f-99d8-4ca7fae721df",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8b566beb-a442-420a-88b8-fc54410d5158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c632097-8af2-4b9c-b160-87805bef0bc5",
        "cursor": {
          "ref": "e163b791-1302-4ba9-872f-b447f8a63d7e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3f382022-cd75-4a1c-8a2a-3382e50e09c3"
        },
        "item": {
          "id": "6c632097-8af2-4b9c-b160-87805bef0bc5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c140ca2c-20c3-41fa-b9ac-98b48e71c401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df39ad6-1cc6-4c80-9f80-29bd673052ab",
        "cursor": {
          "ref": "a4ab978d-d9e9-4adb-a06d-95ff9dbb54cd",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c4097149-2251-4d8b-ab36-546e91b8f47a"
        },
        "item": {
          "id": "3df39ad6-1cc6-4c80-9f80-29bd673052ab",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dbf772f8-dab9-4404-90b1-cd55d8f75c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d0a69-49e8-4eea-a879-2a915993a5f8",
        "cursor": {
          "ref": "0e913ce4-ba58-4b23-b952-f9ba77f94eb3",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "685a5d1b-d8a0-42ff-8da4-2aa147efcf39"
        },
        "item": {
          "id": "6b8d0a69-49e8-4eea-a879-2a915993a5f8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "051c4e35-4835-4a57-8d5f-01a8baf7cb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9802a0dd-a2b1-4fc9-9662-5b4f45ed3ec9",
        "cursor": {
          "ref": "d93726bf-364b-40b5-865b-c88eca646cd5",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b24e05c9-20f0-472c-a197-bf5da6c51bc7"
        },
        "item": {
          "id": "9802a0dd-a2b1-4fc9-9662-5b4f45ed3ec9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "32d9d7ed-ab6d-4f88-a24a-a3d2c23ef904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2f67d6-8e19-4b42-8366-b515141708d3",
        "cursor": {
          "ref": "891b84ef-7be3-43d9-b2df-7c921b951854",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "65159336-4408-43f4-92ab-cc6347144680"
        },
        "item": {
          "id": "af2f67d6-8e19-4b42-8366-b515141708d3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3862ae40-cd71-4a3f-9a54-6c83c7165711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb7437d-3b0e-4466-b302-3142b24451d7",
        "cursor": {
          "ref": "b645f129-f969-47a0-ab14-f092cfdb4ac3",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cce2bcc0-9dab-42bc-8f46-5dc04530e8a7"
        },
        "item": {
          "id": "afb7437d-3b0e-4466-b302-3142b24451d7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "225091c8-74a4-4259-bb5a-80daf1abb109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6e8342-c5b4-4bae-adda-f5080d2033e4",
        "cursor": {
          "ref": "fa08c3ad-290c-49a2-b006-d16b8a3cbf28",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7a090f18-548f-4a00-a1e3-5f2f422ef0b2"
        },
        "item": {
          "id": "8e6e8342-c5b4-4bae-adda-f5080d2033e4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "583e3bce-ceba-4d06-b11e-7f52481b97d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9dcc5a-8529-45f1-8546-f8ebfbdb721b",
        "cursor": {
          "ref": "6f096f52-35e9-4c12-ba13-957b8ad479fa",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "71f087bb-eeff-4aba-a013-11dfeebaf980"
        },
        "item": {
          "id": "bd9dcc5a-8529-45f1-8546-f8ebfbdb721b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a10e6893-a09a-4388-8c2a-d638335c93b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1144,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9787df7b-d293-460b-9599-84a7b5e31c1d",
        "cursor": {
          "ref": "34ccdfd9-20c8-4851-ad10-1648086f388d",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bb9d6e66-a238-48d7-8705-ee9cf2554865"
        },
        "item": {
          "id": "9787df7b-d293-460b-9599-84a7b5e31c1d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d9bcb63-a65e-497d-ad23-d329b6f42a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5a2448-ce44-4ecf-9b47-a7cb7ea5800f",
        "cursor": {
          "ref": "f9e2c414-2505-4114-ab40-b84958267a3c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4403241b-e6be-4da6-99ee-893ef9c5bd71"
        },
        "item": {
          "id": "db5a2448-ce44-4ecf-9b47-a7cb7ea5800f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "56e2e62b-c645-4a5e-a6e1-3cda0b492bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8059430-f552-4ee0-a5dd-170e9e27dd56",
        "cursor": {
          "ref": "26e22c26-5726-4431-a2df-3e5a73dee96a",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "81bb2555-1aa6-45fe-bbf0-861916dbeaeb"
        },
        "item": {
          "id": "d8059430-f552-4ee0-a5dd-170e9e27dd56",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05cfcec7-9203-46d4-aa0b-1617f0557e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1231,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f477ef-12fe-447e-b3d7-2ba3462dcf30",
        "cursor": {
          "ref": "8f26d6ed-fae6-42d4-8df1-a17ba5758a7d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8afca622-40ef-4e9e-a66e-d0a7601bd862"
        },
        "item": {
          "id": "a5f477ef-12fe-447e-b3d7-2ba3462dcf30",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1942401c-342e-4a0c-ac24-0c6c980f2c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1149,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b46d38-a93e-4ccd-8f1c-c5b2a9cf2ca6",
        "cursor": {
          "ref": "d2c212a2-2a36-41e3-901e-0a387eb4bbf0",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "586ce8e4-a58b-4190-90c7-2e2a0f069850"
        },
        "item": {
          "id": "88b46d38-a93e-4ccd-8f1c-c5b2a9cf2ca6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6f4c3170-f093-4482-9758-03701b1a2d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208f4393-ec28-4ec7-b8a1-b3e4f822d330",
        "cursor": {
          "ref": "c5fd2287-6df9-47f6-a506-e3b3251f8eca",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cce2bd32-2e56-446a-9ee4-980ee9d6eb64"
        },
        "item": {
          "id": "208f4393-ec28-4ec7-b8a1-b3e4f822d330",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5f6f995f-8e82-415c-bcb0-4f60ed64f7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb8f068-6664-4bb5-b655-185bbe1ac623",
        "cursor": {
          "ref": "2463b330-7245-401b-b711-668aa25f9e88",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "86b7436b-612b-4d79-804b-ec02db7f862c"
        },
        "item": {
          "id": "0cb8f068-6664-4bb5-b655-185bbe1ac623",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "291a83fe-9421-4b4c-876d-da9d93182582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e52d65-6464-402f-94dc-fae06760cd8b",
        "cursor": {
          "ref": "9f726a96-1000-4fb7-91c6-e5e1d2658c8a",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5e28115d-e58e-456d-9a65-68ef21de9b00"
        },
        "item": {
          "id": "79e52d65-6464-402f-94dc-fae06760cd8b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e1319d5f-8e05-4a03-bac1-9bcb162cc393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9eb4a3-abba-4404-bf58-9c33544390f4",
        "cursor": {
          "ref": "f0de4125-d336-41a0-90d6-8c480e001140",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c4b17968-9652-43e2-a6aa-a464ed5518d9"
        },
        "item": {
          "id": "7d9eb4a3-abba-4404-bf58-9c33544390f4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b1b5df15-b5f9-4e9c-a791-95d4e53409ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3503473f-05c7-407a-af20-fd5525ba3f88",
        "cursor": {
          "ref": "27c5fb5e-3da8-46a3-955b-4fb611c015e8",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "70c34e1e-3630-42c2-82d0-dedca9ca927e"
        },
        "item": {
          "id": "3503473f-05c7-407a-af20-fd5525ba3f88",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8d9828eb-12f1-4d33-8b45-51dd33de5f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee58ef-5c1d-4f1a-b734-e261ad4b5eca",
        "cursor": {
          "ref": "c93791be-f7a3-425f-bb11-15a13a91c26d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f72d7184-f8b5-40e9-b089-5779034c4cfc"
        },
        "item": {
          "id": "3bee58ef-5c1d-4f1a-b734-e261ad4b5eca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "173108f9-0dad-4132-b0ee-31ca23d77612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c93d74-19c6-444e-bbb1-dd88aaf77709",
        "cursor": {
          "ref": "17451e70-1c7f-4fb0-98b1-dbf2a550e1b2",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6d084901-e0ea-49f8-ad28-3501a295a594"
        },
        "item": {
          "id": "a1c93d74-19c6-444e-bbb1-dd88aaf77709",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "60419d48-9096-4d7f-9922-1b3a6921ae06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83e82fb-5754-425a-b7e6-05e9f40b8e76",
        "cursor": {
          "ref": "9ecf0b72-9b78-40b8-8422-c8b5c8fa59e2",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "16eb0aea-2815-4a51-9eb5-a8c42e2d519e"
        },
        "item": {
          "id": "a83e82fb-5754-425a-b7e6-05e9f40b8e76",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9ff989f5-9307-45f1-9936-298160de26f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f28347-6089-4cd0-97fd-11d8cfccee9b",
        "cursor": {
          "ref": "dfbc02b3-9e6d-4db4-8f19-c8b9a0cd1521",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d9b091e2-30c6-4237-a6d3-9afa0ada497f"
        },
        "item": {
          "id": "b2f28347-6089-4cd0-97fd-11d8cfccee9b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ce327cef-f036-4f1d-bbaf-b1c0fcab8a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a415f9d2-ab81-48d3-a987-ec570b1ff8f3",
        "cursor": {
          "ref": "6539c905-6e78-400c-a86c-0d688ca48694",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1a5610f0-8d7f-4fe3-8388-b2fca0f6f954"
        },
        "item": {
          "id": "a415f9d2-ab81-48d3-a987-ec570b1ff8f3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2d5bed4c-e6e4-48f1-8646-3f826caaddda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aaa093-de8e-476a-bb53-64de4b3252b9",
        "cursor": {
          "ref": "5d16d05b-453d-43e8-8aa3-7504f4b39640",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f2d760b4-b833-49d9-8bd5-ab63475cc851"
        },
        "item": {
          "id": "69aaa093-de8e-476a-bb53-64de4b3252b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d0d4ac24-a135-443b-929d-5217927d72bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7c5965-b144-4746-95e7-4ca9003a0aac",
        "cursor": {
          "ref": "eb87465e-7ef5-49ab-ba54-2a5481024653",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f7427421-014b-4aaf-b79d-f14b3c036349"
        },
        "item": {
          "id": "0c7c5965-b144-4746-95e7-4ca9003a0aac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "deac9382-6ddd-4022-97eb-b8a087b33510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba1c3eb-aad7-44cd-912b-3f41469ddfba",
        "cursor": {
          "ref": "d4c22008-1bb6-4818-b3a6-989bb620a1f4",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7feeac8f-f479-4d81-8b6c-7293aa1637e3"
        },
        "item": {
          "id": "6ba1c3eb-aad7-44cd-912b-3f41469ddfba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c9c4ecea-02c1-4a05-9a86-c7dc89e1564d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e455b6a-6cce-4544-9a50-6b7dcda1b3c6",
        "cursor": {
          "ref": "e55f00ea-5a14-4de5-8e17-1e122296c54d",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "515392d3-7e28-412a-ad93-9c19a697d40d"
        },
        "item": {
          "id": "4e455b6a-6cce-4544-9a50-6b7dcda1b3c6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bde75899-14c2-46bd-b603-de5995c1f782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e15870-e4fa-44d0-b8d0-70fc0c44338e",
        "cursor": {
          "ref": "427648f8-1e15-400d-a618-76fc65c65bc3",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c93509ec-3747-4860-aad6-1d715f03bb3d"
        },
        "item": {
          "id": "e4e15870-e4fa-44d0-b8d0-70fc0c44338e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7b427390-0f12-48fb-8964-2eaafff7785c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbee93c7-03be-46bc-b27f-86c243f87637",
        "cursor": {
          "ref": "cf605642-190f-4036-b347-77e5144fde57",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e228e0d2-a688-4027-8d66-2d3d74aefd51"
        },
        "item": {
          "id": "bbee93c7-03be-46bc-b27f-86c243f87637",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "68230b4d-dd03-4a43-9473-3a21d70bdc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc37bde2-1fad-4137-b29b-22de79cdf84a",
        "cursor": {
          "ref": "f1c36de6-4fe4-40e4-972c-7f549e88c7fd",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e84a0abb-1187-495b-b70d-95cee6802a2f"
        },
        "item": {
          "id": "bc37bde2-1fad-4137-b29b-22de79cdf84a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "471076fb-0c97-43f7-97b1-d241cbc9403d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0d427-109b-4cc2-bfd5-77ccbb1480d9",
        "cursor": {
          "ref": "80a882c5-926f-4595-bf9b-b0f5886641a3",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a177b820-9aa8-4b3d-b444-54c9098671c4"
        },
        "item": {
          "id": "39a0d427-109b-4cc2-bfd5-77ccbb1480d9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7b2de745-9fdc-41fa-bc6b-3d19e6465cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c01e0d3-cad9-4427-91a2-1a06e7597e72",
        "cursor": {
          "ref": "4d360605-92bc-4868-b52a-70fabd3dbdac",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "68276463-4d49-492a-8497-c72e50cc8fb4"
        },
        "item": {
          "id": "7c01e0d3-cad9-4427-91a2-1a06e7597e72",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ebfe6957-0700-4ae1-ac93-d6c823002974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b1a052-3789-461d-bf55-ef91e7ccb9c2",
        "cursor": {
          "ref": "6749a5ba-4537-4527-b280-5953f4b38f0c",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ffaa5735-26c2-448c-a06b-c71618c4a3d3"
        },
        "item": {
          "id": "f2b1a052-3789-461d-bf55-ef91e7ccb9c2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b041044d-cf09-4a35-87b3-62a6afe5aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416f46dc-46cf-4254-a68b-41608acbb87b",
        "cursor": {
          "ref": "c752f0a9-6695-4483-a4ad-bd21b081f088",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5b2b4b83-54ab-4db2-8abf-10bfd5b70b9c"
        },
        "item": {
          "id": "416f46dc-46cf-4254-a68b-41608acbb87b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6db4a403-1666-44ed-bab8-5a0de9e09636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624f3c88-6590-4d8a-b038-620b254a08e8",
        "cursor": {
          "ref": "4921a989-c130-4b2f-b2ba-96b36aa6c711",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c344a7cb-f709-45e2-9d03-343f9d8e7a52"
        },
        "item": {
          "id": "624f3c88-6590-4d8a-b038-620b254a08e8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "75701b4d-de51-421a-8ec0-d1929a03e4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c2192a-1212-4184-9940-d44c16ab3327",
        "cursor": {
          "ref": "f49bf692-3371-402f-afa2-2a1eb77d96da",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f35e86c-6be6-4523-b3e9-d671f4dfdb10"
        },
        "item": {
          "id": "22c2192a-1212-4184-9940-d44c16ab3327",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b7915f32-b1aa-4420-b8a1-320a97a95c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1768004-3c05-4db5-b0a0-48c1cbd1c201",
        "cursor": {
          "ref": "7a224c66-08e1-4ea5-945b-057a09983a31",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3217543c-4bc3-4c6e-8860-deeab38bc0fc"
        },
        "item": {
          "id": "a1768004-3c05-4db5-b0a0-48c1cbd1c201",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0fd8196c-f0ac-47fa-b517-e5ebf3b1ee82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1020,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee9a192-d0c2-4f92-8350-1aacf78d87c8",
        "cursor": {
          "ref": "bda35818-ff81-4009-8b56-877086ee8610",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1b5ecb75-25ec-4972-9a30-d0a0ac7d7137"
        },
        "item": {
          "id": "3ee9a192-d0c2-4f92-8350-1aacf78d87c8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d2812eea-6b95-4cf3-be6b-6001ca9d7cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf137cb-4374-42f0-b159-9b614fdf8db3",
        "cursor": {
          "ref": "f8f54fee-72ef-4df8-9665-6a8cbab545ac",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cf3d83fe-9c95-456e-9896-c7d5497e7503"
        },
        "item": {
          "id": "5bf137cb-4374-42f0-b159-9b614fdf8db3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "88f55a2a-f64e-4fc3-af37-73b8fc85f49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fef7f9-787f-434d-ad33-0591c9c0f4c9",
        "cursor": {
          "ref": "5b11d53d-0c21-450e-a315-d19d12e7d897",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "09f8350b-2b82-431e-81d1-620997a4cc19"
        },
        "item": {
          "id": "c6fef7f9-787f-434d-ad33-0591c9c0f4c9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "db55157e-80f7-4ae0-89bc-8d349343e0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f71c6d-6c26-4e1d-9912-ecdfe3237875",
        "cursor": {
          "ref": "738be173-3e14-4db4-9f6c-39f6cbe47f55",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "62c87025-e3c8-4fb3-8fbc-9f8b99d99820"
        },
        "item": {
          "id": "43f71c6d-6c26-4e1d-9912-ecdfe3237875",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9e28bf57-5b20-4518-8e0d-a5f9df3bc79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b535802-69fb-45c2-94ef-eee4cd849a4a",
        "cursor": {
          "ref": "8c95fa91-806c-4e4a-af3a-687faa73afb4",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "38d04d9d-f5af-434a-8a8b-adf26f1f7631"
        },
        "item": {
          "id": "2b535802-69fb-45c2-94ef-eee4cd849a4a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3a9ec279-4464-490d-b262-bd03af39ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca3328b-f92f-47c3-8609-3b2c270dd8dc",
        "cursor": {
          "ref": "bf5be379-52cd-4548-bd5e-a8e4c03c390c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "993df81e-b898-437a-995e-d5ad077b3c70"
        },
        "item": {
          "id": "9ca3328b-f92f-47c3-8609-3b2c270dd8dc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9b02791a-be86-4a3a-bdfd-cf09cc539eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838b225d-4045-45df-8421-adbdb59a5700",
        "cursor": {
          "ref": "8c001456-df97-4aec-a32f-ad63cad393f7",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "469abd7f-03ce-4ebf-bf0d-877a36c7909d"
        },
        "item": {
          "id": "838b225d-4045-45df-8421-adbdb59a5700",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "20e9b6fa-f5ea-4a0f-aeeb-1682d96a3c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f31696-c453-4781-8625-ee1dbddf4da5",
        "cursor": {
          "ref": "e6047c07-7bb0-4382-8e87-2d995cb1626a",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4ca1c794-2e1c-4876-a303-714cee799e0b"
        },
        "item": {
          "id": "18f31696-c453-4781-8625-ee1dbddf4da5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "82c0dfe5-9cbe-4c50-969b-8fdf0b258ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9304dd9b-9aa3-46d7-97a0-d77aa721ecb5",
        "cursor": {
          "ref": "8757d907-aa37-4664-974e-6733f5518615",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "80011dde-739b-47bc-aba6-14bd5bf1e802"
        },
        "item": {
          "id": "9304dd9b-9aa3-46d7-97a0-d77aa721ecb5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "671f29f3-182c-4164-9575-3667512fef87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d784a159-1c3f-4212-8132-d7a82b88ed5b",
        "cursor": {
          "ref": "a2d89f9c-631f-462d-a715-16446e7d5b43",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6cd738a8-9f8e-4c29-ad0d-7fd5c151b17a"
        },
        "item": {
          "id": "d784a159-1c3f-4212-8132-d7a82b88ed5b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0f63ab03-9308-465f-bdd4-e58b10a68b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd942a76-e70e-4884-8d50-61fc6879d1f1",
        "cursor": {
          "ref": "dd04ba2e-61b2-444e-a626-834440d81433",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3c399d83-123a-44ec-a0e4-1fc3794a23d3"
        },
        "item": {
          "id": "cd942a76-e70e-4884-8d50-61fc6879d1f1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2a2d65b7-af2f-49f1-bb40-415efe3b82b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ae7040-57b0-4b63-9cf1-95baac2311b2",
        "cursor": {
          "ref": "a3fbff5b-fd61-4a1e-bc03-ac93df102432",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d14f008a-4fef-432d-bd4c-e0dde2101868"
        },
        "item": {
          "id": "10ae7040-57b0-4b63-9cf1-95baac2311b2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7562ff15-e9bb-49d7-9f74-9cdd6b5d5ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34949dd-ec7d-436b-b7b8-cb0abdb14520",
        "cursor": {
          "ref": "1a9926d6-12b4-4e3e-babc-bf549541c2b9",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "961f76d5-b582-4158-aa43-27e445de23e2"
        },
        "item": {
          "id": "c34949dd-ec7d-436b-b7b8-cb0abdb14520",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6f93a2c5-993a-4c5f-86f2-12e9ca4147ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f94258e-fdff-475c-8939-4e10623f25b0",
        "cursor": {
          "ref": "8ac63981-6447-471e-aaeb-e54929e88165",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d7272c5d-4582-465d-bceb-1302a0a2ee48"
        },
        "item": {
          "id": "2f94258e-fdff-475c-8939-4e10623f25b0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "80e49c17-712e-4aa8-8c78-4736ff118c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e4c695-37ef-427e-8249-073d97ff6cfa",
        "cursor": {
          "ref": "dcbf0aaf-104d-4803-8b05-ae44c6816917",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f5272d9b-57ba-4136-8dbf-ea4bdd5459a7"
        },
        "item": {
          "id": "a8e4c695-37ef-427e-8249-073d97ff6cfa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "01fb17cb-dc1d-40a8-8db8-62bc817b830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a64bf24-cf2a-40cf-bf71-1e45e4e38d42",
        "cursor": {
          "ref": "022bf7d8-150c-4f2c-a180-b080ab9c5c52",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "896d0fda-b119-4e6a-9339-15a3091270bd"
        },
        "item": {
          "id": "6a64bf24-cf2a-40cf-bf71-1e45e4e38d42",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fc7047d8-0be4-4963-884d-d1d4dd543cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d618a19b-8d7d-4987-82c8-9778892b95d8",
        "cursor": {
          "ref": "937836be-d688-4a69-8276-fcae5481043a",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "543548ee-bdb6-4a3d-b8e3-7c9b1c63cf5c"
        },
        "item": {
          "id": "d618a19b-8d7d-4987-82c8-9778892b95d8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "84449a56-67f1-46ff-9a6b-241b97a4ff25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015351c6-f547-4a37-8983-e6b2faef01a0",
        "cursor": {
          "ref": "60b5ac50-8a8a-4136-a3af-2f9b2b300695",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "23b6452d-1ac9-4097-9858-fba42bb171d0"
        },
        "item": {
          "id": "015351c6-f547-4a37-8983-e6b2faef01a0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ee4e755b-ae0f-4fd4-8772-b36ab01d2912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d4696d-f646-456f-8096-0f7bba827f78",
        "cursor": {
          "ref": "ab324195-516d-430d-a88e-e47a9ce5484b",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fa7db880-64f3-418d-be8a-5565a8aa2318"
        },
        "item": {
          "id": "91d4696d-f646-456f-8096-0f7bba827f78",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "07b30526-07bc-4ec6-a82b-d56ad1db03a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ac74b7-5548-4a98-ae73-c4e95b3cdaa1",
        "cursor": {
          "ref": "b6d700f5-8869-41c3-bd1d-f0c18572776a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "623bcf6d-0ede-4134-a4cb-9da1c08124e4"
        },
        "item": {
          "id": "73ac74b7-5548-4a98-ae73-c4e95b3cdaa1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "77d66686-72f3-4796-b584-471fd3c87d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fa0040-b4fa-4af1-9de5-c5744afdb4dd",
        "cursor": {
          "ref": "521cd4ab-a9da-422a-aa47-39d35b2e44c4",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0f22078e-68fa-48db-9c98-5a282aef5fd5"
        },
        "item": {
          "id": "19fa0040-b4fa-4af1-9de5-c5744afdb4dd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d549b341-78b0-4171-91ea-213420fb1e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1019,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332fbc17-8dfc-46e5-96f2-39ade45f1d66",
        "cursor": {
          "ref": "d5cfb45d-702b-4f57-8c9a-3162e1e22277",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b77dfe92-526a-4b88-9d5c-0aa54e87598b"
        },
        "item": {
          "id": "332fbc17-8dfc-46e5-96f2-39ade45f1d66",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0155c68d-06c2-4f63-9f89-a56821768067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c5d643-5f12-4784-ae73-10dd5746e96f",
        "cursor": {
          "ref": "fd0660e1-3e5e-4d0f-9055-f422290805fd",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e47a247c-46b3-4019-a71e-9407680c0396"
        },
        "item": {
          "id": "f0c5d643-5f12-4784-ae73-10dd5746e96f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6e34dbe2-97d2-4ca8-af8e-aeea8e34d37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab80fa1-0052-4f39-b2b7-14f6d3831d49",
        "cursor": {
          "ref": "579f3c01-45a8-42ef-a511-fc2a26abac6f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6d2a7e7e-d1de-41d0-95ae-1ffb7bc9704a"
        },
        "item": {
          "id": "cab80fa1-0052-4f39-b2b7-14f6d3831d49",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8b6f81b3-fc08-414c-b34b-9621fd8d09cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1e1148-a9cd-4d29-96ef-8efd3bded54f",
        "cursor": {
          "ref": "a341e84e-73b2-40f1-98ea-75605b4a81ad",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "53ca3ea1-18a9-4751-9f4b-4a42d407b014"
        },
        "item": {
          "id": "ed1e1148-a9cd-4d29-96ef-8efd3bded54f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc7184e1-d148-4661-af8d-69fcb926b014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e03f7c-ee5f-4407-8b14-4e596cbe5272",
        "cursor": {
          "ref": "c1358c84-7f6f-4b34-b33e-a7d3086ecfeb",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "45348dd3-e3b7-4ff8-ba0a-006464254180"
        },
        "item": {
          "id": "24e03f7c-ee5f-4407-8b14-4e596cbe5272",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "efce37d0-5747-474a-a010-38f91a3707a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39979542-8009-4ab1-be7e-2ed7da0c47fe",
        "cursor": {
          "ref": "e9b751a6-2763-4e20-886a-e3080ba41fec",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "974ec3ff-a532-4b6d-aeac-e201aa335161"
        },
        "item": {
          "id": "39979542-8009-4ab1-be7e-2ed7da0c47fe",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5c5b4206-8c20-48f7-bc40-e6bb142f9bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75db2db-8251-41a6-9048-0f30ac47a696",
        "cursor": {
          "ref": "377165d8-a0a0-4804-8238-1517ee992b3d",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a6b83d4b-cd94-4e19-8145-dd01cf398e79"
        },
        "item": {
          "id": "b75db2db-8251-41a6-9048-0f30ac47a696",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1d6a2176-74c1-4770-884e-d248ebf64a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544f4eb5-2334-43a4-8c4b-7bd09cbb36a6",
        "cursor": {
          "ref": "e6c97009-a1b2-4c73-b332-29f4c97ca00a",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e344ce7d-642c-40ad-bb4a-e7ab09a48c0d"
        },
        "item": {
          "id": "544f4eb5-2334-43a4-8c4b-7bd09cbb36a6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "edd9c4e5-5591-499d-94ea-e312988775f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9ce90-d82e-4eec-b032-1b3375ada3af",
        "cursor": {
          "ref": "0316e19b-0568-48fb-8d13-494c6de3e981",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "06ab1483-8599-4e2e-9693-64beb265b181"
        },
        "item": {
          "id": "82c9ce90-d82e-4eec-b032-1b3375ada3af",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3da2a905-007a-4329-97fe-556fe52bdffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9701cde7-e187-4e5c-8ce3-b631a10c07fb",
        "cursor": {
          "ref": "1b3ce3de-b74c-48b2-9406-ab1f9bdd3434",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4b283db9-aa62-49e3-b303-5d5043f7daa4"
        },
        "item": {
          "id": "9701cde7-e187-4e5c-8ce3-b631a10c07fb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f5beceb4-fb8b-44bb-9c86-5b91d498786c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba50975-91aa-4f54-afe0-2584337a3b85",
        "cursor": {
          "ref": "b69062a1-583e-43b7-901f-21cd6ef0ffee",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0cf23602-045a-43fa-880f-fb628383d7fa"
        },
        "item": {
          "id": "cba50975-91aa-4f54-afe0-2584337a3b85",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "95d0ab32-d26d-40ed-bcfd-5c91dab667bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2f9745-67e3-463b-a6f5-5bdcad58b100",
        "cursor": {
          "ref": "6e26ce38-cd33-4d14-926e-2afa9fb7f79a",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "48311403-f148-47ed-81ae-b62e12b51ea8"
        },
        "item": {
          "id": "4d2f9745-67e3-463b-a6f5-5bdcad58b100",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b7707bd4-c1cd-42c3-b8d6-d1700b0f484e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71126ba8-dafa-415a-baef-f159ab6b1c1a",
        "cursor": {
          "ref": "46182a5f-fc20-4b94-aa39-d9875cebd2be",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5dbf3941-d676-4de4-95da-e65c7568bfb5"
        },
        "item": {
          "id": "71126ba8-dafa-415a-baef-f159ab6b1c1a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a811579b-4d52-42ae-a14d-1a34846a4541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b23ae5b-d6c3-4009-924d-2bd58a6a8b7c",
        "cursor": {
          "ref": "41cdd4ab-6da8-49fa-9dc3-483b6f03f9bb",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2e6997c8-d1c5-4d6b-a71d-c093846ae3b0"
        },
        "item": {
          "id": "7b23ae5b-d6c3-4009-924d-2bd58a6a8b7c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "30af39fc-0bdc-4289-8fd7-5bd420454114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aef0dd2-53de-4a5c-a899-2f0b1258dc73",
        "cursor": {
          "ref": "d6d255e1-93c9-4ec9-bb16-a2ccaa807879",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "74a15dd2-f0a9-4234-a042-7530fdb1396f"
        },
        "item": {
          "id": "2aef0dd2-53de-4a5c-a899-2f0b1258dc73",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "95f128f6-20ea-421d-99ee-f51dc3c8a686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0033ade-cc7b-427c-bfc9-7c5c9d9aa58d",
        "cursor": {
          "ref": "3dce006f-0f79-489f-8eaa-f71d771463e5",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9474a382-ce6c-466d-b51e-9becc912fc41"
        },
        "item": {
          "id": "e0033ade-cc7b-427c-bfc9-7c5c9d9aa58d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0c1e7e65-7956-4205-8d2c-faf37e044464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a7d67d-2d73-48c5-83c5-72ed1c4215c4",
        "cursor": {
          "ref": "5f272ca2-f1e1-431c-92ba-0d53a4d2cbab",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "deac7643-e85f-4cfb-bda8-90ada31d6216"
        },
        "item": {
          "id": "53a7d67d-2d73-48c5-83c5-72ed1c4215c4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e9243b5e-755b-4d78-b307-7f7cbab97d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c76a50-108d-4569-ae0f-71eacb57b114",
        "cursor": {
          "ref": "2484b0b9-0280-4dfc-a5e9-cb4b7901efff",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5b7e6605-44ba-4045-878e-5e3ae7536d7f"
        },
        "item": {
          "id": "e6c76a50-108d-4569-ae0f-71eacb57b114",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4048bbe9-4c8c-4807-b85b-a7f25496d015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873b735d-a143-408e-9daf-56d5da4b0e22",
        "cursor": {
          "ref": "1c8cdf97-e05a-4aec-ad00-77d7852b8c51",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "76c65613-d437-4aae-8e84-9b81b1b8d0a9"
        },
        "item": {
          "id": "873b735d-a143-408e-9daf-56d5da4b0e22",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "abba5d55-0c3c-4aa9-aa67-76d81adea8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731f702b-670d-4054-a723-732bfd7c4728",
        "cursor": {
          "ref": "699de8f2-308c-4b72-b8c8-be384a59c8e1",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ba5888bf-4230-4b9a-8a48-f59545ab9c9c"
        },
        "item": {
          "id": "731f702b-670d-4054-a723-732bfd7c4728",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "95e4f792-f5b2-4a16-aa69-2b8969f2278f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad61592-c19f-40a7-a963-e7996293be07",
        "cursor": {
          "ref": "b1281077-efdd-45dc-a41b-a101b30f41b4",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "31c126a4-99e3-4599-82f4-1320142bcf35"
        },
        "item": {
          "id": "4ad61592-c19f-40a7-a963-e7996293be07",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4ee31ce1-e422-4b52-a218-9b3cbb6b2d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2725751e-e5bd-40a1-8022-2ebbd4bb46e2",
        "cursor": {
          "ref": "41467e3c-9caa-49f2-bae3-68ed056e623c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "77b42050-0db2-4fd7-a372-3e5a9479b93e"
        },
        "item": {
          "id": "2725751e-e5bd-40a1-8022-2ebbd4bb46e2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6b710d7e-ed4c-4b30-a306-4b83fda00723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83140b71-eb3b-4571-bc17-652d72a147e1",
        "cursor": {
          "ref": "11ba4dff-74fb-4a6d-8749-f08896e30df2",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f70b5fc9-12cb-40a8-a839-1e1509c5f276"
        },
        "item": {
          "id": "83140b71-eb3b-4571-bc17-652d72a147e1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4b910ee6-7246-4575-97d9-9317916528c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1806cd6e-7945-47ca-8c8f-64c0c79e6c99",
        "cursor": {
          "ref": "bf5e70c3-0a8f-433f-9de4-b35a54a72cf4",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5ff096e1-7031-4299-82b3-f94db06e1ddf"
        },
        "item": {
          "id": "1806cd6e-7945-47ca-8c8f-64c0c79e6c99",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cf37de3e-521b-4099-a058-06d96ee7cd55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b99c216-207f-45d6-ac00-5f6f379a8083",
        "cursor": {
          "ref": "3a517b61-e33b-4122-8b99-332170a0bff4",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2ac48022-5cca-45e6-adef-3498c31d4182"
        },
        "item": {
          "id": "9b99c216-207f-45d6-ac00-5f6f379a8083",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c5157dd7-04db-4978-8600-db416e92abea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 477,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224c9661-4ab9-40fb-9ef5-fcd9eff82ecb",
        "cursor": {
          "ref": "5479c5de-2e50-47d8-9834-d2c10d5e6d24",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b83d94c2-288e-4e83-b5ec-1d1652efc9d3"
        },
        "item": {
          "id": "224c9661-4ab9-40fb-9ef5-fcd9eff82ecb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "23802808-b9e3-4de9-b467-03be9aa931d1",
          "status": "OK",
          "code": 200,
          "responseTime": 675,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b3b29e-e803-417a-92f9-0425346aa1bf",
        "cursor": {
          "ref": "882dbfab-5012-49e1-be6f-a1a260011a56",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f1e6f41d-c7da-46af-9d5e-7dcee276a107"
        },
        "item": {
          "id": "69b3b29e-e803-417a-92f9-0425346aa1bf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7ebfe150-b3d1-4c11-81ff-380e9d61b4e7",
          "status": "OK",
          "code": 200,
          "responseTime": 1995,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eb027c-60db-44a4-83ee-d015c99923bf",
        "cursor": {
          "ref": "0a739d8e-fbbe-488e-a3ed-21268de8746b",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d9f50112-b446-4576-b54a-ce4c5234e6f7"
        },
        "item": {
          "id": "66eb027c-60db-44a4-83ee-d015c99923bf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ad2333fb-0231-4935-b79d-a19f92648515",
          "status": "OK",
          "code": 200,
          "responseTime": 2284,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd687aa-cdf2-445f-9d57-259169d089a9",
        "cursor": {
          "ref": "6dfb047e-f8f8-4e33-a28c-d1dfc93e43af",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1b1e8dc4-6e80-4b25-9cc4-7346ed515909"
        },
        "item": {
          "id": "4cd687aa-cdf2-445f-9d57-259169d089a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "56f971af-8bb8-478a-84fd-9faf984a7ab2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd687aa-cdf2-445f-9d57-259169d089a9",
        "cursor": {
          "ref": "6dfb047e-f8f8-4e33-a28c-d1dfc93e43af",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1b1e8dc4-6e80-4b25-9cc4-7346ed515909"
        },
        "item": {
          "id": "4cd687aa-cdf2-445f-9d57-259169d089a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "56f971af-8bb8-478a-84fd-9faf984a7ab2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd687aa-cdf2-445f-9d57-259169d089a9",
        "cursor": {
          "ref": "6dfb047e-f8f8-4e33-a28c-d1dfc93e43af",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1b1e8dc4-6e80-4b25-9cc4-7346ed515909"
        },
        "item": {
          "id": "4cd687aa-cdf2-445f-9d57-259169d089a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "56f971af-8bb8-478a-84fd-9faf984a7ab2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf16a271-72e7-4412-9b84-d6f99ef21276",
        "cursor": {
          "ref": "5c6b6112-c3fd-4094-81cc-0f944aae09f5",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fa7877ec-7b0b-4fdf-a9f9-b446425420eb"
        },
        "item": {
          "id": "cf16a271-72e7-4412-9b84-d6f99ef21276",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6b3d7122-c3e9-4287-8737-aa63abd4c915",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 419,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a86de1-3584-46cd-ba26-e38918da9f6a",
        "cursor": {
          "ref": "0abccf7e-dc00-4fd2-bc79-6ddc089d39c7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33bc5dd7-2fe2-4f72-b62b-d497bd8e0506"
        },
        "item": {
          "id": "f8a86de1-3584-46cd-ba26-e38918da9f6a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3bbd470a-1ff6-4b71-b2e2-3a7f8602e663",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a86de1-3584-46cd-ba26-e38918da9f6a",
        "cursor": {
          "ref": "0abccf7e-dc00-4fd2-bc79-6ddc089d39c7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33bc5dd7-2fe2-4f72-b62b-d497bd8e0506"
        },
        "item": {
          "id": "f8a86de1-3584-46cd-ba26-e38918da9f6a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3bbd470a-1ff6-4b71-b2e2-3a7f8602e663",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19271071-2327-46ae-8acd-c5a8f38dac5d",
        "cursor": {
          "ref": "0d980063-2be5-4f98-913f-610885f1eebd",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9fe5e31c-7f08-4a0b-aa5c-925a37a6e9ba"
        },
        "item": {
          "id": "19271071-2327-46ae-8acd-c5a8f38dac5d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "8984d3f8-9c1f-491e-bd84-c2a7d8fbc496",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 631,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c41028c-b7ab-4d22-90f3-c34ab8598eb0",
        "cursor": {
          "ref": "f17e675d-1d39-4ac2-bede-8e367accb821",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b76a3e20-7bbf-4f66-8cfe-95da24886e7e"
        },
        "item": {
          "id": "4c41028c-b7ab-4d22-90f3-c34ab8598eb0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4114d934-a4a5-4ef6-a788-74fd85652066",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c41028c-b7ab-4d22-90f3-c34ab8598eb0",
        "cursor": {
          "ref": "f17e675d-1d39-4ac2-bede-8e367accb821",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b76a3e20-7bbf-4f66-8cfe-95da24886e7e"
        },
        "item": {
          "id": "4c41028c-b7ab-4d22-90f3-c34ab8598eb0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4114d934-a4a5-4ef6-a788-74fd85652066",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33c7953-87b7-49e9-a07d-33a6cfa9e10e",
        "cursor": {
          "ref": "31d938d1-3bed-416c-9565-be470894001e",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fe5f93c4-0769-453f-9e65-78ada08ffc70"
        },
        "item": {
          "id": "f33c7953-87b7-49e9-a07d-33a6cfa9e10e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3f68e70c-1cb7-4630-af52-ed2b1a4723c7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 679,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}