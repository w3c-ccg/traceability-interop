{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ba71e11e-8501-4125-8cde-4c2502c27023",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e4e3dce7-02e6-4e03-ac3f-edd3555b86c2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92099c56-f514-40f3-a403-22a43f3ffa5d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "082f8561-6dff-4151-8746-0cdb982bfd8e"
                }
              }
            ]
          },
          {
            "id": "aaec9b98-f284-4aca-a1cd-e9ed3d20f6b7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bdb5575-00cf-4d1a-975d-770d6f12b959",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f89d451f-2802-4f59-94de-470c9898a3d8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "61f67bb7-81a4-4e90-81a9-4eef46674b9e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "01b0c432-4d3c-46fe-80df-66b6fabfb98b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa85562a-247b-42c0-bd41-439eaee1437c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b935f104-4f63-48bd-b1ec-7fb1613a9bd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c750ec73-4d15-4b47-bfc4-5311ae29f669"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52a5b699-10d6-4ab6-8fe9-234bcdb15fd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0903b52-d8a1-49b8-86a3-862922cf759e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8247e35b-3e72-4a22-afc1-75b0e10eacd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b5aaa91-c2e8-4932-8d04-ea9134a3209f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d49e472c-a4dc-4d62-95f6-47562ae84abc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4792caac-ab9c-4ea1-8d73-6bfa23d76cbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "372dbf5d-71f5-455c-a4df-e2e15da92f67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac0685c8-75fe-4010-b3ec-9ba2929caf83"
            }
          }
        ]
      },
      {
        "id": "b0923d39-e0cc-4264-8923-2c3c823d9ffb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bac7644b-910f-4d21-a206-055d17ce7cef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "419429fc-5214-41f2-8485-5e7de9730fea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c547ff5d-58e0-4978-bf83-7000c927cbc9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d603250-c709-48a1-9310-cdb06a60bd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f10effa6-7c89-45d7-8d23-e43cf500eeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8227beed-89f4-4ee4-bfce-7abaa8490058",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af85c41d-9c4c-4ba8-98e1-ac94ebdcd595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3098e23-92df-443f-9bdc-e8bb844ffa44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc291e76-0e60-48c2-abb4-896494f5e9b4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496a843b-9403-4f72-8adb-144d2331e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2eed8877-5c98-4851-8c65-0e0b590af8e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a63d6d5b-007a-46e1-b40f-d2e5bba80437",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9bd764e6-9ad9-4989-bf77-58c6d0a1c3ab",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e43c711-f454-40c2-904b-110199b865cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcfc36c9-b07e-447e-8381-731296e18c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f382a8e0-04dd-425e-8c8a-69f7e6a38f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ecda14-cc4e-4388-9bc3-e1a3aaa0902e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e9c656-34cb-4cc3-b10e-ca4847766a24",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2a1bed-f786-46c1-b539-24f93afe394a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fac6137b-9374-4881-8c07-3c17e26d77b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629f8052-dada-4768-aca5-9799bc69578b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "04fdb16d-c961-41fe-9797-5cc7898cbcf2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "327eca92-446d-4011-882b-035507088237",
            "name": "Positive Testing",
            "item": [
              {
                "id": "892a7fda-d4b8-40c0-a473-8822aad83767",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ac3800b-7980-42f5-8b46-3b839bf8d884",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0c315a16-2477-4f8c-8615-12196df11482"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "673e4b73-1e5b-4412-9dda-9d6ac392f896",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "051ca18d-de5c-450d-a78f-10b853ff21aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67ccf3db-21de-4892-a5f2-e50527b5ef8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80a4b5ec-612e-4fcb-ab45-2d84d1046163"
            }
          }
        ]
      },
      {
        "id": "9b11e163-6883-4e3a-bd0e-93deeb33f188",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6f92dd05-cb03-4b3f-9d24-0229c0c9cd24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84e1ec19-7d08-4e34-8b53-8fd2fc965c2b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b28d95de-6b49-4b11-a8cf-8a7827e3769a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6ab6d1-40b8-4ec7-b201-6cd97dbbac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b34d7e-81a4-4a56-af47-66db1d7ba795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175139b5-5fca-42e4-9642-3bdb6dfdf3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbd6ac5b-fbba-4d07-afe7-ee4eb6aacfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f43b45-9db6-4613-9aae-954d58f51b7b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa6282f-bf11-4c19-9499-15762e1893d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b12811-987a-4bf4-94a9-8417ff5c04cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674e3826-8859-4f34-8c63-3765dabab436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dad13285-98be-4fc5-a0fc-5c66391f844e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ce3eaf-fa58-4fbd-98ac-e670562e9ecd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076c184c-0887-4558-9e6c-23d81580dafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d1b795-17ad-45c6-92a1-85bbb40ab7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaf2766-24d3-4ec9-bd74-58d4d4a20a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0046691e-fb61-4fe0-bab5-7ca2bd6b71ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac74039-010a-4687-b282-f884b2a10034",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68193b80-8627-4124-9cd5-5ca4dea421de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180a2d2f-0726-427f-928e-8e524717d2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48c4187-317c-41d0-967d-8fbff93b6c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9716bb8-fff1-4a51-829b-99e0f8a9a288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3c0e72-ac11-4ab3-8606-85c9074f9737",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d109de-ff59-4105-af5f-4a8f5a4a35ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bbff0a-c834-4bb3-9c3d-f405861a5765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3829cd7-2a5e-4d8e-a671-218f731c193e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dea8fbd-0df2-485b-b908-6cfb684956c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68feff3-2d78-4ea5-971c-8ae46c4a0f14",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fc3fd2-9fef-425d-8866-7281b22aba4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fa35f9-3554-4853-bc5d-0aee7bfadb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f417bf4-39d6-47f4-b948-87b2e196f147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5daa2dd3-7cb1-4035-ab56-22c520b70e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ae9714-907a-4160-b5e8-8691083b3a13",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46b3533-7aaa-49cd-bc02-3e7d07cceda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fe7e4d-033a-44e7-9f34-a06de785d4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8885b4-b418-415e-a67d-5da48bfb1708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47337636-7465-4249-8715-009e51139e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e54c739-5499-49bf-ad8a-5e45c14e787e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6af1f1-94a7-457d-b6eb-cee936a0f410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef0abfa-69f4-489f-a22f-cc0c14470051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651060bc-9366-4aa2-9e06-ee6783cbab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa614770-19b9-400b-9fe0-00cce1d8b17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12387722-8e27-4447-a8be-92d027aadb27",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0865d8-c538-4d93-a04d-1c6f6f0f41f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9182bc-074d-4bf2-bb31-dc54184b4dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9217d13f-845a-4d71-85e0-d4c96e19ffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9182ce3a-2354-47f7-8a04-48b228678fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bc7129-76e4-4b44-8906-e6f7c5f67265",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b5fa79-5ffc-4b86-a686-60133918d8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63033c0-2f6f-4b5a-ae33-585477519015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87988c0a-2bfc-4afb-a053-db222807b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92e36c96-72fa-41c8-a94e-928cd7eac5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175ca252-22e8-483d-94e5-d6090be5418c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60eb863-ade5-4be8-89eb-32c013a26507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c06ccfe-3888-4602-8558-2e45de62fef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1915ec93-30d8-48c2-8201-312f51d894e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6a7d0e0-ae28-4f17-81f8-02c3045d5f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15c7c03-c8b5-4aff-b53f-50f2b5462795",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9eaf8e-3105-4f4c-8624-f45201f146fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da2a452-9050-4ec7-bb1b-74c723666d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba348b60-e9e7-4f4a-8820-6fe8c76181d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8473a481-7762-405d-a708-55ebcb4ef2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dd98c2-daaf-4f98-a88c-25dd4713c3f1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e48736-e8da-4413-9ad0-a63967a2bd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94edad5-2654-4629-8de3-c4f8df547dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1828d70-6fe4-4bbd-8a64-e809a5d7e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f1b7cbf-7f0d-4081-8518-a2f0d8b73ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e0e335-a511-4ba4-8218-8f2b15725058",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872624fd-21ab-4766-b09a-2847b921bae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1828beca-2337-4ee1-a019-ea22eb1ca74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55e55a3-c7cb-4570-b77c-99ca639206dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9ae48df-387e-4510-b948-8253b302ef51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46f1a62-12ae-45d4-94a8-05482d1973d3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e2a07a-b155-403c-b874-72bb3fe7191f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112bafc3-2f16-44b5-b6d8-95e1f7e56ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fb590b-b9e2-47b4-b345-5513a4f0042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8e29745-d155-4d49-a690-77d648b40922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdd0661-29b9-4251-8822-58fb96d38701",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d7d078-e996-43f3-a6b0-76cc74da7091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9f94ef-71c3-4871-8882-e1bd7fab136f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ec92b4-ceb2-41df-9938-8c16dd3ca414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a40903a5-0eb2-484f-8c9e-60dc7c756769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f2b0b7-19d1-4fb7-b580-69197ed31bfc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa73c2c1-012f-4cb1-b742-6f36678410e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c0698c-2684-489f-aa86-9248f3559610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd74ce51-b13d-4ddd-881e-12f73b793bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5800f701-b188-4993-94bd-61f182d508f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4ce310-6002-45e0-814c-cae910b93a2e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5edaa87-b409-45c5-aed2-ebe30c85420d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e00696-e4b5-4316-85ff-1f7c48543411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ab4b07-9635-485b-a080-ab8a5ffe4535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "407fef4c-c51c-4f43-99d2-7fa39640654d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98646c8c-2d13-4271-87ac-de8d34b62f3b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c257382f-3a72-4f57-82b8-7e2da3847813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653ae989-ddaa-4c50-9cea-c679793772dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28901e95-a3b1-4691-a699-b66bcecc82a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8768c3e2-05bd-40d2-b2b7-92dca8b9d74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda86198-875d-4495-a201-52c30fbf5220",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e898c2-03c6-403e-b0d7-cb3a3e0685c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcda5d4-16b8-4192-813e-70ffe4df8fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3a253c-c0e1-407f-9749-1cebab0fbce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7dc7ab-727b-4ada-a6df-f542fe579dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28076182-5963-4fdc-9aed-184524cde563",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387c2818-9380-44d5-8723-1800344a275d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17509d70-a8af-47b5-8366-e0611d38b299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed0ac6e-df68-4829-b837-4cf251602901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6df3da-9153-4791-b694-0905610d0a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818aa21e-398e-4270-9884-16cba913a2cb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffba58f9-df9a-4b55-b64e-1cc5c5e6dca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3e048d-d151-46c0-b3f9-da14ec60608b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82befe37-1a12-4bd1-9691-f6720e34a434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7af9f31-0e3f-4c55-8fa2-d792333b1aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e0422a-75fe-47ad-869b-be90cb4f6217",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59a18e0-e2b7-4dcc-a746-b3abbe0b0972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeb6ea0-8292-424b-8db6-58a40d22d1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed434be7-2334-46b0-af77-4ba86443389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae4fef7-f57f-4df5-99fe-834625ce556f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5660718c-77f6-4882-93a9-318d2d63f200",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acd390e-0ac9-4bef-b928-3b029bbcdf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf91e8b2-bf11-4a8c-b560-0d9f7fbe2055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1299b3-4a81-4a0f-9346-42fc5887312a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6792ca9-720e-4167-b929-404c6cbddd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aaef22-b1a6-43e2-9776-675037793c47",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f9bfc0-0a60-423d-be61-6b946dc35bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9748bd31-d321-4954-bf62-58795ec318c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a640bc-29d5-4b95-9d38-8d08fb822eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44ade2d-072a-4658-8fcc-c46280114711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7411a486-894d-4093-ac84-51316b24b75c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11a22ac-4cd9-4e97-bb27-b2a5183bb23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e4d426-cc09-4389-aef2-6ee15e35c653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4207709-894f-4595-8c4a-584e782af484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "644a0e94-818b-490a-8507-58a45dd7671c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0a1567-e5c1-4279-9429-e8bae4bdeafd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2564d5a-2564-4d99-b525-f85a81a75703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b713e01d-b6e6-48bd-a0d2-6d7888732a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6ba15b-1edb-4937-aeb7-970bd5b23678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a2f972-b28c-41d6-ac4c-296e8131e159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131794d6-fa24-4977-8b4f-c7e16a14fdea",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ecd228-8ddf-42f9-9d1a-a7b21aa075ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4977355d-ba42-4d70-b11c-49fd80228ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfbd9e5-785e-4d4e-8a8f-6aa6da5692ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "812489e0-08d2-4415-b942-96275172dd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656a9aad-7540-4036-b0bf-95fbcb736fd7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64da6929-9d4b-484c-a8d4-0b5385146030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3613ecd-09c1-4bae-bd09-b08a0c301244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16937a2b-5462-4ccb-8d47-e7daa40131e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2184b498-730c-410e-b1e2-548db17e11a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc3b689-1b22-4c00-80c1-fb8c70eee69f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f42557-5ab7-43c6-ba8f-911a5416aa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771f7226-543b-46f5-b729-627f73f4bbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821aafe6-c16a-4c3f-867c-d61f769c9000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "14447542-1234-4682-8f36-83b7420687b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f21adf-4697-4558-b553-6d89bd7657fc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f5c804-09cb-4d7f-aefe-da1787fc74aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d05638d-0851-449f-99f5-e29047aab440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51639752-44c7-449b-820f-1e2ac31b5b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6c25ee-fc26-4e18-be6f-8ba0da2bc2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b988b8-05e1-4e8e-b046-d492be21f704",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c4f455-14c2-476b-9796-34c032c0a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acceb100-d44f-461d-b446-4e048119cf43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adfee60-0ccb-47b5-bf37-8a4d0430499b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6848e741-d79b-4544-a371-815f2483bf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0555534-f654-422a-9dab-d2de9ef07d84",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9467ab73-da46-498e-b2aa-c70ea51cc2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23116bdc-82d1-463d-92ee-644bc6dde5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc43a86-552b-4e22-b184-16a80fc5165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd5d727-af06-442b-be1b-5ec23dd812ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5bebe2-6e71-4542-8174-1acb7b7e9672",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa310f2-3fc3-4e2b-a6aa-578a01689b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626aa127-7964-40f1-aec1-aab8f35b3727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb937444-750b-47d4-a204-90cded8883eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "378464b1-4b8d-4825-99e4-c76a92fa3bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7d5519-2fe7-4ffd-a02b-2dee8c06bf83",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c19b674-e273-4616-b594-adaf8611c7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c89aa5a-3bad-4325-afd0-2f202a5c51ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd1ae53-f07d-4f8c-a9ee-b461c8d358ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "725b0ce3-aeaf-4471-8870-6aa75f88b5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94a2fd0-9cb4-4e32-a0d7-2582af86af6d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94597de-bd59-430a-b384-9b95f00b4137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c850c8d-51f8-497e-ac8d-c84da25846ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c19c3d9-8f0c-4724-b642-a956845575b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebabe421-15c2-4f7e-ad58-7e0a74364c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a73bee2-2858-4b13-9023-810ca3c4eec3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eb74b6-4bef-4c19-ab4e-ac7b7e79a6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd813214-53a9-4b3e-810f-82fb184c778a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751abef8-8756-4268-bdec-a386b68fec3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf783c7-2211-4916-aea4-3d870af8b6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2da618e-e506-47ae-a024-bb2c027e67a7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2968e9-33cc-4d23-98b4-29425bd60ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8491e4ef-358d-46e1-b822-aabb7c170e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f273b1b-d12b-46fd-bda6-e0c627744ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "400e7b93-f66e-4b00-9192-e74ebac60824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8e691e-250b-4163-b720-70da00c6515f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9f53ec-1806-436d-b4d2-6983a0f43f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb55066e-f654-4120-a117-43653e34e07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7889b794-acfd-4253-a1cf-477b325629cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6a3428-2c19-430b-b34b-b3cb854a2dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ba2eb7-2faa-47d9-8da7-0ec55c852b67",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc37ff8-69a0-432f-a8c3-7b232461ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7834093b-0233-470e-a447-30edf1b9ec03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2b22cb-1009-4fe7-a90f-fdfdd8c0ca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6d5cb2-b6d9-4a3d-836f-ffa2188a4cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d174ead-e02a-4c85-9d3d-291284268584",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dbf3a8-7a7b-4a01-8111-8d989777298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abcf05e-cf9f-4843-8439-e99c923e0d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76decfa8-3972-49fc-9975-f4ffa67d2e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aac5e0-3f1e-4069-bbbe-e9e930ffcdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f27b292-b695-43c3-96f7-b3fcdf8ac3cc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2f6442-2bb7-47a3-8b3a-2ed98e9df04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c4107c-14e5-49c0-9e8a-34423e050062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cd0bdc-c2ed-4ec3-b91d-033ff9fc5367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "87131b8e-b186-4572-bbe0-6284e02afdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba5aff1-3433-4388-8232-2fbe94322966",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3e9cd5-fd7f-4241-ac20-9b557ebdedb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cab1c9e-949b-4fc4-b33c-782b416cd5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4576df7-97f2-4769-b35f-00edc417b8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "23580387-3a77-4092-aa2f-92bbd95cce7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce46378-7361-4eb8-a099-6ac1c1d26ab4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726a54eb-ba34-4271-a5f8-f1750e07304d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0cf237-a7d8-49e2-ab98-77bae036f8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed13064-5882-48c6-ae34-9929107e9754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "36de147a-7a67-4133-b5e3-f21da29aee26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfe1c5b-5272-45b9-b50d-b933935671ab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e8a9af-cca9-440c-a391-321238e8581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81f7326-47c8-4b25-bd27-0fd6a55453fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea9f221-3caa-4643-b988-423fbec0780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5481c044-51a6-452f-aa09-0a4b6b869d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f17318-3e4a-45c1-9c3d-15b090b63449",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b130dcb5-2a9f-44fc-89a6-0b57809c5aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cea3b52-7466-4551-b6bc-1b8a6f778fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8544ef9e-018f-4c74-9cfe-f021b6026a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33a81059-2142-4c76-8a4a-56ccb16b314a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22683184-dfbc-4c3c-aad3-05bcc27cd343",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690ec43c-ae11-4097-ac8c-7facc9a0d84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250aa930-545f-4f63-840f-c60995294900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ef73c-3e05-4c88-b347-412990f0a5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9ab4a4-4136-4dc4-89c9-cf483c5ad019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b97f3f6-22d0-4054-8d00-b7df95bc7afa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15b6098-4ef1-4a4f-a204-a249897e284a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcd7389-6bc1-47fb-99f2-c28cc7c48d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b27f770-d2b4-41bf-843f-07f14c990d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "363d8c55-1b11-4ea7-a7b5-025717319359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b08a01-6ee6-4347-b466-70eb3b016288",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e3b6ee-0030-4535-a7ec-c3a88f036b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185cfe0e-1998-46ba-8518-1cb0f282aadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47df8d2b-2f35-43b5-aa7c-ca84f3c06dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f728726e-d0e4-4017-b323-c81ae4e2d7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd68cfb-5d7f-40a6-b78c-74408590b5c8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb103b2-7e00-48b4-8682-7440786a99b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbe3567-bdcb-4f1b-a5db-0b3d35db4d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed465e4e-7dee-4f6e-91e2-bb11e65fb2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6cb14f-31b4-46c5-9d28-bb1800899441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5718e665-6b4f-408d-83b5-6910b739aa5d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae350498-81bf-402c-acbd-1acd3d9d03bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c41814-7699-4f62-a373-996c8c2dd7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2287d453-797d-4c4e-b1d2-60d006eebb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebedc852-052c-42ed-930c-dd9f208b50eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca15eddf-fe3f-4b1d-a66f-c683b5a04918",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bbaff9-0ab8-472e-a076-af1b6453cbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897a1ad6-9b91-44ea-bc2b-12caea87cf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67b9c07-a084-4365-96c8-00191c9e0adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5665826-3973-4809-a0e3-22119714bebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a7524f-7a3d-45cb-9572-4ea937bb7c2f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5315e541-0d1e-4ae8-b2a1-b9b577c58bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf3b71e-f0b2-4d5f-ab83-a5de8f2acc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6686977f-3d21-4f15-80fa-6cbbca00d28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38055482-2fa9-4eec-bdf0-b41582b4af93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef6617e-71cf-440c-b99d-0999c9cf01d4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42444655-146c-4c96-aafa-6822f6b45708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a139658-fc96-4fd5-a34c-a78098735ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218345b0-276f-4692-831e-06c766e60ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3716c28e-ae7b-4430-b185-1abe44b75f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbc8289-40fd-4334-a812-6f401b849d60",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fbcf7d-b23b-4067-9ff4-005cc194ca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c036e7b4-4531-4dad-9117-e8e2a9997fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89788c2-927e-406b-8946-4b84b0ed3d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2d9cf2-06bf-4f80-99cf-c12ed442786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f07bd2-86cf-444a-976b-7ba590b229d8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77ad607-08d2-4b30-8b50-ac8b566053b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b631e32d-8e31-47de-b035-169e8f716807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76770b3d-fde3-460e-92a9-4eca2b8da387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d61507b5-3b3a-4309-9208-05f4367f9e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bc15b2-bddd-4d6f-a296-f854294f7c95",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1717a4d9-5396-403a-9450-b136dc744171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1528a476-6eaa-4bf4-995e-20ab597f5dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b98cd8f-b95f-4912-8ac4-c23a71ceec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b998bafc-d2e3-4e87-a395-31c33ff34abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27644b2-d8fd-48be-aaf5-7a06dcf238c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d96a96-ca30-46c7-a9fb-5caa9a140da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c3f732-950e-4536-8b67-828ff4abc8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215f97ee-c836-4a54-a67f-9452656cbfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "705d374e-0bf0-4595-9894-042400032a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d03bf6e-a2f6-4c3b-9ef6-b9cd863a440d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e66473-e5b0-40bc-8f6c-4414ebf43fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2905f23-e092-44f5-a836-d12b732820e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e919cf88-a1a4-479b-9b7d-3e39c3c368ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d649f40-b3d9-4c59-9939-3ade503d3207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f71d6f-8983-4633-a62f-489635622388",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8679d9e-409b-4253-8e69-e249ebc51b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8306698a-3fe9-4ac1-93a1-4f6ba79011c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344c8c79-c333-4b58-abab-1afffcc77315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0f778b-3f97-433b-8e3b-11802f0254bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43eea09-81dc-4e7c-9f4d-aa34e0540a4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d318300a-ffa4-4f6b-b9f9-f57d9cb8d54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e241e1-32b8-4550-81ec-d11e875169ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bafc5db-22da-4428-8778-8045c245d59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7b6301-0117-4535-b182-fda82c2d1d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb01748-0355-496a-8277-e288c8357dd1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3328fd-42ff-46b4-9b02-8b3ea21c92a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72fc970-0b8c-47a6-9ccf-f4aab7531d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc62352-69c7-43dd-b805-f5d30158a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3dea55-b282-437b-bf8d-8b0812af0a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c2720b-b89c-4e01-ab92-2bf7a6209d70",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774b4915-2ad1-4fb1-99e4-821927d37a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d5c285-0a87-4a9f-b15e-367949be700f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1193de80-91d6-4643-ad92-eb00146c3629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6470bb78-32f5-4b9e-a5cf-9bc52b7d1588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ecefb3-b5f2-456e-9a51-e56946b330e1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d493312-c545-456a-b37c-93c16fe6a684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f1ca54-1bc2-4ecf-b74d-27435c1bb1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf312ebf-1cdd-405f-a354-c75a5fdaf124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6003c79-ed3c-4bb0-9342-8ce511c445c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f455c8-1ca2-4e22-8220-0277fcd5be22",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b830743-a24a-4e25-a1f5-12db23ef57a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3f51e2-f0f8-49f8-8124-eb2d5e94347c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e328ba0c-e1f9-40b5-a0ff-f4ae47d9dc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2dddaa3-6cbc-4d6a-9dd5-3e93d98ae863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d186fd8-4128-4c8e-941e-fca2b25defa9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2ce127-85c5-439a-9687-a72e29794ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71e27b9-1804-4da5-8c2a-212dd33c057e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f6f654-5399-4432-b3b4-7b4a7e5a82e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62f5ced-62d6-4658-b652-d237da21b8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54cff1d-1b86-4114-88c6-6fd65fa709a0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e2ff8b-35f6-4441-80e5-beee3ed733f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b96dcd4-1575-47c2-8c1b-e5a9d724a464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c3b822-42f5-4a10-aa91-76541d6ba440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb3e1c9-1123-4baa-bcc3-f02a126f065b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7acd87-b920-4365-b762-fcfe39e357ae",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d89f1e7-fbdc-4bfb-b6a4-d70616b398c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313061d2-0e4f-42e0-853f-3dfc7a3a8dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d51be3-805d-4c4d-ae5e-a75073e9dd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7995d1a7-b8aa-4f5b-a344-9f2e6771b2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11aa6c2-1d2f-4378-a45b-2c68917c4412",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed361c58-f757-4aa3-a84a-7dd519abb2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbc4d96-fbfa-4e82-8d37-67c940a8b02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59420b88-e6d1-4581-a10f-9eea8d8a3cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ffb4d4-817a-45c8-b7e9-210389b16257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc5eb01-6cc2-4304-b181-46e55ccbcda8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3678bfa5-c28a-433f-b40a-17e12b8c3856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d68c77-d5e5-424e-84e2-221f63d8a6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe310475-223b-4e78-9ff4-64dbe1189d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ea7e13-cfd9-4827-91f6-ff9d8db4f9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccb5231-f369-482a-bcb8-c2a5f18479d6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6640f263-e8ed-4af7-a640-ce6475ac25b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049ac769-7db6-4438-926d-40bb329de7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8295b0-ddfb-419c-a54f-dde2daa7e8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b859bd8-0e60-4555-91d5-60d333bb5011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537ada0e-c748-43fd-b580-de93764469aa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9675ab68-336f-4647-ad68-21c74b36a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce40473-6427-4909-a071-d4e67310154c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0a8608-d550-4662-9c54-6f4101ee6f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4219e04b-6a63-4811-b02d-3caf605ae515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46138213-6fdb-46b5-b3d3-000d53a8262b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e1f86a-63dc-45b3-8f29-1f48a8f15bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e47e0e6-a35e-43fe-ae01-d122e47903ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e677a353-de22-4da3-aede-a9e8a730cc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6183c9-752d-4018-bf9f-888e290702e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c256f5a-9eff-4e5b-9395-61ad01ac27c3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64706c8-9add-47eb-9874-578cd51771d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7a3c27-afe4-42a1-9719-4094a1206f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e018d815-c6ba-4abf-b6fc-f9a1a3f4b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2d25ef-9a34-4927-b174-85178fc258d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72245ed-0e84-4311-9e81-fc6e31b08768",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2065a36-68f6-4ae7-94b2-9d4a6785506d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb0e440-4c79-44ed-a648-1eb63af01e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a6b258-c9cb-42e2-9912-c7cac2b75565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f3f77e-2353-4a9f-8445-21a87d84fe67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989aba3e-dc5a-4679-862f-e791979d294c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d042e5a-5d88-434a-8bf4-f820de50b14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3226c01-f22e-4b2d-beba-ced2264ed0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b90585-1fb4-4729-8b1e-1700f4e221b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "828d2438-b960-4499-b3f0-fc8e5f5f3e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d382fc47-2bcc-4a76-bc57-c4cc51162c2b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6665d1ae-3b85-4430-bd94-8845229e339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e2bc84-1842-48d8-bfc5-c27ff43d7b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f08a757-5032-481a-860d-04df5c9a9bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de87eb02-afd5-436e-9d29-2570cd6d6d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810a33f4-5d05-4a43-83a5-be3ae1ff9236",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ca9fc1-13b8-4e4d-89c7-ea2836997394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5de1ca9-00ff-4418-bfb2-398f968687dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefbda6d-d999-4fc7-808d-84fb0b94448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eeb2550-c89f-46db-bff1-b54bd6471b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd4107d-d0ca-4034-9d30-ab6a361f78d6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7fe2b6-0adf-482b-a921-f9f5d7c26ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114d3cb4-d59a-4de6-a390-5291650edc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aead57-3f25-40b7-b392-b9c5c8b75a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a57cf9-c7e3-46ab-9caf-3199b0ce37fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037499f0-4967-49c9-9e6b-150806520813",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb346b7b-5320-4bfa-beeb-b267cee82897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa75e03-3c75-4e8a-bad4-27673bbfc551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2958b8f-8865-4d2d-93cc-07d12580f83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30d7b9e2-da90-4cb9-8f7c-e18b2bbd8702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12852171-80b3-4c02-a318-66b6520b3d3e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f8e699-b05b-4955-98e7-9adcba38d8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea94ad3-436e-4a39-abf5-0a9149982919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed757f5-8a32-416e-b1b1-478cb9f2fa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac10e03f-101f-4a3d-b23a-411909b2f357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e6209f-d9c8-4180-82e0-423962f71e33",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90ec1c1-2bbd-458b-a464-d136a339b712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4414509a-f602-488b-aa28-1b64d7fc58b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafc6492-2be6-449d-bb7d-313f87f4dd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af742cea-7194-4f9e-9168-46265be4ba87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57dab34d-41b1-4292-8fa9-383bb7219e09",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca81187-0bcd-4ba6-ad82-8da1ca5476e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969a7894-14f1-4fff-aee8-350e2a05eb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff783e99-77ac-4114-acd0-7167459d5d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8551a299-847d-4af6-9ded-7ce362bf5c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c1bd62-9342-4400-b897-0f65adbfafbe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364ab83c-3b82-4908-a4b0-572b97bcd5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d865531-d053-4beb-a916-e82d9da08bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038d6314-5762-43b1-9749-de48a8586484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4160e74f-d103-491e-8998-775177082c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25149a4-a7c7-40aa-bb1e-e1590711121f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83d0f8c-b07c-4381-9eaf-d19d719ded53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb373d9e-4b41-4be0-b3e9-2d6ad8e3d38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27829325-5076-44be-ac21-69e2089c9082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc7bcba-a369-4473-a621-d36d247ee522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baf560b-e1ce-48e7-aca4-ddd1cbdeb0e6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bdf4ab-50b4-44b0-812c-48a023bd29f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79058fe5-4102-4319-a6bf-8cdae69d7143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa384cc-2667-46ea-b3c7-664950f9cf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1676f628-0c32-44f9-8b57-26f501d5e550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca24bb49-3850-40e4-8e2c-ce86a83c0ded",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576d3cbd-64d4-4d0e-b2d6-e65aff875da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d7202f-be67-4f58-bf49-b729a6f35553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5ba507-c07a-44db-ba31-c6042c4a06e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b21dec3-c484-4d9a-9b78-7bff58045de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cb3d76-d0b7-4145-bddc-c53d1ce8dd1a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172b0de2-facc-45ed-bc97-b614bfcc266a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d968d848-ac28-4b51-9735-f41ff83fb0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fefae75-9524-477d-a0e8-6d1bd4ae3613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a765c4c-bdfc-403a-9338-6276c1b0ecc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3003d12-80b4-4b44-bca1-6859e8f9e0e2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa791f4-6e0f-43c1-941d-11e992f6cff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada7fae6-858e-4be8-93f9-6608a8fa0afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89290c00-bfc1-4069-a247-2fd2a311cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d6c3ce-d200-4639-94ef-dd3bd086f23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9e850e-7204-497b-b0bc-adeab60d268e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9320f75a-9acf-471c-9d71-14a23f3d896b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2deba5-3946-4e97-a293-dc7631a4ac76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92f489a-e565-4a95-9971-04bc38c32f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c638da0a-0338-41ae-8a71-e9f8f0114189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff798f3a-a575-4d5a-96cb-a15db4be7270",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e4dd3e-2c04-41ed-9797-d818d6e02d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da7e292-3339-4f3d-8283-998bc4528030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca813e9-c0fd-4e42-91d1-814b4f5caa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "30a65f50-9170-454b-a303-cff357478b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76099317-8551-4fde-a979-6a085ca586a6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63c649f-0661-475d-9d9b-50202ac4e7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f5ac07ab-2e91-4a77-a6f6-4267e9de5a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bd0c8e-8014-4097-9598-953b0b26087e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "67e1940a-6421-49d8-92de-9e6cb3b7ec8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1fc5b36d-4aa9-46f6-a928-2432f836a5c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aab89a52-ef3f-4306-b523-c92f81bc6f89",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22ecaed-0ac3-4bab-b4e7-41cd9532ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0b3d785-baf5-41ca-ac1f-384cb2c4c917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d5a178-7db8-47c0-baca-82ea7e35c2a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f96fa35b-b7da-4ea3-9915-e31480818e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e2b0b4-7a7a-46e3-9cc0-2f89080471c9",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177f28f5-e774-4f56-b005-e30c5cf25c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eacf7c6b-9db7-4d4a-9e05-5ac854b73675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa88679-17d5-4db9-8312-4fb67e64b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34f0b977-b304-4b9e-a557-056fa9229022"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97548e4c-b317-4489-93e8-0fc72283ab41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71172bde-75e2-436e-83b7-4236daceda94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c26a920-46ec-4f30-b7be-170da5912f43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bb987b8-ec57-4953-8418-d6315a12ac3e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13bd8b0e-d005-4ca8-884e-590f3463bb3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d36f877d-aab5-4346-a140-228b486b0eab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bed6e607-fc43-4df9-a30d-3d3aa4978682",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c90ec7a2-748c-46b7-b7b4-d772e7cb901c"
                }
              }
            ]
          },
          {
            "id": "8ee53921-9a91-4204-b182-6a115bcce070",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eeedebfb-f235-4d96-ace8-683a20273f56",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8701bc4a-729f-49a5-bd63-ba128c6c0617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f46217e-0029-4847-afc8-b7bf4aefc20a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad19d85d-085d-478e-8443-9648aaa8d6a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b126c4d-ac3d-4274-b123-664abe83014e"
                    }
                  }
                ]
              },
              {
                "id": "52a8d865-4891-4530-9db5-6a875753db8a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "376cd5ac-2816-44c1-8a7e-bff5d3bcafbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05275b56-bf94-4322-a5f9-29ab3d298526"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fdc5548-b07d-46ff-b356-796fa7e5a8d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c424a813-747b-464e-8879-71c602ee1aa7"
                    }
                  }
                ]
              },
              {
                "id": "ff775398-be85-4b7d-bf22-29b65c2fa778",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b76456d-84cd-4148-ac50-8cf39df6d107",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30ce043d-9e88-456f-8aa8-022746a83728"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "834f896f-d75a-4fc0-bb2b-a97c05acbdf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4d038c4-f51b-40a7-937d-749a748ad6c9"
                    }
                  }
                ]
              },
              {
                "id": "c88a83c6-0331-4b7f-830b-adaf6119c953",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74f6eb02-48a6-42da-8dd7-5a95772ccdf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75958dec-d481-4ceb-a2e0-3cf2d74792b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b41d51a-b7a8-428f-a34d-1d5458c28a58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6939a249-9577-419b-9976-128bcac955da"
                    }
                  }
                ]
              },
              {
                "id": "43d0b905-3c2b-43c1-b743-201dbf97f030",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd9dd5b3-c05d-4212-9e93-b829609ba275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ec6ea1d-7811-4225-88b6-f69d47a11054"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df656013-bf95-4e01-a75a-082d86452eb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e63d893b-4371-4449-a91c-69a844160ff4"
                    }
                  }
                ]
              },
              {
                "id": "ec6a33c9-42dc-4343-9417-66e96f5db590",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17644e4e-2288-45d6-85e8-747e6087c8c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e634a517-95fc-4e59-8cb5-3e31e2f80260"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eca79ea6-5bf7-4ce8-9963-4c799a4752e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63ebe553-a489-48ee-a709-bcbcc69a6570"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1712be7c-0d12-4221-aec1-6b96ecbeae3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "347311ec-52fa-4025-849d-12fac3c65323"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ed5497e-1040-409e-97ef-8b567c87d5de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b27a867-7564-4297-b8b1-ec20df60c221"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ad8a8a3-0301-4c19-96ce-514c9a2fb3bc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "37804daa-f668-47bf-9336-4dc63083df8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b5ce0f4-e4dd-4f32-abfd-f9a5cad885c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a41ac8b-f161-44af-8d87-3f9a677f0fc0"
            }
          }
        ]
      },
      {
        "id": "b03732ab-84fb-4629-90c0-a3c7c00f1f35",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "15ee8551-2400-45d8-a987-cf9cb2772a09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25ff927f-bee3-4193-8ae9-8936592a9ec8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9aabbe9-8daa-4b4c-a300-687815a0467c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0272902-fff9-4911-9317-9b95d7edc067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9c5c82-0c90-41cd-b3bb-9e4d3057e9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a82cda-473e-43aa-86ae-48f8d395f2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7e2165-e5ef-4c65-8c6e-5f12d39431b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6982968a-61e0-4598-9dfe-eb67db116890",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ff4ea6-a69a-4a1b-b57a-58c7882f91ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267f5a69-85fd-4d22-8504-a52e9a055a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e046077-f0bd-4771-9232-f046f5ef2630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aaee503-9e76-4405-9d3c-a3e6d6ff5804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6f4864-262f-4904-a1af-13aab285746c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f6cd8d-4f92-4db8-8d53-a65eef92711d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc1027f-96ba-4cb4-92a5-ad7ff870467b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f71328-9cfc-4b80-8251-6a9bd8c74841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c50582-a9c3-4187-a69e-3e10a8488083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e918db11-71db-410c-8a35-093307b5d025",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a7443c-d05f-4ebc-b659-8553fa0b7a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5cc33a-5eef-48d3-bd26-e0db80b740f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ef7935-202d-43e3-a8a9-68bf35b67c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45e3ddc5-4ff0-4623-9abc-314772de6227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbf9736-6ce1-4826-9d04-24d7c5a5d3ca",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2194048a-8905-449d-b40c-b23bf143f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcf7c34-69e6-43c4-9391-1bbe02117d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e020346-0b67-4142-9980-d8c0d5973f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c11c22-bb98-4091-8d1b-eb2fca3780be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37876588-0f18-41df-96ce-6041e2200945",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381cf875-4958-4d96-a751-be66eb5ccf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e76fccb-d1ff-43a9-86ff-c274760ff286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07092ed-c20e-4f1c-a5f4-087ce04d22d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e25d37-1ff4-478d-a261-b5668ae3f3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec46e080-cc65-4f31-96bd-c6faf0c6ec84",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24d2b59-2400-4898-85ed-2a0f8c850941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7af2409-e9c2-452e-bd15-a57c377d1518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389e5e04-d2c3-4e87-ae6e-e483c2214340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc623241-44ad-49ad-83c8-ca597963dfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e83515-3854-4f73-b543-81f2716102ec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3884f9a3-f0d6-4e15-aae6-86cad9167452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba400a2-54b7-4368-a4a0-75a8dd03bdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa65b99-0e8a-4144-a29b-0f7293dfe6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "885ce9d8-9a02-46c4-9bdb-e047397b0535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f971949e-ca26-40b7-868d-8c2ed269964c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3308e9-ff7b-4562-ad53-fa5e6ee21e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867d5545-2089-4276-a01b-e2c262f2feef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6785be1-d510-4b65-bf82-62dd245286b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99084f57-3653-4d86-b9a9-8e094f072d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e567e8c4-f813-458c-826f-252ba7439e3e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60248cb-2154-44c8-8b83-49bf9480d232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b42917-aedf-4fef-8630-478e04a9c821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f9206b-f98b-4c46-826a-449e71af6100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc0d3ee-3b2c-49ae-b5ca-f108d363d242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43090633-d092-443b-847f-7ba268eecbbf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a0bed4-2813-42f2-a559-a4e001f70b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb3649c-e7b1-4d25-970d-5f032553e615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b4fc05-51d4-4ae8-ab43-c426123efd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2c151272-b7a1-4c54-a21f-042976e8de22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c562c13f-891a-4cc4-9bd2-230d534386fd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc6767a-0342-454b-96b5-b19ed8902394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83439e8-d932-423a-990a-7a2a46825dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64130b8a-59f2-42d5-ae4d-c89677b82a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4940e3-e577-4d8c-9946-4492917aa8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4c0718-18d0-425b-9df1-c88d398fe798",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa300084-d43b-47c9-b342-d02a8e331943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444d9e5b-4594-434b-971d-d910c65b6dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b838a93-9971-4a00-a4b5-8ace942b117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fdee35-9106-4ca2-8d4e-b788d27327b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd52fee-4ded-4fe2-b510-e0b6e98c8aea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3fd4ff-c588-41d6-a74f-8c2299bf4c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d238681f-f1e6-4749-82b5-dece7abb009f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2db87ba-11a2-4314-adc2-8535014127ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "779625fa-e14e-42a6-a6dd-1b4a27389514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89290a86-2565-4d29-8f56-f3ecc0773877",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabfb63d-4a88-4a16-8c96-7b2172a371bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cbf0a5-a858-43f7-a244-01f7fd4e7288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f5d7bf-3f86-4ffa-8725-8b7d8ba18b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb49e5a8-d3fb-4dcf-87b5-245fc1195882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3b0cc4-c7d0-4fa7-bb8a-da08bce3a064",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523507b3-50e3-44d4-8c52-94dcb5e338c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133da49c-6f5b-4bdb-aabe-c879eaf9804e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452aecdf-8b0c-46d4-9a96-9c40920dfa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b166511-1eb3-467e-a090-5f8afb90e70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7121c02-4fdd-4750-8f51-c9f1364a87cb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878617ca-7cb5-446c-a89e-fa82fb88ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3474916-f4f2-42c6-8134-70ade8ba3770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86055fb5-6a2c-4595-bcf7-15c8adde3e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba9d04a-7444-4715-ba3e-9fbb060a043e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634e4b9e-3ae4-4f45-83bb-272860809425",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48aa5c1-f44a-4f7e-aec4-fc3cea8b688b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455856f3-81ba-4f4f-a178-492a882f946a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0f05f2-f9dc-4b1c-8aff-9d741b757aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31541f36-891b-47ae-bae2-f837eb6534e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ea0c5c-fc30-4253-9f3d-e04b9f01e04f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5641ccf2-c8b8-4b31-835a-f68ce347e420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a93efe1-5694-40fd-a2e6-83d17a09ccee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e09d2e-b7bf-4e1e-862f-febea0638b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e6f82f-f8cb-4850-91e3-4ca6eb4d6017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba1e700-ca4d-4add-a84f-93d8c29cbcb7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3632019a-a0f5-4f38-af63-86232cbed707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1477fff-0dc8-4353-ba64-0c5648a597e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91090523-6fa6-4d73-924c-2ec6f22fffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae5f1e7-3d1d-4261-b1c4-2e0561c09377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e593e9-939d-42e7-bd0c-29dcfdd2e556",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4406eeac-f5f9-42c3-9b9a-e9fafa51ae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af3a951-4a2a-4298-b638-8f213b8eb328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94058730-666f-42c6-a2be-9464551bcd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b99950-a777-4f19-a89b-13a870913407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a277e45-2e35-4e0f-b393-ab035181c9ce",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc89d76-6db6-4706-bb94-7ad30cdc93df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a91e47-33c7-4ac8-9b5e-91ff9e0a2c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6fdc0f-35d9-476d-8a60-856b653b1595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdca3ce8-8762-4eed-ab7f-69e044677dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0831a7e-d003-4194-974c-494a6e8ef1f7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0208656-b1ba-429c-8ede-dcf7d0bbddec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e641066-6a06-4af9-85b0-e52932f330a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ada1195-7476-41ba-b8b0-05fbc62e1ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2c3e22-63cc-49a4-b8b6-4ef8128022e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae6038f-1d3e-4ca9-bb4d-8cc5a64f265a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd55dc60-e903-40df-ab92-cc127fac9a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae5ce5f-048f-441e-9030-f2981353265f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4756b6e-a379-4e02-bb88-e3c552d65d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3b5aff-830c-4ecb-84da-59031a4b35a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ef3689-4143-4d52-af88-6b18e9828211",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b1c286-7961-43b8-b58d-26de1d79ec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad4c0de-e05c-4456-a645-7acb32aef423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf52034-273e-49d8-b6fd-f059cbf39b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37767d1f-e6ff-4738-aa1f-74bacc8f2c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e84d51-ed14-40aa-987c-4983a2afe9f1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a065db-fd9e-4864-a4a0-1e903d99a73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69afa2f0-bd34-46f3-bcff-e83e1273d682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d51aa8-e91c-474d-a9cd-945e67c50981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22423c1-48d9-451b-96f1-1a7853e1e023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667fe7b2-a732-4eff-9282-cabf3070a0f6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0cd18c-f44f-4b67-a33c-429f69556e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfc8655-2b11-4405-b6d1-8b45971c981a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c715a3d4-e098-4e81-9564-b38f211f8829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "258a1867-a66b-41b8-ad99-8b690bdc9ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb284bfe-9eb9-4b0a-af3c-03dc1c2e21af",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1eee22-d477-46c0-bd77-171b9e699222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1bdad9-7bff-43cf-b444-f9b0fb9efe1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d066a96-dfba-4d8a-94fa-b1d87eb81f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "787dba72-2b53-47d9-b22f-f8a3813c2027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47610dd3-9fb2-4dbd-b831-d2da5bb9ebdc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64abed3-ffec-4e51-b162-9b945abeaf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b2d9ae-6be6-491f-904a-2f541429de2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bc791c-0d48-426c-b398-20b4e8eab736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfc946e-0935-458b-8e0d-2aee2f8aa0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07117614-8280-4445-8702-907942f329e7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51722641-9ee5-4b9d-a51a-9c2e6bda574d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774c9e01-e8c7-4a95-a9b2-fab06e4aab5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae661ee1-2cde-40ff-85e9-3449a0aa460a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1555b91-3a35-419e-b9cb-b45aed11fd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2202c395-09ce-4991-bda8-96c39e8c5957",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fc2518-c184-44c9-8667-0690ee579406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603865c2-e7ae-409d-a2c9-7d2d6a6515ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2891c0c6-0e49-47f9-b362-e4638f37283f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6791220e-a2fb-48a2-b681-db0cab3fb55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152a5692-893e-4f0f-8eb3-15cbd25fad57",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58910612-8393-45ab-8678-551278d9028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c943f57c-e4b6-4df3-a477-2a562f5c4e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdf7d97-094f-4f15-9b2d-be629dd1fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1fe267-4a09-4d8c-b376-b3440f1cbede"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae2611ca-0e7d-4000-9c3f-d33d05562489",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "126e12bf-b5fc-48c5-9408-1e5b48f1938d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244a5c9b-0db4-4dff-9d86-6cc666eb1283",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "79a6cf9e-6681-4023-9c85-cd6028acedde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "382e36c3-d450-439f-afe7-8e63ffb3a0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc9f3500-8355-43c5-91ce-a556191d2265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034683fa-9812-4984-9fab-48c76f337a70",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da1c1e1-7c4c-4456-9db0-3b5b518300f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "381cceed-ffdd-450e-8552-f14549e0aa40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b352fae4-7c34-4c18-8270-53e897b356d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55892966-4244-48aa-8244-20e48abc217f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9a4a625-2d25-4ec1-9090-f1711354d20f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a235b251-304f-4b5d-b7b5-742ea2995ee6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "518c27e3-4ac0-4437-a8d4-ab615c58838f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3528b0b8-e974-456c-9c1f-e67703eb1167"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9664bd9b-5492-44bc-a13d-6d0ee9291fa5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3fd6bdc-1cba-4a32-a3c9-066d5e2a67bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d7fe64b-44d4-470a-91da-88075194b0bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ab04f8b-9f88-4d61-a554-67c2312aef0d"
            }
          }
        ]
      },
      {
        "id": "7a939117-41b7-4be6-8c1d-c951dd970701",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "caceb3b1-11a9-40cd-acd6-77f2fe7fef85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40cd954b-36fb-4a70-b1c1-66b5637f75f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03ad39ce-2282-4c88-9049-17d61cf722c0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cab83ed-feea-4eb4-9317-8c53537c5df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcbdfb6-cc76-4bd7-9220-44c363ef181c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a693ada6-cadf-4b91-8cc9-6c56b31af30f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae17ce2-b705-447e-8180-00fa57b67722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cd6521-db1f-40ca-bbb5-18f39732c727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dce9163-dff4-4872-a18e-99a677c59a3a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad33e32b-04a7-4fc1-8ee8-654e7fd14ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9060e23-1472-4f14-b0da-03a876e143d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7bd9cd-5969-4062-9dfa-0a38990cbccf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34eb553-9489-4746-b13a-8763ef16c4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaccdc65-9085-4ea0-8148-838471a65560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f945f5c-0dbc-41d9-ac7a-63d411df34d2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b565e7dd-c7d0-4061-8794-b667a8a93a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9f732d-14b4-462d-8c3c-bd9101fecd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115961f7-7eb0-4a95-9c1e-16f9f73d56ca",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9392c8f-05ff-446b-b5b2-279d37689afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dd48bb-3acf-4313-949a-cc200d6bd76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d909d535-2a8c-4841-9e75-52b64206045c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7d1370-763a-400b-9fa2-16522e31f025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6090c747-dc6f-42de-8ebd-70320e30a8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf55c98-8097-437a-8548-2c42ffd7ba15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6810b8a9-c79e-4b60-ad73-11fb50cc7d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80106afa-3208-4d80-94f7-02c5113f4872",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b375659c-61ad-4e29-b1a3-f87405335fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5bfe05f-2645-4ce2-b4bd-f03b5b50b5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2645142-0b8f-4bfd-9cd5-e3dfb57a67eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914167bf-8449-4405-9406-495374e17cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07a9c5d-2107-4003-b172-e124f49c060d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2c400e-0dbf-45a9-8507-29e320fa6317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d07ca7e-0804-4d2d-a48b-74cdd758ca88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e8abd4-afa8-450e-9275-5c7761999716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9191a0-874a-4620-a619-69ee019739cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f789dc-7286-4e65-9f02-c42681fd9ae2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f428f49-f2af-4a25-9635-926e8e8d5758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70492ffa-cf6f-4f07-8511-a287e30b08ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6ddc5d-5bd3-4284-a397-32da412b6cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4f81ef-0e19-481e-b4ce-17b5f2273d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8ad43c-3f78-41a7-aec8-c9ee98a28bf7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447b0218-229b-401a-b806-0646ae2c17f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f8e957-f7ee-443f-b729-d06cb065f811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b623e5a-7b04-400e-b1e1-e6c8c41876d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bd6e56-8e8d-4d95-88ec-e1562c9f21c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd18d969-be6b-4f29-a6aa-e91d91a57acb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f01570a-8e22-45b3-a09c-0ffa178f862f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a34697-9676-4465-af25-d778d12d0a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed813fab-082b-4a8c-bef2-de6396d60dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61fa437-f884-4baa-9c64-110e56b20155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb4e940-a2f1-4f41-a2f9-37aae11f25f2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235147f7-f217-40b4-a3b0-067b2e6580df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92283a4-3ceb-491e-8c10-c48511561687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5a99f9-a5df-43b8-8333-2d18fbf1bc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d91cd3-fb01-4719-bc72-3d6751a8cbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7374aacf-290a-44c3-925e-f304a6d4bc72",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df77989-d7e5-4c01-82b3-e3155563eac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3232cf8c-e4e2-4395-9190-f84b0059d763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b0e8ab-25ab-4163-9adf-92d2c25d571e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb098b6-d332-4a20-88a3-e09ee6ed53fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c6cd6e-8244-42b9-84ea-50c4886c6b08",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0258d968-3d8d-4a80-84ac-43fa804d2dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a844137-796c-4b71-8424-eab4c875c4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aece306a-1f0e-4e18-8a91-487e14aacf82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870fd3bb-08ec-4ba8-88e6-b4ea12789e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5f9fdc-7aba-4517-a6fb-ecf546f29e96",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae9be5b-2e2c-46d9-a157-c589c5c3c164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e5062a-ceaf-4662-9a67-30662304c0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af630b9e-def6-4faf-b875-4d7f57a1aa55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d512bd86-01f4-40b6-b251-7210bd72ebdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb9b8c2-ace5-4087-a00b-5888af09fc70",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b01ad1-2319-4167-8814-e973a78b3523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0d2fc7-ff4f-4c1f-a54e-8cb09253103b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d151dc1-477f-4996-b80b-af5fdfb284f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96b26d2-af81-4d82-81cd-79b5d90f2ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a642c8-a1d2-480b-8d31-05b0a383a04f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b880720-e675-4527-b5e1-2b2937f7674e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6096e8a-d882-4403-b197-846d12b073b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c55bea7-5552-4798-b748-3ff4a60c85aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648df6b1-4620-41d8-bdf5-b1ad10aae564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a219dc-85cd-4eb6-a126-40bbc24346d6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4aa1f-8481-4a6e-ac42-2547be88c65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e3e773-2df9-46b9-8c19-9b5a6dc12443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4315090c-5f04-4d78-94b1-a76f3fb91c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867e5d6c-9388-479a-a022-38e0471bc22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be01078-db66-4280-ae60-1b0feb1e6fb6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118addaf-2d47-4c00-91cf-1d940561f28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726e723b-06ae-445e-8540-f98f03eaaefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4cf8f3-8ac7-4993-83bd-3bd361349d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0496e24a-62cb-45a8-9a2f-21a9c61a1acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d6f8d4-8a2b-488b-86a1-9bfd9452fd7e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f87168-e409-4c6a-8527-65eb3c7cf47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d8d0ec-34ea-4675-8406-dad3dfef8ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f4a8ff-524f-493f-9648-af88259b1fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f69c2c1-9cdf-4cfb-b02f-66e0388ac1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60db5608-1721-44a8-8970-a220b87b6884",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b91fe8e-a6b5-45f8-b4c9-b63201a98f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01fe9d2-877f-4264-be77-76f46abb57ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63abb50-5837-4fa5-919e-e1e4de0812b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48025598-baa9-409b-b3bb-32c7c594b516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8235a2-579b-4d7d-8416-a44093a81a06",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b954cf-ff8b-4a78-a88c-b68891def3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a7c2e1-d3e6-4b8b-a9d5-c558722ca21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717907ce-872d-4722-84ab-81da24c8a3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee0f66a-fe58-42ba-b21a-d48eef6cbfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51da957-f4b9-4dd7-990e-301d25658937",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6f3cab-7e7e-4a47-82e9-7421780518ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ca336b-8ca6-4def-b960-a45de537743e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dead62fb-670d-40b8-8ad1-e803dac2346c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15adc9f-2168-48d8-a7e6-35d09c8a73a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b70287-e87d-4f82-8ddb-314d1296e309",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f4c988-a917-49e5-aa57-d114c2fa9e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93892df8-5f9d-4516-a7c7-376b158d6198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e5c0b-b5e1-4c49-9cca-13efb87d55df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523dcf32-8bf9-4246-85f8-9b902eb8d43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06556ea5-b632-40f0-a60c-108072532642",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4883a0-3c36-4393-a137-d7d75808379b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d589d035-d524-47f1-8061-f5a18bb10bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e5eb05-0f02-43c3-9f77-0bf97a75b8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e926691-ad9a-4f42-a464-440866ee2193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd02d0d8-c3e0-4a1f-8cc4-5ecdd2fc46e4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d30d105-0680-4969-bb08-77f612217018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810d57c8-1fc6-41d7-a63a-34b3d6c0776a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16d81ab-ef9c-4844-825a-07f56e428895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7e77fa-78ce-4bf8-b583-b56c0d6f0c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e99ffa8-d46c-4dda-a8a8-53c7c12a2945",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d7268d-083d-4d79-ba5e-bde8ca64814c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4baecef-7ed1-4783-b2b9-6bda2f626c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa7f1e4-2e0b-4174-86f1-56919db2bc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74575374-14dc-4fe9-9d24-e4fe385e6654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3e7e15-b77b-4952-9e52-f641dd3f930e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cf5a3f-f7b6-40d7-a3f2-b93cc4089952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12946441-4b5e-4432-9eef-40e35b630df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31db61c9-82fa-4623-808c-4a37cf2b2cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855d8d20-fe4f-4b4c-99c4-97c59fa684a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8efb5fb-b1d1-422e-8a35-e52232539ca8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da03c0b0-4f8f-4811-a655-8e21699572b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a0a570-3590-48e8-a799-49a880dda91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24d8880-f88d-44a6-a002-a38621894c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa12001-4e2d-4ab1-9986-52f527a242da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263981fa-1112-4f9d-89f0-f28089b55774",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540280c6-1638-4c1f-b1bd-edd12cf869b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2cef001-5d62-4359-8c2b-65130ab9fbdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe7ac5d-1a5c-4fa3-86b3-59cff432d05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58671eb-e9b5-46e1-8da3-8b6907c44054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704e846f-c30e-4c3d-9d2a-29f0c03d73e9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ef2cff-bfaf-476c-814b-c4b048b0005d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614c79f1-0b5c-4c55-b68f-cb57062d04c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ff5a7a-3819-4c57-a093-41e818aa10c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619b3f05-e884-4016-a81c-60654a146abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b554a08e-91bb-46b5-b854-e9a156e736e9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fb69ba-bf20-4c22-844e-9de801e6ba51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61369a91-5a67-435c-bceb-35dcd41fdab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ee772a-01f8-4e88-98dc-956378274491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12996188-38e8-4887-9cac-bd0a621c0bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f845bf5d-d00c-4a41-9e41-391065c63c7f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3659f65-5ff7-44be-9777-efbcba5a68d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e61a4f-846d-4c7f-b8de-76bb8d4fb73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67f27bb-45fc-4775-ab88-2e1db7df2074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cae7682-bc3a-484a-8719-9276b53c5f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3027bf-1f42-461d-8054-ae695339747c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9e1ae8-669c-4c59-8cb1-e0cd4810dee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0e8ca5-80cf-415d-81b1-1885890d134d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd9af99-17e4-4e2e-9e0d-101567d23823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b30b1c0-d8f0-4026-b8a6-25044311050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0799c0b0-ab8b-4b16-b1bf-ff5d5a6ae8bc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22aa0532-b75e-4eca-a7eb-720c250837d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e332b2f6-6a1d-4059-8bfc-a631ade2494a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c143c3-c502-465a-95b5-60406c8b19e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90d193c-83b1-4301-af2b-945728ba5e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5bd513-4976-4a7c-98bf-2ea3000901b9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694116c1-8b2d-461f-9098-17ee644fae15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468bac57-cc3c-4e43-927b-129a94f949a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4476a9-06f7-43be-b503-c6ab9d34e786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad9d8b1-ca47-45be-ad5e-8d8be5abbb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7703d71-1828-4d42-8c10-97be4c73e524",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c131554-bf77-49a6-8033-4f6dbee9b09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccbb741-eb0d-4335-9f97-8ba6d5c40396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5709279-6f5b-4005-9797-896a78a75a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a8d605-e514-4cb5-83d9-29f0109970ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b44dac5-5294-41ba-86e1-41cebbdaf714",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac416e7-8395-47bf-b6a3-74406c38a37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e94ceb-654f-427b-a56c-0ac08494d2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca32eee-6478-466c-ac06-444d8903a5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1de1a33-3536-4a4d-9c5f-8d3410143da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2767883b-3a00-4bf7-912c-ecb69fe679f7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79d060c-aca2-4329-a6ff-d25fa7842776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2c50e3-aeb4-4611-bd94-dcb066fdd0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92beb35-2e85-4394-8b21-05d56ab67882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd81a2d0-30d9-4ba9-87f9-54e989094ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cc85f0-e039-4c52-99ac-c551b18094e1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3828fce2-d9f4-4db4-a7c3-50684df68c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4663bd35-c8c4-4941-9519-300314b3a27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069f1e93-e941-43f5-a594-378196872df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093185e0-0dc8-47f3-89a0-83e0a2a8b6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7823c8-2762-4678-91eb-2de90600815e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceb17f0-30f6-4600-9e6b-4165b4fa90c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a342c9-1e66-4519-8cf7-48ec706729dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ac5606-d745-4a9d-849c-e5a7053e4c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834167ab-0c0a-436c-bbcb-ffc770a5264a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528b6b41-2d84-48d0-909d-e4ac87582f35",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e67b8b3-74e8-4123-9bb4-6dcf16b85793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fc3468-3c3a-441b-b6dd-91ce261e3ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7ab2b0-c168-49ed-bfa3-5ac9b88f4af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462e1736-f2e6-44aa-88bf-ad48c50a8141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2aab49-5ebb-45f6-93e5-c35cad381dfe",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac92d1d9-8b5e-4418-bc3f-f51954e71c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5a238c-4678-4fca-a19d-a2a333185615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c36856-a98b-4b6b-814a-23d1ebe1ecb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b424a9-fe5d-4979-8197-864a7cc622f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645c9b24-3b50-4ef1-9790-5df05607ab2e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4906a443-acf6-4663-b333-d21d883c46cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d420a1e0-0cfb-468b-a898-ec2aa9708f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ee6892-5124-472a-ab64-f9043af3f53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445575d6-4d74-4477-9106-e40f3bffbbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62ddc07-a6e5-4206-ae64-179c8efd596e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc86f643-7a89-477b-a263-9a0ccfcff4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a99890-af69-4c71-af70-3fc816193c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e32c59-beae-41f8-836b-9468efdad43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b469f0-3cfa-4799-adeb-14690386567f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4751ac0-4384-4b18-b9ae-951790b5133d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990ff941-1df8-48c9-937e-b8529e81fb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54241f5d-15e1-43eb-90a4-1f3086de072e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df35150-ebca-4d56-bd6f-59ebdefd83c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d543ac7-bacf-4c08-8731-2ac2395a1e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf88c81b-2e4f-4d3e-9b51-baaa9056ac5f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d623ee-6917-4d4e-9e3d-f869e7db11e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a987b8-9014-45b0-95d6-d38fb0858920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ea4ad7-92dd-4d70-bfb6-13203841190d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a563375-bc31-4765-982e-2e2b7e54deeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c373b26-c614-4d81-a72e-8c8984af591a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb759163-18dd-4485-b218-16f41a179ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f39878-1fb2-4d6e-bcdc-7010c0db8ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a63225-6429-4e94-b054-1c2996b63dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0b703d-526c-407c-a2ef-0a1204a8c9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acb5afe-e033-438a-9d34-6a67cf81fed0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fec37af-a589-4629-9cf6-fecb1c86fe77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef268823-0e88-4574-bc79-e819ba35548c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd97b1e8-4376-42f0-8d7c-ea139037c1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e67e19-153a-4a19-882a-81a79ce387f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e38d1e-32fd-4ed8-ada6-722d634e1a6f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c36d78-c45b-4c43-8c06-289a538f3d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a320e8b-0837-4030-8153-c4582214f0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f117cc4-43bf-4a36-b560-e2e8e1a7c927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046464f6-3e50-407f-a8b3-96bf22ea3847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47243b0-4fc4-45a3-98e5-c2a334cf0fec",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e727fbd-b738-457f-8065-dc982430a85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1577627-67a6-45b0-bc6f-df6e9d63119e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062ab8a8-df34-4546-8a10-c6dea632f25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e170fb-2e95-4271-b67d-ed6191748e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788291e1-82ea-4f25-88af-6b4be7740f7e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbc8998-9042-40cf-a433-3e319a336b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1999d49-3e0f-4224-b019-f372fa8acff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8229d7-1edd-4068-b5ae-79d9e2c29b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a421a1e-0b77-4eff-984e-b08ad81ea870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1a28a1-00db-4519-ade7-efeb58bd3daf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c251bf-c102-40b8-94d8-7177f09cc647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42e75e3-91e4-4525-9adc-69c2a85ecd1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bac066f-bf32-495d-bb14-1ebb19f91d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87008b9-5e8e-46ba-8d4a-867c0ccdb7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f71395c-f8a3-4f0e-8cb9-89b0763ca259",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6568b2-03a6-4532-98f0-09037087f5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6a28d4-d459-4ed7-a210-5d19041aa6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0171ed8-cc82-4f33-90eb-271375949418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d2f01e-ffdc-4f47-a00e-e3376c8a04d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1771a5d-693a-46a9-afda-d901a061c8b8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ebe1cd-a218-4a87-81d2-b8afaa297ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a5a5e1-fa77-4f22-91cc-13942f0b1d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549fa181-acd1-42b7-8f5e-45019b972964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604dd814-1374-421a-8394-92d2f012a86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03069da-9eb2-4a50-a84b-779d4e9214e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16f40c7-8a5b-4b7e-ac43-db6135560d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c30eae1-7d40-41d8-8567-eaf9ea624b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bfa1cc-785a-4bd1-a682-026853fc09aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d54ae7-9d72-4fdd-867e-3aca5808db51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58559be-a5dd-4ca1-8b02-b21676f89796",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7af0342-ac72-4c61-a02f-7851638af4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96436ff5-f883-45fc-9dfd-06350e20b1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f99094-ad98-4d77-be54-63bbca3fd4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f04567-7e7d-4d92-b814-8a6e97943653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62806e83-7c7e-40d1-8ae4-2fb9cf0992fd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f69d4a-54a4-4fb6-ae29-06ae5e451be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99612a8-8c1d-4042-a31b-6ca1ced29a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b255969a-c8ab-439d-a95e-1a6be4d45dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e1b4d4-df58-4883-b8a4-7f2957ecaa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0f4a44-4635-4b3e-85d5-424c38852d79",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5bb9a9-4896-4084-b614-c9d0f78a1749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937ff152-dd30-439d-b4fb-f0ab66862902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b059f6da-bd01-4619-8fd3-67a1d35f6c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756e35be-5cad-4eee-bba6-18b891d47ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aeb537-8f21-41e3-a36b-ad39704ba273",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b941969-6f23-4210-b6d7-7cf3386f7e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7fe798-85f5-4d6d-a9ab-7a4b621e029b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e336d52e-8d53-4a31-812e-a5e897f7c9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ba2daa-517a-4fd4-b1e6-b5a66104310d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80693dc-b7de-4070-b70e-a7e81c6dc08f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a1081e-690d-4e18-9e28-c3db3e3b04fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83551269-6693-4af2-a8ec-4884f1aeabac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637b2bb8-52b6-4e4e-9b43-8da13e091b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234230c9-11cd-467b-b49c-a886e7ab3e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d59d5d-9f36-4199-b88e-14ba57f6f7fb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d17c567-e15d-44b9-90af-dbd033a62543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35957c3b-c388-49f7-8909-410e23f7aa0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba2ab3a-cce5-4734-9dd2-ae5ce1e3ebbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e8ad3f-1e4f-406e-9c7e-563b402a9fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f07c3cf-db21-41ce-947b-3d3f924bab5f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e03d1b-6b45-4f45-bd7c-f681b7eba5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c375e13-e4dd-45a8-b9ab-9c955539df67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd192ad-88cb-475b-82b2-c3202b9ae734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c790fc2f-6a73-44d2-a7c9-4bbcfb749680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0802c65-2077-4c3b-b07e-239f31e7e232",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2820e2-688e-4796-82a8-e1408c1489bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565b7193-8147-4b73-9190-6851208cfdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa3523d-39d8-4bce-aabe-88beaa6c5a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606033a3-ed53-4661-9be4-6559a782e46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1d26c5-249b-4204-bf15-3bcd95b680e3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037617c6-2b03-46aa-90dd-245e48e68b06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce387d8-0f5b-47c0-bb84-725d34a96b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e675389-593e-4caf-b5ad-a5424a4bf1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cef6019-eb7d-4936-b72c-5f066576b96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a64747-b808-417f-b2e5-0681ffddfc31",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51512ac-7949-4247-b881-0dc986a40176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff4a6cc-c116-4145-a0c2-ad41740a6f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceedd095-442f-4f05-afdb-8faeb82e326c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2bed9b-d669-4644-8cbf-a94d8bf34fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d1d558-287b-419e-b39f-8a8079a3013f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d1692b-dfac-4cae-9df6-2921a0d41501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72958141-d91c-45cf-bc7f-7c1e2360fb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d699d71-87bf-49b6-ae15-2f9f27d1f143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea88b837-8e31-4ec4-b982-3998ad99e5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6730d13-fa8b-4648-8938-047e97e4422e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cfc778-61e1-452d-b26a-4a24d6148313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "126ba264-f843-40f6-b2ad-1319d5c02880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e151157-f8e5-4d1b-ac95-9021aecf142d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c61388-db46-4317-aad3-f941c379447f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7090a8b0-33cc-4c6c-a793-decbb5c25d6b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f053b05-8af5-4b1b-9341-c918f76e8908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62fa8d10-c0f5-44db-850a-ec633248515b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b27753f-5f13-4cdf-ae28-d0611228c163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a748fd1d-89d1-4143-b864-9154012c4885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e77366-f0a2-4547-91c1-f325a9557fec",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ec8867-c1ed-4638-9a73-d66df0c35049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7b08654-db57-42f7-b9ea-bed092b39e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a1f88d-bd35-4ca4-96a5-3ab3eb680dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9559e557-f2f0-4449-866a-ee68001a753a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dd2b47-6c5a-4d35-b104-4d8d4e768040",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95df7bf-91f6-4467-9274-652f76850287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f49d67-3ba9-42ff-b553-e8a74b91d292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b3f5e7-17c1-401e-a7fc-39401954dc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fc47e6-d897-4b6f-8aaf-784872836b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6714b3f-328f-4855-9382-b8e8c0c5cd90",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10bdf5f-3c6e-46a8-8ef9-ca8d237c6546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7683b1-4ab0-4910-829b-26b5a88ac16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e3e401-b66d-445f-bb6b-a42cdeb16327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18d5cef-1123-4c9d-938b-44fbac9205db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5c0a31-12d3-4150-b856-88f816666bf1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3654880-2a18-4226-b679-a497a084c51e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ce6683-48fc-4373-91c3-0e2c822a61bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15185729-cf38-4c6f-834a-f4110b770b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83269c00-4a76-4c19-bf76-4c0509a7ad75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfae060c-cac1-4de2-8a12-a570ef04d256",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f30c9d-ce8e-4ec0-91ec-febe6e282926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "829076f1-a395-47d0-954c-afa4a34fb230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71107863-f527-4db7-a34e-2287d202fb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63acae59-4441-4b71-977c-a73911e2eb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8beeb53f-30f2-4ac7-b3c9-664b9e63f75c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac9ed03-5ebc-4f27-b4c7-f385be7dd2fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50715f8-47de-476f-9a05-f9691d7a20db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a2f240-d813-4843-b58b-afcfcd76bdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314196af-3dba-46c2-b72c-833df7d75161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b42f8a-766d-43ba-9d4b-f163492fba25",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac467145-3612-4abf-8aa7-a0bd1167d7d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a01636b-ca64-46c2-83e3-d9aad63921ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9dbd69-91b0-43d6-a731-4d960bbe2dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05e0343-ef74-476b-ae0e-329c1053b7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f939f00-0a7a-4cf9-a978-028a2c0b1238",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4341605-a0f9-484d-a3f1-0adac84dcec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33297dc0-f460-4635-ba0a-e85127ad70c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200c1aee-9a1c-466a-b2f5-4cb057fb195e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8a6d8f-0559-41df-8f1f-3fe893f06b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a197021a-24ae-4211-9f6c-6215f9ce473f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5ed0b6-85a4-473d-a49a-cc521ad0e2ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b656ae-429b-4ce0-a070-1719c3f78d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167ea4cf-2021-4417-ba20-253cd9055b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675ff639-98f7-4c20-b4c7-cbb7b7ce3366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3957b3c-7a70-4134-9011-45cbf12d490c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09796910-c11f-49b0-a8be-96cbdc71e0cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7478bde-4476-4704-9a4b-d58395a3f23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ace8a2-601f-4d6f-9c3d-32dfca573b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e0c113-1c4a-404a-b83b-9486a38e3599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a9cb11-d0cf-4833-a4ac-7b816fea7f60",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c90ba06-11dc-4d70-b17a-280f084bc4ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec8cdf5-7d1b-429d-8927-864cec6a7c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1857b47-5554-4e7f-b1a0-ed7f89c2ad88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47f2514-7408-4485-870b-05e736c0313d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b439751b-c85e-4e4b-9a53-c17dc4638c0f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b6d379-0e63-4208-b4da-244c8d11d107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c03fc1e-1369-45e8-afb2-cea7eb75cd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddee4bf-0104-4ba1-9f6a-f41dfa714cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3704c638-205f-4390-bee8-930cac16137e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4ff3a0-9201-4e54-bd72-d0905ed54383",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8cca6b-a553-4f00-97b4-87fa144503aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639c33b6-7e26-4285-a6fa-b778e73858c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed61d8b3-9fc4-4a33-a4f2-56e94b10d4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08592b21-69c2-462d-be5b-acff2ea3017d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd3217f-975f-4f84-ae6e-48f26465bea2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fd45a8-bb2b-4332-815c-57f986e892f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64839631-7bd0-4f1a-8be6-0c4c19947ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17ca3e1-0949-441c-8f80-05e4ee6c3609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6937794-d764-4e2f-82e4-54471807e296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e063f7-5dbf-4f7f-a001-4dd223089e41",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac13c77-9673-407b-b73d-997c4e275738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3677b1c4-0d38-463a-bcd5-7ff1cede941b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bd47fa-ef04-448f-98c1-6b115aafb47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b161948-cd61-4272-ba1c-ff89334b6f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fbab15-5512-4b0f-bffe-68a5e8cbe28a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2096db-7093-42f5-a65d-d97736c4a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d0109a-19c4-44a9-a290-c8520c89d125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19902191-c712-4427-a857-f1fce6da608f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bd223b-e97b-455c-9bbf-b7b64a662430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530d9b66-5406-45c7-b53d-731c877372de",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b55de10-54d0-41e7-8bec-395c86fcd8b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41c3186-f585-4205-af3e-027fc47f62cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f00c72-5fd8-487f-92d5-b4c6a14addef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908151a7-cbfe-49be-b968-e965d0c2d5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bcf79d-360f-498a-8e4c-3c8577d2d451",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b64397-812e-4fa2-87b3-536195df6624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac61962-9ed0-40ab-bd26-506779409fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409d70bc-068a-4cad-9649-dbc3a390f1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f123974-adeb-4049-9742-3a5157dd045c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed74b028-da20-4ab2-b1ba-183a78105ce8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad04a6b-018f-457b-8205-a713c3690651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57237cfc-2a52-4a9f-b1e5-810045ebcfbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35db69b-72c9-478f-abac-3cd195728e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db8135c-50ba-45ee-8846-f7fd2375eb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65e9c68-f3c6-411b-b2a7-05266caba512",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a82fdd-70a3-497e-b039-56b9209aea8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db0e57d-90c4-4072-a38c-c8b2ac3bb971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41a499b-0cc4-4801-b616-d8609d58555c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b318f0-f032-43f0-aeb9-1865e40ecccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8374d0ba-558b-4899-8c18-955551069239",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c2df5f-2a97-48bd-b9fd-05c695bdf025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e72439-8642-48ef-bc94-0117abc6152c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f63722d-d960-4ea6-bf3e-558c9e1dbadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d0e144-e35c-49a4-a6d1-81623d0892eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16ae5a5-324d-41d5-9401-449f2d1fb67b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c6cf09-1e2f-4217-84e1-0591b6245e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b7a323-bed5-43c1-9cb4-d51392c27006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e475a5e-3165-4768-9c85-47c3dd848802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1102a1a2-37a0-46b5-83b4-a76eebaa4d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90be7efa-4025-41ee-9e54-6c75d557117d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df2d358-d5ce-4ad4-b3bf-f7acb620c303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06270802-2357-46d5-8571-5d37a19e39b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53a4b1f-6f04-48b6-9ef9-4c600f867011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96d01c3-c554-426b-a1ce-61c0fe7bd9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2879c74-c74c-4b82-8314-6bbe4360c0d2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd04cc04-f861-4c32-a68f-79cb1f7174d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdabf1c2-2160-405a-8841-b83dae495e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b82a12-dadb-4c44-aafc-346a1774528b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2553180-0794-4e1d-abd2-efcb6de625e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb8d538-2161-404e-b774-b44fa21ef731",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bf1b01-3e07-4850-97c9-143ca6164def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32077b7f-1cff-4114-9ee7-43644c737093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dd9726-5771-4925-8727-f6822ab4767d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678a2d6e-8b04-43a7-8084-3b50feae0622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb211da2-76af-4342-94d3-e9c0e78d0589",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8b35dc-8af5-4c4a-9ed5-3b14116e3686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb01014-227c-4565-aba1-0af4bede90b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9d4f3b-1988-4f8e-9c59-f150912aa9fc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b8d070-7f11-4bd3-969f-6400d9fbf904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28fdc4a-7905-4e98-9e50-f5800c1ff6ec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b47f97d-3cf2-4898-9bce-448edc908875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "371dc4e2-94ac-4f39-bcb2-9433152fe53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f20b40-87fb-45b6-90f1-df5b81f55899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f02dc1-4e79-481a-9ccb-847ea407b07f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eca02f4d-6a95-40d6-bb6a-1c466daa5be8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93687ae5-0647-4346-98ea-68348c6e0f69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c23d6347-333d-4d3b-900e-296005da3650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c69f6b8-1c25-462e-97e9-71a33eb1d3a2"
                    }
                  }
                ]
              },
              {
                "id": "9668f9b9-5b1e-45ba-b3da-3cb0690c8607",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51ac8c1e-4c78-4538-8818-93e72caac36a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6a3f8b-00dd-4bc5-9ac5-2a0760044534",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f54ff483-b07a-4617-b872-c4de3cd283f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3922ec51-25a8-4cf8-a365-4e506c44589f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c6568fc-244d-4d50-98c7-15f2d49b1bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac490cc0-8e07-421c-854d-616699a6a836",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b261f07-2162-4871-bb76-34f04216050b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "deac0835-4a28-4622-80e5-099ac16ec00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f12d894-55b1-4964-8660-cdaf8bff9e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22909383-8ee2-47cb-88a7-edb542c5d124"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a8c0c8-a534-4fda-94cf-d910231d9428",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e2bbb2a-b9dd-436c-9843-d4dc906b12af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51f06cde-c7c8-4e78-b2f9-68aea32791b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab392239-1c6c-44ec-b258-01f2ead3c283"
                    }
                  }
                ]
              },
              {
                "id": "3fae77ed-ba25-44b4-98c6-0846d556cb16",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b0cf8f24-2de5-4d89-a8f5-4e4809513fa7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db08dd0d-0aa0-4d2c-8b7d-f792f326c73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "49f9f956-e407-4e51-97aa-c8960841a53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3153b792-8abe-4515-a271-2072346183b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31f6279-e7eb-4143-a899-d34b5a44137e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "93b5c2d2-dd7f-4fe0-9aa8-bb85129c7b68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a3c7a1d-e23a-431c-bf53-1eb4c957792c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb782df0-4268-497b-82c0-c42af14e1504",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a3c92492-2681-4281-a66e-d23dd285e85d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3515bcee-a487-4661-88f1-e6ed6e5bc413",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87d75210-0bb1-476b-8873-4019e801e292"
                    }
                  }
                ]
              },
              {
                "id": "395f4f0d-8d12-4c41-a37d-2363b2fd5849",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9364885f-3725-4c09-9475-8e4b8baba26f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30bad87e-2825-4250-96eb-b15a3a42f90e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86021899-6f94-42de-969a-8b6bb9727512",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c56dcb1-cbd4-4b88-9f15-377461e89002"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68ef8310-99f7-4ee4-b236-189ef5fcfcf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cd2d7b06-5557-49ae-868b-6c855da0fdf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "553992c2-897b-42fa-aff2-3b7dea00e909",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d0e9672-defc-4c7b-8cb7-35e9288cd3c4"
            }
          }
        ]
      },
      {
        "id": "12c73a83-6166-4792-a2e0-fbb62dc575b2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e4f85ee0-a711-4dbb-8d23-85518b4b2b4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "050013fd-9344-47b3-b750-c1e13fb6af08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5a1df90-7908-4f75-b4a6-a920446f2346",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f899a51e-f9f7-42ca-a924-f4526902642a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "affb64f4-8664-41ae-ade9-600536a8e98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf439bb-fd76-4017-901c-677d5c219810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b9a819d-f731-4153-83c6-4ba7d726bb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88818340-f399-4429-951c-b2fdc6793cce",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ca75f9-6e4c-4156-ba6a-ce7e0d84f68a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "859b527c-935e-4af1-a298-ce1ef0abfe29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407d5c95-97f8-43e5-8e49-526d3906f542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a990e75-d9e8-42ef-998a-854f107a2b15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c32f656d-77e5-437a-84bf-787d5eac8b4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9f95c63-98f2-41bd-a8ea-bd8ea5fb7de0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcad3120-342f-4aa4-99fe-e08ab0f0b34c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "754340e1-c7eb-4377-b8db-c7bbc9030c6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7311c09-76a0-43bc-aa42-b36a9af3fb4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "92da1396-609b-4fec-a556-1281a4a40850"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20ae3651-5233-451f-8fa4-0eac9e1dbb39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6717741-b74a-4302-8fa6-c4a1477257fc"
            }
          }
        ]
      },
      {
        "id": "38db2ea9-c66a-4cbb-864d-71c52b69360a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "846b111d-e82f-424e-89bb-ce83b14cf394",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d64d9f9-4248-47e4-bf16-6100ba7cdd76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51acce15-9015-4fb9-a1de-629925e6762f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b8ade9-df77-40fe-afa3-bfe9027c8d5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7166f4c-51be-4505-8df2-16cd467583b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc422155-5610-41a9-8090-2de744adb054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a06373c4-57ac-4f82-9aa2-33b8ccfbc621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ece8f9c-fd10-45e6-8bc8-ff14d7e3987e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64e7e83-e7e5-42a9-bfa6-b80b3cf10be3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "db5c8856-5126-467b-af1e-d07aff3bd499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf94799-8300-475f-b63d-2cafbea2d954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c150e2ca-b542-4382-aa73-6c73f8b1c4a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b5f52fa-ad4c-4c05-8ac5-feb988287f5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6b5ff0b-54d7-4f76-86a8-dea0e0e50b20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "954385bb-566c-4f3b-b6e7-6d1781e78904",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "554060fb-b649-4117-a3f1-406c2d029633"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf152feb-9e49-4518-bf69-005e1caa8529",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5194d30-b0fa-4930-9afc-3f9d5c30c155"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c806a2c2-3960-48d9-88c5-deeafb257e02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6416c15-dc6c-4014-96b2-b5593e5c41e4"
            }
          }
        ]
      },
      {
        "id": "736a3169-fb61-4cc3-9fb2-3c977f897638",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f9e4477b-512b-4293-a36f-7a9046a39028",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b97c0641-4a3f-455c-9921-2e25baf2c0a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "099847a9-e4f9-4af6-93e0-08419d5bf6b5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87243ead-e8e2-4930-b49c-e1237d0c81af",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7588be73-ab39-48ea-a1f8-96b18cc6a991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab9bd0d-86fd-46df-873c-b85e19205db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccd66e71-8093-4de9-b0df-0bc0e14ee5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09afd97-5988-4b8b-ae45-2b9247564832",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c2e336-2cb2-42cc-b4c7-b4ae9ac9cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bb08f003-5318-47d8-8031-385d5206243b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40414024-854d-4381-b047-94ced087fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4560cd03-8fe0-4188-afa1-02d916101fbe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4e795ec-39f2-43f6-8444-017308aad68d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09a5c8bc-6d48-4eb5-8c29-93545f059446"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b2d569d-a66d-4872-84c3-5b1fb0737ad9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cedaa1a4-b2ff-45a3-82a6-7ad435ea0a3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b1328f1-539e-47db-b32b-1339363d5721",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ddcebaee-80ab-4d2d-adc7-45cf430bd879"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a7594b2-9584-4e0a-89f8-57785f3fcbe5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6274fe0c-ccbf-46d9-bec3-8e578e218977"
            }
          }
        ]
      },
      {
        "id": "aebd7795-2344-47d5-9c41-fbf6e0c36e33",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4db9a606-3eb2-4878-9a25-ce2934b70471",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ef648cc-f50e-4907-a075-e2b135377fdf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9886020c-7d6b-4870-adc5-d3102af9b73e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bd72598-9dba-44e7-888a-e9d19daa0636",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2395319-b157-47b5-a28d-5566329f8d14",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 903.769230769231,
      "responseMin": 10,
      "responseMax": 9281,
      "responseSd": 1159.8950253460378,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684197427386,
      "completed": 1684197673067
    },
    "executions": [
      {
        "id": "e4e3dce7-02e6-4e03-ac3f-edd3555b86c2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3d5cc97c-6e69-44ce-ba33-41b7fc10e1ef",
          "httpRequestId": "c661f9e6-c3f9-4429-bff4-0bd7cb09334c"
        },
        "item": {
          "id": "e4e3dce7-02e6-4e03-ac3f-edd3555b86c2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "74b3c357-e170-4f43-90a8-233c814e6b7e",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "aaec9b98-f284-4aca-a1cd-e9ed3d20f6b7",
        "cursor": {
          "ref": "7aad2f46-a3d4-40ac-975b-6a7c73ec435e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d4fd65bc-aa12-436f-90f6-4bb3bbc29b24"
        },
        "item": {
          "id": "aaec9b98-f284-4aca-a1cd-e9ed3d20f6b7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c2c617dc-8da3-4345-a7da-5a433419305a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "aa85562a-247b-42c0-bd41-439eaee1437c",
        "cursor": {
          "ref": "e24aff38-4c5d-4a43-b0df-b4688796f1a7",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "290a37df-1a49-4e80-be00-d2bed418ad5c"
        },
        "item": {
          "id": "aa85562a-247b-42c0-bd41-439eaee1437c",
          "name": "did_json"
        },
        "response": {
          "id": "a836ac03-a23f-4909-a884-dd30794dccdc",
          "status": "OK",
          "code": 200,
          "responseTime": 2662,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c547ff5d-58e0-4978-bf83-7000c927cbc9",
        "cursor": {
          "ref": "607829a2-4de8-4482-8b8f-51c3e0ad4810",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8bbb8d0c-c562-4c1d-918a-3fe0bed7e4dc"
        },
        "item": {
          "id": "c547ff5d-58e0-4978-bf83-7000c927cbc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca28d496-ec36-43ff-b3b7-92d917baffe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c547ff5d-58e0-4978-bf83-7000c927cbc9",
        "cursor": {
          "ref": "607829a2-4de8-4482-8b8f-51c3e0ad4810",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8bbb8d0c-c562-4c1d-918a-3fe0bed7e4dc"
        },
        "item": {
          "id": "c547ff5d-58e0-4978-bf83-7000c927cbc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca28d496-ec36-43ff-b3b7-92d917baffe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8227beed-89f4-4ee4-bfce-7abaa8490058",
        "cursor": {
          "ref": "2578e84f-dc2a-4df1-b0af-5c3bfe30350d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "256df34d-69ef-4c67-8598-ba0da7921d78"
        },
        "item": {
          "id": "8227beed-89f4-4ee4-bfce-7abaa8490058",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "217c5787-58c6-446f-8d8d-d85020c9bdf6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 838,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc291e76-0e60-48c2-abb4-896494f5e9b4",
        "cursor": {
          "ref": "a0225bdb-9739-4889-a025-9c8804a1ca2e",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "877204e7-b7a9-4ead-b331-f09192b893cc"
        },
        "item": {
          "id": "cc291e76-0e60-48c2-abb4-896494f5e9b4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f7f0968e-ae41-49dd-bab4-12338d0b5521",
          "status": "Not Found",
          "code": 404,
          "responseTime": 848,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd764e6-9ad9-4989-bf77-58c6d0a1c3ab",
        "cursor": {
          "ref": "c1a6e9a6-75de-4ca9-99ef-997e1e384de7",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bbddf2d4-4829-4c5f-91a2-6db90e240e9f"
        },
        "item": {
          "id": "9bd764e6-9ad9-4989-bf77-58c6d0a1c3ab",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8c724334-2a0b-49b0-9a0c-cf974809c3b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e9c656-34cb-4cc3-b10e-ca4847766a24",
        "cursor": {
          "ref": "b92e6d48-26b1-4772-9dd6-aad9f98efa8b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e6441c0a-6e61-4753-9d95-1e122e8c8407"
        },
        "item": {
          "id": "23e9c656-34cb-4cc3-b10e-ca4847766a24",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8809a349-66d1-490b-a496-caf3548f0eeb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 738,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e9c656-34cb-4cc3-b10e-ca4847766a24",
        "cursor": {
          "ref": "b92e6d48-26b1-4772-9dd6-aad9f98efa8b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e6441c0a-6e61-4753-9d95-1e122e8c8407"
        },
        "item": {
          "id": "23e9c656-34cb-4cc3-b10e-ca4847766a24",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8809a349-66d1-490b-a496-caf3548f0eeb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 738,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892a7fda-d4b8-40c0-a473-8822aad83767",
        "cursor": {
          "ref": "c8ab5cd9-f0b1-4387-9f65-ec4738b6b808",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "13217fb9-82c3-492f-90b9-1dbd7ecb0aa0"
        },
        "item": {
          "id": "892a7fda-d4b8-40c0-a473-8822aad83767",
          "name": "identifiers"
        },
        "response": {
          "id": "0caed75c-7410-4082-9804-33122a9d5e39",
          "status": "OK",
          "code": 200,
          "responseTime": 2642,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28d95de-6b49-4b11-a8cf-8a7827e3769a",
        "cursor": {
          "ref": "1520d3ef-a79d-48a2-821f-4bf66336fc52",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8c3bb529-9f3c-4310-9803-866b764d2169"
        },
        "item": {
          "id": "b28d95de-6b49-4b11-a8cf-8a7827e3769a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6e781544-5576-4c74-8bda-29fdbf53b21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1189,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28d95de-6b49-4b11-a8cf-8a7827e3769a",
        "cursor": {
          "ref": "1520d3ef-a79d-48a2-821f-4bf66336fc52",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8c3bb529-9f3c-4310-9803-866b764d2169"
        },
        "item": {
          "id": "b28d95de-6b49-4b11-a8cf-8a7827e3769a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6e781544-5576-4c74-8bda-29fdbf53b21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1189,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f43b45-9db6-4613-9aae-954d58f51b7b",
        "cursor": {
          "ref": "ef44672b-b60c-4612-930c-bdbd0a0f5069",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1105ca88-8592-4fa2-979a-b28b1420d117"
        },
        "item": {
          "id": "23f43b45-9db6-4613-9aae-954d58f51b7b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1c61165a-e02f-4bff-bad8-31732f3b19d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1302,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ce3eaf-fa58-4fbd-98ac-e670562e9ecd",
        "cursor": {
          "ref": "da0ed20c-f87c-4d8f-a768-fbc853fc319e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "77533ef1-0ed8-4c9c-b567-c00cd61ecf8b"
        },
        "item": {
          "id": "11ce3eaf-fa58-4fbd-98ac-e670562e9ecd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "44a72b73-1229-4538-9fe6-e5e07747df6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac74039-010a-4687-b282-f884b2a10034",
        "cursor": {
          "ref": "7f6dd468-7937-4be8-922a-a27099525420",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b55c75f0-1c8a-46ee-912c-c8213972c263"
        },
        "item": {
          "id": "fac74039-010a-4687-b282-f884b2a10034",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "75464b5e-d892-4934-a036-1376ba887d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3c0e72-ac11-4ab3-8606-85c9074f9737",
        "cursor": {
          "ref": "67206f02-a12b-470f-b8db-6bd236d2ba84",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b7f763c7-17b9-4caa-8198-0bb11897599c"
        },
        "item": {
          "id": "6e3c0e72-ac11-4ab3-8606-85c9074f9737",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b64ec6ad-62c4-4484-8227-62ea0ede5d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68feff3-2d78-4ea5-971c-8ae46c4a0f14",
        "cursor": {
          "ref": "5fc9b15b-4c84-4266-ba1a-98dfbea5e1cf",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f4f91b38-d911-4b47-8fb5-f1f3344e5171"
        },
        "item": {
          "id": "a68feff3-2d78-4ea5-971c-8ae46c4a0f14",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d16a2f60-0a73-4a2c-9bbb-27075c9f66ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ae9714-907a-4160-b5e8-8691083b3a13",
        "cursor": {
          "ref": "e2857da9-f9c8-45aa-bac3-3e3047b326a8",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cdbb8b68-2e5d-4773-b933-882105d400a0"
        },
        "item": {
          "id": "33ae9714-907a-4160-b5e8-8691083b3a13",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "37152845-d1ba-4228-a736-80f441fd8368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e54c739-5499-49bf-ad8a-5e45c14e787e",
        "cursor": {
          "ref": "ba48b464-549d-4f2e-8803-a12ce059bf19",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "242ced8a-7aec-4729-a561-777f28038c3c"
        },
        "item": {
          "id": "3e54c739-5499-49bf-ad8a-5e45c14e787e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "49d58085-c83d-4e0c-b03a-717ee1c525c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12387722-8e27-4447-a8be-92d027aadb27",
        "cursor": {
          "ref": "a69a24c0-e7c4-4e18-9abd-ac52427892cd",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1b319936-fe80-4e75-add4-d6f313484caa"
        },
        "item": {
          "id": "12387722-8e27-4447-a8be-92d027aadb27",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "91c81d12-63d0-42c0-9b54-32fca262e104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bc7129-76e4-4b44-8906-e6f7c5f67265",
        "cursor": {
          "ref": "f87a52cf-dd01-4fa6-b40e-9f3dbc26674c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ccd13c1f-a909-4661-b6f9-a3fdd0aec8dc"
        },
        "item": {
          "id": "63bc7129-76e4-4b44-8906-e6f7c5f67265",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bbf3f59b-e260-44af-9943-4d3b76010d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175ca252-22e8-483d-94e5-d6090be5418c",
        "cursor": {
          "ref": "0f07ef57-dc55-486f-859b-95fca8e4f036",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8cc6bc12-540b-4814-bdc3-fe98be95684d"
        },
        "item": {
          "id": "175ca252-22e8-483d-94e5-d6090be5418c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a6736285-3dbe-444b-81c2-c98e1372113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15c7c03-c8b5-4aff-b53f-50f2b5462795",
        "cursor": {
          "ref": "ec007fdc-34f2-4ea9-b847-a2f7d2a7d9a1",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7cbfbba3-3ab2-40a0-a940-466f3a8a1e35"
        },
        "item": {
          "id": "a15c7c03-c8b5-4aff-b53f-50f2b5462795",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cdce3688-e9f5-4a74-b383-845f1999d45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dd98c2-daaf-4f98-a88c-25dd4713c3f1",
        "cursor": {
          "ref": "0394493f-77a7-4740-931d-d4194cae26a3",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8af2caa9-8637-4f78-9f1d-ff256b990442"
        },
        "item": {
          "id": "59dd98c2-daaf-4f98-a88c-25dd4713c3f1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c6e41ab9-4413-4989-acf9-ad6600c8b973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e0e335-a511-4ba4-8218-8f2b15725058",
        "cursor": {
          "ref": "0ffd1ac0-a87c-4bc4-b3b8-a1c337b4e57b",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4e9337c1-e822-479c-a93a-17b4d9392072"
        },
        "item": {
          "id": "c7e0e335-a511-4ba4-8218-8f2b15725058",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0fb298b6-95f5-441a-9285-7ef26d1815c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46f1a62-12ae-45d4-94a8-05482d1973d3",
        "cursor": {
          "ref": "472465ec-0baf-4b13-9007-f9d9e5cfd15a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2fabf85c-27c4-47a8-aa3d-8fcb87764a9b"
        },
        "item": {
          "id": "f46f1a62-12ae-45d4-94a8-05482d1973d3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6c0947dc-acb9-4f2f-abdd-72b577731212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdd0661-29b9-4251-8822-58fb96d38701",
        "cursor": {
          "ref": "8f6a5041-947a-4d2d-a90a-15a212af37b1",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1a915834-5f18-44ec-8ad9-527152ca0750"
        },
        "item": {
          "id": "ecdd0661-29b9-4251-8822-58fb96d38701",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2136afcc-0a26-4c18-b913-45b414d988be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f2b0b7-19d1-4fb7-b580-69197ed31bfc",
        "cursor": {
          "ref": "03210ae9-7fbc-4a2a-b82e-5e989223db38",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d7e0343d-fde9-42e5-a568-2096a265c93a"
        },
        "item": {
          "id": "37f2b0b7-19d1-4fb7-b580-69197ed31bfc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "658c3892-c40a-4ec9-a52b-214b34aeb8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4ce310-6002-45e0-814c-cae910b93a2e",
        "cursor": {
          "ref": "506df29e-5ab0-42de-adab-82ce699a55b9",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "69b762fe-ad28-4c4a-a6f4-d420702b18bc"
        },
        "item": {
          "id": "ed4ce310-6002-45e0-814c-cae910b93a2e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b4971a9d-b4e0-4d54-85f1-db02bee15054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1191,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98646c8c-2d13-4271-87ac-de8d34b62f3b",
        "cursor": {
          "ref": "cd2ca5e0-22f0-4d86-8e0c-15415267a232",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "54069a68-1ad9-4fe7-9ae1-1fae4cfb45c0"
        },
        "item": {
          "id": "98646c8c-2d13-4271-87ac-de8d34b62f3b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5b7ddb5c-9d93-4942-8a66-a00493bb172d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1267,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda86198-875d-4495-a201-52c30fbf5220",
        "cursor": {
          "ref": "29cb0ad2-f61a-4ef3-a4d4-e433447dd98a",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "36acb2e6-a454-40fd-905f-4b2a246f077d"
        },
        "item": {
          "id": "dda86198-875d-4495-a201-52c30fbf5220",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "07591934-a94e-41e9-946f-0b30a34b86fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1262,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28076182-5963-4fdc-9aed-184524cde563",
        "cursor": {
          "ref": "6a0f88fb-48ff-4785-adc6-f67440032fd5",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1bd113e7-caae-40cd-a468-38dd6fa7d8b8"
        },
        "item": {
          "id": "28076182-5963-4fdc-9aed-184524cde563",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0b86237a-8de7-42b2-8118-c492ac854924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1145,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818aa21e-398e-4270-9884-16cba913a2cb",
        "cursor": {
          "ref": "a35ef363-030f-4b99-a428-224d0e9284dc",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cd8ab3cb-676e-4ab3-a4e3-8822e7f78d83"
        },
        "item": {
          "id": "818aa21e-398e-4270-9884-16cba913a2cb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f1480790-c7b6-49c3-8c73-3e2395c8641d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e0422a-75fe-47ad-869b-be90cb4f6217",
        "cursor": {
          "ref": "9f51ce41-2e82-48cd-9e1b-6ad5b536be6b",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0978fdd1-6cdd-4573-bf35-05042e7cd635"
        },
        "item": {
          "id": "12e0422a-75fe-47ad-869b-be90cb4f6217",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "34ccd326-3040-4c08-9389-f2d342ad5946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5660718c-77f6-4882-93a9-318d2d63f200",
        "cursor": {
          "ref": "615c32e2-b49a-4b38-9f60-d9792fcc53b7",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8bb7c1b5-11ab-407c-a49b-50794d923d6f"
        },
        "item": {
          "id": "5660718c-77f6-4882-93a9-318d2d63f200",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c3ae3da8-2f52-4281-8dcb-d4df41d9447c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aaef22-b1a6-43e2-9776-675037793c47",
        "cursor": {
          "ref": "5df29748-ae60-45a5-b1ae-36a8df7b0412",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6f83248a-f783-4543-9355-0353b2795bc9"
        },
        "item": {
          "id": "25aaef22-b1a6-43e2-9776-675037793c47",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cbfa9233-dac8-4529-b289-4c70eeabac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7411a486-894d-4093-ac84-51316b24b75c",
        "cursor": {
          "ref": "30042e3f-c897-4463-bbf1-2ae4150ed425",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4d6c9887-695d-48f1-a999-8f74b19dc3da"
        },
        "item": {
          "id": "7411a486-894d-4093-ac84-51316b24b75c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "31cc1cda-6a52-49ef-b30f-03f3958ff033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0a1567-e5c1-4279-9429-e8bae4bdeafd",
        "cursor": {
          "ref": "1d42a93d-5190-4b95-8bd2-024357246a82",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "09de3ea4-bbe7-49c7-b2c4-2d60d44d142e"
        },
        "item": {
          "id": "7c0a1567-e5c1-4279-9429-e8bae4bdeafd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "44f1cfbe-e7a7-4c1e-8523-a2b23e31ed59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131794d6-fa24-4977-8b4f-c7e16a14fdea",
        "cursor": {
          "ref": "a203e183-4430-4389-b367-f62c704f585b",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c79a183f-bfce-4f81-92ea-b1d9d6b3cc5d"
        },
        "item": {
          "id": "131794d6-fa24-4977-8b4f-c7e16a14fdea",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "43d27322-aebf-4358-819c-6efcb402b0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656a9aad-7540-4036-b0bf-95fbcb736fd7",
        "cursor": {
          "ref": "1cfab3ec-3d74-4e9d-b867-7d07ce02e7ca",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eb6cd020-78e7-461e-9041-a2dc814e6311"
        },
        "item": {
          "id": "656a9aad-7540-4036-b0bf-95fbcb736fd7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "21902ace-9cd1-41da-a69c-11e44c76dd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc3b689-1b22-4c00-80c1-fb8c70eee69f",
        "cursor": {
          "ref": "dcd58e61-3e8a-44d1-b6df-1d6af5112b78",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "72ae7d6f-83af-4235-87d2-75b4486d2f8c"
        },
        "item": {
          "id": "7bc3b689-1b22-4c00-80c1-fb8c70eee69f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef03c677-283a-44d7-b622-f28d9e3844d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f21adf-4697-4558-b553-6d89bd7657fc",
        "cursor": {
          "ref": "36ab0762-ef32-4d34-9951-62fad8bc98b6",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0f8456d2-8d72-45f1-a2f3-ac612d4bf396"
        },
        "item": {
          "id": "b4f21adf-4697-4558-b553-6d89bd7657fc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "20ee0bc7-5438-4d0e-9167-aa42cb66ab5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b988b8-05e1-4e8e-b046-d492be21f704",
        "cursor": {
          "ref": "87ea22b9-638e-479c-808b-d81b0e1cd919",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "766d2206-fff2-4d5b-8720-29ef1ff1e7f9"
        },
        "item": {
          "id": "c8b988b8-05e1-4e8e-b046-d492be21f704",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1bfec53c-c811-461a-89bd-124d9967980f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0555534-f654-422a-9dab-d2de9ef07d84",
        "cursor": {
          "ref": "3baa8548-047d-4bdc-9166-8d66e5ef9f8a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "89340b1c-36d9-40cf-938d-edeb54a46161"
        },
        "item": {
          "id": "b0555534-f654-422a-9dab-d2de9ef07d84",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "92b5eab4-62e4-437d-a305-792bed07a589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5bebe2-6e71-4542-8174-1acb7b7e9672",
        "cursor": {
          "ref": "37ad3767-d151-42bf-b431-8d9d2356e4ca",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "652323c6-611e-462c-8237-8846b6b5271f"
        },
        "item": {
          "id": "0e5bebe2-6e71-4542-8174-1acb7b7e9672",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7c0397ca-056f-4e36-befb-4834b1e33cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7d5519-2fe7-4ffd-a02b-2dee8c06bf83",
        "cursor": {
          "ref": "b923b622-44e5-4e28-b947-98162eb5dcf0",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "eb5e4e3b-69b5-40ad-a95f-602bc12a3abb"
        },
        "item": {
          "id": "8b7d5519-2fe7-4ffd-a02b-2dee8c06bf83",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ee67fd01-e356-4d64-9ed7-7c4c88f8ec1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94a2fd0-9cb4-4e32-a0d7-2582af86af6d",
        "cursor": {
          "ref": "c67023a1-bf93-42f3-be56-d627fa5a2ae6",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "82c9f3c7-2d1f-4b8a-a74b-9f60959ceff9"
        },
        "item": {
          "id": "b94a2fd0-9cb4-4e32-a0d7-2582af86af6d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "879edfc7-42eb-495f-a383-220473817198",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 887,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a73bee2-2858-4b13-9023-810ca3c4eec3",
        "cursor": {
          "ref": "c8bfbe21-5c8e-4dc1-bc4b-d073cc1d7cb8",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "35c54a38-5411-413e-983b-a03dbb04798a"
        },
        "item": {
          "id": "6a73bee2-2858-4b13-9023-810ca3c4eec3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b1aef235-9b10-45bd-a164-47760c17fb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2da618e-e506-47ae-a024-bb2c027e67a7",
        "cursor": {
          "ref": "db166be7-5a35-4f32-9b93-19fb7bbdc8e0",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4764a479-ee6c-4b04-9720-24f5b957d1f7"
        },
        "item": {
          "id": "f2da618e-e506-47ae-a024-bb2c027e67a7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f7987fab-0abf-4c64-a6fe-80773c42155a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8e691e-250b-4163-b720-70da00c6515f",
        "cursor": {
          "ref": "60d065b1-b16d-4505-9477-f08466aa27f4",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b3f327bd-d0ae-4394-bdc6-2e1124fcf704"
        },
        "item": {
          "id": "9e8e691e-250b-4163-b720-70da00c6515f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ce17b463-f6a5-4bb0-8ddc-0fb9230aa01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ba2eb7-2faa-47d9-8da7-0ec55c852b67",
        "cursor": {
          "ref": "38251be3-7d04-4af7-94ea-b296731a6d9a",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "860066ca-4787-4848-a98c-7e05808fab3d"
        },
        "item": {
          "id": "59ba2eb7-2faa-47d9-8da7-0ec55c852b67",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "840ebbf6-72bc-4b0d-ba38-531c8d645f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d174ead-e02a-4c85-9d3d-291284268584",
        "cursor": {
          "ref": "8153910b-cf0d-4baf-bbf0-52993e607db7",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8d1a2257-b5c9-48db-bb45-c34c723710be"
        },
        "item": {
          "id": "6d174ead-e02a-4c85-9d3d-291284268584",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "10979316-255b-4426-8866-83e9f6510502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f27b292-b695-43c3-96f7-b3fcdf8ac3cc",
        "cursor": {
          "ref": "a466b82d-82b2-4072-a157-d3eced773acb",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e3872385-673c-4cc3-9b7a-9c293ac72db7"
        },
        "item": {
          "id": "1f27b292-b695-43c3-96f7-b3fcdf8ac3cc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a1228b47-5537-4b71-a2b0-11be44210e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba5aff1-3433-4388-8232-2fbe94322966",
        "cursor": {
          "ref": "2735e4b9-c3e8-4a7d-ab69-999c488a7a7c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ab404aac-3fe8-45d2-845a-667244cf0b6b"
        },
        "item": {
          "id": "4ba5aff1-3433-4388-8232-2fbe94322966",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "21a026fd-6893-4f71-91cf-fab769d552da",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 906,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce46378-7361-4eb8-a099-6ac1c1d26ab4",
        "cursor": {
          "ref": "c78eb2ad-4679-48bd-86f7-4c46a07937ce",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7089ce55-fc8e-485d-93ee-1758d026313f"
        },
        "item": {
          "id": "9ce46378-7361-4eb8-a099-6ac1c1d26ab4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e7039928-ff9f-4675-a388-60bd98281be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfe1c5b-5272-45b9-b50d-b933935671ab",
        "cursor": {
          "ref": "8f4eea09-5891-409d-86d7-224b6730cc26",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3a391a14-0a8b-404c-85bf-ebc4ced7d88d"
        },
        "item": {
          "id": "ddfe1c5b-5272-45b9-b50d-b933935671ab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c6396750-0f4d-4baa-abb3-24a1ec834ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f17318-3e4a-45c1-9c3d-15b090b63449",
        "cursor": {
          "ref": "5f1895f9-3b68-4ab8-813c-440255745e6c",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b15b14fb-6033-47f9-be2e-be50b21e7113"
        },
        "item": {
          "id": "a6f17318-3e4a-45c1-9c3d-15b090b63449",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1292813c-aeb0-4cfd-bde9-bfc53c29e323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22683184-dfbc-4c3c-aad3-05bcc27cd343",
        "cursor": {
          "ref": "b80ba08f-ff0d-4aa8-983c-81ac349e5903",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cb8f88b6-3f45-478f-9c1f-9905490eb0f2"
        },
        "item": {
          "id": "22683184-dfbc-4c3c-aad3-05bcc27cd343",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "839fdd67-d73b-4aa2-8636-cbfb5aba0056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b97f3f6-22d0-4054-8d00-b7df95bc7afa",
        "cursor": {
          "ref": "801426ed-0c91-4db8-8161-8b176264eb24",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2d0507bf-798d-4471-b4d1-f6dcbd91e720"
        },
        "item": {
          "id": "5b97f3f6-22d0-4054-8d00-b7df95bc7afa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2837b080-de4f-4fd4-9599-bec1399337c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b08a01-6ee6-4347-b466-70eb3b016288",
        "cursor": {
          "ref": "f878d2ff-1435-4bd2-88b4-18b5247c64db",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "843095ff-dbaa-4952-bba0-e1aec40ceb43"
        },
        "item": {
          "id": "c7b08a01-6ee6-4347-b466-70eb3b016288",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fb0bab13-298a-4adc-b979-406e7960d79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1300,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd68cfb-5d7f-40a6-b78c-74408590b5c8",
        "cursor": {
          "ref": "a56566c7-9cc5-44da-bd82-fe1d80e9c5b0",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "705b1bcc-5fca-4cd7-b030-2368ae2bf84d"
        },
        "item": {
          "id": "5bd68cfb-5d7f-40a6-b78c-74408590b5c8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "96d7c133-5811-4c83-a485-d3ba3c291c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1295,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5718e665-6b4f-408d-83b5-6910b739aa5d",
        "cursor": {
          "ref": "2c930083-b57b-41fa-89bd-9473afbd1382",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2a166cc6-372f-43ec-8c83-06480f9c3612"
        },
        "item": {
          "id": "5718e665-6b4f-408d-83b5-6910b739aa5d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1871ac4e-9001-48d6-b36d-1da6c569be20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1520,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca15eddf-fe3f-4b1d-a66f-c683b5a04918",
        "cursor": {
          "ref": "03bb06e8-c1bd-4ae6-88a6-b827f59fdcc0",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "40472345-9b50-4fb6-bbeb-63c1ab1eee0b"
        },
        "item": {
          "id": "ca15eddf-fe3f-4b1d-a66f-c683b5a04918",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "60a662bb-ea8d-47c2-b614-6f0f1d60f0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1402,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a7524f-7a3d-45cb-9572-4ea937bb7c2f",
        "cursor": {
          "ref": "99e36843-9929-4a25-b164-2c07b5220bd0",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3be795d3-1f5f-43ae-9b5f-095ddb540a40"
        },
        "item": {
          "id": "68a7524f-7a3d-45cb-9572-4ea937bb7c2f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ae639fac-28fe-4d18-8a77-ee2fe225bd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1489,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef6617e-71cf-440c-b99d-0999c9cf01d4",
        "cursor": {
          "ref": "8264eea9-31d3-40bf-9c92-19e86ef33d77",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "132d1628-ac8c-42c9-8ad8-3c98da67d562"
        },
        "item": {
          "id": "cef6617e-71cf-440c-b99d-0999c9cf01d4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e07075a6-90ce-48fb-a6a3-d7a37369e0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1276,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbc8289-40fd-4334-a812-6f401b849d60",
        "cursor": {
          "ref": "65f8a382-6de1-46d3-906c-a0d05d9df9af",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1a3b5aea-9324-4522-993c-8f047cc9d359"
        },
        "item": {
          "id": "7bbc8289-40fd-4334-a812-6f401b849d60",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3a542eab-8903-4817-985d-566df57f1032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1068,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f07bd2-86cf-444a-976b-7ba590b229d8",
        "cursor": {
          "ref": "56642ed3-00bb-41aa-adee-e67c33c57812",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e7159856-7996-4647-abc6-9d46093286a1"
        },
        "item": {
          "id": "d1f07bd2-86cf-444a-976b-7ba590b229d8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "26db164d-4877-467b-a05c-92988e75c989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bc15b2-bddd-4d6f-a296-f854294f7c95",
        "cursor": {
          "ref": "cf769ee0-ec66-4357-9ba2-01a3e04214a4",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5097de49-65d6-4e7e-b714-f3753cd0d211"
        },
        "item": {
          "id": "c0bc15b2-bddd-4d6f-a296-f854294f7c95",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a6446e07-bb96-442e-b58e-7a6437860d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27644b2-d8fd-48be-aaf5-7a06dcf238c1",
        "cursor": {
          "ref": "c18a901b-7b3e-436c-9a25-e7c3874db266",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "844d953b-2f15-495c-852f-4f392ce05dd1"
        },
        "item": {
          "id": "c27644b2-d8fd-48be-aaf5-7a06dcf238c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c3a09e62-f657-4c77-9e88-390419b419f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d03bf6e-a2f6-4c3b-9ef6-b9cd863a440d",
        "cursor": {
          "ref": "9235cad7-a2e6-4f95-8101-3615c50f2e12",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "09b65368-ad79-40ae-b4e0-642754d9df10"
        },
        "item": {
          "id": "4d03bf6e-a2f6-4c3b-9ef6-b9cd863a440d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8c089b70-f010-4c01-9de4-14f30e65d92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1372,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f71d6f-8983-4633-a62f-489635622388",
        "cursor": {
          "ref": "f67bc418-2467-43f1-bcfc-c2d9368fb1eb",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5ad235f7-7414-4baa-9285-506ae9f62848"
        },
        "item": {
          "id": "e9f71d6f-8983-4633-a62f-489635622388",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8ec3e110-78a4-4436-86d4-91fd99f0a02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1609,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43eea09-81dc-4e7c-9f4d-aa34e0540a4b",
        "cursor": {
          "ref": "f1a46d03-8767-44ee-a79c-9d13f226f7cd",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "41db8268-4f65-44f1-99db-96776fd511a7"
        },
        "item": {
          "id": "f43eea09-81dc-4e7c-9f4d-aa34e0540a4b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "58fc0c1a-39c4-45b8-8c48-46ff7fe64b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1080,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb01748-0355-496a-8277-e288c8357dd1",
        "cursor": {
          "ref": "34e59a69-a3a8-4094-9913-cbacbb9b6586",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "60183525-4705-4646-9cdf-621947b81d29"
        },
        "item": {
          "id": "bfb01748-0355-496a-8277-e288c8357dd1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "41b07c99-d6fd-4d6e-a03a-ca73007892b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c2720b-b89c-4e01-ab92-2bf7a6209d70",
        "cursor": {
          "ref": "0efb0c0c-f0da-466d-b25e-b78fbae1d2a0",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6979f53b-2a09-446f-b9bb-34b327bcec52"
        },
        "item": {
          "id": "c9c2720b-b89c-4e01-ab92-2bf7a6209d70",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "50f0add1-4be2-48a9-aa62-f7f5d040ffb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ecefb3-b5f2-456e-9a51-e56946b330e1",
        "cursor": {
          "ref": "23ca462d-bed1-4fd0-9ef3-9d7e37fbcad4",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2d0469eb-07dd-471a-a26f-eca93655788e"
        },
        "item": {
          "id": "24ecefb3-b5f2-456e-9a51-e56946b330e1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9f6a9f14-54b4-40f9-b5e9-22e3b88185e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f455c8-1ca2-4e22-8220-0277fcd5be22",
        "cursor": {
          "ref": "2fc76976-f1a7-4a96-9fc7-41fed70ff96c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f7cdf9f8-e6d2-4951-a125-56fe6a64c842"
        },
        "item": {
          "id": "39f455c8-1ca2-4e22-8220-0277fcd5be22",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5fb92d2e-7461-42be-834b-49714dd0db44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d186fd8-4128-4c8e-941e-fca2b25defa9",
        "cursor": {
          "ref": "9e5ef7f4-34c0-4fe1-81c6-ddb45e19fbb0",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1b1e1c5f-9e13-4e98-a9eb-f00041bfe3fa"
        },
        "item": {
          "id": "9d186fd8-4128-4c8e-941e-fca2b25defa9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fd56d944-0646-4ea8-8d37-0ad1dae9c59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54cff1d-1b86-4114-88c6-6fd65fa709a0",
        "cursor": {
          "ref": "43061c37-da4a-40d7-815a-d57a75b37579",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "42edc8c0-cf55-4e8c-bb46-b8f751e6377c"
        },
        "item": {
          "id": "c54cff1d-1b86-4114-88c6-6fd65fa709a0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7ad1fa6e-2b93-4ad4-816d-da6273d635ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7acd87-b920-4365-b762-fcfe39e357ae",
        "cursor": {
          "ref": "f18db942-a58d-4d7d-81c0-be043cac1201",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d92f8630-af94-4514-b363-12589acd63d9"
        },
        "item": {
          "id": "4d7acd87-b920-4365-b762-fcfe39e357ae",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4366db48-bf13-4c71-b977-c31bb05a0892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11aa6c2-1d2f-4378-a45b-2c68917c4412",
        "cursor": {
          "ref": "5f32a253-9dcd-49d9-9d2f-3ee1f7fae37a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1af3575a-8a53-465b-bd95-143800ee8bb2"
        },
        "item": {
          "id": "b11aa6c2-1d2f-4378-a45b-2c68917c4412",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0edb9c87-735f-4dc0-89a7-82bbea312818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc5eb01-6cc2-4304-b181-46e55ccbcda8",
        "cursor": {
          "ref": "fd158fc9-f4c9-48f5-bb2c-36741cd8e2ad",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "32f6b9dd-908b-4e26-81a4-c2e06131fdf9"
        },
        "item": {
          "id": "acc5eb01-6cc2-4304-b181-46e55ccbcda8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b6ba48a8-b0e8-4656-9d22-d12206bfe79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccb5231-f369-482a-bcb8-c2a5f18479d6",
        "cursor": {
          "ref": "9042aef0-bee1-4ef4-ba9b-605089b26568",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bc4272b2-a438-429b-a74a-a565ab9b8443"
        },
        "item": {
          "id": "6ccb5231-f369-482a-bcb8-c2a5f18479d6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c1b119b2-5358-4a71-8ec4-d40123a5251c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537ada0e-c748-43fd-b580-de93764469aa",
        "cursor": {
          "ref": "09fc0d63-fc34-43b5-b4c1-7725555a1ee8",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "faf1a71e-a32d-4741-8803-288b8f571d35"
        },
        "item": {
          "id": "537ada0e-c748-43fd-b580-de93764469aa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0cca874f-0afd-41da-826f-6d62c41142e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46138213-6fdb-46b5-b3d3-000d53a8262b",
        "cursor": {
          "ref": "e7ead36f-d91e-4d61-b01b-542ad9e81cba",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "395fad89-335c-4678-8597-66c70f533ce4"
        },
        "item": {
          "id": "46138213-6fdb-46b5-b3d3-000d53a8262b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9f430e96-67eb-4d8a-8df2-b0b8108559a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c256f5a-9eff-4e5b-9395-61ad01ac27c3",
        "cursor": {
          "ref": "b34ebbb7-d7ee-4a7e-83c5-5ba8e0b6fa4a",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "963bc956-4dc0-4450-b84e-788be7695051"
        },
        "item": {
          "id": "1c256f5a-9eff-4e5b-9395-61ad01ac27c3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f177fd12-2fdd-440b-b1c9-bf1957f625d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1021,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72245ed-0e84-4311-9e81-fc6e31b08768",
        "cursor": {
          "ref": "c6124883-dc9a-4022-9a76-de102253d769",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "026121e3-164a-4186-8bfc-992aa678a6ed"
        },
        "item": {
          "id": "e72245ed-0e84-4311-9e81-fc6e31b08768",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7858f6c6-9fcf-4b1a-b53f-c3a54dc7ebe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1246,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989aba3e-dc5a-4679-862f-e791979d294c",
        "cursor": {
          "ref": "2270592e-3b07-4c93-b92d-62a5403cf9ed",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4dfad17a-f64f-484f-9240-fde10e8ac3b5"
        },
        "item": {
          "id": "989aba3e-dc5a-4679-862f-e791979d294c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "08cbaa48-5b52-435f-8b38-b7ccd4110ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1283,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d382fc47-2bcc-4a76-bc57-c4cc51162c2b",
        "cursor": {
          "ref": "4a4b7ad3-2854-44df-a327-40eb585b6cd0",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2f23eeec-e0cd-4494-95ac-f75f0d34a4ea"
        },
        "item": {
          "id": "d382fc47-2bcc-4a76-bc57-c4cc51162c2b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "93eea022-81d8-4758-bc1c-4891ab9a5b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1213,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810a33f4-5d05-4a43-83a5-be3ae1ff9236",
        "cursor": {
          "ref": "81399068-78dd-403c-9bfc-053d43b51f20",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5330c186-c9f0-41f7-9df9-612203a2c48d"
        },
        "item": {
          "id": "810a33f4-5d05-4a43-83a5-be3ae1ff9236",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6fe21565-2ce3-40dc-9b92-0c5f618fc129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd4107d-d0ca-4034-9d30-ab6a361f78d6",
        "cursor": {
          "ref": "130d81de-fea0-4429-a0f9-5d18b46ab61e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1c01742c-5b6a-4065-b7a3-4fe58163bb55"
        },
        "item": {
          "id": "9fd4107d-d0ca-4034-9d30-ab6a361f78d6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9fd898a4-b64c-4d40-948c-2d90dddbf36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037499f0-4967-49c9-9e6b-150806520813",
        "cursor": {
          "ref": "67855260-bb9a-4c09-a044-f1ae623440bb",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "847ae467-7f75-449e-b93d-471f543021dc"
        },
        "item": {
          "id": "037499f0-4967-49c9-9e6b-150806520813",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "610ed55f-366f-475c-9212-52ec49ac30a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12852171-80b3-4c02-a318-66b6520b3d3e",
        "cursor": {
          "ref": "379589f0-99e9-4403-8be0-87c789b227f5",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "22833491-eeea-4ff3-9ae9-339623316d23"
        },
        "item": {
          "id": "12852171-80b3-4c02-a318-66b6520b3d3e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "81710a85-cd9f-4cb2-b90d-6d3a86654bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e6209f-d9c8-4180-82e0-423962f71e33",
        "cursor": {
          "ref": "a9d4c1af-af71-4607-a1c8-f31824d6a8fc",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "98842655-15a0-4d8a-b4a4-1275c8ce462f"
        },
        "item": {
          "id": "d3e6209f-d9c8-4180-82e0-423962f71e33",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "10644eee-9a93-45b2-b841-cbd4c6d31f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57dab34d-41b1-4292-8fa9-383bb7219e09",
        "cursor": {
          "ref": "7d98823a-076b-4dea-b7db-4557dfe6239f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e0dc5afc-23a1-4221-a335-107cccdfe133"
        },
        "item": {
          "id": "57dab34d-41b1-4292-8fa9-383bb7219e09",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8e3659ac-b952-4082-b58d-1a2e4fdc1979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c1bd62-9342-4400-b897-0f65adbfafbe",
        "cursor": {
          "ref": "f7612c2c-7791-4504-80fd-c85f30ee92a8",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d7f58fce-cb1e-4240-a335-26ee9ec5e4bd"
        },
        "item": {
          "id": "e7c1bd62-9342-4400-b897-0f65adbfafbe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "001087a6-5f8b-4b7f-abf5-7855828daf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25149a4-a7c7-40aa-bb1e-e1590711121f",
        "cursor": {
          "ref": "48298aff-5ef9-41c9-8189-b5503137f8b5",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b4ecd73f-a98e-44e1-af6b-5159c8e77d06"
        },
        "item": {
          "id": "a25149a4-a7c7-40aa-bb1e-e1590711121f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0b710537-3580-4f20-a0ac-111d48dd48ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baf560b-e1ce-48e7-aca4-ddd1cbdeb0e6",
        "cursor": {
          "ref": "5d601b70-07ba-455d-847b-37827c27862d",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd2cc634-ece4-4332-a600-74d8a46855fc"
        },
        "item": {
          "id": "8baf560b-e1ce-48e7-aca4-ddd1cbdeb0e6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "157a74f8-16af-4979-ac8c-8c61b27fea88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca24bb49-3850-40e4-8e2c-ce86a83c0ded",
        "cursor": {
          "ref": "69dfdb22-9eed-4118-8912-448f3fea1f1b",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ef620fb2-9dee-43fa-948f-f9ed1a54bb14"
        },
        "item": {
          "id": "ca24bb49-3850-40e4-8e2c-ce86a83c0ded",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "73095177-568c-48ff-9f75-857d05794252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cb3d76-d0b7-4145-bddc-c53d1ce8dd1a",
        "cursor": {
          "ref": "84234a4a-9898-4236-91db-c1ca6fb961d8",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3c1c5760-4bea-4cf2-88ec-c50a9bb6af12"
        },
        "item": {
          "id": "78cb3d76-d0b7-4145-bddc-c53d1ce8dd1a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3f9c9547-741e-41f3-ae6b-ebf4e3039537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3003d12-80b4-4b44-bca1-6859e8f9e0e2",
        "cursor": {
          "ref": "dadd532e-7423-4580-a51a-a0802b94c72e",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2ca72bdb-e0e9-40d1-879f-43b06f8f3428"
        },
        "item": {
          "id": "b3003d12-80b4-4b44-bca1-6859e8f9e0e2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2390efdc-8bd2-4bca-86c3-7887576dae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9e850e-7204-497b-b0bc-adeab60d268e",
        "cursor": {
          "ref": "8a3c2552-b048-460f-b2b9-9a6eeae4c968",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6b37598b-4d4d-4141-8abc-fdd9f32ee0b3"
        },
        "item": {
          "id": "9a9e850e-7204-497b-b0bc-adeab60d268e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2f928cfb-8ce8-4c52-9366-0b28b8019d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff798f3a-a575-4d5a-96cb-a15db4be7270",
        "cursor": {
          "ref": "51086acf-9ada-4d24-b5cf-90431d089744",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1f8e082a-9a4f-44b3-a45f-4e44d6e60edb"
        },
        "item": {
          "id": "ff798f3a-a575-4d5a-96cb-a15db4be7270",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9c8e03fb-a9e7-4921-a426-1b9a413d4824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76099317-8551-4fde-a979-6a085ca586a6",
        "cursor": {
          "ref": "7292295a-326b-4563-89d1-de98b2952aec",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e6b6b36f-8974-4070-b4d2-19268d3ce42d"
        },
        "item": {
          "id": "76099317-8551-4fde-a979-6a085ca586a6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "061466c4-8131-4050-908f-4ee260279836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab89a52-ef3f-4306-b523-c92f81bc6f89",
        "cursor": {
          "ref": "a1088d26-ac13-491a-acc8-d08af183f253",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2609717a-15e3-4658-b3e4-1aab4a655d7f"
        },
        "item": {
          "id": "aab89a52-ef3f-4306-b523-c92f81bc6f89",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2d08e220-cd64-4f80-a9b5-8d0e9b395e84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e2b0b4-7a7a-46e3-9cc0-2f89080471c9",
        "cursor": {
          "ref": "7e0d6995-8b79-4faa-9f36-784a67ab88c9",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3f7eef24-2fc9-4173-824f-e067212bdfed"
        },
        "item": {
          "id": "a2e2b0b4-7a7a-46e3-9cc0-2f89080471c9",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c8a5060d-e99a-4525-a9fa-0f65ce3b83dc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1343,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeedebfb-f235-4d96-ace8-683a20273f56",
        "cursor": {
          "ref": "3381266a-fc4d-4a78-a3eb-331c44f7b8d3",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "daea19f9-7ba2-4bc8-aaaa-987927ce66b3"
        },
        "item": {
          "id": "eeedebfb-f235-4d96-ace8-683a20273f56",
          "name": "credentials_issue"
        },
        "response": {
          "id": "346efd4a-8440-4459-a126-5f2ca9c18df8",
          "status": "Created",
          "code": 201,
          "responseTime": 7896,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a8d865-4891-4530-9db5-6a875753db8a",
        "cursor": {
          "ref": "f44ec275-a365-4b6a-9e1a-4f7276f8fd57",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fef46427-5d40-4ad2-9c5e-8997a2de5411"
        },
        "item": {
          "id": "52a8d865-4891-4530-9db5-6a875753db8a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a43684d9-cc34-4c6d-b078-f083e8ae7b95",
          "status": "Created",
          "code": 201,
          "responseTime": 5978,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff775398-be85-4b7d-bf22-29b65c2fa778",
        "cursor": {
          "ref": "be2e7c16-fbcc-460c-9e34-ab3ba1079d40",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c6e114ee-376d-46e5-a5e0-efedeb9ac123"
        },
        "item": {
          "id": "ff775398-be85-4b7d-bf22-29b65c2fa778",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "23e4e8b4-4ca5-43cc-b9e3-572e9a88a52c",
          "status": "Created",
          "code": 201,
          "responseTime": 9281,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88a83c6-0331-4b7f-830b-adaf6119c953",
        "cursor": {
          "ref": "696dbd3f-78b8-45b3-b2b6-0137a3e377b0",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec1467fe-2755-420d-a740-b70249ecf10f"
        },
        "item": {
          "id": "c88a83c6-0331-4b7f-830b-adaf6119c953",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ab7d1504-99a0-4fc2-8b69-6ad7a1a5688f",
          "status": "Created",
          "code": 201,
          "responseTime": 6588,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d0b905-3c2b-43c1-b743-201dbf97f030",
        "cursor": {
          "ref": "724eba28-edab-4f6a-a0f6-6b7c50905553",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "35fcece1-1a7a-4ab4-8eb8-4c847a58432b"
        },
        "item": {
          "id": "43d0b905-3c2b-43c1-b743-201dbf97f030",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "54d6f107-7dad-4f95-9c15-a5ad10fe3225",
          "status": "Created",
          "code": 201,
          "responseTime": 6576,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6a33c9-42dc-4343-9417-66e96f5db590",
        "cursor": {
          "ref": "866b3a5c-4177-46a3-b506-c66fd47076a6",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e2655a0a-0949-404c-a593-c81601ad605a"
        },
        "item": {
          "id": "ec6a33c9-42dc-4343-9417-66e96f5db590",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ca466b22-31f8-4ac0-89ea-ca71cb98a966",
          "status": "Created",
          "code": 201,
          "responseTime": 9060,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aabbe9-8daa-4b4c-a300-687815a0467c",
        "cursor": {
          "ref": "7b85b49d-4835-4c95-bf65-d2a500b1fb52",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "efceefa6-e527-45e4-89bb-5fea76d06012"
        },
        "item": {
          "id": "b9aabbe9-8daa-4b4c-a300-687815a0467c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0d5f00d3-9cdd-43ff-8013-bb43d3f13339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1241,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aabbe9-8daa-4b4c-a300-687815a0467c",
        "cursor": {
          "ref": "7b85b49d-4835-4c95-bf65-d2a500b1fb52",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "efceefa6-e527-45e4-89bb-5fea76d06012"
        },
        "item": {
          "id": "b9aabbe9-8daa-4b4c-a300-687815a0467c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0d5f00d3-9cdd-43ff-8013-bb43d3f13339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1241,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6982968a-61e0-4598-9dfe-eb67db116890",
        "cursor": {
          "ref": "8a4be2bd-d544-4196-946b-e7e330e0f909",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5a659d67-7beb-40bf-a7f8-6b824761db56"
        },
        "item": {
          "id": "6982968a-61e0-4598-9dfe-eb67db116890",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "060eb2db-05d0-4282-b004-5cc1083a9682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6f4864-262f-4904-a1af-13aab285746c",
        "cursor": {
          "ref": "f0d1f444-dc7f-4e44-8b4f-1585eed374a1",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "222ecfcc-9e99-47a8-b04a-d49d056e42bc"
        },
        "item": {
          "id": "cc6f4864-262f-4904-a1af-13aab285746c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "83c41e8d-1cae-47de-9c3f-57ecac38a368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1030,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e918db11-71db-410c-8a35-093307b5d025",
        "cursor": {
          "ref": "daf69b11-e91e-45bc-9a72-6e617d923ce8",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "509b083b-0e5e-4082-8262-feb51a2dacdc"
        },
        "item": {
          "id": "e918db11-71db-410c-8a35-093307b5d025",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "97c19374-20f6-4627-bd12-2ee48499fec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbf9736-6ce1-4826-9d04-24d7c5a5d3ca",
        "cursor": {
          "ref": "1e15678c-a772-4e6b-8af9-38874fae2b2f",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "11cd0e78-8337-4407-a888-1fa1b029a15d"
        },
        "item": {
          "id": "fcbf9736-6ce1-4826-9d04-24d7c5a5d3ca",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "54dd1fe1-d288-4be8-a60a-a2abf934e509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37876588-0f18-41df-96ce-6041e2200945",
        "cursor": {
          "ref": "6266b856-3f1e-4ef8-8fa1-79bc96c3b34a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2c8de10d-718a-4684-99e5-7377dd03f12c"
        },
        "item": {
          "id": "37876588-0f18-41df-96ce-6041e2200945",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f568f475-7865-4e57-8111-f8e46cb258b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec46e080-cc65-4f31-96bd-c6faf0c6ec84",
        "cursor": {
          "ref": "569e05b9-7c71-44c3-9c9b-de78e2418f2e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b14c6c1d-00e6-4345-94e4-ab8de3d96028"
        },
        "item": {
          "id": "ec46e080-cc65-4f31-96bd-c6faf0c6ec84",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "823e4980-4943-4401-8054-8b5a7a7078c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1320,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e83515-3854-4f73-b543-81f2716102ec",
        "cursor": {
          "ref": "e8005e95-df05-40a0-9a90-2aece04fd3cc",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a8967cca-2cd1-4380-90be-019cb44cf637"
        },
        "item": {
          "id": "e5e83515-3854-4f73-b543-81f2716102ec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4a22d2e5-8064-480e-b673-8663283f4354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2452,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f971949e-ca26-40b7-868d-8c2ed269964c",
        "cursor": {
          "ref": "abd1c1e4-8d18-4bdb-850a-a59f5f95ed35",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0d11ad56-6228-4df0-bb3f-0fe516b9d638"
        },
        "item": {
          "id": "f971949e-ca26-40b7-868d-8c2ed269964c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "115b9030-b71d-4abe-a7fb-24de7902c7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1945,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e567e8c4-f813-458c-826f-252ba7439e3e",
        "cursor": {
          "ref": "30ff51b2-a689-4eae-bf34-f37930964075",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fd5721f4-f255-4c97-8162-cd1e19a66d39"
        },
        "item": {
          "id": "e567e8c4-f813-458c-826f-252ba7439e3e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a385b966-898d-461a-8602-e3f37e511abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1680,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43090633-d092-443b-847f-7ba268eecbbf",
        "cursor": {
          "ref": "5fde4f0e-c08a-4388-a7fd-5340c95dd187",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6f988b5b-c89f-4acd-a1c1-de577e9824ba"
        },
        "item": {
          "id": "43090633-d092-443b-847f-7ba268eecbbf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "85bdd382-eff7-4555-89db-b67c719a6477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1054,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c562c13f-891a-4cc4-9bd2-230d534386fd",
        "cursor": {
          "ref": "04595940-37ec-4958-ac33-4d447cbeacb4",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1957d09d-50bc-4393-8794-06f41429631d"
        },
        "item": {
          "id": "c562c13f-891a-4cc4-9bd2-230d534386fd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "33e0e8fb-4e35-44b7-bed2-55768bd64028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1065,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4c0718-18d0-425b-9df1-c88d398fe798",
        "cursor": {
          "ref": "916a6709-2dcb-4550-ad7f-77f73bfbdb13",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a7a09651-6573-4b4a-9df8-7acde1eb82f2"
        },
        "item": {
          "id": "ee4c0718-18d0-425b-9df1-c88d398fe798",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bf23b5ef-0229-4a0c-aaec-0f14fd215de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd52fee-4ded-4fe2-b510-e0b6e98c8aea",
        "cursor": {
          "ref": "f8dc5dd7-49e3-405b-bb0c-6e8f3fae8ba8",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81068f60-59f9-4261-91c6-9b824259a231"
        },
        "item": {
          "id": "2fd52fee-4ded-4fe2-b510-e0b6e98c8aea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9a538c7a-01af-45c9-8d28-8b092503da32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89290a86-2565-4d29-8f56-f3ecc0773877",
        "cursor": {
          "ref": "fa78d39f-9ee7-4149-86fd-3846a14f2461",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1cf7e9c0-6ca9-4af7-8e91-1ed7de7ca243"
        },
        "item": {
          "id": "89290a86-2565-4d29-8f56-f3ecc0773877",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1b6b3685-ef06-4408-8b26-c16829262a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1898,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3b0cc4-c7d0-4fa7-bb8a-da08bce3a064",
        "cursor": {
          "ref": "e62bf22b-71a1-42f0-9be0-7e6049bbe3f8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0fab54f1-d4be-418b-aa9b-1da9174d96db"
        },
        "item": {
          "id": "9f3b0cc4-c7d0-4fa7-bb8a-da08bce3a064",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e21eb6bb-5d54-4bf6-880f-4b491d60cc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2140,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7121c02-4fdd-4750-8f51-c9f1364a87cb",
        "cursor": {
          "ref": "eb9dd07d-de37-4085-a331-52d4f3afb0a5",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6954eee0-56db-478f-a136-f1b2f5efca23"
        },
        "item": {
          "id": "e7121c02-4fdd-4750-8f51-c9f1364a87cb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "853cf01c-5e76-4250-a54a-8f0dc31be030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3421,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634e4b9e-3ae4-4f45-83bb-272860809425",
        "cursor": {
          "ref": "c110f82d-6c62-4668-8fbf-30b949e0011a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4f3dc254-e373-4c85-a182-b4a800938888"
        },
        "item": {
          "id": "634e4b9e-3ae4-4f45-83bb-272860809425",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6786012e-89ba-4da1-afba-aaf541d18c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2298,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ea0c5c-fc30-4253-9f3d-e04b9f01e04f",
        "cursor": {
          "ref": "eada41f1-59cc-4b37-b090-f2ffe9ebc3fb",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "87f6f390-20d5-4570-b99e-d9c29339402e"
        },
        "item": {
          "id": "59ea0c5c-fc30-4253-9f3d-e04b9f01e04f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c8425528-8bda-49df-a77d-48887a00818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1980,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba1e700-ca4d-4add-a84f-93d8c29cbcb7",
        "cursor": {
          "ref": "d287444c-9bd8-4295-b050-70b529b4b27c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2498ccb0-493d-49b3-be3a-7917448335c3"
        },
        "item": {
          "id": "9ba1e700-ca4d-4add-a84f-93d8c29cbcb7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0588cbb6-91fa-47dc-857e-ff8d191c8940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1065,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e593e9-939d-42e7-bd0c-29dcfdd2e556",
        "cursor": {
          "ref": "6e029cce-6acf-421a-a2b8-7ef1144db8cb",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6749b183-d6f4-4330-9332-0250075fb512"
        },
        "item": {
          "id": "59e593e9-939d-42e7-bd0c-29dcfdd2e556",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7676629d-5d36-46d2-b731-438b4b3fd950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a277e45-2e35-4e0f-b393-ab035181c9ce",
        "cursor": {
          "ref": "7f0c7820-1397-4ad5-a119-cee703cc72f6",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e8e713e3-985c-4a3c-bd49-e10d7cef6a0d"
        },
        "item": {
          "id": "8a277e45-2e35-4e0f-b393-ab035181c9ce",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2886bafd-08da-4a82-8c9f-0bdcf91c7e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1445,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0831a7e-d003-4194-974c-494a6e8ef1f7",
        "cursor": {
          "ref": "abdf66b9-a71b-4d1a-b710-81bb255b50ac",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ad60c1c3-b4cd-4da8-b4ad-74ddd2ec48bd"
        },
        "item": {
          "id": "d0831a7e-d003-4194-974c-494a6e8ef1f7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6b788173-055c-448a-8b70-8183a17ecc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2089,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae6038f-1d3e-4ca9-bb4d-8cc5a64f265a",
        "cursor": {
          "ref": "9497ad71-fa1c-4a64-acf2-30c1de9be8bc",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7859d8fb-276c-434d-8c57-82eb520b1d28"
        },
        "item": {
          "id": "bae6038f-1d3e-4ca9-bb4d-8cc5a64f265a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d549b910-42a2-41c3-abdc-97e17bb4b0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3201,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ef3689-4143-4d52-af88-6b18e9828211",
        "cursor": {
          "ref": "6dd974bd-43a5-4a04-9176-007100a4f6ae",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "769abd0c-3e57-4971-bb6c-b9669fc531d1"
        },
        "item": {
          "id": "74ef3689-4143-4d52-af88-6b18e9828211",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4caa2152-1ee0-4900-ab81-3fe69231b969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2953,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e84d51-ed14-40aa-987c-4983a2afe9f1",
        "cursor": {
          "ref": "1b44de81-39e0-4d57-8cb3-be32865bede3",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "200f2e26-39a7-4bfb-8899-9afae50a6777"
        },
        "item": {
          "id": "e5e84d51-ed14-40aa-987c-4983a2afe9f1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b4a6604-8322-4e09-b07b-059ec651dc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1116,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667fe7b2-a732-4eff-9282-cabf3070a0f6",
        "cursor": {
          "ref": "044bf711-2ffe-4628-9696-787e3cbbced2",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b2a368c4-5fb9-4215-84a0-78d399546c71"
        },
        "item": {
          "id": "667fe7b2-a732-4eff-9282-cabf3070a0f6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "670897b7-5037-4fd9-95fa-597a1bcb6706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb284bfe-9eb9-4b0a-af3c-03dc1c2e21af",
        "cursor": {
          "ref": "3b185118-8c98-422c-a8ee-0adc81438e43",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d27f1f67-1324-42fe-bbcf-204846a43746"
        },
        "item": {
          "id": "fb284bfe-9eb9-4b0a-af3c-03dc1c2e21af",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8cd685b8-3f8a-41d5-9f1f-ef7df1242d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47610dd3-9fb2-4dbd-b831-d2da5bb9ebdc",
        "cursor": {
          "ref": "ecafc2fb-4ea0-4741-babc-5c60d3e96e2d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "24e18d13-6342-4f10-b570-9437fc537825"
        },
        "item": {
          "id": "47610dd3-9fb2-4dbd-b831-d2da5bb9ebdc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5e9b6b73-4e93-4088-be37-3b6dbfa90230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07117614-8280-4445-8702-907942f329e7",
        "cursor": {
          "ref": "2db1f792-5d1a-49b9-9f3e-a308b218057b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9ad2ce19-daa8-44b6-af9e-9df62752b425"
        },
        "item": {
          "id": "07117614-8280-4445-8702-907942f329e7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ae2a8a7-3f5d-4289-ab4c-160cbb52bf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2202c395-09ce-4991-bda8-96c39e8c5957",
        "cursor": {
          "ref": "b9a7ace1-5aa1-4fdf-879b-a823baff99c1",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ef99c023-8cc6-42fd-9d0b-8bf198ef5684"
        },
        "item": {
          "id": "2202c395-09ce-4991-bda8-96c39e8c5957",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "16f6525e-3161-4f31-898d-ebe4da53d87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152a5692-893e-4f0f-8eb3-15cbd25fad57",
        "cursor": {
          "ref": "70798818-ac99-49fd-a8ee-ad5011dbfd35",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9050937b-6468-4efd-b53e-4850c93c39f0"
        },
        "item": {
          "id": "152a5692-893e-4f0f-8eb3-15cbd25fad57",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4949376d-ef1a-42d5-bb15-6948ea6b5a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126e12bf-b5fc-48c5-9408-1e5b48f1938d",
        "cursor": {
          "ref": "2c48c61f-4a52-4894-862d-9fc31eab839d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "83d6b531-6fbd-4650-92b9-8b9a41607355"
        },
        "item": {
          "id": "126e12bf-b5fc-48c5-9408-1e5b48f1938d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "28027d44-4f81-4778-af9d-127bfab196c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034683fa-9812-4984-9fab-48c76f337a70",
        "cursor": {
          "ref": "c863768c-1469-4534-87d8-b491d0c7df17",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "aa0c21bd-07a6-4fbb-b15a-b2582385b54f"
        },
        "item": {
          "id": "034683fa-9812-4984-9fab-48c76f337a70",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "41efb14f-d7df-40f7-b431-c95dd110db69",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 591,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ad39ce-2282-4c88-9049-17d61cf722c0",
        "cursor": {
          "ref": "f8488f9b-e80c-4d07-8b67-8570b3317d3c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5e41cf17-aa60-44a1-85fe-07e6a5b96ee5"
        },
        "item": {
          "id": "03ad39ce-2282-4c88-9049-17d61cf722c0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8e3a8269-28d4-4ebf-a781-0a43223467bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ad39ce-2282-4c88-9049-17d61cf722c0",
        "cursor": {
          "ref": "f8488f9b-e80c-4d07-8b67-8570b3317d3c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5e41cf17-aa60-44a1-85fe-07e6a5b96ee5"
        },
        "item": {
          "id": "03ad39ce-2282-4c88-9049-17d61cf722c0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8e3a8269-28d4-4ebf-a781-0a43223467bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a693ada6-cadf-4b91-8cc9-6c56b31af30f",
        "cursor": {
          "ref": "274d2420-d8d1-48c3-88f2-c53594de4bae",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "23640b10-74a4-45a3-95d5-3eac4f3175bc"
        },
        "item": {
          "id": "a693ada6-cadf-4b91-8cc9-6c56b31af30f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "41bc8372-802d-4bca-b8f2-7d9270b9b75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dce9163-dff4-4872-a18e-99a677c59a3a",
        "cursor": {
          "ref": "77726d06-7221-4063-ab89-2c636edad45a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cb5c3263-cd31-4808-b821-6fafaa39bbb3"
        },
        "item": {
          "id": "7dce9163-dff4-4872-a18e-99a677c59a3a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "96b46b9f-baa1-4403-aeab-9f2af3ee2376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7bd9cd-5969-4062-9dfa-0a38990cbccf",
        "cursor": {
          "ref": "374615fc-b8a7-47d5-a611-8a8518e79824",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "62c3f9b6-ee4e-4b31-b4bd-727f67732c0f"
        },
        "item": {
          "id": "ec7bd9cd-5969-4062-9dfa-0a38990cbccf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "895d7be8-2f95-4e92-8fe0-078ab9844ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f945f5c-0dbc-41d9-ac7a-63d411df34d2",
        "cursor": {
          "ref": "17257bb0-5163-497b-97a1-993b25d1683d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c16bd0c2-dfe2-42fd-928c-b38673e1b3bd"
        },
        "item": {
          "id": "0f945f5c-0dbc-41d9-ac7a-63d411df34d2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d1bfda1e-118b-4948-b984-92e9f84ac4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115961f7-7eb0-4a95-9c1e-16f9f73d56ca",
        "cursor": {
          "ref": "8785232d-63b0-4fc6-b0a4-27c4e05ef8a4",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8775bcd3-5866-4599-a472-33564dc4449d"
        },
        "item": {
          "id": "115961f7-7eb0-4a95-9c1e-16f9f73d56ca",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f410b254-b305-48b3-8a0d-edb38cffb368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d909d535-2a8c-4841-9e75-52b64206045c",
        "cursor": {
          "ref": "1d8bbefb-35aa-4bd6-bec5-703c75c72df8",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b9ddc49d-98ad-4cbc-b79a-c645367f26ff"
        },
        "item": {
          "id": "d909d535-2a8c-4841-9e75-52b64206045c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e9763001-5719-4e66-b84a-6879a944b075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80106afa-3208-4d80-94f7-02c5113f4872",
        "cursor": {
          "ref": "507d9cb8-d79d-4564-988c-f1c9989f41c7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c760715d-56fe-4cb6-884f-2e5e56a9fa41"
        },
        "item": {
          "id": "80106afa-3208-4d80-94f7-02c5113f4872",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "aa92c0f7-4e6b-4e21-a263-5a0697d0751b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07a9c5d-2107-4003-b172-e124f49c060d",
        "cursor": {
          "ref": "7745c176-4f74-4621-bd81-fdd9accd5e5c",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2b00f4c7-0113-49ba-aa4b-8285e575c439"
        },
        "item": {
          "id": "d07a9c5d-2107-4003-b172-e124f49c060d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ce9d389f-5704-4ebc-9ea8-4cc1f5cf182d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f789dc-7286-4e65-9f02-c42681fd9ae2",
        "cursor": {
          "ref": "7211dfee-3437-4380-8832-3ec0c96e3321",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "80e9f5af-3b00-40cb-a311-1378e50a92aa"
        },
        "item": {
          "id": "35f789dc-7286-4e65-9f02-c42681fd9ae2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "baedf2f8-86ef-402b-81d7-42705188587e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8ad43c-3f78-41a7-aec8-c9ee98a28bf7",
        "cursor": {
          "ref": "d69041b9-e5ac-4991-a5ea-3b7882e07822",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "18631051-fb86-41d4-b198-439974741a86"
        },
        "item": {
          "id": "9a8ad43c-3f78-41a7-aec8-c9ee98a28bf7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fe11e338-5c67-4d50-86b9-c964a946817c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd18d969-be6b-4f29-a6aa-e91d91a57acb",
        "cursor": {
          "ref": "6cdc8b36-4f5e-487e-920d-ab6bfebda299",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d6ec4616-2adc-428f-985f-4f564489d8ab"
        },
        "item": {
          "id": "fd18d969-be6b-4f29-a6aa-e91d91a57acb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "58d4eef5-2c57-4db4-8577-8c304fdacd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb4e940-a2f1-4f41-a2f9-37aae11f25f2",
        "cursor": {
          "ref": "af9e731a-10b7-4a0c-8b13-b3bebf03309b",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4f40c1de-9127-4bcd-8442-05c77be32983"
        },
        "item": {
          "id": "afb4e940-a2f1-4f41-a2f9-37aae11f25f2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "faf6c4da-9c1d-4bf0-b12c-eb2b61947dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7374aacf-290a-44c3-925e-f304a6d4bc72",
        "cursor": {
          "ref": "6bfd8116-048a-4413-857e-59480eb5af92",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dc81df95-a226-4c9c-bdee-45b781dd4c1e"
        },
        "item": {
          "id": "7374aacf-290a-44c3-925e-f304a6d4bc72",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dc5d57b7-18ce-4cf8-b20a-7b2002f005c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c6cd6e-8244-42b9-84ea-50c4886c6b08",
        "cursor": {
          "ref": "6974dd1d-1165-4d4c-8fd7-d9140040ed90",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "03b0136d-d6f5-4f4f-9b55-7e291e331aa7"
        },
        "item": {
          "id": "27c6cd6e-8244-42b9-84ea-50c4886c6b08",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "34046f10-2658-4db1-a409-5cab0a38d3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5f9fdc-7aba-4517-a6fb-ecf546f29e96",
        "cursor": {
          "ref": "e49ccd45-df24-4c1c-b576-bf48bffe883a",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "05cf635b-2be7-46e8-881d-7263ad3dc2db"
        },
        "item": {
          "id": "3e5f9fdc-7aba-4517-a6fb-ecf546f29e96",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a759057e-cef5-46aa-afed-7fc29e33523b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb9b8c2-ace5-4087-a00b-5888af09fc70",
        "cursor": {
          "ref": "f57e6893-2768-477a-ad7e-f59812cdc185",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5ae388eb-52c4-458c-8301-8bc850ee566b"
        },
        "item": {
          "id": "bdb9b8c2-ace5-4087-a00b-5888af09fc70",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fa320cf7-eaa2-4d68-a4c8-a6858dca1f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a642c8-a1d2-480b-8d31-05b0a383a04f",
        "cursor": {
          "ref": "71bc0289-ddce-4dde-8989-40fe695e0a45",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c1be0c3f-2f52-44ef-ba86-9a72d67530cf"
        },
        "item": {
          "id": "76a642c8-a1d2-480b-8d31-05b0a383a04f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "60701ef7-6985-4f55-aec1-4048e0a6dcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a219dc-85cd-4eb6-a126-40bbc24346d6",
        "cursor": {
          "ref": "51dacc64-ea4d-43f4-93a7-facbde69e88e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1a365717-400a-4987-83fc-c6726cc7c0b0"
        },
        "item": {
          "id": "18a219dc-85cd-4eb6-a126-40bbc24346d6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e2f56bdb-25d6-42d4-a3a8-2e6d05cba754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be01078-db66-4280-ae60-1b0feb1e6fb6",
        "cursor": {
          "ref": "a88bd55c-63e2-440b-a7a2-276739a08f9f",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "460c37f5-986a-4d58-8a01-36fa03d2e2a3"
        },
        "item": {
          "id": "8be01078-db66-4280-ae60-1b0feb1e6fb6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "343fb72a-ece5-4797-81d8-9b3eb39ac8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d6f8d4-8a2b-488b-86a1-9bfd9452fd7e",
        "cursor": {
          "ref": "bf29493b-9b21-4d9b-be90-fab4dd169188",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1761017e-215e-4852-9206-74a2a449eeb1"
        },
        "item": {
          "id": "e7d6f8d4-8a2b-488b-86a1-9bfd9452fd7e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7f68e3e3-478a-486b-81ba-77e18132f6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60db5608-1721-44a8-8970-a220b87b6884",
        "cursor": {
          "ref": "3e8943c4-790b-4895-8bf1-76516068418f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "69c0422d-2219-44c0-bbd1-904aa00a1760"
        },
        "item": {
          "id": "60db5608-1721-44a8-8970-a220b87b6884",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "38aee18a-7357-414a-bef5-eb74e5453de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8235a2-579b-4d7d-8416-a44093a81a06",
        "cursor": {
          "ref": "cf719db9-d7ea-43c2-a22e-24d96ea57269",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0cd1384e-f15b-416b-a819-efd3af94d47e"
        },
        "item": {
          "id": "4e8235a2-579b-4d7d-8416-a44093a81a06",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "14a010a7-cd86-4620-9a2c-ecb00feba37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51da957-f4b9-4dd7-990e-301d25658937",
        "cursor": {
          "ref": "72982892-93dd-4459-bb88-2ea9d5b60172",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bc544ec9-199f-4313-990a-aa1b2d1d4239"
        },
        "item": {
          "id": "c51da957-f4b9-4dd7-990e-301d25658937",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e52c902f-2894-429e-ac3a-55b1e0b022bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b70287-e87d-4f82-8ddb-314d1296e309",
        "cursor": {
          "ref": "086c33e2-cdc9-41bc-9068-146f560f2d2b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7a7e032d-2c8a-4e18-8639-38037ad07183"
        },
        "item": {
          "id": "c8b70287-e87d-4f82-8ddb-314d1296e309",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "925613f3-efb8-4d50-bd6d-06b6551a263e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06556ea5-b632-40f0-a60c-108072532642",
        "cursor": {
          "ref": "1df48f75-acae-403a-832e-5a7cb2e508f4",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e10be980-870f-4f90-83a3-3dab1e9e6061"
        },
        "item": {
          "id": "06556ea5-b632-40f0-a60c-108072532642",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6f45692f-f25e-4b2c-bedc-d93cf808bad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd02d0d8-c3e0-4a1f-8cc4-5ecdd2fc46e4",
        "cursor": {
          "ref": "e4f576dd-575c-42b3-adea-86138f7ea11b",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d3c6a276-3469-41eb-8dbc-cee30da7e59e"
        },
        "item": {
          "id": "bd02d0d8-c3e0-4a1f-8cc4-5ecdd2fc46e4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5e62b5ed-f1a6-4139-ab40-1b3c5f598025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e99ffa8-d46c-4dda-a8a8-53c7c12a2945",
        "cursor": {
          "ref": "26bbf70c-00b8-4e79-8d49-3d77dc4ecca7",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2940a64f-e9a1-4285-b155-558aab6402f2"
        },
        "item": {
          "id": "6e99ffa8-d46c-4dda-a8a8-53c7c12a2945",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "83a907f3-ef09-4fac-ba04-8d269820b782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3e7e15-b77b-4952-9e52-f641dd3f930e",
        "cursor": {
          "ref": "ae13c56b-20df-46d9-be83-6a1728ba2bcc",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3efa1816-d520-401b-97db-be01539c7a3d"
        },
        "item": {
          "id": "9f3e7e15-b77b-4952-9e52-f641dd3f930e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d8c8f529-ed2f-4b91-837c-a1fd3ceccdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8efb5fb-b1d1-422e-8a35-e52232539ca8",
        "cursor": {
          "ref": "be7a2e27-27d3-476f-8b2a-173f61a5c448",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "989d8eda-ec26-40ea-a22d-3fa1c8f27de5"
        },
        "item": {
          "id": "f8efb5fb-b1d1-422e-8a35-e52232539ca8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "960deb64-ef24-4181-aee2-062456e72d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263981fa-1112-4f9d-89f0-f28089b55774",
        "cursor": {
          "ref": "f9c432ba-e278-4eaa-8491-e56d3037f4d8",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "23a7ce75-cd1b-4e46-b0f2-68713452989c"
        },
        "item": {
          "id": "263981fa-1112-4f9d-89f0-f28089b55774",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "81e84040-8e21-4bac-bda0-5f27cad2c2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704e846f-c30e-4c3d-9d2a-29f0c03d73e9",
        "cursor": {
          "ref": "4f28758c-52ae-46ef-9f46-401957420a55",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8375f3db-7380-41ed-890e-6fce0144c385"
        },
        "item": {
          "id": "704e846f-c30e-4c3d-9d2a-29f0c03d73e9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0962a239-e1de-43da-9dfb-e7f1d0a74f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b554a08e-91bb-46b5-b854-e9a156e736e9",
        "cursor": {
          "ref": "fc6edfa6-3a41-4333-93f6-80c09bf9767d",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1ccb2779-380c-44f9-8fb5-3c634ba4ea52"
        },
        "item": {
          "id": "b554a08e-91bb-46b5-b854-e9a156e736e9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "26a3dcc1-d2b5-4243-994e-aeb9a90e861f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f845bf5d-d00c-4a41-9e41-391065c63c7f",
        "cursor": {
          "ref": "83576b88-3fd9-4214-854c-1b36f5b9a2a3",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5185666c-a592-4732-9ec0-33b2fe636b97"
        },
        "item": {
          "id": "f845bf5d-d00c-4a41-9e41-391065c63c7f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1aa3f1af-52b4-4e2d-8ec0-0c52ffc2ca3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3027bf-1f42-461d-8054-ae695339747c",
        "cursor": {
          "ref": "a22ab09e-d6d0-4f05-8072-391621cd61e8",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "20202d80-0a6a-4a50-be7f-be7f2a87a501"
        },
        "item": {
          "id": "fd3027bf-1f42-461d-8054-ae695339747c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "93338a00-cd12-4ed5-a820-5b889cff80a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0799c0b0-ab8b-4b16-b1bf-ff5d5a6ae8bc",
        "cursor": {
          "ref": "a1619db4-34a3-4365-bdba-23a6132a2764",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a2fd28f2-d95f-4203-89e9-0e550eb85803"
        },
        "item": {
          "id": "0799c0b0-ab8b-4b16-b1bf-ff5d5a6ae8bc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "356ef7c7-64b7-4d30-9ecf-9043b9675236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5bd513-4976-4a7c-98bf-2ea3000901b9",
        "cursor": {
          "ref": "99959953-64d4-4c7f-bdd2-1d730b05c497",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "eb34fff3-b4b7-4cce-b6b2-d4a271e42131"
        },
        "item": {
          "id": "dd5bd513-4976-4a7c-98bf-2ea3000901b9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2b162628-be20-43a0-9699-853b46e3ccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7703d71-1828-4d42-8c10-97be4c73e524",
        "cursor": {
          "ref": "cb8baf50-07d2-4eb8-ae7f-89077d41b073",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bda46c58-6f98-4626-a24f-6d264c370522"
        },
        "item": {
          "id": "b7703d71-1828-4d42-8c10-97be4c73e524",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5f5f3ce2-766e-44a2-8f1c-42a3f0064b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b44dac5-5294-41ba-86e1-41cebbdaf714",
        "cursor": {
          "ref": "f568f11f-f931-4be2-a732-965cdab0fd4d",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "310eddb1-180e-4e73-9f3f-22dba7a6be82"
        },
        "item": {
          "id": "3b44dac5-5294-41ba-86e1-41cebbdaf714",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8c0345e8-f22a-402d-a4a9-0ac3b5b92f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2767883b-3a00-4bf7-912c-ecb69fe679f7",
        "cursor": {
          "ref": "f383efd6-2161-4a23-ba89-62b52b4b0e50",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fda47380-bb6e-4f5d-9b16-669f52febe2a"
        },
        "item": {
          "id": "2767883b-3a00-4bf7-912c-ecb69fe679f7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f8a124f0-e4d2-4dc7-bb1f-6524f8ed1979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cc85f0-e039-4c52-99ac-c551b18094e1",
        "cursor": {
          "ref": "0c6153c4-c6d1-4e5e-8751-06fdea93f89d",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bdb7637d-f350-4ee2-93ca-d15366900456"
        },
        "item": {
          "id": "e7cc85f0-e039-4c52-99ac-c551b18094e1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dc87c9d8-ae58-4b15-8f39-0f697a7b8afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7823c8-2762-4678-91eb-2de90600815e",
        "cursor": {
          "ref": "fd908350-b8c1-4277-bd4b-3937b417f241",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ee25d733-053d-4368-8976-67f47b47c5b1"
        },
        "item": {
          "id": "9b7823c8-2762-4678-91eb-2de90600815e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d7adad91-872d-4a30-96a4-958edc09ea93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528b6b41-2d84-48d0-909d-e4ac87582f35",
        "cursor": {
          "ref": "d5b8b6e0-50e0-4dcb-b053-567a01e3cdca",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "287b5721-993c-4de6-81f0-f0f85cff2f94"
        },
        "item": {
          "id": "528b6b41-2d84-48d0-909d-e4ac87582f35",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ba560275-0e77-4695-b1c0-59d9d42dffcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2aab49-5ebb-45f6-93e5-c35cad381dfe",
        "cursor": {
          "ref": "fd909751-ee67-449f-88fb-698996235f65",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4a758c3f-36a1-4499-a1d2-3d88be5699a0"
        },
        "item": {
          "id": "6c2aab49-5ebb-45f6-93e5-c35cad381dfe",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7fac2d1e-16d7-4f24-99f9-b3ec7d7015df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645c9b24-3b50-4ef1-9790-5df05607ab2e",
        "cursor": {
          "ref": "98853ca2-1f2c-4b29-b977-e052dbbb55ad",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "043a8f01-7af9-4e03-949f-99390f29397b"
        },
        "item": {
          "id": "645c9b24-3b50-4ef1-9790-5df05607ab2e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f6c95f51-11df-412e-98ef-0e20c0ed78ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62ddc07-a6e5-4206-ae64-179c8efd596e",
        "cursor": {
          "ref": "0385fabe-2c27-4048-8d43-e1bf4d768a9b",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bb73fdbc-634b-43ed-b5c4-2c3b1d5e70d2"
        },
        "item": {
          "id": "d62ddc07-a6e5-4206-ae64-179c8efd596e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2edf9b88-1fb6-4c8e-9071-a68f051305b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4751ac0-4384-4b18-b9ae-951790b5133d",
        "cursor": {
          "ref": "190fbfd8-c9e0-4388-998e-f13bf140ee1e",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "780f9951-fa33-4953-9a23-e9f932302616"
        },
        "item": {
          "id": "a4751ac0-4384-4b18-b9ae-951790b5133d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b5e89737-ccca-4a93-9b8e-51397f61c2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf88c81b-2e4f-4d3e-9b51-baaa9056ac5f",
        "cursor": {
          "ref": "8ba66fd7-d311-4a08-87ac-5e0d624bae46",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "029818bd-42a5-4ee4-89fe-17c2e214ec81"
        },
        "item": {
          "id": "bf88c81b-2e4f-4d3e-9b51-baaa9056ac5f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2ed23511-be64-43ff-a2a5-9633fdc30427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c373b26-c614-4d81-a72e-8c8984af591a",
        "cursor": {
          "ref": "602edb5a-1428-4bbd-8cfb-1c2c5b1abdfa",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c15f5144-5721-4526-be64-83ed990ff23d"
        },
        "item": {
          "id": "2c373b26-c614-4d81-a72e-8c8984af591a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "93300e26-8dbf-4a90-aeb8-452691819556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acb5afe-e033-438a-9d34-6a67cf81fed0",
        "cursor": {
          "ref": "13474ad0-877b-4be0-9ce3-19f323a914a0",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "28a51951-02c6-48f5-bd3d-5e6e8be051c9"
        },
        "item": {
          "id": "6acb5afe-e033-438a-9d34-6a67cf81fed0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "39ad2d05-f3d3-46e2-8368-ecb4831eb292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e38d1e-32fd-4ed8-ada6-722d634e1a6f",
        "cursor": {
          "ref": "c985db1e-57b4-4a85-8248-4e6bb72fe07c",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5683ba1e-c723-4649-83bf-d2abf608444a"
        },
        "item": {
          "id": "67e38d1e-32fd-4ed8-ada6-722d634e1a6f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c6810419-2c3b-41a9-a225-7812629aa728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47243b0-4fc4-45a3-98e5-c2a334cf0fec",
        "cursor": {
          "ref": "baa34875-7840-47f3-bb1e-b839ddae1527",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d03f2de4-5ef7-463f-ad27-2d02b8a5790c"
        },
        "item": {
          "id": "a47243b0-4fc4-45a3-98e5-c2a334cf0fec",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c035dde9-995f-43aa-ba06-dc74a3cde67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788291e1-82ea-4f25-88af-6b4be7740f7e",
        "cursor": {
          "ref": "4d41d63d-9cb1-4544-9487-8b8f79695e6b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7f9c6d5d-46f8-4677-a496-71e1cc48c4e7"
        },
        "item": {
          "id": "788291e1-82ea-4f25-88af-6b4be7740f7e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "944dd747-5dc6-484f-9a57-08dc8d9c1746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1a28a1-00db-4519-ade7-efeb58bd3daf",
        "cursor": {
          "ref": "26db822f-a0e5-4ce0-bae7-4ff700670242",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bdc8a2bb-0c5a-42fe-8fc2-c9e0f79030d2"
        },
        "item": {
          "id": "cb1a28a1-00db-4519-ade7-efeb58bd3daf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "da9038a4-677a-4578-a253-3848233a01d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f71395c-f8a3-4f0e-8cb9-89b0763ca259",
        "cursor": {
          "ref": "8e18a296-beae-4d43-ac4b-ee6ef9afdde8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cccc1570-cb41-40ad-898a-8d6573a70d62"
        },
        "item": {
          "id": "7f71395c-f8a3-4f0e-8cb9-89b0763ca259",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0a822632-adbb-476c-8bca-bffe106cceba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1771a5d-693a-46a9-afda-d901a061c8b8",
        "cursor": {
          "ref": "cc8b4a3e-3afc-48d3-9307-0727749816ee",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0a9be67b-8669-4e2a-8580-f821ce9e50ed"
        },
        "item": {
          "id": "d1771a5d-693a-46a9-afda-d901a061c8b8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f8963f68-faf6-434a-b5a5-2366389dc36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03069da-9eb2-4a50-a84b-779d4e9214e9",
        "cursor": {
          "ref": "4aae583f-dd9c-4f72-abcf-0f72f4847c83",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9d7b4d46-07b2-4db3-aabf-9c3bf338b966"
        },
        "item": {
          "id": "f03069da-9eb2-4a50-a84b-779d4e9214e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aa2ea4d9-c1c0-4922-b32b-89ede7a83fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58559be-a5dd-4ca1-8b02-b21676f89796",
        "cursor": {
          "ref": "69fdd5aa-7f8b-41e3-a50b-7de8b51284fa",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6cd6dcdd-955a-43eb-a300-df18689a8534"
        },
        "item": {
          "id": "a58559be-a5dd-4ca1-8b02-b21676f89796",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "57f86bbb-721d-4089-9701-d8a490b951de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62806e83-7c7e-40d1-8ae4-2fb9cf0992fd",
        "cursor": {
          "ref": "43205cb9-2abf-4f99-84fa-9c5bfd7c5440",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "06e676b7-13e6-4449-8852-39c7e31274eb"
        },
        "item": {
          "id": "62806e83-7c7e-40d1-8ae4-2fb9cf0992fd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff76bcbc-a339-4405-88e3-971384829b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0f4a44-4635-4b3e-85d5-424c38852d79",
        "cursor": {
          "ref": "dbd1848f-a283-4593-a84e-2497605eb6bb",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "58a2d929-8156-42e7-ae19-7af510d8c5cb"
        },
        "item": {
          "id": "0f0f4a44-4635-4b3e-85d5-424c38852d79",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "160d6117-70c5-460c-a211-e5ee62009d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aeb537-8f21-41e3-a36b-ad39704ba273",
        "cursor": {
          "ref": "a5b1a200-04b3-41b6-acab-776d9ab714c6",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "078c8174-160b-4447-913e-c3d0061223f6"
        },
        "item": {
          "id": "45aeb537-8f21-41e3-a36b-ad39704ba273",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cb886551-0b48-479c-8188-9427a8ebd76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80693dc-b7de-4070-b70e-a7e81c6dc08f",
        "cursor": {
          "ref": "ba759f18-493a-42f8-b503-042005065ffa",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7cceb691-73bd-4eb6-81cc-faf70f62ec52"
        },
        "item": {
          "id": "a80693dc-b7de-4070-b70e-a7e81c6dc08f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c5adb8ef-5f83-4cfa-bfe8-288ca425f81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d59d5d-9f36-4199-b88e-14ba57f6f7fb",
        "cursor": {
          "ref": "13e0e6b9-a620-478b-91b2-d3bc1c8e4fb3",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4a1499e8-db5c-4c20-be90-95892b30f84e"
        },
        "item": {
          "id": "c4d59d5d-9f36-4199-b88e-14ba57f6f7fb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "773353f0-673c-4f3f-93e4-d8dedc6a76bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f07c3cf-db21-41ce-947b-3d3f924bab5f",
        "cursor": {
          "ref": "4e4410ef-d1f8-461a-b67d-3389ba72c298",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d9737c81-20ea-46f4-ba77-3c7166231df4"
        },
        "item": {
          "id": "3f07c3cf-db21-41ce-947b-3d3f924bab5f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "518183d1-dad4-450d-b2d5-98ade379d132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0802c65-2077-4c3b-b07e-239f31e7e232",
        "cursor": {
          "ref": "dd8401ad-3b7b-4895-8f11-2101ae7a623a",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2301dfb7-d7dc-4f62-9c17-025d59a7b82e"
        },
        "item": {
          "id": "e0802c65-2077-4c3b-b07e-239f31e7e232",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6c491d96-8064-4371-aa34-fea64fe6ed0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1d26c5-249b-4204-bf15-3bcd95b680e3",
        "cursor": {
          "ref": "4299c7c7-76e4-4f67-a2b6-8011aed59037",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3bf4b841-e5b5-4b03-af12-7aa8aee65ae1"
        },
        "item": {
          "id": "3d1d26c5-249b-4204-bf15-3bcd95b680e3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6a5e8002-4437-46af-84eb-fda4cef3bbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a64747-b808-417f-b2e5-0681ffddfc31",
        "cursor": {
          "ref": "00c5cbee-6bf1-4b68-ada2-03c56b5240e2",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "33a145bd-9529-4c0a-b1be-e669ee56fa04"
        },
        "item": {
          "id": "a0a64747-b808-417f-b2e5-0681ffddfc31",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "206e7b96-ac3d-40fa-bd0e-bb947ec15441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d1d558-287b-419e-b39f-8a8079a3013f",
        "cursor": {
          "ref": "072f6b11-b726-428e-804a-7eeda5f8818a",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0b4bd37e-84c3-4d6a-825b-96dd0b7169c0"
        },
        "item": {
          "id": "b8d1d558-287b-419e-b39f-8a8079a3013f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fc49e023-4472-4acf-8df4-db3a490d87f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6730d13-fa8b-4648-8938-047e97e4422e",
        "cursor": {
          "ref": "e0dcef15-ec19-48d4-8458-fb86a96f4617",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b9214a0c-f96e-4d33-8c69-6016a85d9c40"
        },
        "item": {
          "id": "e6730d13-fa8b-4648-8938-047e97e4422e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "03ac2c3a-87b2-4da2-89e5-3c1434c90058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7090a8b0-33cc-4c6c-a793-decbb5c25d6b",
        "cursor": {
          "ref": "19f66c9a-1069-4b53-80d4-9087452f6925",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cac4322a-21ea-4632-bea9-ffa5dd543ee3"
        },
        "item": {
          "id": "7090a8b0-33cc-4c6c-a793-decbb5c25d6b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "236c0e3b-3595-4c4a-afec-2629abfa566e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e77366-f0a2-4547-91c1-f325a9557fec",
        "cursor": {
          "ref": "b3159eeb-01c0-4e60-a948-5a1524dfaa31",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c44cadb3-7de2-4128-8a1b-a26c32913d87"
        },
        "item": {
          "id": "99e77366-f0a2-4547-91c1-f325a9557fec",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "510acc14-563d-4dd6-ae3a-aa203ad75fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dd2b47-6c5a-4d35-b104-4d8d4e768040",
        "cursor": {
          "ref": "01abe943-1f0e-4c70-94cb-9e96cef1050f",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f44ab3c0-86be-4bf9-bab6-7f2d5aeb5cbf"
        },
        "item": {
          "id": "63dd2b47-6c5a-4d35-b104-4d8d4e768040",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "32d5652b-f9e8-406a-af20-9da83328ac29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6714b3f-328f-4855-9382-b8e8c0c5cd90",
        "cursor": {
          "ref": "ee51e855-763c-4bd8-9cf0-f9679c9e8f62",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6368d34d-63c5-434f-b59a-e7a4c6fd480d"
        },
        "item": {
          "id": "f6714b3f-328f-4855-9382-b8e8c0c5cd90",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "32b67182-c1be-4047-a9ed-81dd32bb722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5c0a31-12d3-4150-b856-88f816666bf1",
        "cursor": {
          "ref": "c12dc01d-b8c9-4550-8a2d-e300eb7282d6",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9ef6d2c8-c498-4dd8-9fef-e5dafec9c76b"
        },
        "item": {
          "id": "0c5c0a31-12d3-4150-b856-88f816666bf1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b96e0377-6291-47c6-8a99-d8042a1dc23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfae060c-cac1-4de2-8a12-a570ef04d256",
        "cursor": {
          "ref": "68c14979-551a-4a31-8027-1124bbc059c2",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "651308f3-66ae-4683-a3e6-3820ad203964"
        },
        "item": {
          "id": "bfae060c-cac1-4de2-8a12-a570ef04d256",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3e497969-368d-4e3b-a592-b584931e3a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8beeb53f-30f2-4ac7-b3c9-664b9e63f75c",
        "cursor": {
          "ref": "864c7a7d-c7bc-4ff4-98b9-d7e5bdd3053c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "167cad9e-46d5-4c4a-aacf-b020945604d1"
        },
        "item": {
          "id": "8beeb53f-30f2-4ac7-b3c9-664b9e63f75c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b9a395a-9a34-4ad1-ada8-fc954c106380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b42f8a-766d-43ba-9d4b-f163492fba25",
        "cursor": {
          "ref": "b0949903-080f-4307-a544-6afd24eabf40",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "924c25f3-172e-4337-9ba9-e237636bb9db"
        },
        "item": {
          "id": "19b42f8a-766d-43ba-9d4b-f163492fba25",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f6da5303-56a1-41f7-b7c9-a588d5b79d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f939f00-0a7a-4cf9-a978-028a2c0b1238",
        "cursor": {
          "ref": "19039437-dde5-40c0-b04b-2d00f74ce8f3",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4f965428-79f0-4d0b-92ce-84e14dbabc42"
        },
        "item": {
          "id": "0f939f00-0a7a-4cf9-a978-028a2c0b1238",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "96aa7c4a-5a29-4314-8cbd-62743c9018a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a197021a-24ae-4211-9f6c-6215f9ce473f",
        "cursor": {
          "ref": "97acb0b3-2a7b-4091-8f46-2de21ed6dc4c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2269c4ee-a71a-46e8-859a-3a9595d7aefc"
        },
        "item": {
          "id": "a197021a-24ae-4211-9f6c-6215f9ce473f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7433b2ab-9612-47ce-9206-ece16a5f2241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3957b3c-7a70-4134-9011-45cbf12d490c",
        "cursor": {
          "ref": "e31999cd-ccca-4db6-b457-17a339477bf0",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4cda4731-9d91-4cb6-a249-f9265612dded"
        },
        "item": {
          "id": "f3957b3c-7a70-4134-9011-45cbf12d490c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d4c4429f-53e0-4e59-a72d-1705caffd417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a9cb11-d0cf-4833-a4ac-7b816fea7f60",
        "cursor": {
          "ref": "60c23276-a317-4500-be34-6c6e0c673353",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "73e49cd0-0433-43c0-9c05-a08bf3f2e87e"
        },
        "item": {
          "id": "18a9cb11-d0cf-4833-a4ac-7b816fea7f60",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "80727854-8b90-45a3-ae16-5df51d86cf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b439751b-c85e-4e4b-9a53-c17dc4638c0f",
        "cursor": {
          "ref": "724fa711-4ea3-40b2-a36c-c27359a9f60d",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c4b45623-12a9-443d-bda9-dc286905201a"
        },
        "item": {
          "id": "b439751b-c85e-4e4b-9a53-c17dc4638c0f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7ab6fb33-eb7a-4bb9-bee1-73805ad7b66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4ff3a0-9201-4e54-bd72-d0905ed54383",
        "cursor": {
          "ref": "87fe0a25-7e5b-4a67-9eeb-a34e870945a2",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0cd7409f-ae14-4d7c-baed-1a512a1f4639"
        },
        "item": {
          "id": "cd4ff3a0-9201-4e54-bd72-d0905ed54383",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fe03dbda-f10c-4cc3-ac4a-11cac22f29b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd3217f-975f-4f84-ae6e-48f26465bea2",
        "cursor": {
          "ref": "9ba57599-afa4-4a9b-8dbb-fd9f9de664f9",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "40fe1f52-8232-44e6-b3d6-aa5cc5d510a6"
        },
        "item": {
          "id": "3bd3217f-975f-4f84-ae6e-48f26465bea2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "796a4477-c8c4-4d60-83a6-cc9eb3fb902a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e063f7-5dbf-4f7f-a001-4dd223089e41",
        "cursor": {
          "ref": "b7c204a1-4a0b-41d2-965f-b15a9153aa4a",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "30e01461-2b49-4b12-92bd-ec7c5a32e3a7"
        },
        "item": {
          "id": "25e063f7-5dbf-4f7f-a001-4dd223089e41",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dfa8ac35-77fa-4283-8736-2e9b8a37f481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fbab15-5512-4b0f-bffe-68a5e8cbe28a",
        "cursor": {
          "ref": "496b21a1-d148-4704-b190-c5825ed26d27",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7d627e52-93e7-417c-8f65-d4c30671e518"
        },
        "item": {
          "id": "22fbab15-5512-4b0f-bffe-68a5e8cbe28a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "afa85b64-dda3-4147-8491-19a8ccb59c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530d9b66-5406-45c7-b53d-731c877372de",
        "cursor": {
          "ref": "43e30297-9634-42c0-9ea9-8549e104e6a1",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "61452efd-d77e-4071-9537-abbe01c5281f"
        },
        "item": {
          "id": "530d9b66-5406-45c7-b53d-731c877372de",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "282e260b-ef8f-4f20-8839-598082a0480b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bcf79d-360f-498a-8e4c-3c8577d2d451",
        "cursor": {
          "ref": "ad9b20d8-df74-4dc4-8ea1-d34d842dfd00",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "16ebc7dd-fa3a-4694-90fc-f68435a5ba3b"
        },
        "item": {
          "id": "c4bcf79d-360f-498a-8e4c-3c8577d2d451",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fe508b82-65e5-4ffe-b05f-a71c08eaef46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed74b028-da20-4ab2-b1ba-183a78105ce8",
        "cursor": {
          "ref": "75820035-169e-4305-bb84-caf7a129c55f",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "833eb395-42ab-40d9-814e-5ef425d7d81f"
        },
        "item": {
          "id": "ed74b028-da20-4ab2-b1ba-183a78105ce8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d1dc76b1-6ac4-4910-9418-9df12dbad01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65e9c68-f3c6-411b-b2a7-05266caba512",
        "cursor": {
          "ref": "349f573d-0f60-4e6b-8274-a8844a4d1414",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d2309488-94cd-4e84-a628-b0704ef57a9b"
        },
        "item": {
          "id": "f65e9c68-f3c6-411b-b2a7-05266caba512",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "50c543e2-e81b-4dfc-82cf-c458eb829aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8374d0ba-558b-4899-8c18-955551069239",
        "cursor": {
          "ref": "1cecb950-8785-4595-98d0-bb7536d074f8",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "afd3cef9-38fe-49f3-9056-9d223aa0dd1d"
        },
        "item": {
          "id": "8374d0ba-558b-4899-8c18-955551069239",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9ece72f4-8627-4a5b-993a-6c20f009ae62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16ae5a5-324d-41d5-9401-449f2d1fb67b",
        "cursor": {
          "ref": "63942246-4043-4bd0-9ff5-7c5a51f53309",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0f79372e-86c0-4abb-8199-1188093dd470"
        },
        "item": {
          "id": "a16ae5a5-324d-41d5-9401-449f2d1fb67b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "12ffc30d-cffa-4475-920c-bc309d67cec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90be7efa-4025-41ee-9e54-6c75d557117d",
        "cursor": {
          "ref": "6307f1f6-eb50-476c-b130-008b74c91fa3",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1a2d6f94-27f9-4d12-b189-051b703cfaec"
        },
        "item": {
          "id": "90be7efa-4025-41ee-9e54-6c75d557117d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ed7f5cbd-7d52-441a-b94c-455786901252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2879c74-c74c-4b82-8314-6bbe4360c0d2",
        "cursor": {
          "ref": "d8274fb5-490e-47a0-a9d6-fe753e6744f0",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b774f97c-ef5c-4035-a039-f3c1b935a5ce"
        },
        "item": {
          "id": "e2879c74-c74c-4b82-8314-6bbe4360c0d2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "13b6f451-edbb-4ae7-be4b-e6fe2cb1978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb8d538-2161-404e-b774-b44fa21ef731",
        "cursor": {
          "ref": "eb9de2e5-333a-4242-960c-7fc15a955f27",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "62da3e32-32ae-4763-93aa-d962ae70c044"
        },
        "item": {
          "id": "8fb8d538-2161-404e-b774-b44fa21ef731",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4b1028a6-0551-45c1-a77b-75be1a7e2765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb211da2-76af-4342-94d3-e9c0e78d0589",
        "cursor": {
          "ref": "7f2410fe-d319-4245-9414-fa2c03a699eb",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "91aaf479-772f-4a7d-9e7c-e5a8081d7975"
        },
        "item": {
          "id": "cb211da2-76af-4342-94d3-e9c0e78d0589",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d7889a19-c82c-42ad-b06c-3d2e17e574d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28fdc4a-7905-4e98-9e50-f5800c1ff6ec",
        "cursor": {
          "ref": "f27e63e4-1809-4495-9b58-f6c0526d5664",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a32acc22-5b62-4cea-ac34-28fde2232cbf"
        },
        "item": {
          "id": "e28fdc4a-7905-4e98-9e50-f5800c1ff6ec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1ca97a50-36a0-46c3-969d-c98521e2d370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ac8c1e-4c78-4538-8818-93e72caac36a",
        "cursor": {
          "ref": "6da1658a-8974-492b-b8f2-67d6705f063e",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b48c97a4-fb71-4e05-a7db-544d88826a71"
        },
        "item": {
          "id": "51ac8c1e-4c78-4538-8818-93e72caac36a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2c258d1c-d9ec-4dc3-880b-ce5348b6ae53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac490cc0-8e07-421c-854d-616699a6a836",
        "cursor": {
          "ref": "7522dce3-f48a-4fcc-b9f3-a3752f3c24f8",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d112561f-27f9-4568-9857-b16d294e5358"
        },
        "item": {
          "id": "ac490cc0-8e07-421c-854d-616699a6a836",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "4e2d4e13-3d2d-4193-8ea2-b3900e45de98",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 410,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cf8f24-2de5-4d89-a8f5-4e4809513fa7",
        "cursor": {
          "ref": "c2ea36e3-e9bd-4e45-96f0-b09841d216dd",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3ba11104-fa8b-4420-b4c8-1f31ae7dbab2"
        },
        "item": {
          "id": "b0cf8f24-2de5-4d89-a8f5-4e4809513fa7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "692b5863-4a4f-41d5-8dc4-30ea855a8d28",
          "status": "OK",
          "code": 200,
          "responseTime": 489,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3c7a1d-e23a-431c-bf53-1eb4c957792c",
        "cursor": {
          "ref": "656d202b-348d-4442-a96c-3c4b3569e1f4",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "79f43be8-c327-4654-af64-f04c71b1afa0"
        },
        "item": {
          "id": "4a3c7a1d-e23a-431c-bf53-1eb4c957792c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "43648a48-29f3-4770-ad0b-5774f0eaf44f",
          "status": "OK",
          "code": 200,
          "responseTime": 1621,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "395f4f0d-8d12-4c41-a37d-2363b2fd5849",
        "cursor": {
          "ref": "6b2543eb-8b9f-4241-9117-2f89250a9a0a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f8129cdc-151c-40e1-a852-b33ea0ec2a9a"
        },
        "item": {
          "id": "395f4f0d-8d12-4c41-a37d-2363b2fd5849",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7cb81c8c-7ecb-478b-ae6e-9ee1cc0629f8",
          "status": "OK",
          "code": 200,
          "responseTime": 1548,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a1df90-7908-4f75-b4a6-a920446f2346",
        "cursor": {
          "ref": "f8f57dc4-514e-4ee9-9a55-41414e553632",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ef7227f2-08c9-4f90-af1d-0f66ee17eca5"
        },
        "item": {
          "id": "f5a1df90-7908-4f75-b4a6-a920446f2346",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "18ba8da7-f972-4836-bd6e-36f65f2fdf93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a1df90-7908-4f75-b4a6-a920446f2346",
        "cursor": {
          "ref": "f8f57dc4-514e-4ee9-9a55-41414e553632",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ef7227f2-08c9-4f90-af1d-0f66ee17eca5"
        },
        "item": {
          "id": "f5a1df90-7908-4f75-b4a6-a920446f2346",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "18ba8da7-f972-4836-bd6e-36f65f2fdf93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a1df90-7908-4f75-b4a6-a920446f2346",
        "cursor": {
          "ref": "f8f57dc4-514e-4ee9-9a55-41414e553632",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ef7227f2-08c9-4f90-af1d-0f66ee17eca5"
        },
        "item": {
          "id": "f5a1df90-7908-4f75-b4a6-a920446f2346",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "18ba8da7-f972-4836-bd6e-36f65f2fdf93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88818340-f399-4429-951c-b2fdc6793cce",
        "cursor": {
          "ref": "98d79ae3-86c5-4ec1-887d-ee094fb23f20",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "96e31be6-fbb9-414b-916e-fd77c0ec800e"
        },
        "item": {
          "id": "88818340-f399-4429-951c-b2fdc6793cce",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4651156a-8911-4f88-bd30-136410329c81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 681,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51acce15-9015-4fb9-a1de-629925e6762f",
        "cursor": {
          "ref": "1bd275c9-0ecc-4bec-ba64-b8e55e313763",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6639f554-d06d-4cff-b47c-7741cfb1266b"
        },
        "item": {
          "id": "51acce15-9015-4fb9-a1de-629925e6762f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2acce5d1-71aa-4146-a665-63adb706beb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51acce15-9015-4fb9-a1de-629925e6762f",
        "cursor": {
          "ref": "1bd275c9-0ecc-4bec-ba64-b8e55e313763",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6639f554-d06d-4cff-b47c-7741cfb1266b"
        },
        "item": {
          "id": "51acce15-9015-4fb9-a1de-629925e6762f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2acce5d1-71aa-4146-a665-63adb706beb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ece8f9c-fd10-45e6-8bc8-ff14d7e3987e",
        "cursor": {
          "ref": "9560b02c-dbda-4b4a-b07d-46af22a9ec45",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f6a40d3b-a020-4fd9-b168-a4f7cc1deead"
        },
        "item": {
          "id": "8ece8f9c-fd10-45e6-8bc8-ff14d7e3987e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f73dac9a-ceb6-4f33-830b-4508894bb81c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 898,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099847a9-e4f9-4af6-93e0-08419d5bf6b5",
        "cursor": {
          "ref": "32d16118-2788-4e49-99a2-9fa62881ea5f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a013f417-704f-4a51-8e5e-a7a38575b44f"
        },
        "item": {
          "id": "099847a9-e4f9-4af6-93e0-08419d5bf6b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f6432264-bc7a-4311-9af5-32af6bd3d4b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099847a9-e4f9-4af6-93e0-08419d5bf6b5",
        "cursor": {
          "ref": "32d16118-2788-4e49-99a2-9fa62881ea5f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a013f417-704f-4a51-8e5e-a7a38575b44f"
        },
        "item": {
          "id": "099847a9-e4f9-4af6-93e0-08419d5bf6b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f6432264-bc7a-4311-9af5-32af6bd3d4b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09afd97-5988-4b8b-ae45-2b9247564832",
        "cursor": {
          "ref": "81dd1050-d9b9-4642-9089-f0e42ce84249",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "88607bc1-b089-40e0-a415-b805b35e7d83"
        },
        "item": {
          "id": "d09afd97-5988-4b8b-ae45-2b9247564832",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b7e474a5-b105-4f68-91bb-6e6050805d05",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 807,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}